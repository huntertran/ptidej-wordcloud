Eclipse ioFog | projects.eclipse.org
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Eclipse ioFog
Primary tabsOverview(active tab)
Downloads
Who's Involved
Developer Resources
Governance
Contact Us
Eclipse ioFog is a complete edge computing platform that provides all of the pieces needed to build and run applications at the edge at enterprise scale. The diversity and complexity of edge hardware is abstracted by ioFog Agent software. The management and orchestration of edge microservices is performed by ioFog Controller and its supporting set of components.
Visit the project homepage: https://iofog.org
View the project code repositories: https://github.com/eclipse-iofog
Licenses: Eclipse Public License 2.0Latest Releases: From June 19th, 2019 to June 1st, 2020
NameDateReview
2.0.02020-06-01
1.3.02019-10-21
1.2.02019-10-07
1.1.02019-06-19
Active Member Companies: Member companies supporting this project over the last three months.
Contribution Activity: Commits on this project (last 12 months).
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Eclipse ioFogDocumentationbackDocumentationGetting StartedbackGetting StartedWhat's New in ioFog 2?Core ConceptsArchitectureQuick Start With Local DeploymentQuick Start On Minikube and Vagrantiofogctlbackiofogctliofogctl - ioFog Unified Command Line InterfaceDownload And Install iofogctlGetting Familiar With iofogctliofogctl Resource ManagementConnecting To Existing Edge Compute NetworksLegacy Commands in iofogctlPlatform DeploymentbackPlatform DeploymentIntroductionPrepare NetworkPrepare Remote HostsRemote - Deploy Control PlaneKubernetes - Prepare A ClusterKubernetes - Deploy Control Plane Using iofogctlKubernetes - Deploy Control Plane Using HelmSetup AgentsAgent ManagementbackAgent ManagementIntroductionAgent ConfigurationAttach / Detach an AgentVolume ManagementDocker Image PruningDeveloping MicroservicesbackDeveloping MicroservicesWriting MicroservicesioFog SDKDebuggingTutorial - Our First MicroservicebackTutorial - Our First MicroserviceIntroductionGet To Know ioFogManage Our MicroservicesCreate Our First Microservice - JavaScriptDeploy Our MicroserviceMicroservice ManagementbackMicroservice ManagementDistributed ApplicationsMicroservice Public PortsMove and Rename MicroservicesMicroservice Updates and LifecycleMicroservice Registry and Catalog ManagementMicroservice LogsReference - iofogctlbackReference - iofogctlKinds of ResourcesControl Plane YAML SpecificationAgent configuration YAML SpecificationApplication YAML SpecificationRoute YAML SpecificationCatalog Item YAML SpecificationRegistry YAML SpecificationReference - ControllerbackReference - ControllerOverviewLegacy Controller CLI UsageController REST API ReferenceReference - AgentbackReference - AgentOverviewLegacy Agent CLI UsageAgent Local API ReferenceAgent ConfigurationsRemote debugging using IntelliJReference - Catalog MicroservicesbackReference - Catalog MicroservicesSystem: Diagnostics MicroserviceSystem: Hardware Abstraction Layer MicroserviceSystem: Bluetooth REST API MicroserviceJSON REST API And Open Weather Map MicroservicesContributingbackContributingContributing GuidelinesCode of ConductReleasesCommunityQuick Start GuideBring your own edge.Start building your first Eclipse ioFogTM application today. Eclipse ioFog is free, open source, and it always will be.# Deploy an entire Edge Compute Network with ease$ iofogctl deploy -f platform.yaml$ iofogctl deploy -f microservices.yamlView the Quick Start GuideRun software at the edge.By installing Eclipse ioFogTM to any device (with minimal amount of compute) you create a distributed Edge Compute Network (ECN), enabling you to run any microservice on it dynamically, securely, and remotely.AgentRuns on each of your edge devices, giving you a microservice platformControllerProvides you remote control over the microservicesConnectorBrokers communication between microservices, across complex networksWho is using Eclipse ioFogTMThis is a short line that inspires and showcases companies currently using Eclipse ioFogTM.PLACEHOLDER FOR LOGOPLACEHOLDER FOR LOGOPLACEHOLDER FOR LOGOPLACEHOLDER FOR LOGONew White PaperThis is the whitepaper titleThis is a paragraph that describes a case study of a comapny using Edgeworx to use Edge computing and IoT.Dowload White PaperAbout the projectEclipse ioFogTM is an Eclipse Foundation project provided by Edgeworx , born out of real-world experience operating large Edge Compute Networks.Contributing OrganizationsEclipse ioFogTM is free, open source,and always will be.© 2019 Eclipse Foundation, Inc.More informationLegalReport Security IssuesPrivacy PolicyTerms of UseCopyrightEclipse FoundationContributorsFollow us© 2019 Eclipse Foundation, Inc.
We've detected that JavaScript is disabled in your browser. Would you like to proceed to legacy Twitter?
Yes
Something went wrong, but don’t fret — let’s give it another shot.
Join Eclipse ioFog on Slack | Slack
Eclipse ioFog · GitHub
Skip to content
eclipse-iofog
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
1.1.0 Release Review | projects.eclipse.org
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
1.1.0
1.1.0 Release Review
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this organization
All GitHub
↵
Jump to
↵
No suggested jump to results
In this organization
All GitHub
↵
Jump to
Eclipse ioFog 1.1.0 Release Review
Type: ReleaseState: SuccessfulEnd Date of the Review Period: Reviews run for a minimum of one week. The outcome of the review is decided on this date. This is the last day to make comments or ask questions about this review.Wednesday, June 19, 2019Project: Eclipse ioFogRelease:
1.1.0
Description: Agent (v1.0.14)
Features
Added support for setting and passing through environment variables in docker containers at runtime (see iofog-agent CLI)
Added support for overriding container CMD directives at runtime (see iofog-agent cli)
Agent Docker images now build from iofog-docker-images for stability
Bugs
Fix for deleting local images when registry was set to local
Fix for when multiple Agents would removes other Agent's microservices on the same node
Fixed for Private registries authentication
Stop running microservices when iofog-agent package gets uninstalled (for real time this!)
Controller (v1.0.38)
↵
In this organization
All GitHub
↵
Jump to
↵
Sign in
Sign up
Eclipse ioFog
The Edge, anywhere on Planet Earth
https://iofog.org
edgemaster@iofog.org
Repositories
Packages
People
Features
Added support for setting and passing through environment variables in docker containers at runtime (see iofog-controller CLI)
Added support for overriding container CMD directives at runtime (see iofog-controller CLI)
Added capability to return a microservice's public url when a public port is set
New metrics being tracked:
Total CPU usage
Available disk
Available memory
Controller Docker images now build from iofog-docker-images for stability
Bugs
Update microservice did always get picked up by Agent
High CPU usage when Controller was running for couple of weeks
Fixed log rotation (should work infinitely now)
Fixed regression where Ports public directive was not honored
Connector (v1.0.4)
Features
Connector Docker images now build from iofog-docker-images for stability
Bugs
Improved and now return correct HTTP status codes when API call fails
Demo
Features
Huge refactoring and consolidation of Demo repo
Rather than distinct environments, Demo now builds from a single docker-compose environment which is then augmented/decorated
Updated and refactored docker-compose configurations to support V3 api spec
Projects
Dismiss
Grow your team on GitHub
GitHub is home to over 50 million developers working together. Join them to grow your own development teams, manage permissions, and collaborate on projects.
Sign up
Pinned repositories
Agent
Java
273
32
Controller
JavaScript
68
32
Connector
Java
64
24
iofog-kubelet
Go
Optimized Dockerfiles
Improved overall user experience, logging and demo output
Re-worked tutorial workflow to simplify user experience
All Docker images now build from iofog-base-images for stability
Added support for integration testing using TestHarness during CI execution
Bug Fixes
Fixed Agent docker depending on unstable location of Java
iofog.org
Features
Added documentation to support new Environment variables for Docker Containers
Added documentation to support new CMD override for Docker Containers
Updates to the Tutorial flow to support new Demo
Project Wide Work
Ported all CI to Azure Pipelines
Simplified Packaging, Tagging and Release process for public artifacts
Implemented initial cross component integration tests suite in Test Runner repo
Added support for pushing snapshot/rc artifacts to PackageCloud
Integrated Snyk for continual security and vulnerability analysis
Cleaned up, refactored and retired old/crufty repos, branches and code we no longer needed
API Certification: The project leadership certifies that the APIs in this release are "Eclipse Quality".Architectural Issues: We paid down a ton of legacy tech debt in this release, removing a slew of old repos, and defunct branches from the repos we wanted to keep. Additionally, we aligned all compoents to build from a new set of baseline docker images. Additionally, we reimplemented CI on top of Azure pipelines to give us true CI, not just periodic builds (which had been the case on Travis).
For this release we have submitted all outstanding CQs and removed libs that were questionable from a license stand point.
Lastly, a new Test Runner repo contains a full stack integration test suite (or at least the initial version of it) that will test a fully deployed system post CI snapshot builds.
Security Issues: We have integrated Snyk as a tool into our build pipeline to immediately alert on security issues.
4
iofog-operator
Go
5
iofogctl
iofogctl is a CLI for the installation, configuration, and operation of ioFog Edge Compute Networks (ECNs)
Go
13
4
Type:
All
Select type
All
Sources
Forks
Archived
Mirrors
Language:
All
Select language
All
1.3.0 | projects.eclipse.org
Eclipse ioFog | projects.eclipse.org
2.0.0 | projects.eclipse.org
Non-Code Aspects: New release artifacts are available on PackageCloud. Single one line install for most components. We have upgrade documentation at iofog.org and simplified the Demo and tutorial flow and experience for a completely new ioFog user.
Conforms To UI/UX Guidelines: Not verifiedCommunities: We have added new committers to the project, and actively supported all users on the ioFog Discuss forums.
Sign in to post comments.
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
1.2.0 | projects.eclipse.org
C
C#
Go
Java
JavaScript
Makefile
Python
Ruby
Shell
Repositories
Agent
Java
32
273
1
5
Updated Nov 20, 2020
Controller
JavaScript
32
68
0
2
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
1.3.0
Eclipse ioFog 1.3.0
Primary tabsOverview(active tab)
Issues
Release Plan
Review Information
1.3.0 brings new quality of life improvements as well as a set of backend changes that extend and unify ioFog's capabilities.
ioFog Kubernetes support has been improved by expanding the ioFog Kubernetes Operator's capabilities. Now orchestration of ioFog Kubernetes is handled by the Operator. Previously, Helm and iofogctl were handling this orchestration themselves, in disparate ways.
ioFog Controller has been updated to allow for external databases to be used instead of the embedded SQLite default database. Helm and iofogctl have been updated to allow users to integrate their external databases during the deployment process.
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Downloads
Eclipse ioFog
Primary tabsOverview
Downloads(active tab)
Who's Involved
Developer Resources
Governance
Contact Us
This project has not provided download information.
Related Projects
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
2.0.0
Eclipse ioFog 2.0.0
Primary tabsOverview(active tab)
Issues
Release Plan
Review Information
Majore ioFog release 2.0.0 brings new ioFog Edge Compute Network (ECN) model, with legacy Connector being replaced by much more robust Router based on Apache Qpid, with Kubernetes integration enabled by Red Hat's project Skupper.
The major release also stabilizes Controller to Agent API specification, so that custom implementations of Agents are now possible, such as Agents in Golang or on Android.
Eclipse ioFog | projects.eclipse.org
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
1.2.0
Eclipse ioFog 1.2.0
Primary tabsOverview(active tab)
Issues
Release Plan
Review Information
Release Date: Monday, October 7, 2019
Updated Nov 19, 2020
homebrew-iofogctl
Ruby
0
0
0
0
Updated Nov 18, 2020
iofogctl
iofogctl is a CLI for the installation, configuration, and operation of ioFog Edge Compute Networks (ECNs)
Go
4
13
1
1
Updated Nov 18, 2020
ECN-Viewer
EPL-2.0
1
0
0
1
Eclipse ioFog | projects.eclipse.org
The unified CLI, iofogctl, has been improved to allow users more granular control over resources like Connectors and Microservices. Users can now view realtime deployment status of Microservices through iofogctl due to improvements to both ioFog Controller and Agent.
The iofog-go-sdk has been updated to provide an HTTP client for ioFog Controller's REST API.
Release Date: Monday, October 21, 2019
Release Type: Minor releaseIP Due Diligence Type: Type A - License Compatibility Certification
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Many other smaller features have been added to the ioFog Engine, such as better Docker image pruning, registry management and more robust centralised logging support.
Release Date: Monday, June 1, 2020
Release Type: Major release (API breakage)IP Due Diligence Type: Type A - License Compatibility Certification
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Eclipse ioFog · GitHub
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Governance
Eclipse ioFog
Primary tabsOverview
Downloads
Who's Involved
Developer Resources
Governance(active tab)
Contact Us
Release Type: Minor releaseIP Due Diligence Type: Type A - License Compatibility CertificationNew & Noteworthy URL: New and Noteworthy
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Updated Nov 17, 2020
iofog.org
Website for Eclipse ioFog, a distributed Edge Compute Network (ECN) platform
kubernetes
yaml
edge
gpu-acceleration
vpu
jetson-tx2
edge-computing
JavaScript
11
28
6
4
Updated Nov 13, 2020
iofog-python-sdk
Python
6
10
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Contact Us
Eclipse ioFog
Primary tabsOverview
Downloads
Who's Involved
Developer Resources
Governance
Skip to content
eclipse-iofog
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Scope: 1. A software agent, called ioFog Agent, that provides a universal environment for edge computing microservices
2. A distributable control plane, called ioFog Controller, that provides remote control and management of ioFog Agent instances
3. A software overlay network component, called ioFog Connector, that provides secure connectivity between any edge microservices managed by ioFog
4. Deployment and management software and tooling that makes it easier to manage ioFog systems at scale
5. SDKs in multiple programming languages, allowing developers to program edge applications and micro-services
Working Group: Internet of Things (IoT)Releases:
NameDate
2.0.02020-06-01
1.3.02019-10-21
1.2.02019-10-07
1.1.02019-06-19
Reviews:
NameDate
1.1.0 Release Review2019-06-19
Creation Review2016-09-21
IP Due Diligence Type: Type A - License Compatibility Certification
Project Links
Proposal
Current Release
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
1
1
Updated Nov 12, 2020
iofog-nodejs-sdk
JavaScript
0
8
0
2
Updated Nov 12, 2020
skupper-proxy
Forked from
skupperproject/skupper-proxy
A service for bridging cluster-local communication to a Skupper network
JavaScript
Apache-2.0
4
0
0
1
Updated Nov 12, 2020
Contact Us(active tab)
Forums: Eclipse ioFog Discussion ForumDeveloper Mailing List: iofog-dev - iofog developer discussions
Project Links
Forums
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this organization
All GitHub
↵
Jump to
↵
No suggested jump to results
In this organization
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
iofog-go-sdk
Go
2
6
0
1
Updated Nov 11, 2020
demo
Shell
4
8
0
0
Updated Oct 27, 2020
iofog-java-sdk
Java
0
6
0
0
Updated Oct 12, 2020
iofog-operator
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Eclipse ioFog | projects.eclipse.org
All GitHub
↵
Jump to
↵
In this organization
All GitHub
↵
Jump to
↵
Sign in
Sign up
Eclipse ioFog
The Edge, anywhere on Planet Earth
https://iofog.org
edgemaster@iofog.org
Repositories
Packages
People
Projects
Dismiss
Grow your team on GitHub
GitHub is home to over 50 million developers working together. Join them to grow your own development teams, manage permissions, and collaborate on projects.
Go
0
5
0
1
Updated Oct 5, 2020
router
Go
0
0
0
0
Updated Aug 28, 2020
helm
Shell
1
1
1
2
Updated Aug 10, 2020
port-manager
Component of ioFog K8s Control Plane that manages HTTP Proxies for Public Ports
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Who's Involved
Eclipse ioFog
Primary tabsOverview
Downloads
Who's Involved(active tab)
Developer Resources
Governance
Contact Us
Contribution Activity: Commits on this project (last 12 months).Individual Contribution Activity: Commits on this project by individuals over the last three months.Organization Contribution Activity: Commits on this project by supporting organization over the last three months.Active Member Companies: Member companies supporting this project over the last three months.
Sign up
Pinned repositories
Agent
Java
273
32
Controller
JavaScript
68
32
Connector
Java
64
24
iofog-kubelet
Go
4
iofog-operator
Go
5
iofogctl
iofogctl is a CLI for the installation, configuration, and operation of ioFog Edge Compute Networks (ECNs)
Go
0
0
0
0
Updated Aug 10, 2020
test-runner
Shell
0
0
0
1
Updated Aug 10, 2020
integrations
Shell
EPL-2.0
1
2
0
4
Updated Jul 19, 2020
example-microservices
Project Members: Project Lead
Kilton Hopkins
Committers
Alex de Wergifosse
Ian Martin
Kilton Hopkins
Luboš Krčál
Neha Naithani
Saeid Rezaei Baghbidi
Serge Radinovich
Todd Papaioannou
Historical Committers
Alexander Shpak
Andrew Milson
Darya Busel
Eugene Pankov
Jee Won Park
Maksim Chepelev
Maryna Lipnitskaya
Sergey Valevich
Mentor
Pascal Rapicault
Go
13
4
Type:
All
Select type
All
Sources
Forks
Archived
Mirrors
Language:
All
Select language
All
C
C#
Go
Java
JavaScript
Makefile
Python
JavaScript
1
12
0
5
Updated Jul 17, 2020
iofog-kubelet
Go
0
4
0
1
Updated May 12, 2020
agent-go
ioFog Agent implemented with Golang
0
0
0
0
Updated Apr 22, 2020
platform
Shell
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Ruby
Shell
Repositories
Agent
Java
32
273
1
5
Updated Nov 20, 2020
Controller
JavaScript
32
68
0
2
Updated Nov 19, 2020
homebrew-iofogctl
Ruby
0
0
4
0
0
1
Updated Mar 18, 2020
documentation
All official documentation related to Eclipse ioFog
EPL-2.0
0
2
0
0
Updated Mar 2, 2020
Connector
Java
24
64
0
3
Updated Jan 7, 2020
iofog-docker-images
Makefile
0
0
Updated Nov 18, 2020
iofogctl
iofogctl is a CLI for the installation, configuration, and operation of ioFog Edge Compute Networks (ECNs)
Go
4
13
1
1
Updated Nov 18, 2020
ECN-Viewer
EPL-2.0
1
0
0
1
Updated Nov 17, 2020
iofog.org
Website for Eclipse ioFog, a distributed Edge Compute Network (ECN) platform
kubernetes
yaml
0
4
0
0
Updated Nov 7, 2019
core-networking
Go
0
5
0
0
Updated Oct 31, 2019
iofog-scheduler
Go
0
2
0
0
Updated Jul 31, 2019
HardwareAbstraction
Python
0
5
edge
gpu-acceleration
vpu
jetson-tx2
edge-computing
JavaScript
11
28
6
4
Updated Nov 13, 2020
iofog-python-sdk
Python
6
10
1
1
Updated Nov 12, 2020
iofog-nodejs-sdk
JavaScript
0
8
0
0
Updated Jan 31, 2019
common-logging
Go
0
4
0
0
Updated Jan 28, 2019
iofog-c-sdk
C
1
2
0
0
Updated May 16, 2018
Previous 1 2 Next
Previous Next
Top languages
Go
JavaScript
Shell
0
2
Updated Nov 12, 2020
skupper-proxy
Forked from
skupperproject/skupper-proxy
A service for bridging cluster-local communication to a Skupper network
JavaScript
Apache-2.0
4
0
0
1
Updated Nov 12, 2020
iofog-go-sdk
Go
2
6
0
1
Updated Nov 11, 2020
demo
Java
Python
Most used topics
Loading…
People
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Shell
4
8
0
0
Updated Oct 27, 2020
iofog-java-sdk
Java
0
6
0
0
Updated Oct 12, 2020
iofog-operator
Go
0
5
0
1
Updated Oct 5, 2020
router
Go
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
0
0
0
0
Updated Aug 28, 2020
helm
Shell
1
1
1
2
Updated Aug 10, 2020
port-manager
Component of ioFog K8s Control Plane that manages HTTP Proxies for Public Ports
Go
0
0
0
0
Updated Aug 10, 2020
test-runner
Shell
0
0
Eclipse ioFog | projects.eclipse.org
0
1
Updated Aug 10, 2020
integrations
Shell
EPL-2.0
1
2
0
4
Updated Jul 19, 2020
example-microservices
JavaScript
1
12
0
5
Updated Jul 17, 2020
iofog-kubelet
Go
0
4
0
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Developer Resources
Eclipse ioFog
Primary tabsOverview
Downloads
Who's Involved
1
Updated May 12, 2020
agent-go
ioFog Agent implemented with Golang
0
0
0
0
Updated Apr 22, 2020
platform
Shell
4
0
0
1
Updated Mar 18, 2020
documentation
All official documentation related to Eclipse ioFog
EPL-2.0
0
2
0
1.1.0 | projects.eclipse.org
Developer Resources(active tab)
Governance
Contact Us
Report a Bug View Help wanted Bugs View Open Bugs Summarize BugsSource Repositories: You can use the code from these repositories to experiment, test, build, create patches, issue pull requests, etc.iofog-platform - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/iofog-platform.gitBrowse Repository
demo - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/demo.gitBrowse Repository
iofog.org - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/iofog.org.gitBrowse Repository
iofog-operator - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/iofog-operator.gitBrowse Repository
iofog-scheduler - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/iofog-scheduler.gitBrowse Repository
iofog-kubelet - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/iofog-kubelet.gitBrowse Repository
Agent - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/Agent.gitBrowse Repository
Controller - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/Controller.gitBrowse Repository
iofog-docker-images - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/iofog-docker-images.gitBrowse Repository
example-microservices - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/example-microservices.gitBrowse Repository
Connector - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/Connector.gitBrowse Repository
iofog-python-sdk - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/iofog-python-sdk.gitBrowse Repository
HardwareAbstraction - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/HardwareAbstraction.gitBrowse Repository
common-logging - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/common-logging.gitBrowse Repository
core-networking - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/core-networking.gitBrowse Repository
iofog-go-sdk - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/iofog-go-sdk.gitBrowse Repository
iofog-c-sdk - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/iofog-c-sdk.gitBrowse Repository
iofog-csharp-sdk - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/iofog-csharp-sdk.gitBrowse Repository
0
Updated Mar 2, 2020
Connector
Java
24
64
0
3
Updated Jan 7, 2020
iofog-docker-images
Makefile
0
4
0
0
Updated Nov 7, 2019
core-networking
Go
0
5
0
0
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
1.1.0
Eclipse ioFog 1.1.0
Primary tabsOverview(active tab)
Issues
Release Plan
Review Information
Agent (v1.0.14)
Features
Added support for setting and passing through environment variables in docker containers at runtime (see iofog-agent CLI)
Added support for overriding container CMD directives at runtime (see iofog-agent cli)
Agent Docker images now build from iofog-docker-images for stability
restblue - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/restblue.gitBrowse Repository
iofog-nodejs-sdk - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/iofog-nodejs-sdk.gitBrowse Repository
test-message-generator - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/test-message-generator.gitBrowse Repository
iofogctl - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/iofogctl.gitBrowse Repository
homebrew-iofogctl - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/homebrew-iofogctl.gitBrowse Repository
port-manager - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/port-manager.gitBrowse Repository
helm - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/helm.gitBrowse Repository
test-runner - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/test-runner.gitBrowse Repository
router - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/router.gitBrowse Repository
agent-go - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/agent-go.gitBrowse Repository
ECN-Viewer - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/ECN-Viewer.gitBrowse Repository
integrations - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/integrations.gitBrowse Repository
documentation - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/documentation.gitBrowse Repository
iofog-java-sdk - Project repository hosted on GitHub.Clone: https://github.com/eclipse-iofog/iofog-java-sdk.gitBrowse Repository
Project Links
Dev Mailing List
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Updated Oct 31, 2019
iofog-scheduler
Go
0
2
0
0
Updated Jul 31, 2019
HardwareAbstraction
Python
0
5
0
0
Updated Jan 31, 2019
common-logging
Go
0
4
0
0
Updated Jan 28, 2019
iofog-c-sdk
C
Bugs
Fix for deleting local images when registry was set to local
Fix for when multiple Agents would removes other Agent's microservices on the same node
Fixed for Private registries authentication
Stop running microservices when iofog-agent package gets uninstalled (for real time this!)
Controller (v1.0.38)
Features
Added support for setting and passing through environment variables in docker containers at runtime (see iofog-controller CLI)
Added support for overriding container CMD directives at runtime (see iofog-controller CLI)
Added capability to return a microservice's public url when a public port is set
New metrics being tracked:
Total CPU usage
Available disk
Available memory
Controller Docker images now build from iofog-docker-images for stability
Bugs
Update microservice did always get picked up by Agent
High CPU usage when Controller was running for couple of weeks
Fixed log rotation (should work infinitely now)
Fixed regression where Ports public directive was not honored
Connector (v1.0.4)
Features
Connector Docker images now build from iofog-docker-images for stability
Bugs
Improved and now return correct HTTP status codes when API call fails
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
1
2
0
0
Updated May 16, 2018
Previous 1 2 Next
Previous Next
Top languages
Go
JavaScript
Shell
Java
Python
Most used topics
Loading…
People
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Demo
Features
Huge refactoring and consolidation of Demo repo
Rather than distinct environments, Demo now builds from a single docker-compose environment which is then augmented/decorated
Updated and refactored docker-compose configurations to support V3 api spec
Optimized Dockerfiles
Improved overall user experience, logging and demo output
Re-worked tutorial workflow to simplify user experience
All Docker images now build from iofog-base-images for stability
Added support for integration testing using TestHarness during CI execution
Bug Fixes
Fixed Agent docker depending on unstable location of Java
iofog.org
Features
Added documentation to support new Environment variables for Docker Containers
Added documentation to support new CMD override for Docker Containers
Updates to the Tutorial flow to support new Demo
Project Wide Work
Ported all CI to Azure Pipelines
Simplified Packaging, Tagging and Release process for public artifacts
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
Implemented initial cross component integration tests suite in Test Runner repo
Added support for pushing snapshot/rc artifacts to PackageCloud
Integrated Snyk for continual security and vulnerability analysis
Cleaned up, refactored and retired old/crufty repos, branches and code we no longer needed
Release Date: Wednesday, June 19, 2019
Review: 1.1.0 Release ReviewRelease Type: Minor releaseIP Due Diligence Type: Type A - License Compatibility Certification
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
GitHub - eclipse-iofog/iofog.org: Website for Eclipse ioFog, a distributed Edge Compute Network (ECN) platform
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
GitHub - eclipse-iofog/iofog-operator
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Trending
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
iofog.org
Watch
9
Star
28
Fork
11
Website for Eclipse ioFog, a distributed Edge Compute Network (ECN) platform
iofog.org
28
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
GitHub - eclipse-iofog/documentation: All official documentation related to Eclipse ioFog
stars
11
forks
Star
Watch
Code
Issues
6
Pull requests
4
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
iofog-operator
Watch
8
Star
5
Fork
0
5
stars
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
32
branches
3
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
0
forks
Star
Watch
Code
Issues
0
Pull requests
1
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
GitHub - eclipse-iofog/iofog-java-sdk
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
632
commits
Files
Permalink
Failed to load latest commit information.
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
develop
8
branches
15
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
documentation
Watch
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Trending
Type
Name
Latest commit message
Commit time
.github
content
data
deploy
scripts
src
static
third_party
.browserslistrc
.codeclimate.yml
.dockerignore
.eslintignore
.eslintrc.json
.gitignore
.gitmodules
.prettierrc
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
230
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
8
Star
2
Fork
0
All official documentation related to Eclipse ioFog
EPL-2.0 License
2
stars
0
forks
Star
Watch
Code
Issues
0
Pull requests
GitHub - eclipse-iofog/integrations
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
.spelling
.stylelintrc
Dockerfile
README.md
azure-pipelines.yml
gatsby-browser.js
gatsby-config.js
gatsby-node.js
graphql.config.json
graphql.schema.json
jsconfig.json
logging.md
package-lock.json
package.json
View code
README.md
iofog.org
Setup
npm install
Local development
Commit time
cmd/manager
deploy
internal/util
pkg
script
vendor
.gitignore
CHANGELOG.md
CONTRIBUTING
Dockerfile
Makefile
NOTICE
README.md
azure-pipelines.yml
go.mod
go.sum
version
View code
README.md
0
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
iofog-java-sdk
Watch
8
Star
6
Fork
0
6
stars
0
forks
Star
Watch
npm start
# http://localhost:8000/
Publish updates to GitHub Pages (maintainers only)
Builds the Gatsby project and pushes it to GitHub Pages. This must be only done from master branch on no other!
git fetch
git checkout origin/master
npm run deploy:gh
You can test the release Gatsby build using npm run-script build, and to preview the website locally, follow instructions in Local Deployment.
Cut a new major/minor version and publish (maintainers only)
To create a new version of documentation (usually for new major release), we need to first update the npm package version and then create a new version of the documentation.
Note that the staging documentation in content/docs/next will be used to create the new version.
If there are any fixed in the previous documentation, it is advisable to propagate them into the staging documentation first before proceeding.
npm version 1.2.0 --no-git-tag-version
node scripts/copy-docs.js 1.2.0
After this you are ready to checkin the new version.
Serving static files
If you need to serve arbitrary static files from the site (e.g. images, zips, etc), place them in the static/ directory. Anything placed in there will be served, as-is from the root of the domain. e.g. static/my-file.txt will be available at https://iofog.org/my-file.txt.
Known Issues
During npm start the followin issue may occur:
Module build failed (from ./node_modules/sass-loader/lib/loader.js):
Error: ENOENT: no such file or directory, scandir '/home/lkrcal/edgeworx/iofog.org/node_modules/node-sass/vendor'
Workaround is to run npm rebuild node-sass
Staging deployment of iofog.org
The staging deployment and update is done automatically in Azure pipeline. The cluster for the deployment is defined in azure-pipelines.yaml using stagingCluster and stagingClusterRegion variables. The deployment itself is specified in deploy/staging.yaml.
ioFog Operator
Operator is a component of the ioFog Kubernetes Control Plane. It is responsible for consuming Control Plane and Application CRDs for the purposes of deploying ioFog Control Planes to Kubernetes clusters and deploying Edge Applications, respectively.
Build from Source
Go 1.12.1+ is a prerequisite.
See all make commands by running:
make help
To build, go ahead and run:
make build
Running Tests
Run project unit tests:
make test
About
No description, website, or topics provided.
Resources
Readme
Releases
15
v1.2.0
Latest
Jul 15, 2019
+ 14 releases
Packages 0
No packages published
5
branches
0
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
GitHub - eclipse-iofog/ECN-Viewer
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
Code
Issues
0
Pull requests
0
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
About
Website for Eclipse ioFog, a distributed Edge Compute Network (ECN) platform
iofog.org
Topics
iofog
yaml
eclipse-iot
eclipse-edge
edge-computing
edge
kubernetes
edge-native
tpu
tpu-acceleration
neural-compute-stick
neural-compute-stick-2
myriad
vpu
gpu-acceleration
jetson-tx2
jetson-nano
jetsontx2
jetson-agx-xavier
edge-compute-network
Contributors 5
Languages
Go
92.8%
Makefile
4.2%
Shell
2.4%
Dockerfile
0.6%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
15
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
architecture
releases
requirements
roadmap
vision
LICENSE
README.md
View code
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
integrations
Watch
10
Star
2
Fork
1
EPL-2.0 License
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
2
branches
0
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Resources
Readme
Releases
3
Release v2.0.2
Latest
Oct 27, 2020
+ 2 releases
Packages 0
No packages published
Contributors 18
+ 7 contributors
Languages
JavaScript
54.7%
SCSS
32.1%
Shell
10.9%
CSS
2.2%
Dockerfile
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
README.md
Eclipse ioFog Documentation
All official documentation related to Eclipse ioFog
About
All official documentation related to Eclipse ioFog
Resources
Readme
License
EPL-2.0 License
Releases
No releases published
Packages 0
No packages published
Contributors 2
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
GitHub - eclipse-iofog/helm
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
2
stars
1
fork
Star
Watch
Code
Issues
0
Pull requests
4
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
55
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
0.1%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
ECN-Viewer
Watch
6
Star
0
Fork
1
EPL-2.0 License
0
stars
1
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
6
branches
0
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Latest commit message
Commit time
src/main/java/org/eclipse/iofog
.gitignore
CONTRIBUTING
NOTICE
README.md
container-java-sdk-1.1.3.jar
iofog-java-sdk-0.0.1.jar
pom.xml
View code
README.md
iofog-java-sdk
send new message to ioFog (pushNewMessage)
fetch next unread messages from ioFog (fetchNextMessage)
fetch messages for time period and list of accessible publishers (fetchMessagesByQuery)
get config options (fetchContainerConfig)
connect to ioFog Control Channel via WebSocket (openControlWebSocket)
connect to ioFog Message Channel via WebSocket (openMessageWebSocket) and publish new message via this channel (sendMessageToWebSocket)
Code snippets:
ioFogClient implements all methods to communicate with ioFog (via local API).
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
GitHub - eclipse-iofog/homebrew-iofogctl
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
GitHub - eclipse-iofog/test-message-generator
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
fork
Star
Watch
Code
Issues
0
Pull requests
1
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Join GitHub today
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
70
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
IOMessage represent all message communication between ioFog and Containers.
IOMessageUtils class is convenient to encode and decode byte arrays.
ioFogAPIListener - listener's interface for requests to ioFog.
set up custom host, port and container's ID (in case of no params default values for host and port will be used: 'ioFog', 54321):
ioFogClient ioFogClient = new ioFogClient("iofog", 54321, "TEST_CONTAINER_ID");
REST calls
post new ioMessage to ioFog via REST call (could trigger onError, onBadRequest and onMessageReceipt listener's methods):
IOMessage message = new IOMessage();
MyIOFAPIListener ioFogListener = new MyIOFAPIListener(); // implementation of listener's interface
ioFogClient ioFogClient = new ioFogClient("iofog", 54321, "TEST_CONTAINER_ID");
ioFogClient.pushNewMessage(message, ioFogListener);
get list of ioMessages by time frame for accessible publishers from ioFog via REST call (could trigger onError, onBadRequest and onMessagesQuery listener's methods):
IOMessage message = new IOMessage();
MyIOFAPIListener ioFogListener = new MyIOFAPIListener(); // implementation of listener's interface
ioFogClient ioFogClient = new ioFogClient("iofog", 54321, "TEST_CONTAINER_ID");
ioFogClient.fetchMessagesByQuery(new Date(), new Date(), Collections.singleton("publisher_ID"), ioFogListener);
get list of next unread ioMessages via REST call (could trigger onError, onBadRequest and onMessages listener's methods):
IOMessage message = new IOMessage();
MyIOFAPIListener ioFogListener = new MyIOFAPIListener(); // implementation of listener's interface
ioFogClient ioFogClient = new ioFogClient("iofog", 54321, "TEST_CONTAINER_ID");
ioFogClient.fetchNextMessage(ioFogListener);
get container's config via REST call (could trigger onError, onBadRequest and onNewConfig listener's methods):
IOMessage message = new IOMessage();
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
helm
Watch
8
Star
1
Fork
1
1
star
1
fork
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
3
branches
0
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
Commit time
hono
.gitignore
LICENSE
README.md
View code
README.md
Eclipse ioFog Integrations
This repo contains a set of example integration guides, deployment files and configurations to demonstrate integratation of ioFog with other software and platform solutions.
Eclipse Hono
Eclipse Hono™ is designed for connecting large numbers of IoT devices. It provides horizontally scaleable remote service interfaces for connecting large numbers of IoT devices to a back end and interacting with them in a uniform way regardless of the device communication protocol.
The Hono folder contains documentation and deployment files to run Hono at the edge using Eclipse ioFog.
About
No description, website, or topics provided.
Resources
Readme
License
EPL-2.0 License
Releases
No releases published
Packages 0
No packages published
Contributors 4
MyIOFAPIListener ioFogListener = new MyIOFAPIListener(); // implementation of listener's interface
ioFogClient ioFogClient = new ioFogClient("iofog", 54321, "TEST_CONTAINER_ID");
ioFogClient.fetchContainerConfig(ioFogListener);
WebSocket(WS) calls
Open WS Control Channel to ioFog (could trigger onError and onNewConfigSignal listener's methods):
IOMessage message = new IOMessage();
MyIOFAPIListener ioFogListener = new MyIOFAPIListener(); // implementation of listener's interface
ioFogClient ioFogClient = new ioFogClient("iofog", 54321, "TEST_CONTAINER_ID");
ioFogClient.openControlWebSocket(ioFogListener);
Open WS Message Channel to ioFog (could trigger onError, onMessages and onMessageReceipt listener's methods):
IOMessage message = new IOMessage();
MyIOFAPIListener ioFogListener = new MyIOFAPIListener(); // implementation of listener's interface
ioFogClient ioFogClient = new ioFogClient("iofog", 54321, "TEST_CONTAINER_ID");
ioFogClient.openMessageWebSocket(ioFogListener);
Send ioMessage via WS Message Channel (pre-condition: WS Message Channel is open):
IOMessage message = new IOMessage();
ioFogClient.sendMessageToWebSocket(message);
About
No description, website, or topics provided.
Resources
Readme
Releases
No releases published
Packages 0
GitHub - eclipse-iofog/test-runner
1.1.0 | projects.eclipse.org
GitHub - eclipse-iofog/iofog-nodejs-sdk
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
GitHub - eclipse-iofog/port-manager: Component of ioFog K8s Control Plane that manages HTTP Proxies for Public Ports
GitHub - eclipse-iofog/agent-go: ioFog Agent implemented with Golang
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
Star
Watch
Code
Issues
1
Pull requests
2
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
1
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
LICENSE
View code
Languages
Shell
52.9%
JavaScript
45.2%
Dockerfile
1.9%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
No packages published
Contributors 6
Languages
Java
100.0%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
1.1.0
Review Information
Eclipse ioFog 1.1.0
Primary tabsOverview
Issues
Release Plan
Review Information(active tab)
Description: Agent (v1.0.14)
Features
Added support for setting and passing through environment variables in docker containers at runtime (see iofog-agent CLI)
1.1.0 | projects.eclipse.org
GitHub - eclipse-iofog/router
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Trending
GitHub - eclipse-iofog/iofogctl: iofogctl is a CLI for the installation, configuration, and operation of ioFog Edge Compute Networks (ECNs)
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
homebrew-iofogctl
Watch
6
Star
0
Fork
0
0
stars
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Trending
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
test-message-generator
Watch
8
Star
4
Fork
0
GitHub - eclipse-iofog/restblue
Log in | Eclipse - The Eclipse Foundation open source community website.
Google Tag Manager Skip to main content
Eclipse - The Eclipse Foundation open source community website.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
9
branches
7
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
About
No description, website, or topics provided.
License
EPL-2.0 License
Releases
No releases published
Packages 0
No packages published
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
Added support for overriding container CMD directives at runtime (see iofog-agent cli)
Agent Docker images now build from iofog-docker-images for stability
Bugs
Fix for deleting local images when registry was set to local
Fix for when multiple Agents would removes other Agent's microservices on the same node
Fixed for Private registries authentication
Stop running microservices when iofog-agent package gets uninstalled (for real time this!)
Controller (v1.0.38)
Features
Added support for setting and passing through environment variables in docker containers at runtime (see iofog-controller CLI)
Added support for overriding container CMD directives at runtime (see iofog-controller CLI)
Added capability to return a microservice's public url when a public port is set
New metrics being tracked:
Total CPU usage
Available disk
Available memory
Controller Docker images now build from iofog-docker-images for stability
Bugs
Update microservice did always get picked up by Agent
High CPU usage when Controller was running for couple of weeks
Fixed log rotation (should work infinitely now)
Fixed regression where Ports public directive was not honored
Connector (v1.0.4)
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
1.1.0
Release Plan
Eclipse ioFog 1.1.0
Primary tabsOverview
Issues
Release Plan(active tab)
Review Information
Release Date: Wednesday, June 19, 2019Themes: Quality and ConsumabilityIn these release we are focusing on two main themes:
Quality: overall quality of the code base, the project health, the documentation, the CI, etc, etc. Our goal is to raise the baseline of what is expected from our components before we release them to users.
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Mailing list: iofog-dev (29 subscribers) | Eclipse - The Eclipse Foundation open source community website.
GitHub - eclipse-iofog/iofog-csharp-sdk
1.1.0 | projects.eclipse.org
GitHub - eclipse-iofog/iofog-c-sdk
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
0
forks
Star
Watch
Code
Issues
0
Pull requests
0
Actions
Projects
0
Security
Insights
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
4
stars
0
forks
Star
Watch
Code
Issues
0
Pull requests
0
Actions
Projects
0
Security
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Log in
Welcome to Eclipse
Sign in with your Eclipse account Email Address *
Enter your Eclipse email address. Password *
Enter the password that accompanies your email address.
Ask for a new password
Sign in
- Or -
Create new account
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Privacy Policy
Terms of Use
Copyright Agent
Back to the top
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
75
commits
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
test-runner
Watch
7
Star
Features
Connector Docker images now build from iofog-docker-images for stability
Bugs
Improved and now return correct HTTP status codes when API call fails
Demo
Features
Huge refactoring and consolidation of Demo repo
Rather than distinct environments, Demo now builds from a single docker-compose environment which is then augmented/decorated
Updated and refactored docker-compose configurations to support V3 api spec
Optimized Dockerfiles
Improved overall user experience, logging and demo output
Re-worked tutorial workflow to simplify user experience
Consumability: traditionally, some ioFog components were hard to install and configure to run as a unified platform. We have focused heavily on making that a much easier experience for end users, upgraded the Demo environment tremendously and improved the overall documentation.
IP Due Diligence Type: Type A - License Compatibility Certification
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
GitHub - eclipse-iofog/iofog-python-sdk
GitHub - eclipse-iofog/iofog-go-sdk
GitHub - eclipse-iofog/core-networking
GitHub - eclipse-iofog/common-logging
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
Google Tag Manager Skip to main content
Log in
Manage Cookies
Eclipse - The Eclipse Foundation open source community website.
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Log in
Search
Mailing list: iofog-dev (29 subscribers)
iofog developer discussions
About iofog-dev
iofog developer discussions
Using iofog-dev
To post a message to all the list members,
send email to iofog-dev@eclipse.org. You must be subscribed
to the list before you can post. To access a web archive of this list, visit the iofog-dev Archives or subscribe to this list's RSS feed
Subscribing iofog-dev
All contributions you make to our web site
are governed by our Terms Of Use. Your interactions
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
1.1.0
Issues
Eclipse ioFog 1.1.0
Primary tabsOverview
Issues(active tab)
Release Plan
Review Information
This project has not assigned any issues to this release.
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
iofog-nodejs-sdk
Watch
9
Star
8
Fork
0
8
stars
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
1
branch
0
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
port-manager
Watch
8
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
agent-go
Watch
7
Star
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
1
branch
0
tags
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
iofog
script
CHANGELOG.md
README.md
azure-pipelines.yml
View code
README.md
ioFog Kubernetes Helm Package Repository
This repository is used to serve Helm packages of ioFog Kubernetes.
Prerequisites
The following commands require an installation of Helm and kubectl executing the deployment. It also assumes you have a running Kubernetes cluster and Agent nodes.
Helm installation instructions
kubectl installation instructions
Usage
Create Service Account for Tiller
Save preferences
0
Fork
0
0
stars
0
forks
Star
Watch
Code
Issues
0
Pull requests
1
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
All Docker images now build from iofog-base-images for stability
Added support for integration testing using TestHarness during CI execution
Bug Fixes
Fixed Agent docker depending on unstable location of Java
iofog.org
Features
Added documentation to support new Environment variables for Docker Containers
Added documentation to support new CMD override for Docker Containers
Updates to the Tutorial flow to support new Demo
Project Wide Work
Ported all CI to Azure Pipelines
Simplified Packaging, Tagging and Release process for public artifacts
Implemented initial cross component integration tests suite in Test Runner repo
Added support for pushing snapshot/rc artifacts to PackageCloud
Integrated Snyk for continual security and vulnerability analysis
Cleaned up, refactored and retired old/crufty repos, branches and code we no longer needed
API Certification: The project leadership certifies that the APIs in this release are "Eclipse Quality".Architectural Issues: We paid down a ton of legacy tech debt in this release, removing a slew of old repos, and defunct branches from the repos we wanted to keep. Additionally, we aligned all compoents to build from a new set of baseline docker images. Additionally, we reimplemented CI on top of Azure pipelines to give us true CI, not just periodic builds (which had been the case on Travis).
For this release we have submitted all outstanding CQs and removed libs that were questionable from a license stand point.
Lastly, a new Test Runner repo contains a full stack integration test suite (or at least the initial version of it) that will test a fully deployed system post CI snapshot builds.
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
GitHub - eclipse-iofog/example-microservices
GitHub - eclipse-iofog/iofog-docker-images
GitHub - eclipse-iofog/Connector
GitHub - eclipse-iofog/HardwareAbstraction
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
router
Watch
8
Star
0
Fork
0
0
stars
with the Eclipse Foundation web properties and any
information you may provide us about yourself are governed
by our Privacy Policy.
To subscribe to a mailing list, you must have an Eclipse.org account.
Log in
- Or -
Create an account
Once you’ve are logged in, you can manage your mailing list subscriptions on the Mailing List page.
View All Mailing Lists
Mailing List
View All Mailing Lists
View Archived Mailing Lists
Privacy Policy
Terms of Use
Mailing list: iofog-devRSS Feed
Archive
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
= resolved/fixed
= unsolved/reopened
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
0
forks
Star
Watch
Code
Issues
0
Pull requests
2
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
iofogctl
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Star
0
Fork
0
Component of ioFog K8s Control Plane that manages HTTP Proxies for Public Ports
0
stars
0
forks
Star
Watch
Code
Issues
0
Pull requests
0
Actions
Projects
0
Security
Insights
More
Code
0
Fork
0
ioFog Agent implemented with Golang
0
stars
0
forks
Star
Watch
Code
Issues
0
Pull requests
0
Actions
Projects
0
Security
Insights
More
Code
Issues
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
restblue
Watch
10
Star
Note that on RBAC enabled Kubernetes clusters (e.g. GKE, AKE), it is necessary to create a service account for Tiller before initializing helm. See helm init instructions for more details.
In order to create the cluster role binding on GKE, you need to have roles/container.admin permission. If your account doesn't have the role, it can be added using the following:
gcloud projects add-iam-policy-binding $PROJECT --member=user:person@company.com --role=roles/container.admin
Next, create service account for Tiller and bind cluster-admin role.
kubectl create serviceaccount --namespace kube-system tiller-svacc
kubectl create clusterrolebinding tiller-crb --clusterrole=cluster-admin --serviceaccount=kube-system:tiller-svacc
Initialize Helm And Install Tiller
Now is the time to use our service account to initialize Helm.
helm init --service-account tiller --wait
Note that on Azure Kubernetes Service (AKS), we will also need to specify node selectors for Tiller.
helm init --service-account tiller --node-selectors "beta.kubernetes.io/os"="linux" --wait
Install ioFog Stack
Add this Helm repository to our Helm repository index and install the ioFog stack and Kubernetes services
helm repo add iofog https://eclipse-iofog.github.io/helm
We can list all available versions of the ioFog Helm chart using helm search -l iofog/iofog. From Helm 2.16 onwards, only charts with production versions are listed by default. To list all versions, including development versions, use helm search -l --devel iofog
To install a specific version of ioFog, use helm install:
helm install \
--set controlPlane.user.email=user@domain.com \
--set controlPlane.user.password=any123password345 \
--version 1.3.0 \
--namespace my-ecn \
--name my-ecn \
iofog/iofog
Actions
Projects
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
develop
10
branches
7
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Security Issues: We have integrated Snyk as a tool into our build pipeline to immediately alert on security issues.
Non-Code Aspects: New release artifacts are available on PackageCloud. Single one line install for most components. We have upgrade documentation at iofog.org and simplified the Demo and tutorial flow and experience for a completely new ioFog user.
Conforms To UI/UX Guidelines: Not verifiedCommunities: We have added new committers to the project, and actively supported all users on the ioFog Discuss forums.
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
GitHub - eclipse-iofog/Controller
GitHub - eclipse-iofog/iofog-kubelet
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Trending
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Trending
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
0
forks
Star
Watch
Code
Issues
0
Pull requests
0
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
iofog-csharp-sdk
Watch
9
Star
4
Fork
0
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
iofog-c-sdk
Watch
9
Star
2
Fork
1
2
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
11
branches
5
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Watch
9
Star
13
Fork
4
iofogctl is a CLI for the installation, configuration, and operation of ioFog Edge Compute Networks (ECNs)
iofog.org
13
stars
4
forks
Star
Watch
Code
Issues
1
Pull requests
1
Actions
Projects
0
Security
Go back
Latest commit
Git stats
614
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
README.md
iofogctl.rb
iofogctl@1.2.rb
iofogctl@1.3.rb
iofogctl@2.0-devel.rb
iofogctl@2.0.rb
View code
README.md
homebrew-iofogctl
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
develop
4
branches
7
tags
Go to file
Code
Clone
HTTPS
Pull requests
Actions
Projects
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
2
branches
0
tags
Go to file
Code
Clone
HTTPS
Go back
Latest commit
Git stats
51
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
TMG_files
src/main/java/org/eclipse/iofog
.gitignore
CONTRIBUTING
NOTICE
README.md
TMG.jar
pom.xml
test-message-generator-1.1.jar
4
Fork
0
4
stars
0
forks
Star
Watch
Code
Issues
0
Pull requests
0
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
To list all Helm releases, we can simply run helm list. The result should look like this:
NAME REVISION UPDATED STATUS CHART APP VERSION NAMESPACE
my-ecn 1 Tue Oct 1 21:34:42 2019 DEPLOYED iofog-1.3.0 1.3.0 my-ecn
The following is a complete list of all user configurable properties for the ioFog Helm chart. All of the properties are optional and have defaults. Use --set property.name=value in helm install to parametrize Helm release.
Property
Default value
Description
createCustomResources
true
See Multiple Edge Compute Networks
controlPlane.userfirstName
First
First name of initial user in Controller
controlPlane.usersurname
Second
Surname of initial user in Controller
controlPlane.useremail
user@domain.com
Email (login) of initial user in Controller
controlPlane.userpassword
H23fkidf9hoibf2nlk
Password of initial user in Controller
controlPlane.database.provider
Not supported in ioFog Community Edition
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
74
commits
Files
Permalink
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Trending
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
iofog-python-sdk
Watch
10
Star
10
Fork
6
10
stars
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
iofog-go-sdk
Watch
10
Star
6
Fork
2
6
stars
2
forks
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
core-networking
Watch
11
Star
5
Fork
0
5
GitHub - eclipse-iofog/demo
GitHub - eclipse-iofog/Agent
GitHub - eclipse-iofog/iofog-scheduler
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
common-logging
Watch
9
Star
4
Fork
0
4
stars
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
3
branches
3
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
4
stars
0
forks
Star
Watch
Code
Issues
0
Pull requests
0
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
stars
1
fork
Star
Watch
Code
Issues
0
Pull requests
0
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
107
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
develop
9
branches
25
Homebrew tap for iofogctl
Usage
brew tap eclipse-iofog/iofogctl
brew install iofogctl
About
No description, website, or topics provided.
Resources
Readme
Releases
No releases published
Packages 0
No packages published
Contributors 2
Languages
Ruby
100.0%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
69
commits
Files
Permalink
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
1
commits
Files
Permalink
View code
README.md
Test Message Generator
As developers build ioElement containers, they start by building the code in a non-container environment. They need to test the code before spending the time turning it into a published container, but they can't actually test the processing of messages or connection to the ioFog instance without going through the publishing and deployment process.
Test Message Generator is a surrogate version of the ioFog Local API. It mimics the API endpoints of the real ioFog Local API, including offering the Control Websocket and Message Websocket. It runs on "localhost" so it can be reached directly on the computer that is being used to build the ioElement container.
A developer can precisely mimic the production environment on their build machine by mapping a host. If they map "127.0.0.1" with the host name "iofog" then their local code will be able to operate with the same "http://iofog:54321/" endpoints found in the SDKs and described in the API specification.
Configuration (under files folder examples) :
The developer can set up a list of fully defined ioMessages that the Test Message Generator will output in messages.xml . The messages will be send randomly.
The messages that are posted into the Test Message Generator will be stored in receivedmessages.xml file.
Configuration JSON for the ioElement container that the Test Message Generator will give as output can be specified in containerconfig.json file.
"new configuration" control message and "new message" data message will be send to the ioElement container at the interval specified by the developer im milliseconds at config.xml:
<configuration>
<datamessageinterval>500</datamessageinterval>
<controlmessageinterval>10000</controlmessageinterval>
</configuration>
Run instructions:
To run TMG just download latest jar file and provide all configurations files (the full list and examples can be found under files folder):
java -jar jar_file_name.jar
Notice! Before running TMG don't forget to turn off iofog: sudo service iofog stop.
About
No description, website, or topics provided.
Resources
Readme
Actions
Projects
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
1
branch
0
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
controlPlane.database.host
Not supported in ioFog Community Edition
controlPlane.database.port
0
Not supported in ioFog Community Edition
controlPlane.database.password
Not supported in ioFog Community Edition
controlPlane.database.dbName
Not supported in ioFog Community Edition
controlPlane.controller.replicas
1
Number of replicas of Controller pods
controlPlane.controller.image
iofog/controller:1.3.1
Controller Docker image
controlPlane.controller.imagePullPolicy
Always
Controller Docker image pull policy
controlPlane.kubeletImage
iofog/iofog-kubelet:1.3.0
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
tests
.gitignore
CONTRIBUTING
Dockerfile
NOTICE
README.md
azure-pipelines.yml
run.bash
View code
README.md
Test Runner
The ioFog Test Runner provides a convenient way to run multiple smoke test suites on a deployed Edge Compute Network (ECN).
The suite by default does not run any non-smoke tests, i.e. tests that would invalidate or potentially break the ECN, therefore it can be used on staging a productions ECNs to verify correct deployment.
The following test suites are available:
Controller REST API smoke tests
Agent CLI smoke tests
Basic microservice deployment integration tests
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
6
forks
Star
Watch
Code
Issues
1
Pull requests
1
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Star
Watch
Code
Issues
0
Pull requests
1
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
stars
0
forks
Star
Watch
Code
Issues
0
Pull requests
0
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Trending
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
example-microservices
Watch
9
Star
12
Fork
1
12
stars
1
fork
Star
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
iofog-docker-images
Watch
11
Star
4
Fork
0
4
stars
0
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
Connector
Watch
21
Star
64
Fork
24
64
stars
24
forks
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
HardwareAbstraction
Watch
10
Star
5
Fork
0
5
stars
0
0
forks
Star
Watch
Code
Issues
0
Pull requests
0
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
31
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
1
branch
0
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
1
branch
0
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
azure-templates
lib
test
.gitignore
CONTRIBUTING
NOTICE
README.md
azure-pipelines.yml
index.js
ioFogClient.js
package-lock.json
package.json
View code
README.md
iofog/nodejs-sdk
send new message to ioFog (sendNewMessage)
fetch next unread messages from ioFog (getNextMessages)
fetch messages for time period and list of accessible publishers (getMessagesByQuery)
get config options (getConfig)
create ioMessage JSON object (ioMessage)
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
cmd/manager
internal/manager
script
vendor
.gitignore
Dockerfile
Makefile
README.md
azure-pipelines.yaml
go.mod
go.sum
version
View code
README.md
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
README.md
View code
README.md
Agent-Go
ioFog Agent implemented with Golang
About
ioFog Agent implemented with Golang
Resources
Readme
Releases
No releases published
Packages 0
No packages published
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Releases
No releases published
Packages 0
No packages published
Contributors 4
Languages
Java
100.0%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
50
Kubelet Docker image
controlPlane.loadBalancerIp
Pre-allocated static IP address for Controller
controlPlane.serviceType
LoadBalancer
Service type for Controller (one of LoadBalancer, NodePort or ClusterIP)
connectors.image
iofog/connector:1.3.0
Connector Docker image
connectors.serviceType
LoadBalancer
Service type for Connector (one of LoadBalancer, NodePort or ClusterIP)
connectors.instanceNames
["first","second"]
Array of Connector instance names
operator.replicas
1
Number of replicas of Operator pods
operator.image
iofog/iofog-operator:1.3.0
OperatorDocker image
operator.imagePullPolicy
Always
Operator Docker image pull policy
Connection to Installed ioFog
Note that some of additional test suites are automatically skipped as of this release of Test Runner.
Prerequisites
You must have iofogctl configured with its default namespace pointing to the ECN you want to test
Usage
Test suite
Description
Required configuration
Controller REST API smoke tests
Basic REST API tests on Controller instance
CONTROLLERCONTROLLER_EMAILCONTROLLER_PASSWORD
Agent CLI smoke tests
Runs Agent tests by SSHing into the Agent nodes and interacting using Agent CLI
AGENTS
Basic microservice deployment integration tests
Sets up users and catalog entries, deploys and destroys microservices on each Agent
CONTROLLERCONTROLLER_EMAILCONTROLLER_PASSWORDAGENTS
Example usage of the test runner with iofogctl configuration:
docker run --name test-runner \
-v ~/.iofog/:/root/.iofog/ \
iofog/test-runner:latest
Example usage of the test runner with endpoint configurations configuration:
docker run --name test-runner \
-v ~/.ssh/my_iofog_agent_ssh_key:/root/.ssh/id_rsa \
-e CONTROLLER="1.2.3.4:51121" \
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
Controller
Watch
18
Star
68
Fork
32
68
stars
32
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
iofog-kubelet
Watch
8
Star
4
Fork
0
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
4
branches
4
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
6
branches
11
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
5
branches
0
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
Watch
Code
Issues
0
Pull requests
5
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
forks
Star
Watch
Code
Issues
0
Pull requests
0
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Join GitHub today
Star
Watch
Code
Issues
0
Pull requests
3
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
forks
Star
Watch
Code
Issues
0
Pull requests
0
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Join GitHub today
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
1
branch
0
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
internal
scripts
.gitignore
CHANGELOG.md
Dockerfile
README.md
azure-pipelines.yaml
go.mod
go.sum
main.go
pipeline.yaml
View code
README.md
iofog-router
Builds an image of the Apache Qpid Dispatch Router designed for use with Eclipse ioFog
About
No description, website, or topics provided.
Resources
Readme
Releases
3
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
7
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
10
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
connect to ioFog Control Channel via WebSocket (wsControlConnection)
connect to ioFog Message Channel via WebSocket (wsMessageConnection) and publish new message via this channel (wsSendMessage)
Code snippets:
import module:
var ioFogClient = require('@iofog/nodejs-sdk');
set up custom host, port and container's ID (in case of no params default values for host and port will be used: 'ioFog', 54321)
and pass main callback to trigger when ioFogClient initialization is done:
ioFogClient.init( 'iofog', 54321, null,
// any code to perform after ioFog is initialized
}
);
REST calls
post new ioMessage to ioFog via REST call:
ioFogClient.sendNewMessage(
ioFogClient.ioMessage(
{
'tag': 'Bosch Camera 8798797',
'groupid': 'group1',
'sequencenumber': 2,
'sequencetotal': 100,
Latest commit
Git stats
1,164
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
assets
cmd/iofogctl
docs/md
gitHooks
internal
pipeline
pkg
script
test
vendor
.gitignore
Learn more
Accept
Reject
Save preferences
ioFog Port Manager
Port Manager is a component of the ioFog Kubernetes Control Plane. It is responsible for managing HTTP Proxy instances to satisfy requirements specified by Public Ports created through the ioFog Controller API.
Port Manager is deployed automatically when using iofogctl >= 2.0.0.
Build from Source
Go 1.12.1+ is a prerequisite.
See all make commands by running:
make help
To build, go ahead and run:
make build
Running Tests
Run project unit tests:
make test
About
Component of ioFog K8s Control Plane that manages HTTP Proxies for Public Ports
Resources
Readme
Releases
7
tags
Packages 0
No packages published
Languages
Go
87.4%
Makefile
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
.gitignore
CONTRIBUTING
Dockerfile
NOTICE
README.md
cmd.sh
index.js
noble_utils.js
package.json
utils.js
View code
README.md
bluetooth-rest-api (REST-BLUE)
Prerequisites:
Once the installation is complete, you will be able to connect to the ioFog Controller on K8s using iofogctl.
iofogctl connect k8s-ctrl --kube-config ~/.kube/config --email user@domain.com --pass any123password345
Once you are connected, you can use iofogctl to deploy edge Agents. Then, you can use kubectl or iofogctl to deploy microservices to your edge Agents.
Multiple Edge Compute Networks
If we want to have multiple instances of ioFog on the same Kubernetes cluster, it is necessary to tell Helm not to install custom resource definitions. This can be done by overriding the createCustomResources (default: true) variable.
helm install \
--set createCustomResources=false \
--set controlPlane.user.email=user@domain.com \
--set controlPlane.user.password=any123password345 \
--version 1.3.0 \
--namespace second-ecn \
--name second-ecn \
iofog/iofog
Only use this option when the ioFog custom resource exists, either from another Helm installation or manual installation using iofogctl.
To check if the custom resources exist, run kubectl get crd | grep iofog. If the resources exist, we must use createCustomResources=false so that Helm does not try to create them again.
Uninstall ioFog Stack
To uninstall ioFog stack, simply delete the Helm release, where the release name refers to --name arguments used during installation.
helm delete --purge my-ecn
Note that due to Helm's handing of custom resource definitions, all such definitions are orphaned when a release is created and thus need to be deleted manually.
About
No description, website, or topics provided.
Resources
Readme
Releases
-e CONTROLLER_EMAIL="user@domain.com" \
-e CONTROLLER_PASSWORD="#Bugs4Fun" \
-e AGENT_USER="root" \
-e AGENT_KEY="/root/.ssh/id_rsa" \
iofog/test-runner:latest
Note that whenever AGENTS is specified, you need to mount appropriate ssh keys to /root/.ssh of the test-runner containers. The keys can be in any default SSH position: ~/.ssh/id_dsa, ~/.ssh/id_ecdsa, ~/.ssh/id_ed25519 and ~/.ssh/id_rsa.
Test Results
The output of this test-suite currently is a single XML File that is Junit-XML compliant.
This can be used in development pipelines on most DevOps infrastructure to display test results
in easy to consume factor.
This is used in Azure Pipelines to display each builds pass/fail for both entire test suites
as well as for specific tests we may see multiple failures in, to help identify issues that may not be consistent.
The test output is file is TEST-RESULTS.xml and is stored in /root/test-results of the test-runner container.
About
No description, website, or topics provided.
Resources
Readme
Releases
7
ioFog Test Runner 1.3.0-rc1
Latest
Nov 7, 2019
+ 6 releases
Packages 0
No packages published
forks
Star
Watch
Code
Issues
0
Pull requests
2
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
4
stars
0
forks
Star
Watch
Code
Issues
0
Pull requests
1
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
67
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
Docker
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
181
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
gitHooks
Add fmt to other make commands and update git hook
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
20
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
cn
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
demo
Watch
9
Star
8
Fork
4
8
stars
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
Agent
Watch
28
Star
273
Fork
32
273
stars
32
forks
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
iofog-scheduler
Watch
8
Star
2
Fork
0
2
stars
0
forks
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
8
branches
0
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
3
branches
0
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
GitHub - eclipse-iofog/platform
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
develop
12
branches
9
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
1
branch
0
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
42
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
iofog_log
.gitignore
tags
Packages 0
No packages published
Contributors 2
Languages
Go
76.1%
Dockerfile
20.5%
Shell
3.4%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
src/IoFog.Sdk.CSharp
.gitignore
CONTRIBUTING
IoFog.Sdk.CSharp.sln
NOTICE
README.md
View code
README.md
container-sdk-csharp
send new message to ioFog
fetch next unread messages from ioFog
fetch messages for time period and list of accessible publishers
get config options
connect to ioFog Control Channel via WebSocket
connect to ioFog Message Channel via WebSocket
Code snippets:
IoFogRestApiClient implements all methods to communicate with ioFog (via local REST API).
IoFogWebSocketApiClient implements all methods to communicate with ioFog (via local WS API).
IoMessage represent all message communication between ioFog and Containers.
IoMessageUtils class is convenient to encode and decode byte arrays.
IIoFogRestApiHandler and IIoFogWebSocketApiHandler - interfaces for handling requests to ioFog via REST and WS APIs respectively.
CONTRIBUTING
NOTICE
global.c
global.h
httpclient.c
httpclient.h
iofogclient.c
iofogclient.h
iomessage.c
iomessage.h
util.c
util.h
View code
About
No description, website, or topics provided.
Releases
No releases published
Packages 0
No packages published
Contributors 3
Languages
'priority': 5,
'authid': 'auth',
'authgroup': 'authgrp',
'chainposition': 10,
'hash': 'hashingggg',
'previoushash': 'prevhashingggg',
'nonce': 'nounceee',
'difficultytarget': 30,
'infotype': 'image/jpeg',
'infoformat': 'base64',
'contextdata': 'gghh',
'contentdata' : 'sdkjhwrtiy8wrtgSDFOiuhsrgowh4touwsdhsDFDSKJhsdkljasjklweklfjwhefiauhw98p328'
}),
{
'onBadRequest':
console.log(errorMsg);
},
'onMessageReceipt':
console.log(messageId + ' : ' + timestamp);
},
'onError':
console.log(error);
}
CHANGELOG.md
CONTRIBUTING
Makefile
NOTICE
README.md
azure-pipelines.yaml
go.mod
go.sum
iofogctl-logo.png
version
View code
README.md
iofogctl is a CLI for the installation, configuration, and operation of ioFog
Edge Compute Networks (ECNs).
It can be used to remotely manage multiple ECNs from a single host. It is built for ioFog users and DevOps engineers
wanting to manage ECNs. It is modelled on existing tools such as Terraform or kubectl that can be used to automate
infrastructure-as-code.
Install
Mac
Mac users can use Homebrew:
brew tap eclipse-iofog/iofogctl
8.2%
Shell
3.2%
Dockerfile
1.2%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
Accept
Reject
Save preferences
container needs to be run with 2 options to grant access: --net=host --privileged
Upon startup the container will start scanning if bluetooth is powered on and upon discovering devices it will store them locally and generate an internal ID. In most cases the container will work with this locally stored devices unless the scanning is restarted. If container received command to restart scanning it will delete all previously stored devices and start scanning anew ( which results in generating new local IDs for devices).
Container will return 'Timeout exception' in case if it didn't get any results of processing.
device with specified mac was't found while scanning anew
device is inactive and container hang up on trying to connect to it
after connecting to device container hang up on discovering services
Container provides next REST endpoints :
Set Device Identifier (POST)
This endpoint provides the possibility to set config for bluetooth-rest-api system container, upon receiving config container will wipe out all previously stored devices and restart scanning. 'name' - will tell container differentiate devices' uniqueness by localname, 'mac' - will tell container differentiate devices' uniqueness by mac address
Endpoint 1
http://localhost:10500/config/scan
POST JSON raw body
{ "deviceIdentifier" : "name"/"mac" }
Response
"New config applied. Scanning restarted"
Turn ON/OFF level of logging (POST)
This endpoint provides the possibility to turn ON/OFF DEBUG level logging (empty level value will turn off/ "DEBUG" will show exessive logs)
Endpoint 2
http://localhost:10500/config/logging
POST JSON raw body
{ "LOG_LEVEL" : "DEBUG" }
Response
Restart scanning
This endpoint sends the command to restart scanning to a container. As a result all previously stored devices will be wiped out and then the scanning will be restarted.
Endpoint 3
7
tags
Packages 0
No packages published
Contributors 3
Languages
Shell
100.0%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
Contributors 5
Languages
Shell
92.2%
Dockerfile
7.8%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
develop
10
branches
52
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
develop
14
branches
8
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
iofog_python_sdk
test
.gitignore
CONTRIBUTING
NOTICE
README.md
azure-pipelines.yml
build.sh
requirements.txt
setup.py
test.sh
View code
README.md
iofog-python-sdk
send new message to ioFog (post_message)
fetch next unread messages from ioFog (get_next_messages)
fetch messages for time period and list of accessible publishers (get_next_messages_from_publishers_within_timeframe)
get config options (get_config)
create IoMessage, encode(decode) to(from) raw bytes, marshall(unmarshall) into(from) JSON object (IoMessage class methods)
connect to ioFog Control Channel via WebSocket (establish_control_ws_connection)
Jun 24, 2020
pkg
Create name for route in application if missing
Jul 15, 2020
script
Vendor deps
Dec 13, 2019
vendor
Add k8s package
Mar 9, 2020
.gitignore
Vendor deps
Dec 13, 2019
CHANGELOG.md
Update CHANGELOG.md
May 12, 2020
CONTRIBUTING
add license
May 16, 2018
Makefile
Add fmt to other make commands and update git hook
Jun 24, 2020
NOTICE
.gitignore
CONTRIBUTING
Dockerfile
Makefile
NOTICE
main.go
View code
About
No description, website, or topics provided.
Releases
No releases published
Packages 0
No packages published
Contributors 6
Languages
Go
96.3%
Makefile
3.2%
Dockerfile
0.5%
© 2020 GitHub, Inc.
4
forks
Star
Watch
Code
Issues
0
Pull requests
0
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Star
Watch
Code
Issues
1
Pull requests
5
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Star
Watch
Code
Issues
0
Pull requests
0
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
32
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
JSON-Generator
JSON-REST-API
JSON-Subselect
OpenWeatherMap
Temperature-Conversion
diagnostics
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
20
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
golang
java
nodejs
python
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Trending
Learning Lab
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
212
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
client
daemon
packaging
.gitignore
CONTRIBUTING
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
36
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
process_modules
.gitignore
CONTRIBUTING
CONTRIBUTING
Dockerfile
Dockerfile-arm
Makefile
NOTICE
README.md
main.go
View code
README.md
Logging Container
Logging Container is a system container that gathers logs and provides REST API for adding and querying logs from containers.
Use Logger Container if you want to gather all the logs and find them easily.
As internal port use 54322.
Config:
The config for the container should look the following way:
{"access_tokens" : ["Some_Access_Token"], "cleanfrequency" : "1h40m", "ttl" : "24h"}
Config explanation:
"access_tokens" - required. array of strings, each is acceptable access token that is allowed to interact with logging service
"cleanfrequency" - optional. string, frequency of database cleanup. Parameter is a sequence of decimal numbers, each with optional fraction and a unit suffix, such as "300ms", "1.5h" or "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
"ttl" - optional. string, log entry time to live. Parameter is a sequence of decimal numbers, each with optional fraction and a unit suffix, such as "300ms", "1.5h" or "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
Post methods
Add logs Endpoint (Post)
localhost:[mapped_port]/logs/add
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Set up custom host, port and container's ID (in case of no params default values for host and port will be used: 'iofog', 54321):
var restHandler = new RestHandler(); // implementation of the IIoFogRestApiHandler interface
var restClient = new IoFogRestApiClient(restHandler, "iofog", 54321); // creating instance of REST API ioFog client
var wsHandler = new WsHandler(); // implementation of the IIoFogWebSocketApiHandler interface
var restClient = new IoFogRestApiClient(wsHandler, "iofog", 54321); // creating instance of WS API ioFog client
You can also use custom ContainerId for testing purposes by specifying SELFNAME environment variable.
REST calls (could trigger OnException, OnBadRequest handler's methods):
Post new IoMessage to ioFog via REST call
var message = new IoMessage();
var handler = new RestHandler(); // implementation of the IIoFogRestApiHandler interface
var client = new IoFogRestApiClient(handler); // creating instance of REST API ioFog client
var response = await client.PostMessageAsync(message);
Get list of IoMessages by time frame for accessible publishers from ioFog via REST call
var handler = new RestHandler(); // implementation of the IIoFogRestApiHandler interface
var client = new IoFogRestApiClient(handler); // creating instance of REST API ioFog client
long timeframeStart = 1234567890123;
long timeframeEnd = 1234567890123;
var response = await client.GetMessagesFromPublishersWithinTimeframeAsync(timeframeStart, timeframeEnd, publishers);
Get list of next unread ioMessages via REST call
var handler = new RestHandler(); // implementation of the IIoFogRestApiHandler interface
var client = new IoFogRestApiClient(handler); // creating instance of REST API ioFog client
var response = await client.GetContainerNextUnreadMessagesConfigAsync();
C
100.0%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
}
);
get list of ioMessages by time frame for accessible publishers from ioFog via REST call
ioFogClient.getMessagesByQuery( Date.now(), Date.now(), ['PUBLISHER'],
{
'onBadRequest':
console.log(errorMsg);
},
'onMessagesQuery':
console.log(timeframestart + ':' + timeframeend);
console.log(messages);
},
'onError':
console.log(error);
}
}
);
get list of next unread ioMessages via REST call
ioFogClient.getNextMessages(
{
'onBadRequest':
console.log(errorMsg);
brew install iofogctl
Linux
The Debian package can be installed like so:
https://packagecloud.io/install/repositories/iofog/iofogctl/script.deb.sh | sudo bash
sudo apt install iofogctl
And similarly, the RPM package can be installed like so:
https://packagecloud.io/install/repositories/iofog/iofogctl/script.rpm.sh | sudo bash
sudo apt install iofogctl
Usage
Documentation
The best way to learn how to use iofogctl is through the iofog.org learning resources.
There are also auto-generated docs within this repo.
Quick Start
See all iofogctl options
iofogctl --help
Current options include:
_ ____ __ __
(_)___ / __/___ ____ _____/ /_/ /
/ / __ \/ /_/ __ \/ __ `/ ___/ __/ /
/ / /_/ / __/ /_/ / /_/ / /__/ /_/ /
/_/\____/_/ \____/\__, /\___/\__/_/
/____/
Welcome to the cool new iofogctl Cli!
Use `iofogctl version` to display the current version.
Usage:
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
http://localhost:10500/scan/restart
Response
"Scanning restarted"
Get list of devices (GET)
This endpoint returns a list of discovered devices till current moment.
Endpoint 4
http://localhost:10500/devices
Response
[
{
"id": "TzPxHVbBnn",
"mac-address": "fe:10:4f:c6:b9:39",
"local-name": "Kontakt",
"mac-id": "fe104fc6b939",
"rssi": -74
},
{
"id": "MvSG3gCXU3",
"mac-address": "5b:d7:13:2b:f9:42",
"mac-id": "5bd7132bf942",
"rssi": -81
}
]
Get list of services (GET)
This endpoint returns a list of services discovered for specified device ID/Mac Address.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
969
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
.github
azure-templates
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
59
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
connect to ioFog Message Channel via WebSocket (establish_message_ws_connection) and publish new message via this channel (post_message_via_socket)
Code snippets:
Install python package:
sudo python2 -m pip install iofog-python-sdk
Import iofog client and additional classes to your project:
from iofog_python_sdk.client import IoFogClient
from iofog_python_sdk.exception import IoFogException
from iofog_python_sdk.iomessage import IoMessage
from iofog_python_sdk.listener import *
Create IoFog client with default settings:
try:
client = IoFogClient()
except IoFogException as e:
# client creation failed, e contains description
Or specify host, port, ssl and container id explicitly:
try:
client = IoFogClient(id='container_id', host='iofog_host', port=6666)
except IoFogException as e:
# client creation failed, e contains description
REST calls
Get list of next unread IoMessages:
try:
messages = client.get_next_messages()
except IoFogException as e:
add license
May 16, 2018
README.md
Create deployapps package
Oct 8, 2019
azure-pipelines.yml
Change GOPATH in pipeline
Nov 18, 2019
go.mod
Update to v2 in go.mod
Mar 11, 2020
go.sum
Add Extra hosts to msvc container
Mar 24, 2020
View code
README.md
iofog-sdk-go
This SDK contains a set of Golang packages developers can use for the purposes of:
Developing your own edge microservices that run on ioFog Edge Compute Networks
Interacting with ioFog Controller REST API
Packages
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
8
branches
13
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
develop
90
branches
27
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Dismiss
master
3
branches
0
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
freeboard
humidity_sensor_simulator
json-rest-api-cors-enabled
seismic_sensor_simulator
sensors-data
temperature_sensor_simulator
.gitignore
CONTRIBUTING
NOTICE
README.md
View code
README.md
example-microservices
About
No description, website, or topics provided.
Resources
Readme
Releases
No releases published
Packages 0
No packages published
python3
qemu
.gitignore
Makefile
README.md
azure-pipelines.yml
View code
README.md
make IMAGE_ARCH=x86 build
make IMAGE_ARCH=x86 push
Supported architectures:
x86
arm32
arm64
About
No description, website, or topics provided.
Resources
Readme
Releases
No releases published
Packages 0
No packages published
Contributors 6
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
Dockerfile
NOTICE
README.md
azure-pipelines.yml
pom.xml
View code
README.md
What is Connector?
Is an internetworking aid for ioFog nodes
Provides “double opt-in” connections for secure IoT connectivity
We call this module "Connector" because it acts as a virtual connection between ioFog nodes.
Connector installs on any common version of Linux. It handles the traffic between Fog nodes. You can have as many Connector instances in a Iofog deployment as you want.
When you put Connector, anywhere on your network (it can be even public Internet), anywhere that is visible to fog nodes, the Connector facilitates this talk to each other, it facilitates opening a port on public internet to talk to the fog. Thus you can reach microservices remotely, and microservices come in together from different locations.
Status
Connector Setup
1. In order to install Connector, you need to have Java installed on your machine.
sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer
2 Install Connector
curl -s https://packagecloud.io/install/repositories/iofog/iofog-connector/script.deb.sh | sudo bash
sudo apt-get install iofog-connector
3. Setup certificates if needed (After installation there are configs.json, server-cert.pem and server-key.pem files present in the /etc/iofog-connector directory)
Dockerfile
Dockerfile-arm
Makefile
NOTICE
README.md
__init__.py
constants.py
exception.py
hal_main.py
http_server.py
ws_server.py
View code
README.md
HAL
HAL stands for Hardware Abstraction Layer. It's REST/WS abstraction for hardware capabilities for Linux based
machines.
Prerequisites:
as Docker container, it needs to be run with next options to grant access:
--net=host --privileged
in other cases it needs to start under root user
REST
REST server listens on port 54331:
Use access-token parameter provided from container config in Headers.
Request body example:
{
"publisher": "sasha",
"timestamp": 149622569742,
"level": "WARNING",
"message": "sample message of level WARNING"
}
Response:
Status 200 OK
POST parameters description
"publisher"- (Text)
"timestamp": the timestamp of container logs (Number)
"level": string log level ("CRITICAL", "FATAL", "ERROR", "WARN", "WARNING", "INFO", "DEBUG")
"message"- (Text)
Get logs Endpoint (Post)
localhost:[mapped_port]/logs/get
Use access-token parameter provided from container config in Headers.
Request body example:
{
"level" : "INFO",
"publishers" : ["sasha", "stani"],
"page" : 2,
"pagesize":100,
"timeframestart" : 149622500000,
Get container's config via REST call
var handler = new RestHandler(); // implementation of the IIoFogRestApiHandler interface
var client = new IoFogRestApiClient(handler); // creating instance of REST API ioFog client
var response = await client.GetContainerConfigAsync();
WebSocket calls (could trigger OnException, OnMessage, OnNewConfigSignal and OnReceipt listener's methods):
Open WS Control Channel to ioFog
var handler = new WsHandler(); // implementation of the IIoFogWebSocketApiHandler interface
var messageClient = new IoFogWebSocketApiClient(handler);
await messageClient.ConnectAsync(IoFogWebSocketEndpointEnum.ControlSocket); // opens ws connection to specified endpoint
await messageClient.StartListenAsync(); // starts listen to connected endpoint
Open WS Message Channel to ioFog
var handler = new WsHandler(); // implementation of the IIoFogWebSocketApiHandler interface
var messageClient = new IoFogWebSocketApiClient(handler);
await messageClient.ConnectAsync(IoFogWebSocketEndpointEnum.MessageSocket); // opens ws connection to specified endpoint
await messageClient.StartListenAsync(); // starts listen to connected endpoint
Send IoMessage via WS Message Channel (pre-condition: WS Message Channel is open):
var message = new IoMessage();
await messageClient.SendMessageAsync(message);
About
No description, website, or topics provided.
Resources
Readme
Releases
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
},
'onMessages':
console.log(messages);
},
'onError':
console.log(error);
}
}
);
get container's config via REST call
ioFogClient.getConfig(
{
'onBadRequest':
console.log(errorMsg);
},
'onNewConfig':
console.log(config);
},
'onError':
iofogctl [flags]
iofogctl [command]
Available Commands:
attach Attach an existing ioFog resource to Control Plane
configure Configure iofogctl or ioFog resources
connect Connect to an existing Control Plane
create Create a resource
delete Delete an existing ioFog resource
deploy Deploy Edge Compute Network components on existing infrastructure
describe Get detailed information of existing resources
detach Detach an existing ioFog resource from its ECN
disconnect Disconnect from an ioFog cluster
get Get information of existing resources
help Help about any command
legacy Execute commands using legacy CLI
logs Get log contents of deployed resource
move Move an existing resources inside the current Namespace
prune prune ioFog resources
rename Rename the iofog resources that are currently deployed
start Starts a resource
stop Stops a resource
version Get CLI application version
view Open ECN Viewer
Flags:
--detached Use/Show detached resources
-h, --help help for iofogctl
Endpoint 5
Endpoint 6
Response
[
{
"uuid": "1800",
"name": "Generic Access",
"type": "org.bluetooth.service.generic_access"
},
{
"uuid": "1801",
"name": "Generic Attribute",
"type": "org.bluetooth.service.generic_attribute"
},
{
"uuid": "180a",
"name": "Device Information",
"type": "org.bluetooth.service.device_information"
},
{
"uuid": "1804",
"name": "Tx Power",
"type": "org.bluetooth.service.tx_power"
},
{
"uuid": "180f",
scripts
src
test
.dockerignore
.eslintrc.js
.gitignore
.jshintrc
.snyk
CHANGELOG.md
CONTRIBUTING
Dockerfile.dev
Dockerfile.rel
NOTICE
README.md
azure-pipelines.yml
coding-style.md
logrotate.conf
package-lock.json
package.json
View code
README.md
cmd
hack/skaffold/iofog-kubelet
log
manager
providers
script
trace
vendor
versions
vkubelet
.dockerignore
.envrc
.gitignore
.golangci.yml
.goreleaser.yml
AUTHORS
CONTRIBUTING
Dockerfile
Makefile
NOTICE
# some error occurred, e contains description
Post new IoMessage to ioFog via REST call:
msg=IoMessage()
msg.infotype="infotype"
msg.infoformat="infoformat"
msg.contentdata="sdkjhwrtiy8wrtgSDFOiuhsrgowh4touwsdhsDFDSKJhsdkljasjklweklfjwhefiauhw98p328946982weiusfhsdkufhaskldjfslkjdhfalsjdf=serg4towhr"
msg.contextdata=""
msg.tag="tag"
msg.groupid="groupid"
msg.authid="authid"
msg.authgroup="authgroup"
msg.hash="hash"
msg.previoushash="previoushash"
msg.nonce="nonce"
try:
receipt = client.post_message(msg)
except IoFogException, e:
# some error occurred, e contains description
Get an array of IoMessages from specified publishers within given timeframe:
query = {
'timeframestart': 1234567890123,
'timeframeend': 1234567890123,
'publishers': ['sefhuiw4984twefsdoiuhsdf', 'd895y459rwdsifuhSDFKukuewf', 'SESD984wtsdidsiusidsufgsdfkh']
}
Each package contains its own README.md so please refer to those for further details.
Microservices
Client
The client package contains an HTTP client to use with ioFog Controller's REST API. You can view see the full REST API specification at iofog.org.
Deploy applications
The deployapps package contains executors to deploy iofog applications and microservices using the client package.
This package is used by iofogctl and iofog-operator to deploy applications and microservices based on yaml configuration files.
About
No description, website, or topics provided.
Resources
Readme
Releases
11
tags
Packages 0
No packages published
Contributors 12
Languages
Go
97.8%
Makefile
1.5%
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
201
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
init
templates
test/conf
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
NehaNaithani
Fixed null pointer issue in image prune (#355)
…
074ae73
Nov 19, 2020
Fixed null pointer issue in image prune (#355)
074ae73
Git stats
1,056
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
13
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
build
cmd/scheduler
deployment
.gitignore
.travis.yml
Contributors 5
Languages
JavaScript
37.9%
Python
31.1%
Java
11.1%
Makefile
10.9%
Go
4.8%
Dockerfile
2.5%
TypeScript
1.7%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Languages
Makefile
100.0%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse-iofog
/
platform
Watch
8
Star
0
Fork
4
0
stars
4
forks
Star
Watch
Code
Issues
0
- configs.json contains the list of existing connections
- server-cert.pem is a public key that tells that Iofog-Controller is allowed to Connector
- server-key.pem is a private key that has its own identity and uses it to talk to ioFog agent
4. Add iofog-connector.conf config file to Connector
sudo echo '{
"ports": [
"6000-6001",
"7000-7002",
"30000-39999",
"40000-49999"
],
"exclude": [
"7001"
],
"broker":12345,
"address":"127.0.0.1",
"dev":true
}' > /etc/iofog-connector/iofog-connector.conf
5. Add Connector to Iofog-Controller database
iofog-controller connector -add -n <name> -d <domain> -i <publicIP>
Logs
Log files are located at '/var/log/iofog-connector'
System Requirements (Recommended)
Processor: 64 bit Dual Core or better
RAM: 1 GB minimum
Hard Disk: 5 GB minimum
HAL GPIO for RPI API
LSCPU info (GET)
Returns parsed info of 'lscpu' command
http://localhost:54331/hal/hwc/lscpu
Response example
{
"on_line_cpus_list": "0-7",
"cpus": "8",
"cpu_family": "6",
"l1d_cache": "32K",
"cpu_max_mhz": "3400,0000",
"cores_per_socket": "4",
"byte_order": "Little Endian",
"architecture": "x86_64",
"cpu_min_mhz": "800,0000",
"virtualization": "VT-x",
"numa_nodes": "1",
"bogomips": "4589.92",
"l2_cache": "256K",
"model": "42",
"stepping": "7",
"flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm epb tpr_shadow vnmi flexpriority ept vpid xsaveopt dtherm ida arat pln pts",
"cpu_mhz": "3100.592",
"vendor_id": "GenuineIntel",
"numa_node0_cpus": "0-7",
"l1i_cache": "32K",
"timeframeend" : 149622599999,
"orderby" : ["timestamp"],
"asc" : false,
"message":"sample mess"
}
Response example:
{
"logs": [
{
"publisher": "sasha",
"timestamp": 149622569742,
"level": "WARNING",
"message": "sample message of level WARNING"
},
{
"publisher": "stani",
"timestamp": 149622569728,
"level": "ERROR",
"message": "sample message of level ERROR"
},
...
]
}
No releases published
Packages 0
No packages published
Contributors 2
Languages
C#
100.0%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
console.log(error);
}
}
);
WebSocket(WS) calls
open WS Message Channel to ioFog with callback that will be executed on open socket (in this example - sends new message via this channel)
ioFogClient.wsMessageConnection(
var ioMsg = ioFogClient.ioMessage(
{
'tag': 'Bosch Camera 8798797',
'groupid': 'group1',
'sequencenumber': 2,
'sequencetotal': 100,
'priority': 5,
'authid': 'auth',
'authgroup': 'authgrp',
'chainposition': 10,
'hash': 'hashingggg',
'previoushash': 'prevhashingggg',
'nonce': 'nounceee',
'difficultytarget': 30,
'infotype': 'image/jpeg',
'infoformat': 'base64',
'contextdata': 'gghh',
--http-verbose Toggle for displaying verbose output of API client
-n, --namespace string Namespace to execute respective command within (default "default")
-v, --verbose Toggle for displaying verbose output of iofogctl
Use "iofogctl [command] --help" for more information about a command.
Autocomplete
If you are running BASH or ZSH, iofogctl comes with shell autocompletion scripts.
In order to generate those scripts, run:
iofogctl autocomplete bash
OR
iofogctl autocomplete zsh
Then follow the instructions output by the command.
Example:
iofogctl autocomplete bash
✔ $HOME/.iofog/completion.bash.sh generated
Run `source $HOME/.iofog/completion.bash.sh` to update your current session
Add `source $HOME/.iofog/completion.bash.sh` to your bash profile to have it saved
source $HOME/.iofog/completion.bash.sh
echo "$HOME/.iofog/completion.bash.sh" >> $HOME/.bash_profile
Build from Source
This project uses go modules so it must be built from outside of your $GOPATH.
Go 1.13+ is a prerequisite. Install all other dependancies with:
make bootstrap
Make sure that your $PATH contains $GOBIN, otherwise make build will fail on the basis that command rice is not found.
See all make commands by running:
make
To build and install, go ahead and run:
"name": "Battery Service",
"type": "org.bluetooth.service.battery_service"
},
{
"uuid": "a1ea81100e1bd4a1b84063f88c8da1ea",
"name": null,
"type": null
},
{
"uuid": "a1ea81200e1bd4a1b84063f88c8da1ea",
"name": null,
"type": null
},
{
"uuid": "a1ea81300e1bd4a1b84063f88c8da1ea",
"name": null,
"type": null
}
]
Get list of characteristics (GET)
This endpoint returns the list of discovered characteristics for specified service sID and device dID/Mac Address
Endpoint 7
Endpoint 8
Response
[
{
ioFog Controller
Status
Install
sudo npm install -g iofogcontroller --unsafe-perm
Usage
iofog-controller <command> <action> <options>
For full installation and usage, visit iofog.org.
About
No description, website, or topics provided.
Resources
Readme
Releases
52
v1.2.2
Latest
Sep 4, 2019
+ 51 releases
Packages 0
No packages published
Contributors 15
+ 4 contributors
Languages
JavaScript
README.md
azure-pipelines.yml
go.mod
go.sum
main.go
netlify.toml
version
View code
README.md
iofog-kubelet
About
No description, website, or topics provided.
Resources
Readme
Releases
8
v1.2.0
Latest
Jul 15, 2019
+ 7 releases
Packages 0
No packages published
try:
query_response = client.get_next_messages_from_publishers_within_timeframe(query)
except IoFogException, e:
# some error occurred, e contains description
Get container's config:
try:
config = client.get_config()
except IoFogException, ex:
# some error occurred, ex contains description
WebSocket calls
To use websocket connections you should implement listeners as follows:
class MyControlListener(IoFogControlWsListener):
def on_control_signal(self):
# do smth on control signal
class MyMessageListener(IoFogMessageWsListener):
def on_receipt(self, message_id, timestamp):
# do smth with message receipt
def on_message(self, io_msg):
# do smth with new message
After that you can establish websocket connections:
client.establish_message_ws_connection(MyMessageListener())
client.establish_control_ws_connection(MyControlListener())
Each of those connections will be managed in a separate thread.
After successful connection to message websocket you can send to it:
client.post_message_via_socket(io_msg_instance)
Shell
0.7%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
.artifactignore
.gitignore
CHANGELOG-1.3.md
CHANGELOG-2.0.md
CONTRIBUTING
NOTICE
README.md
azure-pipelines.yml
bootstrap.sh
start.sh
status.sh
stop.sh
test.sh
utils.sh
View code
README.md
ioFog Demo
This repository demonstrates the capabilities of ioFog. It spins up the ioFog stack (Agent, Controller, and Connector) on a local machine in a Docker Compose environment. This basic ioFog stack setup constitutes a small, but fully configured Edge Compute Network (ECN).
Optionally, this demo also creates a sample application (microservices deployed on the ioFog stack).
This demo repository is used as supplementary materials for ioFog quickstart and ioFog tutorial guides.
Prerequisites
docs
gradle/wrapper
iofog-agent-client
iofog-agent-daemon
iofog-version-controller
packaging/iofog-agent
scripts
test
.gitignore
CHANGELOG.md
CONTRIBUTING
Dockerfile
NOTICE
README.md
azure-pipelines.yml
build.gradle
gradlew
gradlew.bat
rest-api.yaml
settings.gradle
Gopkg.lock
Gopkg.toml
Makefile
README.md
main.go
View code
README.md
iofog-scheduler
This is a custom kubernetes scheduler that is being used for ioFog ECN deployments.
About
No description, website, or topics provided.
Resources
Readme
Releases
No releases published
Packages 0
No packages published
Languages
Go
72.1%
Makefile
22.7%
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Pull requests
1
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
GitHub is where the world builds software
Millions of developers and companies build, ship, and maintain their software on GitHub — the largest and most advanced development platform in the world.
Sign up for free
Java Runtime (JRE) 8 or higher
Platforms Supported (Ubuntu Linux)
14.04 - Trusty Tahr
16.04 - Xenial Xerus
Connector Update:
sudo service iofog-connector stop
sudo apt-get install --only-upgrade iofog-connector
sudo service iofog-connector start
or
sudo service iofog-connector stop
sudo apt-get install --only-upgrade iofog-connector-dev (developer's version)
sudo service iofog-connector stop
Connector CLI
Connector Usage
$ iofog-connector
Command List
start -- Start connector service.
stop -- Stop connector service.
help -- Display usage information.
version – Display the software version and license information.
status – Display current status information about the software.
Start
service iofog-connector start
Stop
service iofog-connector stop
Help
"threads_per_core": "2",
"sockets": "1",
"cpu_op_modes": "32-bit, 64-bit",
"l3_cache": "8192K",
"model_name": "Intel(R) Core(TM) i7-2820QM CPU @ 2.30GHz"
}
LSPCI info (GET)
Returns parsed info of 'lspci' command
http://localhost:54331/hal/hwc/lspci
Response example
[
{
"device_class_id": "0600",
"device_vendor": "Intel Corporation ",
"device_vendor_id": "8086",
"device_class": "Host bridge ",
"device_id": "0104",
"revision_number": "09 ",
"bus_device_number": "00",
"bus_number": "00",
"device_name": "2nd Generation Core Processor Family DRAM Controller "
},
{
"device_class_id": "0604",
POST parameters description
All these parameters are optional. An empty request will return ALL the records.
"timeframestart" - time in mills
"timeframeend" - time in mills
"publishers" - array of publishers id
"level" - string log level ("CRITICAL", "FATAL", "ERROR", "WARN", "WARNING", "INFO", "DEBUG"), if ommited any level will be returned; all the higher levels for defined level are returned, e.g. for defined "ERROR" level "CRITICAL" and "FATAL" levels are also returned
"message" - string to search for (sql will be LIKE %message%)
"page" - number of page to return, default to 1
"orderby" - array of feild to order by (any of "publisher" "level" "message" "timestamp"), default to timestamp column only
"asc" - sort orfer - true/false- default to false
"pagesize" - page size; max number of logs in one page to return, default to 20
About
No description, website, or topics provided.
Resources
Readme
Releases
No releases published
Packages 0
No packages published
Contributors 6
Languages
Go
95.7%
Makefile
3.9%
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
'contentdata' : 'sdkjhwrtiy8wrtgSDFOiuhsrgowh4touwsdhsDFDSKJhsdkljasjklweklfjwhefiauhw98p328'
});
ioFogClient.wsSendMessage(ioMsg);
},
{
'onMessages':
console.log(messages);
},
'onMessageReceipt':
console.log(messageId + ' : ' + timestamp);
},
'onError':
console.log(error);
}
}
);
Open WS Control Channel to ioFog
ioFogClient.wsControlConnection(
{
'onNewConfigSignal':
console.log('New config is awaiting.');
make build install
iofogctl --help
iofogctl is installed in /usr/local/bin
Running Tests
Run project unit tests:
make test
This will output a JUnit compatible file into reports/TEST-iofogctl.xml that can be imported in most CI systems.
About
iofogctl is a CLI for the installation, configuration, and operation of ioFog Edge Compute Networks (ECNs)
iofog.org
Resources
Readme
Releases
25
tags
Packages 0
No packages published
Contributors 8
Languages
Go
82.9%
Shell
16.3%
Other
"uuid": "2a00",
"name": "Device Name",
"type": "org.bluetooth.characteristic.gap.device_name",
"properties": [
"read"
]
},
{
"uuid": "2a01",
"name": "Appearance",
"type": "org.bluetooth.characteristic.gap.appearance",
"properties": [
"read"
]
},
{
"uuid": "2a04",
"name": "Peripheral Preferred Connection Parameters",
"type": "org.bluetooth.characteristic.gap.peripheral_preferred_connection_parameters",
"properties": [
"read"
]
}
]
Read characteristic's value (GET)
This endpoint reads the value from specified characteristic cID for specified service sID and device dID/Mac Address
100.0%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Contributors 4
sergerad
baghbidi
Saeid Rezaei Baghbidi
rushminatorr
Rashmi Modhwadia
Xaoc000
Ian Martin
Languages
Go
92.0%
Makefile
6.5%
Other
1.5%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Message utils
Construct IoMessage from JSON(both json string and python dictionary are acceptable):
msg = IoMessage.from_json(json_msg)
IoMessage to JSON:
json_str = io_msg_instance.to_json()
Construct IoMessage from raw bytes:
msg = IoMessage.from_bytearray([0, 4, ...])
Pack IoMessage into bytearray:
msg_bytes = io_msg_instance.to_bytearray()
About
No description, website, or topics provided.
Resources
Readme
Releases
4
tags
Packages 0
No packages published
Contributors 6
Languages
Python
97.6%
Shell
2.4%
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
The ioFog demo requires one of the following systems and tools to be installed. The scripts in this demo do not install any of these tools, but they check for sufficient versions.
Supported operating systems:
Linux (kernel v3.10+)
macOS 10.12+
Requires tools:
Docker 1.10+ (installation instructions)
iofogctl 1.3.0+ (installation instructions)
Try ioFog - Simple Edge Compute Network
The main interaction with this demo repository is encapsulated into a set of simple scripts: start.sh, test.sh and stop.sh. Interactions with the ioFog components can be done using a command line interface available in all the services of the stack, or using a REST API.
Spin Up The ioFog Stack
Spin up the blank ioFog stack (Agent, Controller, and Connector) on the local machine.
./start.sh
Verify the iofog stack is provisioned correctly. The automated tests run a smoke test suite on the blank ioFog stack, testing basic operations.
./test.sh
You can also verify manually that the ioFog stack containers are correctly started.
docker ps --filter "name=iofog"
View code
README.md
The ioFog Agent product
Imagine a world where you can choose self-contained pieces of code (called microservices) and make them run anywhere you want at the push of a button. Where you can remotely control the code that is running on twenty iPhones in workers' pockets, thirty servers running in a factory building, and ten computers running in the trucks that ship your products... and you can do it all with the same single technology. Imagine a world where you move the processing close to where the data is happening, and where you can finally separate streams of information from the end applications that use them. This world will be brought to life by iofog, and a big part of the vision is the ioFog product that runs on the various computers.
This repository is the production code base for the x86 Linux version of the ioFog product.
ioFog is a service that runs constantly in the background on a Linux machine. It is the agent that turns a Linux computer into a piece of the iofog I/O compute fog.
There should be an ioFog code base for every processing platform that becomes part of the I/O compute fog. Network connectivity, process invocation, thread management, and other details of an ioFog will vary from platform to platform. The same ioFog principles apply to every version, but the implementation of the principles should match the native languages and structures best suited for the platform.
Status
Principles of an ioFog Agent:
Never go down
Respond immediately to the fog controller
Operate flawlessly when offline
Report status frequently and reliably
Execute instructions with no understanding of the bigger picture
Provide a high-performance message bus and local API
Enforce the configured resource consumption constraints strictly
Dockerfile
5.2%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Dismiss
develop
10
branches
4
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Option: -h, -?
GNU long option: --help
Version
Option: -v
GNU long option: --version
Connector API
Connector exposes API and it’s API where you have a set of identities. Fog Controller has the proper identity and it’s able to tell Connector “I want you to open up some connections”. Fog Controller uses Connector API to tell it to do and Connector simply replies whether it is successful or not successful.
ioFog Agent connects to Connectors and through connecting Connectors traffic is able to move between fog nodes. In addition Connector has the capability to open traffic to the outside world so the outside users can get route into fog node.
Connector offers two connectivity types:
1) The first type, called a public pipe, provides a way to securely access Fog software and data from anywhere on in the world. Connector punches through firewalls and NATed networks to perform automatic internetworking of the Fog.
Let’s describe what mapping is. Mapping is a way for describing a port opening, no matter whether you create a public or private pipe. It is an object that has an internal and an external port.
Endpoint: /api/v2/mapping/add
Method: POST
Header Content-Type: application/x-www-form-urlencoded
"maxconnections" means how many connection threads the ioFog agent will make with the Connector . You can have many users at the same time.
"heartbeatabsencethreshold" means if we don’t have a heartbeat signal from the ioFog agent within 20 sec, we kill that connection thread.
Response:
{
"status": "ok",
"id": "2ae8ff72-7447-47de-a4ec-123eb214d63e",
"port1": 32768,
"port2": 32769,
"passcode1": "0b403b65-c5a0-476f-92f5-ffc7ca0f85ef",
"device_vendor": "Intel Corporation ",
"device_vendor_id": "8086",
"device_class": "PCI bridge ",
"device_id": "0101",
"revision_number": "09 ",
"bus_device_number": "01",
"bus_number": "00",
"device_name": "Xeon E3-1200/2nd Generation Core Processor Family PCI Express Root Port "
},
{
"device_class_id": "0300",
"device_vendor": "Intel Corporation ",
"device_vendor_id": "8086",
"device_class": "VGA compatible controller ",
"device_id": "0126",
"revision_number": "09 ",
"bus_device_number": "02",
"bus_number": "00",
"device_name": "2nd Generation Core Processor Family Integrated Graphics Controller "
},
{
"device_class_id": "0780",
"device_vendor": "Intel Corporation ",
Dockerfile
0.4%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
},
'onError':
console.log(error);
}
}
);
About
No description, website, or topics provided.
Resources
Readme
Releases
5
tags
Packages 0
No packages published
Contributors 4
Languages
JavaScript
100.0%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
0.8%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Endpoint 9
Endpoint 10
Response
{
"data": "base64 encoded data"
}
Write value to characteristic (POST)
This endpoint writes value to specified characteristic cID for specified service sID and device dID/Mac Address
Endpoint 11
Endpoint 12
POST JSON raw body
"withresponse" isn't required (in case it's omitted the default value will be false)
{ "data" : "base64 encoded data" , "withresponse" : true }
Response
"Success writing data to characteristic id = cID"
Get list of descriptors (GET)
This endpoint returns a list of discovered descriptors for specified characteristic cID, service sID and device dID/Mac Address
Endpoint 13
Endpoint 14
Response
[
{
"uuid": "2901",
"name": "Characteristic User Description",
"type": "org.bluetooth.descriptor.gatt.characteristic_user_description"
},
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
When you are finished, tear down the ioFog stack and all services deployed on it.
./stop.sh
Build from local images
If you have a local image version of the Agent, Controller and Connector, you can chose to build the containers using those local images.
To do so, you will need a docker image for the Agent, the Connector and the Controller.
You can provide start.sh with an option for each local package you want to use.
Example
Command:
./start.sh -a gcr.io/focal-freedom-236620/agent:latest -cn gcr.io/focal-freedom-236620/connector:latest -ct gcr.io/focal-freedom-236620/controller:latest
ECN Status
./status.sh # Will show you all iofog-related containers currently running.
Interacting With The ioFog Stack - CLI
The simplest way to interact with Agent, Controller, and Connector deployed on a machine you have access to is to use the command line interface iofogctl.
iofogctl help
For the purpose of this demo, all ioFog components are spun up in separate Docker containers. The Controller's container is called iofog-controller.
Names for all the containers created in the demo are iofog-agent, iofog-controller and iofog-connector.
The initialization scripts used to setup the ioFog stack / ECN are using the CLI interface. Feel free to refer to these for more inspiration.
Full reference of the CLI is available at the iofogctl github repository:
https://github.com/eclipse-iofog/iofogctl/tree/v1.3.0#usage
Interacting With The ioFog Stack - REST API
Full reference of the REST API for all ioFog stack components is available at the ioFog website:
https://iofog.org/docs/1.0.0/controllers/rest-api.html
https://iofog.org/docs/1.0.0/agents/local-api.html
https://iofog.org/docs/1.0.0/connectors/api-reference.html
You can try using the REST API directly on your machine with the ioFog stack running.
Allow the most flexible and powerful processing element model possible
Be able to instantiate processing elements from any available source
Be able to communicate with any reachable fog controller
Allow processing elements to implement security and connectivity as they would natively
Ensure that complying with the local API is the only requirement placed on a processing element
Only shutdown or restart processing elements when requested or when absolutely necessary
Run only processing elements with verified source and integrity
Never allow a message to reach unauthorized processing elements
Only allow messages of the proper registered type to reach processing elements
Guarantee message source and order
IOFog Agent Setup
1. In order to install IOFog Agent, you need to have Java and Docker installed on your machine.
sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer
curl -fsSL https://get.docker.com/ | sh
2. Install IOFog Agent
curl -s https://packagecloud.io/install/repositories/iofog/iofog-agent/script.deb.sh | sudo bash
sudo apt-get install iofog-agent (release version)
or
sudo apt-get install iofog-agent-dev (developer's version)
Usage
1. To view help menu
sudo iofog-agent help
2. To view current status
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
Git stats
387
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
ecn
infrastructure
scripts
.gitignore
CONTRIBUTING
NOTICE
README.md
azure-pipelines.yml
bootstrap.sh
"passcode2": "",
"timestamp": 1542719018626
}
“id” is your ID for the mapping
"port1" - port that will be used by the ioFog agent
"port2" - port that will be by the Connector for public URL access
"passcode1” is used by the ioFog agent to establish a secure connection to the Connector. The Fog agent will receive the information through the Fog controller and tell you that you need to connect.
The Endpoint of public pipe connection is displayed below (Remove):
Endpoint: /api/v2/mapping/remove
Method: POST
Header Content-Type: application/x-www-form-urlencoded
Parameters: mappingid=e2454159-ed8c-4d00-a885-fdd87de811de
Response:
{
"status": "ok",
"id": "2ae8ff72-7447-47de-a4ec-123eb214d63e",
"timestamp": 1542719354334
}
2) The second type, called a private pipe, consumes bandwidth on the Connector but stabilizes connectivity between Fog nodes that can’t normally see each other.
Connector is available for 2 different ioFog agents talking to each other.
Endpoint: /api/v2/mapping/add
Method: POST
Header Content-Type: application/x-www-form-urlencoded
Response:
"device_vendor_id": "8086",
"device_class": "Communication controller ",
"device_id": "1c3a",
"revision_number": "04 ",
"bus_device_number": "16",
"bus_number": "00",
"device_name": "6 Series/C200 Series Chipset Family MEI Controller #1 "
},
{
"device_class_id": "0700",
"device_vendor": "Intel Corporation ",
"device_vendor_id": "8086",
"device_class": "Serial controller ",
"device_id": "1c3d",
"revision_number": "04 -p02 ",
"bus_device_number": "16",
"bus_number": "00",
"device_name": "6 Series/C200 Series Chipset Family KT Controller "
},
{
"device_class_id": "0200",
"device_vendor": "Intel Corporation ",
"device_vendor_id": "8086",
"device_class": "Ethernet controller ",
"device_id": "1502",
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
{
"uuid": "2900",
"name": "Characteristic Extended Properties",
"type": "org.bluetooth.descriptor.gatt.characteristic_extended_properties"
}
]
Read the value from descriptor (GET)
This endpoint reads the value from specified descriptor dsID for specified characteristic cID, service sID and device dID/Mac Address
Endpoint 15
Endpoint 16
Response
{
"data": "base64 encoded data"
}
Subscribe to characteristic's notify event (GET)
This endpoint sets notify property to true for specified characteristic's cID for specified service sID and device dID/Mac Address and returns url where buffered values can be picked up. If timeout parameter is specified (in millisecond) it'll be applied, otherwise RESTBlue will use the default value 1 min (60000 milliseconds).
This timeout is specified to handle usecase when device is still connected and advertising, but RESTBlue stopped receiving any data on notify subscription.
When picking up buffered notify data:
If RESTBlue doesn't receive any data for more than specified timeout it will unsubscribe and remove notify buffer url and return 500 status code with error:TIMEOUT_DATA.
In case if device disconnected while being subscribed the response will be OK with device_disconnected:true and last batch of data.
Endpoint 17
Endpoint 18
Response
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
curl --url 'http://0.0.0.0:51121/api/v3/status'
Try ioFog - Tutorial Application Deployed On ioFog
Apart from creating just the ioFog stack, we can also deploy an ioFog application on the stack. Here we demonstrate it on the tutorial application from the ioFog website.
First, create all services for a tutorial ioFog application. You don't have to start the iofog stack manually, it will be created if necessary.
./start.sh tutorial
When you are done with the tutorial, you can tear down the sample application together with the ioFog stack.
./stop.sh
if you only wish to delete the tutorial application:
iofogctl delete application tutorial
Structure Of This Repository
* services # Service Dockerfiles and customization files
- iofog
+ iofog-agent # Agent service files - part of the iofog stack
+ iofog-connector # Connector service files - part of the iofog stack
+ iofog-controller # Controller service files - part of the iofog stack
* init
- iofog # plain ioFog stack initialization yaml file
- tutorial # tutorial initialization yaml file
* test
+ conf # generated test configuration files
* azure-pipelines.yml
* docker-compose-iofog.yml
* docker-compose-tutorial.yml
* docker-compose-test.yml
* start.sh
* stop.sh
sudo iofog-agent status
3. To view version and license
sudo iofog-agent version
4. To view current configuration
sudo iofog-agent info
5. Provision iofog for use
sudo iofog-agent provision ABCDWXYZ
Logs
Log files are located at '/var/log/iofog-agent'
System Requirements (Recommended)
Processor: 64 bit Dual Core or better
RAM: 1 GB minimum
Hard Disk: 5 GB minimum
Java Runtime (JRE) 8 or higher
Docker 1.10 or higher
Linux kernel 3.10 or higher
Platforms Supported (Ubuntu Linux)
14.04 - Trusty Tahr
16.04 - Xenial Xerus
- IOFog Agent Update:
sudo service iofog-agent stop
sudo apt-get install --only-upgrade iofog-agent
sudo service iofog-agent start
or
sudo service iofog-agent stop
deploy.sh
destroy.sh
View code
README.md
Eclipse ioFog Platform
The Eclipse ioFog Platform project provides means to spin up and deploy minimal infrastructure. Currently, we demonstrate how to achieve this on GKE (Google Kubernetes Engine), although since we are using
Terraform under the covers you can easily extend/contribute to support your preferred
cloud infrastructure provider.
Required Tools
In order to setup the infrastructure we will need the following tools:
Terraform (version 0.12.*, installation instructions)
GCloud SDK (quickstart guide)
Kubectl (installation instructions)
To then install a complete EdgeCompute Network (ECN), we will also need iofogctl:
iofogctl (installation instructions)
We don't have to install these tools manually now. Later in the process, we will use a script to download those dependencies and initialise terraform variable file.
Provided script ./bootstrap.sh will download those dependencies, see details below.
Required Credentials
GCP Service Account
First, we need to setup gcloud with our project. We can either establish a service account or use a personal account with GCP. In both cases, the minimal set of IAM roles required is:
Compute Admin
Kubernetes Engine Admin
Service Account User
{
"status": "ok",
"id": "e2454159-ed8c-4d00-a885-fdd87de811de",
"port1": 32770,
"port2": 32771,
"passcode1": "3dbd413c-10e9-4e40-a9cb-f4b8fb2b8b56",
"passcode2": "7f4eb783-c2ab-4517-8aaf-c8395054193e",
"timestamp": 1542719231127
}
The parameters description is the same as is described above for a public pipe.
Here “port1" will come out in "port2", and vice versa. Without the passcodes you will be immediately rejected.
The Endpoint of private pipe connection is displayed below (Remove):
Endpoint: /api/v2/mapping/remove
Method: POST
Header Content-Type: application/x-www-form-urlencoded
Parameters: mappingid=e2454159-ed8c-4d00-a885-fdd87de811de
Response:
{
"status": "ok",
"id": "2ae8ff72-7447-47de-a4ec-123eb214d63e",
"timestamp": 1542719354334
}
! In Public mode the URL is generated as follows:
where
{protocol} is either http:// or https://
"revision_number": "04 ",
"bus_device_number": "19",
"bus_number": "00",
"device_name": "82579LM Gigabit Network Connection "
},
{
"device_class_id": "0c03",
"device_vendor": "Intel Corporation ",
"device_vendor_id": "8086",
"device_class": "USB controller ",
"device_id": "1c2d",
"revision_number": "04 -p20 ",
"bus_device_number": "1a",
"bus_number": "00",
"device_name": "6 Series/C200 Series Chipset Family USB Enhanced Host Controller #2 "
},
{
"device_class_id": "0403",
"device_vendor": "Intel Corporation ",
"device_vendor_id": "8086",
"device_class": "Audio device ",
"device_id": "1c20",
"revision_number": "04 ",
Learn more
Accept
Reject
Save preferences
{
"message": "Notification is turned ON for characteristic uuid = CH_ID ",
"url": "notify_buffer/BUFFER_GENERATEDID"
}
Check status of Bluetooth Adapter (GET)
This endpoint return the status of Bluetooth Adapter: if it'spowered on/off (true/false).
Endpoint 19
http://localhost:10500/status
Response
{
"bluetooth_adapter_powered_on": true/false
}
Parameters for endpoint 5-18:
scan=true : This parameter will tell REST Blue to stop scanning, clean up previously stored devices and start scan again and look for specified in the url device.
drca=5 : Device reconnect attempts. Default value = 5 attempts. This parameter specifies how many attempts REST Blue should make to reconnect to device in case it lost connection while being subscribed to data notifications.
For Endpoints number 5-18 all the operations will be performed with previously scanned devices (the scanning starts upon container's start).
For Endpoints numbers 6, 8, 10, 12, 14, 16, 18 (basically the ones with mac parameter to identify device) if add scan=true parameter to url, new device can be searched.
About
No description, website, or topics provided.
Resources
Readme
Releases
No releases published
* test.sh
* utils.sh
About
No description, website, or topics provided.
Resources
Readme
Releases
13
ioFog Demo v2.0.2
Latest
Oct 27, 2020
+ 12 releases
Packages 0
No packages published
Contributors 9
Languages
Shell
100.0%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
sudo apt-get install --only-upgrade iofog-agent-dev (developer's version)
sudo service iofog-agent stop
About
No description, website, or topics provided.
Resources
Readme
Releases
27
Release v2.0.2
Latest
Oct 22, 2020
+ 26 releases
Packages 0
No packages published
Contributors 19
+ 8 contributors
Languages
Java
98.8%
Other
1.2%
© 2020 GitHub, Inc.
Terms
To login with a service account and setup our project, download the service account key file from GCP. Further details on how to setup a service account are available in the GCP documentation.
You can test authenticate gcloud with the newly created service account.
gcloud auth activate-service-account --key-file=service-account-key.json
If you no longer have the service account key file, it is possible to generate another key using gcloud or using the GCP console.
Packet API Token
The platform tools also supports deployment of agent nodes on packet. This step is entirely optional and is it possible to provide our own machines for ioFog Agents instead.
We will need Packet token to setup packet provider on terraform. First we have to upload out ssh key that will be used by automation to add to newly created instances.
Next, retrieve a Packet auth token and project ID from Packet website and save it for later.
Usage
Bootstrap Platform Tools
We can then run bootstrap to install all the required tools. It is possible to skip the installation step if we opt to instead provide the tools ourselves, please consult ./bootsrap.sh --help for details.
./bootstrap.sh --gcloud-service-account service-account-key.json
Modify Configuration File
First create a copy of the variables template file.
cp infrastructure/gcp/template.tfvars user.tfvars
Now we have to edit the user.tfvars file according to our credentials and desired infrastructure. There are three main sections in the file: general variables, agents list and packet variables. Let's start by modifying the following general variables:
Variables
Description
google_application_credentials
Path to the service account key file from Google Cloud Platform Setup
gcp_service_account
{address} is either IP address or domain name
In iofog-connector.config file
When "dev": true, it's http connection.
When "dev": false, it's https connection.
About
No description, website, or topics provided.
Resources
Readme
Releases
9
v1.2.0
Latest
Jul 12, 2019
+ 8 releases
Packages 0
No packages published
Contributors 13
+ 2 contributors
Languages
Java
95.4%
Shell
3.4%
Dockerfile
"bus_device_number": "1b",
"bus_number": "00",
"device_name": "6 Series/C200 Series Chipset Family High Definition Audio Controller "
},
{
"device_class_id": "0604",
"device_vendor": "Intel Corporation ",
"device_vendor_id": "8086",
"device_class": "PCI bridge ",
"device_id": "1c10",
"revision_number": "b4 ",
"bus_device_number": "1c",
"bus_number": "00",
"device_name": "6 Series/C200 Series Chipset Family PCI Express Root Port 1 "
},
{
"device_class_id": "0604",
"device_vendor": "Intel Corporation ",
"device_vendor_id": "8086",
"device_class": "PCI bridge ",
"device_id": "1c12",
"revision_number": "b4 ",
"bus_device_number": "1c",
"bus_number": "00",
Packages 0
No packages published
Contributors 3
Languages
JavaScript
99.8%
Shell
0.2%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Name of the GCP service account
project_id
GCP project ID
environment
Name of the infrastructure (to identify the resources on GCP and Packet)
gcp_region
Region if GCP infrastructure
packet_auth_token
Packet API key from Packet Setup (Optional) (Optional)
packet_project_id
Packet project ID (Optional)
packet_operating_system
Packet operating system of all agents (Optional)
packet_facility
Packet regions (called facilities) (Optional)
packet_count_x86
Packet number of x86 instances (Optional)
packet_plan_x86
Packet plan of x86 instances (Optional)
packet_count_arm
Packet number of arm instances (Optional)
packet_plan_arm
Packet plan of arm instances (Optional)
Deploy and Destroy Infrastructure
To deploy the new infrastructure, run:
1.2%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
"device_name": "6 Series/C200 Series Chipset Family PCI Express Root Port 2 "
},
{
"device_class_id": "0604",
"device_vendor": "Intel Corporation ",
"device_vendor_id": "8086",
"device_class": "PCI bridge ",
"device_id": "1c14",
"revision_number": "b4 ",
"bus_device_number": "1c",
"bus_number": "00",
"device_name": "6 Series/C200 Series Chipset Family PCI Express Root Port 3 "
},
{
"device_class_id": "0604",
"device_vendor": "Intel Corporation ",
"device_vendor_id": "8086",
"device_class": "PCI bridge ",
"device_id": "1c16",
"revision_number": "b4 ",
"bus_device_number": "1c",
"bus_number": "00",
"device_name": "6 Series/C200 Series Chipset Family PCI Express Root Port 4 "
},
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Accept
Reject
Save preferences
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
./deploy.sh user.tfvars
Interact With Newly Deployed Infrastructure
Once the infrastructure is successfully deployed, we should be able to interact with the Kubernetes cluster. Terraform automatically setup our kubeconfig for us. To use the newly created Kubernetes cluster, we need to define KUBECONFIG environment variable to point to a kubeconfig file created by Terraform. The kubeconfig file is always in infrastructure/gcp/<environment>.kubeconfig, where <environemnt> corresponds to the settings passed in our user.tfvars file.
export KUBECONFIG="$PWD/infrastructure/gcp/<environment>.kubeconfig"
Should we need to retrieve kubeconfig for our new cluster anytime in the future or from another machine, we can use gcloud container clusters get-credentials environment --region gcp_region, where environment and gcp_region refer to previously described variables.
Terraform generated ecn.yaml file according to iofogctl specification. Most important are kubeconfig and keyfile parameters. The kubeconfig variable is the same as in Interact With Newly Deployed Infrastructure. keyfile refers to a private SSH key to access the given agent. For Packet agents, these must be uploaded to Packet according to Packet Setup (Optional). This is also where we can add additional agents (outside of the new infrastructure).
Destroy Infrastructure
To destroy the infrastructure (and all deployed ECNs), run:
./destroy.sh user.tfvars
Make sure the tfvars file is the same for both deploy and destroy invocations.
Helpful Commands
Login to gcloud: gcloud auth login
Kubeconfig for gke cluster: gcloud container clusters get-credentials <<CLUSTER_NAME>> --region <<REGION>>
Delete a particular terraform resource: terraform destroy -target=null_resource.iofog -var-file=vars.tfvars -auto-approve
Terraform Output terraform output or terraform output -module=packet_edge_nodes
About
No description, website, or topics provided.
Resources
Readme
Releases
4
ioFog Platform 1.2.0
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
{
"device_class_id": "0604",
"device_vendor": "Intel Corporation ",
"device_vendor_id": "8086",
"device_class": "PCI bridge ",
"device_id": "1c1e",
"revision_number": "b4 ",
"bus_device_number": "1c",
"bus_number": "00",
"device_name": "6 Series/C200 Series Chipset Family PCI Express Root Port 8 "
},
{
"device_class_id": "0c03",
"device_vendor": "Intel Corporation ",
"device_vendor_id": "8086",
"device_class": "USB controller ",
"device_id": "1c26",
"revision_number": "04 -p20 ",
"bus_device_number": "1d",
"bus_number": "00",
"device_name": "6 Series/C200 Series Chipset Family USB Enhanced Host Controller #1 "
},
{
"device_class_id": "0601",
Latest
Jul 16, 2019
+ 3 releases
Packages 0
No packages published
Contributors 7
Languages
Shell
69.8%
HCL
30.2%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
"device_vendor": "Intel Corporation ",
"device_vendor_id": "8086",
"device_class": "ISA bridge ",
"device_id": "1c4f",
"revision_number": "04 ",
"bus_device_number": "1f",
"bus_number": "00",
"device_name": "QM67 Express Chipset Family LPC Controller "
},
{
"device_class_id": "0104",
"device_vendor": "Intel Corporation ",
"device_vendor_id": "8086",
"device_class": "RAID bus controller ",
"bus_device_number": "1f",
"bus_number": "00",
"revision_number": "04 "
},
{
"device_class_id": "0c05",
"device_vendor": "Intel Corporation ",
"device_vendor_id": "8086",
"device_class": "SMBus ",
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
"device_id": "1c22",
"revision_number": "04 ",
"bus_device_number": "1f",
"bus_number": "00",
"device_name": "6 Series/C200 Series Chipset Family SMBus Controller "
},
{
"device_class_id": "0300",
"device_vendor": "NVIDIA Corporation ",
"device_vendor_id": "10de",
"device_class": "VGA compatible controller ",
"bus_device_number": "00",
"bus_number": "01",
"revision_number": "a1 "
},
{
"device_class_id": "0403",
"device_vendor": "NVIDIA Corporation ",
"device_vendor_id": "10de",
"device_class": "Audio device ",
"device_id": "0bea",
"revision_number": "a1 ",
"bus_device_number": "00",
"bus_number": "01",
"device_name": "GF108 High Definition Audio Controller "
},
{
"device_class_id": "0280",
"device_vendor": "Intel Corporation ",
"device_vendor_id": "8086",
"device_class": "Network controller ",
"device_id": "422b",
"revision_number": "35 ",
"bus_device_number": "00",
"bus_number": "03",
"device_name": "Centrino Ultimate-N 6300 "
},
{
"device_class_id": "0c03",
"device_vendor": "NEC Corporation ",
"device_vendor_id": "1033",
"device_class": "USB controller ",
"device_id": "0194",
"revision_number": "04 -p30 ",
"bus_device_number": "00",
"bus_number": "0a",
"device_name": "uPD720200 USB 3.0 Host Controller "
},
{
"device_class_id": "0c00",
"device_vendor": "O2 Micro, Inc. ",
"device_vendor_id": "1217",
"device_class": "FireWire (IEEE 1394) ",
"device_id": "11f7",
"revision_number": "05 -p10 ",
"bus_device_number": "00",
"bus_number": "0b",
"device_name": "OZ600 1394a-2000 Controller "
},
{
"device_class_id": "0805",
"device_vendor": "O2 Micro, Inc. ",
"device_vendor_id": "1217",
"device_class": "SD Host controller ",
"device_id": "8320",
"revision_number": "05 -p01 ",
"bus_device_number": "00",
"bus_number": "0b",
"device_name": "OZ600RJ1/OZ900RJ1 SD/MMC Card Reader Controller "
},
{
"device_class_id": "0180",
"device_vendor": "O2 Micro, Inc. ",
"device_vendor_id": "1217",
"device_class": "Mass storage controller ",
"device_id": "8330",
"revision_number": "05 ",
"bus_device_number": "00",
"bus_number": "0b",
"device_name": "OZ600 MS/xD Controller "
}
]
LSUSB info (GET)
Returns parsed info of 'lsusb' command
http://localhost:54331/hal/hwc/lsusb
Response example
[
{
"bus_number": "002",
"device_id": "5802",
"device_bus_number": "004",
"manufacture_id": "0a5c",
"manufacture_device_name": "Broadcom Corp. BCM5880 Secure Applications Processor with fingerprint touch sensor"
},
{
"bus_number": "002",
"device_id": "0a44",
"device_bus_number": "003",
"manufacture_id": "046d",
"manufacture_device_name": "Logitech, Inc. Headset H390"
},
{
"bus_number": "002",
"device_id": "0024",
"device_bus_number": "002",
"manufacture_id": "8087",
"manufacture_device_name": "Intel Corp. Integrated Rate Matching Hub"
},
{
"bus_number": "002",
"device_id": "0002",
"device_bus_number": "001",
"manufacture_id": "1d6b",
"manufacture_device_name": "Linux Foundation 2.0 root hub"
},
{
"bus_number": "004",
"device_id": "0003",
"device_bus_number": "001",
"manufacture_id": "1d6b",
"manufacture_device_name": "Linux Foundation 3.0 root hub"
},
{
"bus_number": "003",
"device_id": "c31d",
"device_bus_number": "003",
"manufacture_id": "046d",
"manufacture_device_name": "Logitech, Inc. Media Keyboard K200"
},
{
"bus_number": "003",
"device_id": "c05b",
"device_bus_number": "002",
"manufacture_id": "046d",
"manufacture_device_name": "Logitech, Inc. M-U0004 810-001317 [B110 Optical USB Mouse]"
},
{
"bus_number": "003",
"device_id": "0002",
"device_bus_number": "001",
"manufacture_id": "1d6b",
"manufacture_device_name": "Linux Foundation 2.0 root hub"
},
{
"bus_number": "001",
"device_id": "0024",
"device_bus_number": "002",
"manufacture_id": "8087",
"manufacture_device_name": "Intel Corp. Integrated Rate Matching Hub"
},
{
"bus_number": "001",
"device_id": "0002",
"device_bus_number": "001",
"manufacture_id": "1d6b",
"manufacture_device_name": "Linux Foundation 2.0 root hub"
}
]
LSHW info (GET)
Returns parsed info of 'lshw' command
http://localhost:54331/hal/hwc/lshw
Response example
{
"id": "machine_id",
"handle": "handle_string",
"configuration": {
"boot": "normal",
"chassis": "laptop",
"uuid": "machine_uuid"
},
"description": "Laptop",
"class": "system",
"product": "Precision M4600",
"vendor": "Dell Inc.",
"claimed": true,
"children": [
{
"claimed": true,
"id": "core",
"serial": "serial_string",
"vendor": "Dell Inc.",
"children": [
{
"id": "firmware",
"vendor": "Dell Inc.",
"description": "BIOS",
"class": "memory",
"date": "12/26/2013",
"size": 65536,
"capacity": 2031616,
"claimed": true,
"capabilities": {
"int13floppy720": "3.5\" 720KB floppy",
"shadowing": "BIOS shadowing",
"acpi": "ACPI",
"int9keyboard": "i8042 keyboard controller",
"int13floppy1200": "5.25\" 1.2MB floppy",
"upgrade": "BIOS EEPROM can be upgraded",
"int13floppy2880": "3.5\" 2.88MB floppy",
"pci": "PCI bus",
"edd": "Enhanced Disk Drive extensions",
"bootselect": "Selectable boot path",
"int14serial": "INT14 serial line control",
"int17printer": "INT17 printer control",
"biosbootspecification": "BIOS boot specification",
"cdboot": "Booting from CD-ROM/DVD",
"int5printscreen": "Print Screen key"
},
"physid": "0",
"version": "A16",
"units": "bytes"
},
{
"id": "cpu",
"children": [
{
"id": "id_string",
"configuration": {
"level": "1"
},
"description": "L1 cache",
"class": "memory",
"slot": "L1-Cache",
"handle": "handle_string",
"size": 32768,
"capacity": 32768,
"claimed": true,
"capabilities": {
"write-back": "Write-back",
"unified": "Unified cache",
"internal": "Internal"
},
"physid": "5",
"units": "bytes"
},
{
"id": "id_string",
"configuration": {
"level": "2"
},
"description": "L2 cache",
"class": "memory",
"slot": "L2-Cache",
"handle": "handle_string",
"size": 262144,
"capacity": 262144,
"claimed": true,
"capabilities": {
"varies": "Varies With Memory Address",
"unified": "Unified cache",
"internal": "Internal"
},
"physid": "6",
"units": "bytes"
},
{
"id": "id_string",
"configuration": {
"level": "3"
},
"description": "L3 cache",
"class": "memory",
"slot": "L3-Cache",
"handle": "handle_string",
"size": 8388608,
"capacity": 8388608,
"claimed": true,
"capabilities": {
"varies": "Varies With Memory Address",
"unified": "Unified cache",
"internal": "Internal"
},
"physid": "7",
"units": "bytes"
}
],
"handle": "handle_string",
"configuration": {
"cores": "4",
"threads": "8",
"enabledcores": "4"
},
"description": "CPU",
"class": "processor",
"product": "product_string",
"vendor": "Intel Corp.",
"size": 1496319000,
"capacity": 4000000000,
"claimed": true,
"capabilities": {
"nx": "no-execute bit (NX)",
"cx8": "compare and exchange 8-byte",
"aperfmperf": true,
"acpi": "thermal control (ACPI)",
"sse2": "streaming SIMD extensions (SSE2)",
"ida": true,
"tm": "thermal interrupt and status",
"pni": true,
"de": "debugging extensions",
"epb": true,
"msr": "model-specific registers",
"ss": "self-snoop",
"lahf_lm": true,
"sse": "streaming SIMD extensions (SSE)",
"sse4_2": true,
"bts": true,
"arat": true,
"cpufreq": "CPU Frequency scaling",
"mce": "machine check exceptions",
"pbe": "pending break event",
"arch_perfmon": true,
"rep_good": true,
"vpid": true,
"mca": "machine check architecture",
"pts": true,
"vmx": true,
"fpu": "mathematical co-processor",
"ssse3": true,
"eagerfpu": true,
"vme": "virtual mode extensions",
"ht": "HyperThreading",
"fxsr": "fast floating point save/restore",
"monitor": true,
"aes": true,
"syscall": "fast system calls",
"avx": true,
"tsc_deadline_timer": true,
"dts": "debug trace and EMON store MSRs",
"dtherm": true,
"xsave": true,
"pge": "page global enable",
"cmov": "conditional move instruction",
"constant_tsc": true,
"vnmi": true,
"apic": "on-chip advanced programmable interrupt controller (APIC)",
"pse36": "36-bit page size extensions",
"tpr_shadow": true,
"pcid": true,
"mmx": "multimedia extensions (MMX)",
"dtes64": true,
"pclmulqdq": true,
"sep": "fast system calls",
"pln": true,
"pdcm": true,
"flexpriority": true,
"xtpr": true,
"mtrr": "memory type range registers",
"x86-64": "64bits extensions (x86-64)",
"pat": "page attribute table",
"clflush": true,
"pae": "4GB+ memory addressing (Physical Address Extension)",
"ds_cpl": true,
"xsaveopt": true,
"wp": true,
"est": true,
"ept": true,
"smx": true,
"tm2": true,
"nonstop_tsc": true,
"pse": "page size extensions",
"nopl": true,
"xtopology": true,
"popcnt": true,
"x2apic": true,
"sse4_1": true,
"cx16": true,
"rdtscp": true,
"tsc": "time stamp counter",
"fpu_exception": "FPU exceptions reporting",
"pebs": true
},
"clock": 100000000,
"width": 64,
"slot": "CPU 1",
"physid": "4",
"serial": "serial_string",
"units": "Hz",
"version": "Intel(R) Core(TM) i7-2820QM CPU @ 2.30GH",
"businfo": "bus_info_sting"
},
{
"claimed": true,
"id": "memory",
"children": [
{
"id": "id_string",
"handle": "handle_string",
"description": "SODIMM DDR3 Synchronous 1333 MHz (0,8 ns)",
"class": "memory",
"product": "product_string",
"vendor": "Hynix/Hyundai",
"size": 4294967296,
"claimed": true,
"clock": 1333000000,
"width": 64,
"slot": "slot_string",
"physid": "0",
"serial": "serial_string",
"units": "bytes"
},
{
Maksim Chepelev is a Committer for Eclipse ioFog | projects.eclipse.org
"id": "id_string",
"handle": "handle_string",
"description": "SODIMM DDR3 Synchronous 1333 MHz (0,8 ns)",
"class": "memory",
"product": "product_string",
"vendor": "Samsung",
"size": 4294967296,
"claimed": true,
"clock": 1333000000,
"width": 64,
"slot": "slot_string",
"physid": "1",
"serial": "serial_string",
"units": "bytes"
},
{
"id": "id_string",
"handle": "handle_string",
"description": "SODIMM DDR3 Synchronous 1333 MHz (0,8 ns)",
"class": "memory",
"product": "product_string",
"vendor": "Hynix/Hyundai",
"size": 4294967296,
"claimed": true,
"clock": 1333000000,
"width": 64,
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Maksim Chepelev is a Committer for Eclipse ioFog
Maksim Chepelev is a Committer for Eclipse ioFog
User: Maksim ChepelevProject: Eclipse ioFogType: CommitterStatus: InactiveActive: Tuesday, April 2, 2019 to Friday, May 8, 2020
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Pascal Rapicault is a Mentor for ioFog | projects.eclipse.org
"slot": "slot_string",
"physid": "2",
"serial": "serial_string",
"units": "bytes"
},
{
"id": "id_string",
"handle": "handle_sting",
"description": "SODIMM DDR3 Synchronous 1333 MHz (0,8 ns)",
"class": "memory",
"product": "M471B5273CH0-CH9",
"vendor": "Samsung",
"size": 4294967296,
"claimed": true,
"clock": 1333000000,
"width": 64,
"slot": "slot_string",
"physid": "3",
"serial": "serial_string",
"units": "bytes"
}
],
"class": "memory",
"description": "System Memory",
Jee Won Park is a Committer for Eclipse ioFog | projects.eclipse.org
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Pascal Rapicault is a Mentor for ioFog
Pascal Rapicault is a Mentor for ioFog
User: Pascal RapicaultProject: Eclipse ioFogType: MentorStatus: ActiveActive: Wednesday, September 21, 2016
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
"slot": "System board or motherboard",
"physid": "3f",
"handle": "handle_string",
"size": 17179869184,
"units": "bytes"
},
{
"id": "pci",
"children": [
{
"id": "pci_id_string",
"children": [
{
"id": "display",
"handle": "handle_string",
"configuration": {
"latency": "0",
"driver": "nouveau"
},
"description": "VGA compatible controller",
"class": "display",
"product": "product_string",
"vendor": "NVIDIA Corporation",
"claimed": true,
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Jee Won Park is a Committer for Eclipse ioFog
Jee Won Park is a Committer for Eclipse ioFog
User: Jee Won ParkProject: Eclipse ioFogType: CommitterStatus: InactiveActive: Tuesday, April 2, 2019 to Friday, May 8, 2020
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
Maryna Lipnitskaya is a Committer for Eclipse ioFog | projects.eclipse.org
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
"clock": 33000000,
"width": 64,
"capabilities": {
"bus_master": "bus mastering",
"vga_controller": true,
"pciexpress": "PCI Express",
"cap_list": "PCI capabilities listing",
"pm": "Power Management",
"msi": "Message Signalled Interrupts",
"rom": "extension ROM"
},
"physid": "0",
"version": "a1",
"businfo": "bus_info_string"
},
{
"id": "multimedia",
"handle": "handle_string",
"configuration": {
"latency": "0",
"driver": "snd_hda_intel"
},
"description": "Audio device",
"class": "multimedia",
"product": "product_string",
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Maryna Lipnitskaya is a Committer for Eclipse ioFog
Maryna Lipnitskaya is a Committer for Eclipse ioFog
User: Maryna LipnitskayaProject: Eclipse ioFogType: CommitterStatus: InactiveActive: Tuesday, April 2, 2019 to Friday, May 8, 2020
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
"vendor": "NVIDIA Corporation",
"claimed": true,
"clock": 33000000,
"width": 32,
"capabilities": {
"pm": "Power Management",
"bus_master": "bus mastering",
"msi": "Message Signalled Interrupts",
"cap_list": "PCI capabilities listing",
"pciexpress": "PCI Express"
},
"physid": "0.1",
"version": "a1",
"businfo": "bus_info_string"
}
],
"handle": "handle_string",
"configuration": {
"driver": "pcieport"
},
"description": "PCI bridge",
"class": "bridge",
"product": "product_string",
"vendor": "Intel Corporation",
"claimed": true,
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
"clock": 33000000,
"width": 32,
"capabilities": {
"bus_master": "bus mastering",
"pciexpress": "PCI Express",
"cap_list": "PCI capabilities listing",
"pm": "Power Management",
"normal_decode": true,
"pci": true,
"msi": "Message Signalled Interrupts"
},
"physid": "1",
"version": "09",
"businfo": "bus_info_string"
},
{
"id": "display",
"handle": "handle_string",
Sergey Valevich is a Committer for Eclipse ioFog | projects.eclipse.org
"configuration": {
"latency": "0",
"driver": "i915"
},
"description": "VGA compatible controller",
"class": "display",
"product": "2nd Generation Core Processor Family Integrated Graphics Controller",
"vendor": "Intel Corporation",
"claimed": true,
"clock": 33000000,
"width": 64,
"capabilities": {
"bus_master": "bus mastering",
"vga_controller": true,
"cap_list": "PCI capabilities listing",
"pm": "Power Management",
"msi": "Message Signalled Interrupts",
"rom": "extension ROM"
},
"physid": "2",
"version": "09",
"businfo": "bis_info_string"
},
{
"id": "id_string",
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Sergey Valevich is a Committer for Eclipse ioFog
Sergey Valevich is a Committer for Eclipse ioFog
User: Sergey ValevichProject: Eclipse ioFogType: CommitterStatus: InactiveActive: Tuesday, April 2, 2019 to Friday, May 8, 2020
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
"handle": "handle_string",
"configuration": {
"latency": "0",
"driver": "mei_me"
},
"description": "Communication controller",
"class": "communication",
"product": "6 Series/C200 Series Chipset Family MEI Controller #1",
"vendor": "Intel Corporation",
"claimed": true,
"clock": 33000000,
"width": 64,
"capabilities": {
"pm": "Power Management",
"msi": "Message Signalled Interrupts",
"cap_list": "PCI capabilities listing",
"bus_master": "bus mastering"
},
"physid": "16",
"version": "04",
"businfo": "bus_info_string"
},
Eugene Pankov is a Committer for Eclipse ioFog | projects.eclipse.org
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Darya Busel is a Committer for Eclipse ioFog | projects.eclipse.org
{
"id": "id_string",
"handle": "handle_string",
"configuration": {
"latency": "0",
"driver": "serial"
},
"description": "Serial controller",
"class": "communication",
"product": "6 Series/C200 Series Chipset Family KT Controller",
"vendor": "Intel Corporation",
"claimed": true,
"clock": 66000000,
"width": 32,
"capabilities": {
"16550": true,
"pm": "Power Management",
"bus_master": "bus mastering",
"msi": "Message Signalled Interrupts",
"cap_list": "PCI capabilities listing"
},
"physid": "16.3",
"version": "04",
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Eugene Pankov is a Committer for Eclipse ioFog
Eugene Pankov is a Committer for Eclipse ioFog
User: Eugene PankovProject: Eclipse ioFogType: CommitterStatus: InactiveActive: Tuesday, April 2, 2019 to Friday, May 8, 2020
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Darya Busel is a Committer for Eclipse ioFog
Darya Busel is a Committer for Eclipse ioFog
User: Darya BuselProject: Eclipse ioFogType: CommitterStatus: InactiveActive: Tuesday, April 2, 2019 to Friday, May 8, 2020
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
"businfo": "bus_info_string"
},
{
"id": "network",
"handle": "handle_string",
"configuration": {
"multicast": "yes",
"latency": "0",
"port": "twisted pair",
"link": "no",
"broadcast": "yes",
"firmware": "0.13-3",
"driverversion": "3.2.6-k",
"autonegotiation": "on",
"driver": "e1000e"
},
"description": "Ethernet interface",
"class": "network",
"product": "82579LM Gigabit Network Connection",
"vendor": "Intel Corporation",
Andrew Milson is a Committer for Eclipse ioFog | projects.eclipse.org
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
"capacity": 1000000000,
"claimed": true,
"logicalname": "log_name_string",
"clock": 33000000,
"width": 32,
"capabilities": {
"100bt-fd": "100Mbit/s (full duplex)",
"10bt": "10Mbit/s",
"100bt": "100Mbit/s",
"pm": "Power Management",
"msi": "Message Signalled Interrupts",
"bus_master": "bus mastering",
"ethernet": true,
"10bt-fd": "10Mbit/s (full duplex)",
"physical": "Physical interface",
"autonegotiation": "Auto-negotiation",
"tp": "twisted pair",
"cap_list": "PCI capabilities listing",
"1000bt-fd": "1Gbit/s (full duplex)"
},
"physid": "physid_string",
"serial": "serial_string",
"units": "bit/s",
"version": "04",
"businfo": "bus_info_string"
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Andrew Milson is a Committer for Eclipse ioFog
Andrew Milson is a Committer for Eclipse ioFog
User: Andrew MilsonProject: Eclipse ioFogType: CommitterStatus: InactiveActive: Tuesday, April 2, 2019 to Friday, May 8, 2020
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
},
{
"id": "id_string",
"children": [
{
"id": "id_string",
"handle": "handle_string",
"configuration": {
"speed": "480Mbit/s",
"slots": "3",
"driver": "hub"
},
"businfo": "bus_indo_srting",
"class": "bus",
"product": "EHCI Host Controller",
"vendor": "Linux 4.8.0-53-generic ehci_hcd",
"claimed": true,
"logicalname": "log_name_string",
"children": [
{
"id": "id_string",
"handle": "handle_string",
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
"configuration": {
"speed": "480Mbit/s",
"slots": "6",
"driver": "hub"
},
"description": "USB hub",
"class": "bus",
"product": "Integrated Rate Matching Hub",
"vendor": "Intel Corp.",
"claimed": true,
"capabilities": {
"usb-2.00": "USB 2.0"
},
"physid": "physid_string",
"version": "0.00",
"businfo": "bus_info_string"
}
],
"capabilities": {
"usb-2.00": "USB 2.0"
},
"physid": "physid_string",
"version": "4.08"
}
],
"handle": "handle_string",
"configuration": {
"latency": "0",
"driver": "ehci-pci"
},
"description": "USB controller",
"class": "bus",
"product": "6 Series/C200 Series Chipset Family USB Enhanced Host Controller #2",
"vendor": "Intel Corporation",
"claimed": true,
"clock": 33000000,
"width": 32,
"capabilities": {
"ehci": "Enhanced Host Controller Interface (USB2)",
"pm": "Power Management",
"cap_list": "PCI capabilities listing",
"debug": "Debug port",
"bus_master": "bus mastering"
},
"physid": "physid_string",
"version": "04",
"businfo": "bus_info_string"
},
{
"id": "multimedia",
"handle": "handle_string",
"configuration": {
"latency": "0",
"driver": "snd_hda_intel"
},
"description": "Audio device",
"class": "multimedia",
"product": "6 Series/C200 Series Chipset Family High Definition Audio Controller",
"vendor": "Intel Corporation",
"claimed": true,
"clock": 33000000,
"width": 64,
"capabilities": {
"pm": "Power Management",
"bus_master": "bus mastering",
"msi": "Message Signalled Interrupts",
"cap_list": "PCI capabilities listing",
"pciexpress": "PCI Express"
},
"physid": "physid_string",
"version": "04",
"businfo": "bus_info_string"
},
{
"id": "id_string",
"handle": "handle_string",
"configuration": {
"driver": "pcieport"
},
"description": "PCI bridge",
"class": "bridge",
"product": "6 Series/C200 Series Chipset Family PCI Express Root Port 1",
"vendor": "Intel Corporation",
"claimed": true,
"clock": 33000000,
"width": 32,
"capabilities": {
"bus_master": "bus mastering",
"pciexpress": "PCI Express",
"cap_list": "PCI capabilities listing",
"pm": "Power Management",
"normal_decode": true,
"msi": "Message Signalled Interrupts",
"pci": true
},
"physid": "physid_string",
"version": "b4",
"businfo": "bus_info_string"
},
{
"id": "id_string",
"children": [
{
"id": "network",
"handle": "handle_string",
"configuration": {
"wireless": "IEEE 802.11",
"multicast": "yes",
"link": "yes",
"broadcast": "yes",
"ip": "ip_address",
"firmware": "9.221.4.1 build 25532",
"driverversion": "4.8.0-53-generic",
"latency": "0",
"driver": "iwlwifi"
},
"description": "Wireless interface",
"class": "network",
"product": "Centrino Ultimate-N 6300",
"vendor": "Intel Corporation",
"claimed": true,
"logicalname": "log_name_string",
"clock": 33000000,
"width": 64,
"capabilities": {
"bus_master": "bus mastering",
"ethernet": true,
"physical": "Physical interface",
"pciexpress": "PCI Express",
"cap_list": "PCI capabilities listing",
"pm": "Power Management",
"wireless": "Wireless-LAN",
"msi": "Message Signalled Interrupts"
},
"physid": "physid_string",
"serial": "serial_string",
"version": "35",
"businfo": "bus_info_string"
}
],
"handle": "handle_string",
"configuration": {
"driver": "pcieport"
},
"description": "PCI bridge",
"class": "bridge",
"product": "6 Series/C200 Series Chipset Family PCI Express Root Port 2",
"vendor": "Intel Corporation",
"claimed": true,
"clock": 33000000,
"width": 32,
"capabilities": {
"bus_master": "bus mastering",
"pciexpress": "PCI Express",
"cap_list": "PCI capabilities listing",
"pm": "Power Management",
"normal_decode": true,
"msi": "Message Signalled Interrupts",
"pci": true
},
"physid": "physid_string",
"version": "b4",
"businfo": "bus_info_string"
},
{
"id": "id_string",
"handle": "handle_string",
"configuration": {
"driver": "pcieport"
},
"description": "PCI bridge",
"class": "bridge",
"product": "6 Series/C200 Series Chipset Family PCI Express Root Port 3",
"vendor": "Intel Corporation",
"claimed": true,
"clock": 33000000,
"width": 32,
"capabilities": {
"bus_master": "bus mastering",
"pciexpress": "PCI Express",
"cap_list": "PCI capabilities listing",
"pm": "Power Management",
"normal_decode": true,
"msi": "Message Signalled Interrupts",
"pci": true
},
"physid": "physid_string",
"version": "b4",
"businfo": "bus_info_string"
},
{
"id": "id_string",
"children": [
{
"id": "usb",
"children": [
{
"id": "id_string",
"handle": "handle_string",
"configuration": {
"speed": "480Mbit/s",
"slots": "2",
"driver": "hub"
},
"businfo": "bus_info_string",
"class": "bus",
"product": "xHCI Host Controller",
"vendor": "Linux 4.8.0-53-generic xhci-hcd",
"claimed": true,
"logicalname": "log_name_string",
"children": [
{
"id": "id_string",
"handle": "handle_string",
"configuration": {
"maxpower": "98mA",
"speed": "1Mbit/s",
"driver": "usbhid"
},
"description": "Mouse",
"class": "input",
"product": "USB Optical Mouse",
"vendor": "Logitech",
"claimed": true,
"capabilities": {
"usb-2.00": "USB 2.0"
},
"physid": "physid_string",
"version": "54.00",
"businfo": "bus_info_string"
},
{
"id": "id_string",
"handle": "handle_string",
"configuration": {
"maxpower": "90mA",
"speed": "1Mbit/s",
"driver": "usbhid"
},
"description": "Keyboard",
"class": "input",
"product": "USB Keyboard",
"vendor": "Logitech",
"claimed": true,
"capabilities": {
"usb-1.10": "USB 1.1"
},
"physid": "physid_string",
"version": "66.01",
"businfo": "bus_info_string"
}
],
"capabilities": {
"usb-2.00": "USB 2.0"
},
"physid": "physid_string",
"version": "4.08"
},
{
"id": "id_string",
"handle": "handle_string",
"configuration": {
"speed": "5000Mbit/s",
"slots": "2",
"driver": "hub"
},
"businfo": "bus_info_string",
"class": "bus",
"product": "xHCI Host Controller",
"vendor": "Linux 4.8.0-53-generic xhci-hcd",
"claimed": true,
"logicalname": "log_name_string",
"capabilities": {
"usb-3.00": true
},
"physid": "physid_string",
"version": "4.08"
}
],
"handle": "handle_string",
"configuration": {
"latency": "0",
"driver": "xhci_hcd"
},
"description": "USB controller",
"class": "bus",
"product": "uPD720200 USB 3.0 Host Controller",
"vendor": "NEC Corporation",
"claimed": true,
"clock": 33000000,
"width": 64,
"capabilities": {
"bus_master": "bus mastering",
"xhci": true,
"pciexpress": "PCI Express",
"msix": "MSI-X",
"pm": "Power Management",
"msi": "Message Signalled Interrupts",
"cap_list": "PCI capabilities listing"
},
"physid": "physid_string",
"version": "04",
"businfo": "bus_info_string"
}
],
"handle": "handle_string",
"configuration": {
"driver": "pcieport"
},
"description": "PCI bridge",
"class": "bridge",
"product": "6 Series/C200 Series Chipset Family PCI Express Root Port 4",
"vendor": "Intel Corporation",
"claimed": true,
"clock": 33000000,
"width": 32,
"capabilities": {
"bus_master": "bus mastering",
"pciexpress": "PCI Express",
"cap_list": "PCI capabilities listing",
"pm": "Power Management",
"normal_decode": true,
"msi": "Message Signalled Interrupts",
"pci": true
},
"physid": "physid_string",
"version": "b4",
"businfo": "bus_info_string"
},
{
"id": "id_string",
"children": [
{
"id": "firewire",
"handle": "handle_string",
"configuration": {
"latency": "0",
"driver": "firewire_ohci"
},
"description": "FireWire (IEEE 1394)",
"class": "bus",
"product": "OZ600 1394a-2000 Controller",
"vendor": "O2 Micro, Inc.",
"claimed": true,
"clock": 33000000,
"width": 32,
"capabilities": {
"bus_master": "bus mastering",
"pciexpress": "PCI Express",
"cap_list": "PCI capabilities listing",
"ohci": "Open Host Controller Interface",
"pm": "Power Management",
"msi": "Message Signalled Interrupts"
},
"physid": "physid_string",
"version": "05",
"businfo": "bus_info_string"
},
{
"id": "generic",
"handle": "handle_string",
"configuration": {
"latency": "0",
"driver": "sdhci-pci"
},
"description": "SD Host controller",
"class": "generic",
"product": "OZ600RJ1/OZ900RJ1 SD/MMC Card Reader Controller",
"vendor": "O2 Micro, Inc.",
"claimed": true,
"clock": 33000000,
"width": 32,
"capabilities": {
"pm": "Power Management",
"bus_master": "bus mastering",
"msi": "Message Signalled Interrupts",
"cap_list": "PCI capabilities listing",
"pciexpress": "PCI Express"
},
"physid": "physid_string",
"version": "05",
"businfo": "bus_info_string"
},
{
"id": "storage",
"handle": "handle_string",
"configuration": {
"latency": "0"
},
"description": "Mass storage controller",
"class": "storage",
"product": "OZ600 MS/xD Controller",
"vendor": "O2 Micro, Inc.",
"clock": 33000000,
"width": 32,
"capabilities": {
"bus_master": "bus mastering",
"pciexpress": "PCI Express",
"cap_list": "PCI capabilities listing",
"pm": "Power Management",
"storage": true,
"msi": "Message Signalled Interrupts"
},
"physid": "physid_string",
"version": "05",
"businfo": "bus_info_string"
}
],
"handle": "handle_string",
"configuration": {
"driver": "pcieport"
},
"description": "PCI bridge",
"class": "bridge",
"product": "6 Series/C200 Series Chipset Family PCI Express Root Port 8",
"vendor": "Intel Corporation",
"claimed": true,
"clock": 33000000,
"width": 32,
"capabilities": {
"bus_master": "bus mastering",
"pciexpress": "PCI Express",
"cap_list": "PCI capabilities listing",
"pm": "Power Management",
"normal_decode": true,
"msi": "Message Signalled Interrupts",
"pci": true
},
"physid": "physid_string",
"version": "b4",
"businfo": "bus_info_string"
},
{
"id": "id_string",
"children": [
{
"id": "id_string",
"handle": "handle_string",
"configuration": {
"speed": "480Mbit/s",
"slots": "3",
"driver": "hub"
},
"businfo": "bus_info_string",
"class": "bus",
"product": "EHCI Host Controller",
"vendor": "Linux 4.8.0-53-generic ehci_hcd",
"claimed": true,
"logicalname": "log_name_string",
"children": [
{
"id": "id_string",
"handle": "handle_string",
"configuration": {
"speed": "480Mbit/s",
"slots": "8",
"driver": "hub"
},
"description": "USB hub",
"class": "bus",
"product": "Integrated Rate Matching Hub",
"vendor": "Intel Corp.",
"claimed": true,
"children": [
{
"id": "id_string",
"handle": "handle_string",
"configuration": {
"maxpower": "100mA",
"speed": "12Mbit/s",
"driver": "usbhid"
},
"description": "Audio device",
"class": "multimedia",
"product": "Logitech USB Headset",
"vendor": "Logitech",
"claimed": true,
"capabilities": {
"audio-control": "Control device",
"usb-1.10": "USB 1.1"
},
"physid": "physid_string",
"version": "1.27",
"businfo": "bus_info_string"
},
{
"id": "id_string",
"handle": "handle_string",
"configuration": {
"maxpower": "100mA",
"speed": "12Mbit/s"
},
"description": "Generic USB device",
"class": "generic",
"product": "5880",
"vendor": "Broadcom Corp",
"capabilities": {
"usb-1.10": "USB 1.1"
},
"physid": "physid_string",
"serial": "serial_string",
"version": "1.01",
"businfo": "bus_info_string"
}
],
"capabilities": {
"usb-2.00": "USB 2.0"
},
"physid": "physid_string",
"version": "0.00",
"businfo": "bus_info_string"
}
],
"capabilities": {
"usb-2.00": "USB 2.0"
},
"physid": "physid_string",
"version": "4.08"
}
],
"handle": "handle_string",
"configuration": {
"latency": "0",
"driver": "ehci-pci"
},
"description": "USB controller",
"class": "bus",
"product": "6 Series/C200 Series Chipset Family USB Enhanced Host Controller #1",
"vendor": "Intel Corporation",
"claimed": true,
"clock": 33000000,
"width": 32,
"capabilities": {
"ehci": "Enhanced Host Controller Interface (USB2)",
"pm": "Power Management",
"cap_list": "PCI capabilities listing",
"debug": "Debug port",
"bus_master": "bus mastering"
},
"physid": "physid_string",
"version": "04",
"businfo": "bus_info_string"
},
{
"id": "isa",
"handle": "handle_string",
"configuration": {
"latency": "0",
"driver": "lpc_ich"
},
"description": "ISA bridge",
"class": "bridge",
"product": "QM67 Express Chipset Family LPC Controller",
"vendor": "Intel Corporation",
"claimed": true,
"clock": 33000000,
"width": 32,
"capabilities": {
"bus_master": "bus mastering",
"isa": true,
"cap_list": "PCI capabilities listing"
},
"physid": "physid_string",
"version": "04",
"businfo": "bus_info_string"
},
{
"id": "storage",
"handle": "handle_string",
"configuration": {
"latency": "0",
"driver": "ahci"
},
"description": "RAID bus controller",
"class": "storage",
"product": "82801 Mobile SATA Controller [RAID mode]",
"vendor": "Intel Corporation",
"claimed": true,
"clock": 66000000,
"width": 32,
"capabilities": {
"pm": "Power Management",
"storage": true,
"msi": "Message Signalled Interrupts",
"cap_list": "PCI capabilities listing",
"bus_master": "bus mastering"
},
"physid": "physid_string",
"version": "04",
"businfo": "bus_info_string"
},
{
"id": "serial",
"handle": "handle_string",
"configuration": {
"latency": "0"
},
"description": "SMBus",
"class": "bus",
"product": "6 Series/C200 Series Chipset Family SMBus Controller",
"vendor": "Intel Corporation",
"clock": 33000000,
"width": 64,
"physid": "physid_string",
"version": "04",
"businfo": "bus_info_string"
}
],
"handle": "handle_string",
"description": "Host bridge",
"class": "bridge",
"product": "2nd Generation Core Processor Family DRAM Controller",
"vendor": "Intel Corporation",
"claimed": true,
"clock": 33000000,
"width": 32,
"physid": "physid_string",
"version": "09",
"businfo": "bus_info_string"
},
{
"claimed": true,
"id": "id_string",
"logicalname": "log_name_string",
"children": [
{
"id": "disk",
"units": "bytes",
"configuration": {
"signature": "signature_string",
"ansiversion": "5",
"logicalsectorsize": "512",
"sectorsize": "512"
},
"description": "ATA Disk",
"class": "disk",
"product": "KINGSTON SV300S3",
"handle": "handle_sting",
"size": 480103981056,
"claimed": true,
"logicalname": "log_name_string",
"children": [
{
"id": "id_string",
"configuration": {
"mount.options": "rw,relatime,errors=remount-ro,data=ordered",
"modified": "2017-06-05 10:40:06",
"mount.fstype": "ext4",
"lastmountpoint": "/",
"created": "2017-03-21 14:11:06",
"mounted": "2017-06-02 12:11:56",
"filesystem": "ext4",
"state": "mounted"
},
"description": "EXT4 volume",
"class": "volume",
"vendor": "Linux",
"size": 463046967296,
"capacity": 463046967296,
"claimed": true,
"logicalname": [
"log_name_string_1",
"log_name_string_2",
"log_name_string_3"
],
"capabilities": {
"bootable": "Bootable partition (active)",
"primary": "Primary partition",
"extents": "extent-based allocation",
"ext4": true,
"ext2": "EXT2/EXT3",
"extended_attributes": "Extended Attributes",
"initialized": "initialized volume",
"huge_files": "16TB+ files",
"journaled": true,
"dir_nlink": "directories with 65000+ subdirs",
"large_files": "4GB+ files"
},
"physid": "physid_string",
"serial": "serial_string",
"dev": "dev_string",
"version": "1.0",
"businfo": "bus_info_string"
},
{
"id": "id_string",
Todd Papaioannou is a Committer for Eclipse ioFog | projects.eclipse.org
"description": "Extended partition",
"class": "volume",
"size": 17054041088,
"capacity": 17054041088,
"claimed": true,
"logicalname": "log_name_string",
"children": [
{
"claimed": true,
"id": "id_string",
"logicalname": "log_name_string",
"class": "volume",
"description": "Linux swap / Solaris partition",
"capabilities": {
"nofs": "No filesystem"
},
"physid": "physid_string",
"dev": "dev_string",
"capacity": 17054040064
}
],
"physid": "physid_string",
"capabilities": {
"extended": "Extended partition",
"partitioned:extended": "Extended partition",
"primary": "Primary partition",
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Todd Papaioannou is a Committer for Eclipse ioFog
Todd Papaioannou is a Committer for Eclipse ioFog
User: Todd Papaioannou Project: Eclipse ioFogType: CommitterStatus: ActiveActive: Tuesday, April 2, 2019
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
"partitioned": "Partitioned disk"
},
"dev": "dev_string",
"businfo": "bus_info_string"
}
],
"capabilities": {
"partitioned:dos": "MS-DOS partition table",
"partitioned": "Partitioned disk"
},
"physid": "physid_string",
"serial": "serial_string",
"dev": "dev_string",
"version": "BBF0",
"businfo": "bus_info_string"
}
],
"class": "storage",
"capabilities": {
"emulated": "Emulated device"
},
"physid": "physid_string"
},
{
"claimed": true,
"id": "id_string",
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
"logicalname": "log_name_string",
"children": [
{
"id": "id_string",
"handle": "handle_string",
"configuration": {
"ansiversion": "5",
"status": "open"
},
"description": "DVD-RAM writer",
"class": "disk",
"product": "DVD+-RW GS30N",
"vendor": "HL-DT-ST",
"claimed": true,
"logicalname": [
"log_name_string_1",
"log_name_string_2",
"log_name_string_3",
"log_name_string_4",
"log_name_string_5"
],
"capabilities": {
"dvd": "DVD playback",
"removable": "support is removable",
"dvd-r": "DVD-R burning",
Alexander Shpak is a Committer for Eclipse ioFog | projects.eclipse.org
"cd-rw": "CD-RW burning",
"dvd-ram": "DVD-RAM burning",
"cd-r": "CD-R burning",
"audio": "Audio CD playback"
},
"physid": "physid_string",
"dev": "dev_string",
"version": "A101",
"businfo": "bus_info_string"
}
],
"class": "storage",
"capabilities": {
"emulated": "Emulated device"
},
"physid": "physid_string"
}
],
"class": "bus",
"description": "Motherboard",
"physid": "physid_string",
"product": "08V9YG",
"handle": "handle_string",
"version": "A00"
},
{
"id": "battery",
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Alexander Shpak is a Committer for Eclipse ioFog
Alexander Shpak is a Committer for Eclipse ioFog
User: Alexander ShpakProject: Eclipse ioFogType: CommitterStatus: InactiveActive: Tuesday, April 2, 2019 to Friday, May 8, 2020
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
"handle": "handle_string",
"configuration": {
"voltage": "11,1V"
},
"units": "mWh",
"class": "power",
"product": "DELL HPNYM19",
"vendor": "SMP",
"capacity": 86580,
"claimed": true,
"slot": "Sys. Battery Bay",
"physid": "physid_string",
"serial": "serial_string",
"version": "09/22/2011"
}
],
"width": 64,
"capabilities": {
"dmi-2.6": "DMI version 2.6",
"vsyscall32": "32-bit processes",
"smbios-2.6": "SMBIOS version 2.6"
},
"serial": "serial_string",
"version": "01"
}
CPU info (GET)
Returns parsed info from file /proc/cpuinfo
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
http://localhost:54331/hal/hwc/proc/cpuinfo
Response example
[
{
"bugs": "",
"processor_number": "0",
"cpuid_level": "13",
"vendor_id": "GenuineIntel",
"address_sizes": "36 bits physical, 48 bits virtual",
"fpu": "yes",
"stepping": "7",
"cache_alignment": "64",
"flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm epb tpr_shadow vnmi flexpriority ept vpid xsaveopt dtherm ida arat pln pts",
"physical_id": "0",
"cpu_family": "6",
"siblings": "8",
"cpu_MHz": "2977.478",
"apicid": "0",
"power_management": "",
"model": "42",
"cache_size": "8192 KB",
"cpu_cores": "4",
"fpu_exception": "yes",
"initial_apicid": "0",
"bogomips": "4589.92",
"microcode": "0x29",
"core_id": "0",
"clflush_size": "64",
"wp": "yes",
"model_name": "Intel(R) Core(TM) i7-2820QM CPU @ 2.30GHz"
},
{
"bugs": "",
"processor_number": "1",
"cpuid_level": "13",
"vendor_id": "GenuineIntel",
"address_sizes": "36 bits physical, 48 bits virtual",
"fpu": "yes",
"stepping": "7",
"cache_alignment": "64",
"flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm epb tpr_shadow vnmi flexpriority ept vpid xsaveopt dtherm ida arat pln pts",
"physical_id": "0",
"cpu_family": "6",
"siblings": "8",
"cpu_MHz": "2953.192",
"apicid": "2",
"power_management": "",
"model": "42",
"cache_size": "8192 KB",
"cpu_cores": "4",
"fpu_exception": "yes",
"initial_apicid": "2",
"bogomips": "4589.92",
"microcode": "0x29",
"core_id": "1",
"clflush_size": "64",
"wp": "yes",
"model_name": "Intel(R) Core(TM) i7-2820QM CPU @ 2.30GHz"
},
{
"bugs": "",
"processor_number": "2",
"cpuid_level": "13",
"vendor_id": "GenuineIntel",
"address_sizes": "36 bits physical, 48 bits virtual",
"fpu": "yes",
"stepping": "7",
"cache_alignment": "64",
"flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm epb tpr_shadow vnmi flexpriority ept vpid xsaveopt dtherm ida arat pln pts",
"physical_id": "0",
"cpu_family": "6",
"siblings": "8",
"cpu_MHz": "2975.372",
"apicid": "4",
"power_management": "",
"model": "42",
"cache_size": "8192 KB",
"cpu_cores": "4",
"fpu_exception": "yes",
"initial_apicid": "4",
"bogomips": "4589.92",
"microcode": "0x29",
"core_id": "2",
"clflush_size": "64",
"wp": "yes",
"model_name": "Intel(R) Core(TM) i7-2820QM CPU @ 2.30GHz"
},
{
"bugs": "",
"processor_number": "3",
"cpuid_level": "13",
"vendor_id": "GenuineIntel",
"address_sizes": "36 bits physical, 48 bits virtual",
"fpu": "yes",
"stepping": "7",
"cache_alignment": "64",
"flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm epb tpr_shadow vnmi flexpriority ept vpid xsaveopt dtherm ida arat pln pts",
"physical_id": "0",
"cpu_family": "6",
"siblings": "8",
"cpu_MHz": "2999.938",
"apicid": "6",
"power_management": "",
"model": "42",
"cache_size": "8192 KB",
"cpu_cores": "4",
"fpu_exception": "yes",
"initial_apicid": "6",
"bogomips": "4589.92",
"microcode": "0x29",
"core_id": "3",
"clflush_size": "64",
"wp": "yes",
"model_name": "Intel(R) Core(TM) i7-2820QM CPU @ 2.30GHz"
},
{
"bugs": "",
"processor_number": "4",
"cpuid_level": "13",
"vendor_id": "GenuineIntel",
"address_sizes": "36 bits physical, 48 bits virtual",
"fpu": "yes",
"stepping": "7",
"cache_alignment": "64",
"flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm epb tpr_shadow vnmi flexpriority ept vpid xsaveopt dtherm ida arat pln pts",
"physical_id": "0",
"cpu_family": "6",
"siblings": "8",
"cpu_MHz": "2985.479",
"apicid": "1",
"power_management": "",
"model": "42",
"cache_size": "8192 KB",
"cpu_cores": "4",
"fpu_exception": "yes",
"initial_apicid": "1",
"bogomips": "4589.92",
"microcode": "0x29",
"core_id": "0",
"clflush_size": "64",
"wp": "yes",
"model_name": "Intel(R) Core(TM) i7-2820QM CPU @ 2.30GHz"
},
{
"bugs": "",
"processor_number": "5",
"cpuid_level": "13",
"vendor_id": "GenuineIntel",
"address_sizes": "36 bits physical, 48 bits virtual",
"fpu": "yes",
"stepping": "7",
"cache_alignment": "64",
"flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm epb tpr_shadow vnmi flexpriority ept vpid xsaveopt dtherm ida arat pln pts",
"physical_id": "0",
"cpu_family": "6",
"siblings": "8",
"cpu_MHz": "2802.001",
"apicid": "3",
"power_management": "",
"model": "42",
"cache_size": "8192 KB",
"cpu_cores": "4",
"fpu_exception": "yes",
"initial_apicid": "3",
"bogomips": "4589.92",
"microcode": "0x29",
"core_id": "1",
"clflush_size": "64",
"wp": "yes",
"model_name": "Intel(R) Core(TM) i7-2820QM CPU @ 2.30GHz"
},
{
"bugs": "",
"processor_number": "6",
"cpuid_level": "13",
"vendor_id": "GenuineIntel",
"address_sizes": "36 bits physical, 48 bits virtual",
"fpu": "yes",
"stepping": "7",
"cache_alignment": "64",
"flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm epb tpr_shadow vnmi flexpriority ept vpid xsaveopt dtherm ida arat pln pts",
"physical_id": "0",
"cpu_family": "6",
"siblings": "8",
"cpu_MHz": "2945.190",
"apicid": "5",
"power_management": "",
"model": "42",
"cache_size": "8192 KB",
"cpu_cores": "4",
"fpu_exception": "yes",
"initial_apicid": "5",
"bogomips": "4589.92",
"microcode": "0x29",
"core_id": "2",
"clflush_size": "64",
"wp": "yes",
"model_name": "Intel(R) Core(TM) i7-2820QM CPU @ 2.30GHz"
},
{
"bugs": "",
"processor_number": "7",
"cpuid_level": "13",
"vendor_id": "GenuineIntel",
"address_sizes": "36 bits physical, 48 bits virtual",
"fpu": "yes",
"stepping": "7",
"cache_alignment": "64",
"flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm epb tpr_shadow vnmi flexpriority ept vpid xsaveopt dtherm ida arat pln pts",
"physical_id": "0",
"cpu_family": "6",
"siblings": "8",
"cpu_MHz": "2957.122",
"apicid": "7",
"power_management": "",
"model": "42",
"cache_size": "8192 KB",
"cpu_cores": "4",
"fpu_exception": "yes",
"initial_apicid": "7",
"bogomips": "4589.92",
"microcode": "0x29",
"core_id": "3",
"clflush_size": "64",
"wp": "yes",
"model_name": "Intel(R) Core(TM) i7-2820QM CPU @ 2.30GHz"
}
]
USB devices list (GET)
Returns a list of serial ports
http://localhost:54331/hal/rs232/list
Response example
[
{
"subsystem": "pci",
"pid": null,
"manufacturer": null,
"description": "n/a",
"product": null,
"vid": null,
"hwid": "n/a",
"serial_number": null,
"usb_device_path": null,
"location": null,
"port": "/dev/ttyS4",
"device_path": "/sys/devices/pci0000:00/0000:00:16.3",
"interface": null,
"name": "ttyS4"
},
{
"subsystem": "usb-serial",
"pid": 8963,
"manufacturer": "Prolific Technology Inc.",
"description": "USB-Serial Controller D",
"product": "USB-Serial Controller D",
"vid": 1659,
"hwid": "USB VID:PID=067B:2303 LOCATION=2-1.1",
"serial_number": null,
"usb_device_path": "/sys/devices/pci0000:00/0000:00:1d.0/usb2/2-1/2-1.1",
"location": "2-1.1",
"port": "/dev/ttyUSB0",
"device_path": "/sys/devices/pci0000:00/0000:00:1d.0/usb2/2-1/2-1.1/2-1.1:1.0/ttyUSB0",
"interface": null,
"name": "ttyUSB0"
}
]
WebSockets
WS server listens on port 54332.
Get USB-to-Serial Web-socket Connection
This endpoint opens a message Web-socket connection to USB-to-Serial device. The messages and other commands sent
over this Web-socket are specified here. It is the responsibility of the container to establish this connection
and ensure it is running.
The PORT of USB-to-Serial device must be passed as part of the URL because otherwise it would have to be passed in
the Web-socket connection itself and that would make associated connections with different devices rather difficult.
Endpoint
Response
None - the Websocket will simply be opened successfully
Querystring Parameters
PORT - the PORT of USB-to-Serial device to connect to via the Websocket connection
(example shown here as '/dev/ttyusb0')
Signals from HAL to Client
- op code 4: (single byte command) indicates connection to device was opened (it's an answer to connection open op
code signal sent with configuration for opening connection to physical device); at this point HAL starts
listening on data from connected device.
- op code 6: indicates that HAL recieved some data from physical device (op code single byte followed by pure bytes
of data recieved from device)
- standart close frame: indicates that current connection was closed.
> status code 1000 with close frame : means that device normally closed connection
> status code 4000 with close frame : there was an exception, error will be passed in reason.
Signals from Client to HAL
- op code 3: signals HAL to open connection to device with specified configuration in passed data (op code single
byte followed by bytes of json configuration to open connection to device ); in case with USB-to-Serial: PORT
property is required.
- op code 5: signals HAL to send recieved data to connected device (op code single byte followed by pure bytes of
data to send to device)
- standart close frame: indicates that client wants to close current connection.
> status code 1000 with close frame : means that device normally closed connection
> status code 4000 with close frame : there was an exception, error will be passed in reason.
JSON Configuration for USB-to-Serial device
All available configuration properties:
'port'(required to open connection)
'baudrate'
'bytesize'
'parity'
'stopbits'
'timeout'
'xonxoff'
'rtscts'
'dsrdtr'
'write_timeout'
'inter_byte_timeout'
'data_read_timeout'(this property tells HAL to pause for specified timeout in seconds before reading data from buffer)
Example:
{ 'port': '/dev/ttyUSB0' }
About
No description, website, or topics provided.
Resources
Readme
Releases
No releases published
Packages 0
No packages published
Contributors 4
Languages
Python
97.4%
Makefile
1.8%
Dockerfile
0.8%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Serge Radinovich is a Committer for Eclipse ioFog | projects.eclipse.org
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Serge Radinovich is a Committer for Eclipse ioFog
Serge Radinovich is a Committer for Eclipse ioFog
User: Serge RadinovichProject: Eclipse ioFogType: CommitterStatus: ActiveActive: Tuesday, April 2, 2019Contribution Activity: Commits on Eclipse ioFog by Serge Radinovich (lifetime).
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Saeid Rezaei Baghbidi is a Committer for Eclipse ioFog | projects.eclipse.org
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Saeid Rezaei Baghbidi is a Committer for Eclipse ioFog
Saeid Rezaei Baghbidi is a Committer for Eclipse ioFog
User: Saeid Rezaei BaghbidiProject: Eclipse ioFogType: CommitterStatus: ActiveActive: Tuesday, April 2, 2019Contribution Activity: Commits on Eclipse ioFog by Saeid Rezaei Baghbidi (lifetime).
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Neha Naithani is a Committer for Eclipse ioFog | projects.eclipse.org
Luboš Krčál is a Committer for Eclipse ioFog | projects.eclipse.org
Kilton Hopkins is a Committer for ioFog | projects.eclipse.org
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Neha Naithani is a Committer for Eclipse ioFog
Neha Naithani is a Committer for Eclipse ioFog
User: Neha NaithaniProject: Eclipse ioFogType: CommitterStatus: ActiveActive: Tuesday, April 2, 2019Contribution Activity: Commits on Eclipse ioFog by Neha Naithani (lifetime).
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Luboš Krčál is a Committer...
Luboš Krčál is a Committer for Eclipse ioFog
Luboš Krčál is a Committer for Eclipse ioFog
User: Luboš KrčálProject: Eclipse ioFogType: CommitterStatus: ActiveActive: Tuesday, April 2, 2019Contribution Activity: Commits on Eclipse ioFog by Luboš Krčál (lifetime).
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Kilton Hopkins is a Committer for ioFog
Kilton Hopkins is a Committer for ioFog
User: Kilton HopkinsProject: Eclipse ioFogType: CommitterStatus: ActiveActive: Friday, September 23, 2016
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Ian Martin is a Committer for Eclipse ioFog | projects.eclipse.org
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Ian Martin is a Committer for Eclipse ioFog
Ian Martin is a Committer for Eclipse ioFog
User: Ian MartinProject: Eclipse ioFogType: CommitterStatus: ActiveActive: Tuesday, April 2, 2019Contribution Activity: Commits on Eclipse ioFog by Ian Martin (lifetime).
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Kilton Hopkins is a Project Lead for ioFog | projects.eclipse.org
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Kilton Hopkins is a Project Lead for ioFog
Kilton Hopkins is a Project Lead for ioFog
User: Kilton HopkinsProject: Eclipse ioFogType: Project LeadStatus: ActiveActive: Wednesday, September 21, 2016
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Alex de Wergifosse is a Committer for Eclipse ioFog | projects.eclipse.org
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
Alex de Wergifosse is a Committer for Eclipse ioFog
Alex de Wergifosse is a Committer for Eclipse ioFog
User: Alex de WergifosseProject: Eclipse ioFogType: CommitterStatus: ActiveActive: Tuesday, April 2, 2019Contribution Activity: Commits on Eclipse ioFog by Alex de Wergifosse (lifetime).
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
ioFog Discussion Forum
Support
Get help from the community, ask questions, and share your expertise.
General
General discussion not related to getting help or support. Use #Support for questions or help.
Home
Categories
FAQ/Guidelines
Terms of Service
Privacy Policy
Powered by Discourse, best viewed with JavaScript enabled
Creation Review | projects.eclipse.org
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
ioFog
Creation Review
Eclipse ioFog Creation Review
Type: CreationState: SuccessfulEnd Date of the Review Period: Reviews run for a minimum of one week. The outcome of the review is decided on this date. This is the last day to make comments or ask questions about this review.Wednesday, September 21, 2016Project: Eclipse ioFogProposal:
ioFog
Parent Project: Eclipse IoTBackground: There are many great ways to build IoT software in the cloud. And there are many great ways to store and analyze the large amounts of data produced by sensors and devices.
Yet there are few ways to build IoT software that runs in a real-world location such as a warehouse or a hospital room. Developing and deploying software to these edge locations can be time consuming, expensive, and inflexible.
ioFog was created to solve these problems. The goal is to make developing IoT edge software feel like developing for the cloud, but with even more power.
Scope: 1. A software agent, ioFog, that provides a universal runtime for IoT micro services
2. A node controller allowing to control ioFog instances
3. SDKs in multiple programming languages, allowing developers to program containerized edge applications and micro-services
4. Development tools to author and simulate various deployment scenarios
Description: The Eclipse ioFog set of technologies is a fog computing layer that can be installed on any hardware running Linux. Once installed, it provides a universal runtime for microservices to run on the edge. In addition to a common runtime, ioFog also provides a set of useful services including a message bus, dynamic configuration of the microservices, and remote debugging.
Automated interconnection of ioFog instances is provided by the ComSat component. This relieves developers from writing code just to move data from one place to another.
Orchestration and management of microservices (the edge software) is provided by the ioAuthoring application and the ioFog instances receive their instructions through the fabric controller.
Working together, these components provide a full set of technologies for building and running IoT software the executes wherever the developer chooses.
In greater detail, the fog computing layer is comprised of the following:
1. A fog computing software agent that runs on various operating systems and provides a universal runtime for IoT microservices. This is called "ioFog".
2. A fog computing node controller that runs on popular Linux distributions and gives dynamic instruction to the ioFog instances. It has an API that allows for various tooling to be built for controlling the fog computing fabric. This is called "Fabric Controller".
3. An internetworking utility that runs on popular Linux distributions and provides a way for ioFog instances to interconnect, even through private network layers and firewalls. This is called "ComSat".
4. A design-time interface for creating, saving, editing, and deploying microservices schemas that are called "tracks". It runs on popular Linux distributions and uses the Fabric Controller API to do its work. This is called "ioAuthoring".
5. Software Development Kits (SDKs) in multiple programming languages that provide developers with the convenience of programming against objects instead of using the native REST API that exists within the ioFog.
6. A local software development tool that mimics the fog computing runtime and gives developers a way to test their code against simulated situations before making the effort to package their code as a microservice. This is called "Test Message Generator".
Why Here?: The community will gain a standard development model for IoT edge processing that frees them from the constraints of specific languages and specific hardware, and a set of technologies for provisioning and managing the edge processing.
By hosting our project with this community, we expect to augment our ecosystem of microservice developers and receive feedback that helps strengthen the technology.
There is strong potential for collaboration with other Eclipse IoT projects. Here are some examples:
hawkBit - by leveraging microservices running on the ioFog, remote updates can be achieved for devices that have complex update processes or connectivity that requires intellitent interfacing.
Vorto - the meta definitions of real-world objects can be represented in the ioAuthoring interface, with the implementation happening on a per-object basis through the use of microservices running on the edge near the actual physical object.
Kura - the ioFog (along with ComSat) can be used to add remote connectivity and servicability for Kura gateways that remain safely behind a firewall or NATed network. Microservices can be instantiated on the ioFog to work with Kura gateways and add layers of behavior for large groups of them.
Initial Contribution: All code and copyrights are owned by the contributing organization (iotracks, inc.).
The existing code that will be contributed consists of the ioFog Linux service, the ComSat Linux service, the ioAuthoring application for creating and managing ioFog instances and publishing microservices, and the fabric controller application for orchestrating the instantiation of microservices on ioFog instances.
Github public repository:
https://github.com/iotracks/iofabric
Third-party libraries:
Netty (Apache 2 license)
HornetQ (Apache 2 license)
Docker-Java (Apache 2 license)
Updated build of ioFog in September, 2016 with some additional features. This version is already in development.
All system components available in extensible, distributed format by January, 2017. This includes ioFog, ComSat, ioAuthoring, and the Fabric Controller.
Java, Python, and Node.js SDKs contributed immediately.
Two additional SDKs prioritized and contributed in October, 2016.
Further SDKs contributed in January, 2017.
Enhanced fabric controller API
IDE integration
Community activities:
Hold industry-specific developer workshops to address particular current IoT challenges
Introduce adapter microservices to provide easy integration with other projects and backend systems
People
Project Leads: Kilton HopkinsCommitters: Kilton HopkinsSaeid BaghbidiIryna LaryionavaPavel KazlouJerry ChenNarahari BharadwajZishan IqbalInterested Parties: Ian Skerrett
Benjamin Cabé
Richard Soley
Samsung
Motorola Solutions
Mentors: Pascal Rapicault
Sign in to post comments.
Sign in to post comments.
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
ioFog | projects.eclipse.org
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
ioFog
×
Status message
This proposal has been approved and the Eclipse ioFog project has been created.
ioFog
Basics
This proposal is in the Project Proposal Phase (as defined in the Eclipse Development Process) and is written to declare its intent and scope. We solicit additional participation and input from the community. Please login and add your feedback in the comments section. Parent Project: Eclipse IoT
Background: There are many great ways to build IoT software in the cloud. And there are many great ways to store and analyze the large amounts of data produced by sensors and devices.
Yet there are few ways to build IoT software that runs in a real-world location such as a warehouse or a hospital room. Developing and deploying software to these edge locations can be time consuming, expensive, and inflexible.
ioFog was created to solve these problems. The goal is to make developing IoT edge software feel like developing for the cloud, but with even more power.
Scope: 1. A software agent, ioFog, that provides a universal runtime for IoT micro services
2. A node controller allowing to control ioFog instances
3. SDKs in multiple programming languages, allowing developers to program containerized edge applications and micro-services
4. Development tools to author and simulate various deployment scenarios
Description: The Eclipse ioFog set of technologies is a fog computing layer that can be installed on any hardware running Linux. Once installed, it provides a universal runtime for microservices to run on the edge. In addition to a common runtime, ioFog also provides a set of useful services including a message bus, dynamic configuration of the microservices, and remote debugging.
Automated interconnection of ioFog instances is provided by the ComSat component. This relieves developers from writing code just to move data from one place to another.
Orchestration and management of microservices (the edge software) is provided by the ioAuthoring application and the ioFog instances receive their instructions through the fabric controller.
Working together, these components provide a full set of technologies for building and running IoT software the executes wherever the developer chooses.
In greater detail, the fog computing layer is comprised of the following:
1. A fog computing software agent that runs on various operating systems and provides a universal runtime for IoT microservices. This is called "ioFog".
2. A fog computing node controller that runs on popular Linux distributions and gives dynamic instruction to the ioFog instances. It has an API that allows for various tooling to be built for controlling the fog computing fabric. This is called "Fabric Controller".
3. An internetworking utility that runs on popular Linux distributions and provides a way for ioFog instances to interconnect, even through private network layers and firewalls. This is called "ComSat".
4. A design-time interface for creating, saving, editing, and deploying microservices schemas that are called "tracks". It runs on popular Linux distributions and uses the Fabric Controller API to do its work. This is called "ioAuthoring".
5. Software Development Kits (SDKs) in multiple programming languages that provide developers with the convenience of programming against objects instead of using the native REST API that exists within the ioFog.
6. A local software development tool that mimics the fog computing runtime and gives developers a way to test their code against simulated situations before making the effort to package their code as a microservice. This is called "Test Message Generator".
Why Here?: The community will gain a standard development model for IoT edge processing that frees them from the constraints of specific languages and specific hardware, and a set of technologies for provisioning and managing the edge processing.
By hosting our project with this community, we expect to augment our ecosystem of microservice developers and receive feedback that helps strengthen the technology.
There is strong potential for collaboration with other Eclipse IoT projects. Here are some examples:
hawkBit - by leveraging microservices running on the ioFog, remote updates can be achieved for devices that have complex update processes or connectivity that requires intellitent interfacing.
Vorto - the meta definitions of real-world objects can be represented in the ioAuthoring interface, with the implementation happening on a per-object basis through the use of microservices running on the edge near the actual physical object.
Kura - the ioFog (along with ComSat) can be used to add remote connectivity and servicability for Kura gateways that remain safely behind a firewall or NATed network. Microservices can be instantiated on the ioFog to work with Kura gateways and add layers of behavior for large groups of them.
Updated build of ioFog in September, 2016 with some additional features. This version is already in development.
All system components available in extensible, distributed format by January, 2017. This includes ioFog, ComSat, ioAuthoring, and the Fabric Controller.
Java, Python, and Node.js SDKs contributed immediately.
Two additional SDKs prioritized and contributed in October, 2016.
Further SDKs contributed in January, 2017.
Enhanced fabric controller API
IDE integration
Community activities:
Hold industry-specific developer workshops to address particular current IoT challenges
Introduce adapter microservices to provide easy integration with other projects and backend systems
People
Project Leads: Kilton HopkinsCommitters: Kilton HopkinsSaeid BaghbidiIryna LaryionavaPavel KazlouJerry ChenNarahari BharadwajZishan IqbalMentors: Pascal RapicaultInterested Parties: Ian Skerrett
Benjamin Cabé
Richard Soley
Samsung
Motorola Solutions
Source Code
Initial Contribution: All code and copyrights are owned by the contributing organization (iotracks, inc.).
The existing code that will be contributed consists of the ioFog Linux service, the ComSat Linux service, the ioAuthoring application for creating and managing ioFog instances and publishing microservices, and the fabric controller application for orchestrating the instantiation of microservices on ioFog instances.
Github public repository:
https://github.com/iotracks/iofabric
Third-party libraries:
Netty (Apache 2 license)
HornetQ (Apache 2 license)
Docker-Java (Apache 2 license)
Source Repository Type: GitHubSource Repositories: https://github.com/iotracks/iofabric
Sign in to post comments.
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Eclipse ioFog ReleasesDocumentationbackDocumentationGetting StartedbackGetting StartedWhat's New in ioFog 2?Core ConceptsArchitectureQuick Start With Local DeploymentQuick Start On Minikube and Vagrantiofogctlbackiofogctliofogctl - ioFog Unified Command Line InterfaceDownload And Install iofogctlGetting Familiar With iofogctliofogctl Resource ManagementConnecting To Existing Edge Compute NetworksLegacy Commands in iofogctlPlatform DeploymentbackPlatform DeploymentIntroductionPrepare NetworkPrepare Remote HostsRemote - Deploy Control PlaneKubernetes - Prepare A ClusterKubernetes - Deploy Control Plane Using iofogctlKubernetes - Deploy Control Plane Using HelmSetup AgentsAgent ManagementbackAgent ManagementIntroductionAgent ConfigurationAttach / Detach an AgentVolume ManagementDocker Image PruningDeveloping MicroservicesbackDeveloping MicroservicesWriting MicroservicesioFog SDKDebuggingTutorial - Our First MicroservicebackTutorial - Our First MicroserviceIntroductionGet To Know ioFogManage Our MicroservicesCreate Our First Microservice - JavaScriptDeploy Our MicroserviceMicroservice ManagementbackMicroservice ManagementDistributed ApplicationsMicroservice Public PortsMove and Rename MicroservicesMicroservice Updates and LifecycleMicroservice Registry and Catalog ManagementMicroservice LogsReference - iofogctlbackReference - iofogctlKinds of ResourcesControl Plane YAML SpecificationAgent configuration YAML SpecificationApplication YAML SpecificationRoute YAML SpecificationCatalog Item YAML SpecificationRegistry YAML SpecificationReference - ControllerbackReference - ControllerOverviewLegacy Controller CLI UsageController REST API ReferenceReference - AgentbackReference - AgentOverviewLegacy Agent CLI UsageAgent Local API ReferenceAgent ConfigurationsRemote debugging using IntelliJReference - Catalog MicroservicesbackReference - Catalog MicroservicesSystem: Diagnostics MicroserviceSystem: Hardware Abstraction Layer MicroserviceSystem: Bluetooth REST API MicroserviceJSON REST API And Open Weather Map MicroservicesContributingbackContributingContributing GuidelinesCode of ConductReleasesCommunityQuick Start GuideReleasesioFog v2
Get Started with ioFog v2
Major ioFog release 2 brings new ioFog Edge Compute Network (ECN) model, with legacy Connector being replaced by much more robust Apache Qpid Dispatch Router and Red Hat's project Skupper Proxy.
What's New?
ioFog Connector removed from the ECN architecture and replaced with ioFog Router, Skupper Proxy and ioFog Port Manager, see Architecture Concepts article for details
Improved registry and catalog items management in ioFog Controller
Exposing public ports for deployed microservices
Docker image pruning feature for ioFog Agent
Attach and detach ioFog Agents between ECNs
Volume management for mounting volume on ioFog Agent in a microservice
Moving and renaming microservices support in iofogctl
Current namespace configuration in iofogctl
Platform tools repository is no longer supported, please follow our guide on how to Prepare your or managed Kubernetes cluster
Changelogs
Controller
Agent
Operator
Port Manager
iofogctl
Helm
ioFog Golang SDK
ioFog v1.3.0
Get Started with release 1.3.0
1.3.0 brings new quality of life improvements as well as a set of backend changes that extend and unify ioFog's capabilities.
What's New?
Improved stability of all major components
Improved quality of life of iofogctl and Helm with respect to platform deployment
Improved support for microservice deployment using iofogctl
Unification of ioFog Kubernetes procedures by expanding capabilities of the Operator for use with both iofogctl and Helm
Changes to iofogctl's YAML specification in order to, amongst other things, conform with the Kubernetes-style Object Metadata and Specification structures. See here for instructions on how to convert from 1.2.x to 1.3.x YAML.
Added plugin system to Controller for database clients in order to support highly available Control Plane deployments
Ability to view realtime deployment status of Microservices through iofogctl due to improvements to both ioFog Controller and Agent.
Updates to the iofog-go-sdk to provide an HTTP client for ioFog Controller's REST API.
Changelogs
Controller
Agent
Operator
Kubelet
iofogctl
Helm
ioFog Golang SDK
Demo Project
ioFog v1.2.0 - "Kubernetes For The Edge"
Get Started with release 1.2.0
This release brings a set of features for seamless integration of Kubernetes and Edge Computing. The release
comes with a new command line interface for Edge Compute Network management called iofogctl and other supplementary
tools, such as platform tools for cluster and infrastructure management.
What's New?
Kubernetes integration! First release of ioFog supporting Kubernetes integration, and first releases of iofog-kubelet and iofog-operator microservices
Iofogctl command line interface for management of Edge Compute Networks (see iofogctl tutorial) running on both Linux and Mac
Helm chart for easy installation of ioFog Edge Compute Network to existing Kubernetes cluster (see helm tutorial)
Platform tools for easy infrastructure and Kubernetes cluster setup on Google Cloud Platform and Packet (see platform tutorial)
Many bugfixes in the ioFog engine: controller, connector and agent
Changelogs
Agent (v1.2.0)
Send Agent's external IP to Controller
Bugfix: Selecting the network interface that has Controller connectivity
Bugfix: Use local docker images when offline
Connector (v1.2.0)
Limit port range to 50 ports in default configuration file
Controller (v1.2.0)
Return Agent's external IP for Kubelet
Add uptime to status endpoint
Bugfix: Requests not failing if with additional properties
Kubelet (v1.2.0)
Initial release!
Iofogctl (v1.2.0)
Initial release!
Helm Chart (v1.2.0)
Initial release!
Platform Tools (v1.2.0)
Initial release!
Known Issues
Smart Camera Docker Container sometimes hangs after start ups.
ioFog Agent local API for receiving ioMessages from microservices will crap out after about 700 messages
Controller rejects requests that have unknown properties
Agent gives internal IP to Controller instead of public IP when on GCP
Agent not using local images when no internet connection
"iofog-agent info" hangs when multiple network adapters and no internet connection
Agent won't start when no internet connection
Agent will not start docker containers when Internet connection is not available
iofog-agent info command hangs and never returns information when Internet connection not available
ioFog Agent will not start when GPS mode is "auto" and Internet connection is not available
SQLite error on controller endpoint /api/v3/signup
Demo scripts in develop branch fail on macos with getopt error.
VideoProcessing doesn't succesfully load cameraSource
Master branch of demo repo tests fail sometimes on Pipelines
ARM TCP Docker issue causing images to not spawn
Route creation using iofog-controller cli failed, then succeeded with no change to the cli command
Update Controller npm dependencies
Update nodejs-sdk npm dependencies
Concurrent Requests to Provision an Agent on Controller API fail
New Connector has no authentication enabled
Need to change "publicMode": true to "publicMode": false in example for microservice "JSON ADD File Schema"
Filesystem security: SecurityManager is not running after restarting iofog-agent
GPS Agent Tracking : when user change gps coordinates manually, the changes are not shown on the map
Controller: add default log folder for Windows
Agent tracking: data from agent is not delivered to Kibana
Controller: set all NPM dependencies versions to stable number
API: Issues with /update/delete system microservices
Controller Installation: Check if sqlite3 binary exists
ioFog v1.1.0
Get Started with release 1.1.0
Agent (v1.1.0)
Features Added
Added support for setting and passing through environment variables in docker containers at runtime
Added support for overriding container CMD directives at runtime
Agent Docker images now build from iofog-docker-images for stability
Bug Fixes
Fix for deleting local images when registry was set to local
Fix for when multiple Agents would removes other Agent's microservices on the same node
Fixed for Private registries authentication
Stop running microservices when iofog-agent package gets uninstalled
Controller (v1.1.1)
Features Added
Added support for setting and passing through environment variables in docker containers at runtime (see iofog-controller CLI)
Added support for overriding container CMD directives at runtime (see iofog-controller CLI)
Added capability to return a microservice's public url when a public port is set
New metrics being tracked:
Total CPU usage
Available disk
Available memory
Controller Docker images now build from iofog-docker-images for stability
Bug Fixes
Update microservice did always get picked up by Agent
High CPU usage when Controller was running for couple of weeks
Fixed log rotation (should work infinitely now)
Fixed regression where Ports public directive was not honored
Connector (v1.1.0)
Features Added
Connector Docker images now build from iofog-docker-images for stability
Bug Fixes
Improved and now return correct HTTP status codes when API call fails
Demo
Features
Huge refactoring and consolidation of Demo repo
Rather than distinct environments, Demo now builds from a single docker-compose environment which is then augmented/decorated
Updated and refactored docker-compose configurations to support V3 api spec
Optimized Dockerfiles
Improved overall user experience, logging and demo output
Re-worked tutorial workflow to simplify user experience
All Docker images now build from iofog-base-images for stability
Added support for integration testing using TestHarness during CI execution
Bug Fixes
Fixed Agent docker depending on unstable location of Java
ioFog v1.0.0
Our very first release.
Get Started with release 1.0.0
Everything of course!
Eclipse ioFogTM is free, open source,and always will be.© 2019 Eclipse Foundation, Inc.More informationLegalReport Security IssuesPrivacy PolicyTerms of UseCopyrightEclipse FoundationContributorsFollow us© 2019 Eclipse Foundation, Inc.
1.2.0 | projects.eclipse.org
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
1.2.0
Issues
Eclipse ioFog 1.2.0
Primary tabsOverview
Issues(active tab)
Release Plan
Review Information
This project has not assigned any issues to this release.
= resolved/fixed
= unsolved/reopened
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
1.2.0 | projects.eclipse.org
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
1.2.0
Review Information
Eclipse ioFog 1.2.0
Primary tabsOverview
Issues
Release Plan
Review Information(active tab)
API Certification: The project leadership certifies that the APIs in this release are "Eclipse Quality".Architectural Issues: We have made major improvements in the architecture of Controller, simplifying deployment and unifying a new visualizer into the distro. Additionally, ioFog agent install now seamlessly supports making the necessary changes to ARM Docker envionrments to remove a bunch of headache for end users.
The addition of iofogctl as a unified CLI drove us to expose further management and monitoring APIs via REST, so the entire platform is now configurabler and manageable via REST.
Security Issues: Inceased identity verification between ioFog Connector and ioFog Controller to allow for widely distributed deployments to operate more securely.
Non-Code Aspects: We have added further documentation tutorials that include
ioFog platform deployment to kubernetes
Installing ioFog via HELM to Kubernetes
iofogctl command line tool and management/deployment of ioFog
Updated all of the demo/tutorial documentation
Improved the API documentation
Conforms To UI/UX Guidelines: Not verified
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
1.2.0 | projects.eclipse.org
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
1.2.0
Release Plan
Eclipse ioFog 1.2.0
Primary tabsOverview
Issues
Release Plan(active tab)
Review Information
Release Date: Monday, October 7, 2019Deliverables:
ioFog engine components
Agent
Connector
Controller
ioFog Kubernetes components
Kubelet - virtual kubelet for managing ioFog Agent nodes
Operator - managing IoFog lifecycle within Kubernetes
Helm Chart - bundle to install ioFog on Kubernetes cluster
iofogctl - CLI tool
Platform Tools - convenience tools to setup infrastructure
Quickstart + Tutorial - simple ioFog package for local installation
Compatibility: Only Agent, Connector and Controller were released in prior releases
CLI compatiblity is preserved with previous release
REST API comatibility is preserved with previous release
Target Environments: Compatible platforms and architectures for all relevant ioFog components:
Agent
x86, arm, arm64
Debian, Ubuntu, Fedora, CentOS, RHEL
Connector
x86, arm, arm64
Debian, Ubuntu, Fedora, CentOS, RHEL
Controller
x86, arm, arm64
Debian, Ubuntu, Fedora, CentOS, RHEL + any system that runs NodeJS
Kubelet
x86-64
Docker image to run on Kuberentes
Operator
x86-64
Docker image to run on Kuberentes
iofogctl
x86-64
Debian, Ubuntu, Fedora, CentOS, RHEL, MacOS, Windows + any system that runs Go
Platform Tools
Linux, macOS
Quickstart + Tutorial
Linux, macOS
Themes: Kubernetes On The EdgeSupporting ioFog and Kubernetes integration.
IP Due Diligence Type: Type A - License Compatibility Certification
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
2.0.0 | projects.eclipse.org
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
2.0.0
Issues
Eclipse ioFog 2.0.0
Primary tabsOverview
Issues(active tab)
Release Plan
Review Information
This project has not assigned any issues to this release.
= resolved/fixed
= unsolved/reopened
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
2.0.0 | projects.eclipse.org
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
2.0.0
Review Information
Eclipse ioFog 2.0.0
Primary tabsOverview
Issues
Release Plan
Review Information(active tab)
Description: Majore ioFog release 2.0.0 brings new ioFog Edge Compute Network (ECN) model, with legacy Connector being replaced by much more robust Router based on Apache Qpid, with Kubernetes integration enabled by Red Hat's project Skupper.
The major release also stabilizes Controller to Agent API specification, so that custom implementations of Agents are now possible, such as Agents in Golang or on Android.
Many other smaller features have been added to the ioFog Engine, such as better Docker image pruning, registry management and more robust centralised logging support.
Conforms To UI/UX Guidelines: Not verified
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
1.3.0 | projects.eclipse.org
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
1.3.0
Review Information
Eclipse ioFog 1.3.0
Primary tabsOverview
Issues
Release Plan
Review Information(active tab)
Description: 1.3.0 brings new quality of life improvements as well as a set of backend changes that extend and unify ioFog's capabilities.
ioFog Kubernetes support has been improved by expanding the ioFog Kubernetes Operator's capabilities. Now orchestration of ioFog Kubernetes is handled by the Operator. Previously, Helm and iofogctl were handling this orchestration themselves, in disparate ways.
ioFog Controller has been updated to allow for external databases to be used instead of the embedded SQLite default database. Helm and iofogctl have been updated to allow users to integrate their external databases during the deployment process.
The unified CLI, iofogctl, has been improved to allow users more granular control over resources like Connectors and Microservices. Users can now view realtime deployment status of Microservices through iofogctl due to improvements to both ioFog Controller and Agent.
The iofog-go-sdk has been updated to provide an HTTP client for ioFog Controller's REST API.
Conforms To UI/UX Guidelines: Not verified
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
1.3.0 | projects.eclipse.org
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
1.3.0
Release Plan
Eclipse ioFog 1.3.0
Primary tabsOverview
Issues
Release Plan(active tab)
Review Information
Release Date: Monday, October 21, 2019Deliverables:
Engine
Agent logging improvements
Microservice deployment status reporting
Kubernetes
New CRD and Controller in Operator for orchestrating deployments
Helm and iofogctl integration with Operator
iofogctl
Revamp to support HA configurations
Commands for Connector deployment
Demos and Product Demos
Update to use iofogctl
Compatibility: YAML specification for iofogctl deploy commands have changed. A Control Plane type has been made to support HA configurations. See iofog.org documentation for details.
Target Environments: Compatible platforms and architectures for all relevant ioFog components:
Agent
x86, arm, arm64
Debian, Ubuntu, Fedora, CentOS, RHEL
Connector
x86, arm, arm64
Debian, Ubuntu, Fedora, CentOS, RHEL
Controller
x86, arm, arm64
Debian, Ubuntu, Fedora, CentOS, RHEL + any system that runs NodeJS
Kubelet
x86-64
Docker image to run on Kuberentes
Operator
x86-64
Docker image to run on Kuberentes
iofogctl
x86-64
Debian, Ubuntu, Fedora, CentOS, RHEL, MacOS, Windows + any system that runs Go
Platform Tools
Linux, macOS
Quickstart + Tutorial
Linux, macOS
IP Due Diligence Type: Type A - License Compatibility Certification
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
1.3.0 | projects.eclipse.org
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
1.3.0
Issues
Eclipse ioFog 1.3.0
Primary tabsOverview
Issues(active tab)
Release Plan
Review Information
This project has not assigned any issues to this release.
= resolved/fixed
= unsolved/reopened
2.0.0 | projects.eclipse.org
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse ioFog
2.0.0
Release Plan
Eclipse ioFog 2.0.0
Primary tabsOverview
Issues
Release Plan(active tab)
Review Information
Release Date: Monday, June 1, 2020Deliverables: Engine
Retired ioFog Connector in favor of new Red Hat Skupper routers based on Apache AMQP
Expand supported architectures from x86/ARM to any number of defined architectures and architecture + capability labels
Finalize definition of agent-to-controller interface and APIs to enable the community to write their own ioFog Agents in any language
Docker pruning in Agent
Registry management in Controller
Universal logging capability with centralized access and distributed handling
iofogctl
Enhanced status information about edge microservices
Support for Windows OS
Kubernetes
Better Minikube and local environment experience (show how this complements with the platform repo / tools)
Integrations
Eclipse Hono integration for starting up a Hono environment with edge capabilities from ioFog - key Hono components deployed and managed at the edge
VMware Tanzu integration for providing seamless edge capabilities for managed k8s environments
Compatibility: YAML specification for iofogctl commands have changed to incorporate the new Router model. Please see documentation for ioFog release 2.0 on iofog.org website.
Target Environments: Compatible platforms and architectures for all relevant ioFog components:
Agent & Router
x86, arm, arm64
Debian, Ubuntu, Fedora, CentOS, RHEL
Controller
x86, arm, arm64
Debian, Ubuntu, Fedora, CentOS, RHEL + any system that runs NodeJS
Kubelet
x86-64
Docker image to run on Kuberentes
Operator
x86-64
Docker image to run on Kuberentes
iofogctl
x86-64
Debian, Ubuntu, Fedora, CentOS, RHEL, MacOS, Windows + any system that runs Go
IP Due Diligence Type: Type A - License Compatibility Certification
Related Projects
Project Hierarchy:Eclipse IoT
Eclipse ioFog
Tags
Technology TypesInternet of Things
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
