[
    {
        "py/object": "model.LinkKeyword.LinkKeyword",
        "Id": 1,
        "Description": "Message Queuing Telemetry Transport",
        "Keys": [
            "MQTT",
            "ZMQ",
            "RabbitMQ"
        ],
        "projects": [
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "paho",
                "Sentences": [
                    "A broker in MQTT handles receiving published messages and sending them on to any clients who have subscribed.",
                    "As well as standalone MQTT brokers, it has also been integrated into other message queuing brokers such as ActiveMQ and RabbitMQ, providing a bridge into the enterprise network.",
                    "Diving deeper into MQTT",
                    "Each message in MQTT can have its quality of service and retain flag set.",
                    "Finally we disconnect from the broker and we've completed an MQTT session.",
                    "First, as the Paho MQTT code isn't in Maven Central (yet), we need to include its repository – open the",
                    "How to read MQTT messages from subscribed topics?",
                    "In this article we'll be showing how to use the Paho Java MQTT libraries to publish and subscribe.",
                    "In this article we’ll show how MQTT and the Eclipse Paho project can let you answer that challenge.",
                    "In this snippet, we create a client connection to an MQTT broker running on the local host, over TCP to port 1883 (the default port for MQTT).",
                    "It’s a powerful tool and we haven't even started looking at it in the environment it was designed for, in the Internet of Things connecting sensors to servers - we'll come to that in our next part of Practical MQTT with Paho.",
                    "MQTT",
                    "MQTT 3.1",
                    "MQTT 3.1.1 is also an ISO standard",
                    "MQTT also has a very light API, with all of five protocol methods, making it easy to learn and recall, but there's also support for SSL-encrypted connections and username/password authentication for clients to brokers.",
                    "MQTT and MQTT-SN are lightweight publish/subscribe messaging transports for TCP/IP and connectionless protocols (such as UDP) respectively.",
                    "MQTT is a light weight publish/subscribe messaging protocol, originally created by IBM and Arcom (later to become part of Eurotech) around 1998.",
                    "MQTT is a protocol and protocols need client implementations.",
                    "MQTT is a publish/subscribe messaging system that allows clients to publish messages without concerning themselves about their eventual destination; messages are sent to an MQTT broker where they may be retained.",
                    "MQTT is an",
                    "MQTT was originally created by IBM's Andy Stanford-Clark and Arlen Nipper of Arcom (taken over later by Eurotech) as a complement to enterprise messaging systems so that a wealth of data outside the enterprise could be safely and easily brought inside the enterprise.",
                    "MQTT.org",
                    "One important point to note is that we have, for simplicity, only covered the synchronous version of the API where every call to the MQTT API blocks and the only thing that comes through on its own schedule are inbound messages from subscriptions.",
                    "Practical MQTT with Paho",
                    "Practical MQTT with Paho »",
                    "Serving statistics via MQTT",
                    "Since making its debut, MQTT has proved itself in production scenarios.",
                    "So, MQTT and the Paho project gives us a flexible, lightweight protocol with Java and C and Lua and other implementations which can be easily tuned to a range of use cases and doesn't place requirements on how we pass data across it.",
                    "Talking Small: Using Eclipse Paho's MQTT on BeagleBone Black and Raspberry Pi »",
                    "The Eclipse Foundation is no stranger to Mosquitto – it runs a public instance of Mosquitto as an MQTT sandbox on",
                    "The core of listening to MQTT activity in the Java API is the",
                    "The messages' payloads are just a sequence of bytes, up to 256MB, with no requirements placed on the format of those payloads and with the MQTT protocol usually adding a fixed header of two bytes to most messages.",
                    "There is an Eclipse IoT sandbox MQTT server available at",
                    "To allow for the variety of possible situations where MQTT can be put to use, it lets clients and brokers set a \"Quality of Service\" on a per-message basis from \"fire and forget\" to \"confirmed delivery\".",
                    "To avoid the obvious problem of every client getting every message published by every other client, MQTT messages are published with what are called",
                    "To start thinking about MQTT in code, here's the simplest use of the MQTT API:",
                    "Under the Paho banner, open source client libraries for MQTT are being curated and developed; there are already MQTT C and Java libraries with Lua, Python, C++ and JavaScript at various stages of development.",
                    "We've now got a basic Paho MQTT publish client running and we can start exploring the various options available.",
                    "When you progress further into developing MQTT-based applications, it is worth considering whether using the synchronous API or the asynchronous API is more appropriate for your case.",
                    "Why MQTT?",
                    "broker is by far the easiest to configure and run for MQTT-only work.",
                    "is being used as the basis for an OASIS standard for messaging telemetry, a basis that’s not expected to vary much, if at all, from the MQTT specification in order to maintain compatibility.",
                    "of MQTT and MQTT-SN in a variety of programming languages.",
                    "var contentTitle = \"Practical MQTT with Paho\", contentPath = \"/articles/practical-mqtt-with-paho\", contentUUID = \"1248a930-fcc8-43fe-9947-dd86d69bfe37\", authorUserCSVIds = \"101760065\";"
                ],
                "relationships": [
                    "use"
                ]
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "mosquitto",
                "Sentences": [
                    ", to allow Mosquitto to connect to other MQTT servers.",
                    "An MQTT",
                    "As well as accepting connections from MQTT client applications, Mosquitto has a",
                    "As well as accepting connections from MQTT client applications, Mosquitto has a bridge which allows it to connect to other MQTT servers, including other Mosquitto instances.",
                    "Both MQTT and MQTT-SN are client-server protocols, for which a server is needed to distribute messages between the client applications.",
                    "Can MQTT broker send custom message (commands) back to publisher.",
                    "Can the MQTT Server be installed in a HA configuration",
                    "Control arduino via MQTT",
                    "Disappearing Mosquitto 1.6.0 MQTT bridge messages",
                    "Eclipse Mosquitto provides a lightweight server implementation of the MQTT protocol that is suitable for all situations from full power machines to embedded and low power machines.",
                    "How to securely store the password of Mosquitto as a client to RabbitMQ",
                    "I have to receive MQTT data from a subscribed topic and I want to save the data in a text file",
                    "In 2010, Roger Light learned about MQTT and RSMB from an Andy Stanford-Clark presentation.",
                    "It is less mature than MQTT, the specification being published in 2008, by Andy Stanford-Clark and Hong Linh Truong, both of IBM.",
                    "It's aim was to be a minimalist MQTT server, and according to the usual alphaWorks practices, was closed source and released under an evaluation-only license.",
                    "MODBUS to MQTT",
                    "MQTT",
                    "MQTT - SSL Connection to test.mosquitto.org:8883",
                    "MQTT - SSL Connection to test.mosquitto.org:8883 refused using mosquitto",
                    "MQTT BLE gateway",
                    "MQTT Broker - Topic remap or message edit",
                    "MQTT Community",
                    "MQTT Community site",
                    "MQTT Protocol discussion Google Group",
                    "MQTT and MQTT-SN are undergoing an increase in interest as a consequence of the activity and publicity around the",
                    "MQTT client is unable to connect with mosquitto broker through mqtt/tls protocol",
                    "MQTT create username and password using PHP",
                    "MQTT disconnect problems",
                    "MQTT is currently undergoing standardization at",
                    "MQTT mosquitto client",
                    "MQTT no connection with ESP8266 but connect to Android",
                    "MQTT protocol discussion Google Group",
                    "MQTT refuses connection with ESP8266 and Laptop but works with Android",
                    "MQTT-SN (currently being renamed from MQTT-S) is a protocol derived from MQTT, designed for connectionless underlying network transports such as UDP.",
                    "MQTT.fx: Can not send message",
                    "MQTT.org",
                    "Mosquitto MQTT",
                    "Mosquitto MQTT issue on AWS",
                    "Mosquitto is a lightweight implementation of a broker that supports the MQTT protocol.",
                    "Mosquitto is able to translate and transfer messages between MQTT and MQTT-SN, so that it can act as a gateway between devices which communicate with either protocol.",
                    "Mosquitto keeps up to date with any MQTT or MQTT-SN specification changes, for instance the outcome of the OASIS MQTT specification standardization.",
                    "Mosquitto provides a lightweight server implementation of the MQTT and MQTT-SN protocols, written in C. The reason for writing it in C is to enable the server to run on machines which do not even have capacity for running a JVM.",
                    "OASIS MQTT Technical Committee",
                    "Paho provides MQTT client libraries in various languages.",
                    "Posting multiple messages using mosquitto MQTT publisher",
                    "Problem in receiving data in MQTT paho C",
                    "Re: [mosquitto-dev] MQTT-based voltage sensor",
                    "Received MQTT data from a subscribed topic on text file.",
                    "Sensors and actuators, which are often the sources and destinations of MQTT and MQTT-SN messages, can be very small and lacking in power.",
                    "Sensors and actuators, which are often the sources and destinations of MQTT messages, can be very small and lacking in power.",
                    "Synchronize Wireless Temperature sensor data with google sheet and MQTT",
                    "The Mosquitto project provides a small server implementation of the MQTT and MQTT-SN protocols.",
                    "The combination of Paho and Mosquitto will allow complete MQTT and MQTT-SN based M2M solutions to be built.",
                    "The current version of MQTT is 3.1; the specification is for which is held on",
                    "The definition of the MQTT-SN protocol is held at",
                    "The existing open-source Mosquitto project is already linked with Eclipse as it provides the MQTT sandbox server available at m2m.eclipse.org.",
                    "The proposed Mosquitto project is complementary with existing Eclipse projects that make use of MQTT, such as Paho and Koneki.",
                    "The second contribution is the Really Small Message Broker server and MQTT-SN client code, all of which is copyright IBM in its entirety - there is no third party licensed code.",
                    "The server has the following features, which are not described in the MQTT specification:",
                    "This allows networks of MQTT servers to be constructed, passing MQTT messages from any location in the network to any other, depending on the configuration of the bridges.",
                    "This includes the broker/server itself, as well as MQTT client libraries in C, C++, Python and JavaScript.",
                    "Two ESP's sending to one MQTT Server with data loss.",
                    "Unable to establish an MQTT connection",
                    "Use Advanced MQTT tools to send wireless vibration sensor data to node red dashboard",
                    "User authorization - the ability to restrict user access to MQTT topics.",
                    "Using MQTT with HTTP serving stream",
                    "Web Based MQTT Client Feedback",
                    "Wireless Sensor+ Google Sheet+MQTT",
                    "[mosquitto-dev] MQTT-based voltage sensor",
                    "flow data bteween SQL Data base and SmartPhoen via MQTT broker",
                    "mqtt.eclipse.org: Receiving to many MQTT Messages",
                    "project, which provides an easy to use realtime spreadsheet like interface to allow the incoming data from MQTT, OPC-UA, REST, and other protocols to be processed by non-developers to produce dashboards, control processes, or just about anything requiring multiprotocol input and output.",
                    "sample app for connecting to CloudMQTT or Mosquitto broker",
                    "using both MQTT with HTTP causing MQTT messages to be lost (Python)",
                    "which allows it to connect to other MQTT servers, including other Mosquitto instances."
                ],
                "relationships": [
                    "interchangeable",
                    "use"
                ]
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "californium",
                "Sentences": [
                    "Together with MQTT, CoAP is one of the popular IoT protocols."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "ditto",
                "Sentences": [
                    "(mandatory for MQTT 3): ID of the thing to send the message command or response to.",
                    "(mandatory for MQTT 3): Subject of the message.",
                    ", MQTT messages with QoS 1 and 2 could get lost (e.g.",
                    ", consumed messages from the MQTT 3.1.1 broker are treated in the following way:",
                    ", if the MQTT 3.1.1 broker ran into an error before an acknowledgement message was received",
                    ", if the message was successfully ACKed by the MQTT 3.1.1 broker or when the target has QoS 0",
                    ", the MQTT message is simply acknowledged (",
                    ", the same MQTT connection/session is used both: for subscribing to messages, and for publishing messages.",
                    ": contains the MQTT QoS value of a received message",
                    ": contains the MQTT retain flag of a received message",
                    ": contains the MQTT topic on which a message was received",
                    "Acknowledges the received MQTT 3.1.1 message",
                    "Arduino based example on a ESP8266 board publishing read out sensor values in Ditto Protocol via the MQTT endpoint of",
                    "As MQTT 3.1.1 does not support headers in its protocol, a",
                    "By default (configured true), a single Ditto connection would open 2 MQTT connections/sessions: one for subscribing and one for publishing.",
                    "Configure the MQTT client’s",
                    "Configures a specific MQTT client ID for the case that",
                    "Configures that the MQTT connection re-connects whenever a consumed message (via a connection source) with QoS 1 (“at least once”) or 2 (“exactly once”) is processed but cannot be",
                    "Configures whether to create a separate physical client and connection to the MQTT broker for publishing messages, or not.",
                    "Connection configuration to create a new MQTT connection:",
                    "Consume messages from MQTT brokers via",
                    "Create a connection (MQTT)",
                    "Ditto supports certificate-based authentication for MQTT connections.",
                    "Establishing a connection to an MQTT 3.1.1 endpoint",
                    "Establishing and maintaining connections to AMQP 0.9.1, AMQP 1.0, MQTT and Apache Kafka endpoints",
                    "Following are some specifics for MQTT connections:",
                    "For MQTT 3.1.1 sources, when configuring",
                    "For MQTT 3.1.1 targets, when configuring",
                    "For an MQTT connection, the target address is the MQTT topic to publish events and messages to.",
                    "For an MQTT connection:",
                    "Here is an example MQTT connection, which checks the broker certificate and authenticates by a client certificate.",
                    "How to establish a MQTT connection",
                    "IoT-Device connected directly to Ditto via MQTT - controlled by a custom solution",
                    "MQTT 3.1.1 does not support headers in its protocol, however Ditto extracts the following headers from each consumed message:",
                    "MQTT 3.1.1 messages have no application headers.",
                    "MQTT 3.1.1 properties",
                    "MQTT 3.1.1 protocol binding",
                    "MQTT 3.1.1 protocol binding • Eclipse Ditto • a digital twin framework",
                    "MQTT 5 protocol binding",
                    "MQTT adapter into the cloud.",
                    "Once the MQTT 3.1.1 client signals that the message was acknowledged by the MQTT 3.1.1 broker, the following information is mapped to the automatically created",
                    "Overall example JSON of the MQTT",
                    "Overwrites the default MQTT client id.",
                    "Re: [ditto-dev] Support for MQTT in ditto-client",
                    "Support of any Quality of Service depends on the external MQTT broker.",
                    "Support of any Quality of Service depends on the external MQTT broker;",
                    "That causes that the MQTT broker will re-publish the message once the connection reconnected.",
                    "The MQTT 3.1.1 binding offers additional",
                    "The headers are lost for connection protocols without application headers such as MQTT 3.",
                    "There are various APIs in order to interact with the devices: an HTTP and WebSocket API, additionally the capability to integrate with other systems via AMQP, MQTT and Apache Kafka.",
                    "When MQTT messages are sent in",
                    "When your device now sends its payload via the MQTT adapter of Eclipse Hono:",
                    "[ditto-dev] Support for MQTT in ditto-client",
                    "acknowledges the received MQTT 3.1.1 message as redelivery does not make sense",
                    "and an AMQP, MQTT 5, Kafka message with payload or an HTTP request with body of 6 bytes",
                    "and send messages to MQTT brokers via",
                    "and there is also an MQTT target configured to publish messages, the messages to be published during the reconnection phase are lost",
                    "are MQTT topics to subscribe to.",
                    "as MQTT 3.1.1 has no application headers.",
                    "but to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs",
                    "closes and reconnects the MQTT connection in order to receive unACKed QoS 1/2 messages again",
                    "come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before",
                    "field of message commands and message responses to the payload of AMQP, MQTT and Kafka messages and the body of HTTP requests.",
                    "if not, the \"replyTarget.address\" may also be filled with a static reply address where the MQTT device sends its replies to",
                    "in order to publish via another MQTT connection",
                    "is used as MQTT client ID.",
                    "or simply acknowledges the received MQTT 3.1.1 message",
                    "some \"fake headers\" may now be used in a headerMapping for MQTT 3, see:",
                    "the \"replyTarget\" in a connection's target defines on which address responses are consumed for outgoing messages Ditto sends (in this case published to a MQTT topic)",
                    "the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some point",
                    "to apply for the used MQTT client."
                ],
                "relationships": [
                    "use"
                ]
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "hawkbit",
                "Sentences": [
                    "(Optional) RabbitMQ: 3.6,3.7",
                    "Auf Ebene des Transportprotokolls sehen wir von HTTP über MQTT, AMQP oder CoAP so ziemlich alles im Einsatz.",
                    "Configure RabbitMQ connection settings for update server and device simulator (optional).",
                    "Correct outdated RabbitMQ listener properties (",
                    "RabbitMQ",
                    "Start the hawkBit Update Server and Device Simulator together with an MySQL and RabbitMQ instance as services within a swarm",
                    "Start the hawkBit Update Server together with an MySQL and RabbitMQ instance as containers",
                    "There are all sorts of transport protocols currently in use, ranging from HTTP to MQTT, AMQP, and CoAP.",
                    "hi... have just run the docker image, which I thought is standalone.... but it fails badly looking for an MQTT server!",
                    "uses RabbitMQ binder."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "kura",
                "Sentences": [
                    "(Dave, 20 mins) • Presentation of the Shoot-A-Pi arcade game simulator, game logic explanation, MQTT topics and metrics (Luca, 15 mins) • Hardware setup on the Raspberry Pi B+ (15 mins) • Assisted creation of the Shoot-A-Pi bundle (90 mins) • Tests (15 mins) • Dashboard showcase and final game (15 mins) • Q&A",
                    "* #1246: [Wires] MQTT namespace",
                    "* #1644: [Artemis] MQTT clients fail to reconnect after the broker is restarted",
                    "* Added selection of the MQTT protocol version to the MqttDataTransport configuration",
                    "* Added support for MQTT over Websockets",
                    "* Cloud connections (MQTT) with local store and forward capabilities to handle disconnected states as well as Google Protobuf message packing",
                    "* Improved management and security of the keystore used for the MQTT",
                    "* MQTT publish rate improvement: A limit parameter will be added to the MQTT transport service",
                    "* MqttDataTransport configuration: changed default MQTT protocol version to 3.1.1.",
                    "+ Business Application IoT Gateways Revolution:Towards Real-time Actionable Data MQTT Broker",
                    "+ Shoot A Pi Main class overview  Implements ConfigurableComponent  It exposes a component in the Kura Web UI, letting the user change configuration parameters from any browser  Acquires the CloudService  Publishes data to the MQTT Broker using the MQTTDataTransport  Implements CloudClientListener  Listens for requests on the Commands MQTT topic  Manages the Executors  It starts, stops and cancels the runnables and wires everything together The ShootAPi class is responsible for managing the whole application",
                    "+ Shoot-A-Pi Arcade Shooter Simulator Web Dashboard Architecture MQTT Broker Shoot A Pi PAHOforJavaScript Google Protocol Buffers ByteBuffer JSX Compressor Dashboard Logic Web Dashboard Complete dashboard in the Dashboard folder",
                    "ASSET-V1 MQTT Namespace",
                    "Fragmentation Protocols to Cloud – MQTT – LWM2M – CoAP – AllSeen Sensor Protocols – CANBus – MODBus – OPC-UA – Bluetooth – BLE – DECT – ZigBee – Z-Wave Hardware – ARM – Intel Standards – oneM2M – Thread – AllSeen – Industrial Internet Consortium – IEEE",
                    "It features ready-to-use field protocols (including Modbus, OPC-UA, S7), an application container, and a web-based visual data flow programming to acquire data from the field, process it at the edge, and publish it to leading IoT Cloud Platforms through MQTT connectivity.",
                    "Java SE 7 / 8 (OpenJDK) OSGi Application Container (Eclipse Equinox, Concierge) Device Abstraction javax.comm Basic Gateway Services DB Service Clock Service Device Profile Watchdog Network ConfigurationNetwork Configuration Field ProtocolsConnectivity and Delivery Data Services MQTT Paho AdministrationGUI Applications Your Application RemoteManagement Configuration Management javax.usb w/ udev access Cloud Services Your Application Firewall, Port Forwarding Link Monitors Cellular, Wi-Fi, Ethernet GPS Position GPIO / SPI / PWM / I2C jdk.dio Modbus CANBus Custom Protocols Updates Management RemoteAccess Java HID APIs javax.bluetooth / BLE ... Eclipse Open IoT Stack for Java Add your app Add your app",
                    "Java SE 7 / 8 (OpenJDK) OSGi Application Container (Eclipse Equinox,Concierge) Device Abstraction javax.comm Basic Gateway Services DB Service Clock Service Device Profile Watchdog Network ConfigurationNetwork Configuration Field ProtocolsConnectivity and Delivery Data Services MQTT Paho AdministrationGUI Applications Your Application RemoteManagement Configuration Management javax.usb w/ udev access Cloud Services Your Application Firewall, Port Forwarding Link Monitors Cellular, Wi-Fi, Ethernet GPS Position GPIO / SPI / PWM / I2C jdk.dio Modbus CANBus Custom Protocols Updates Management RemoteAccess Java HID APIs javax.bluetooth / BLE ...",
                    "Kura + Wires • Enhanced Functional Architecture Drivers CANbus ModbusOPC UA S7 Asset Management Asset Java SE 7 / 8 (OpenJDK) OSGi Application Container (Eclipse Equinox, Concierge) Device Abstraction javax.comm Basic Gateway Services DB Service Clock Service Device Profile Watchdog Network ConfigurationNetwork Configuration Connectivity and Delivery Data Services MQTT Paho AdministrationGUI Applications Your Application RemoteManagement Configuration Management javax.usb w/ udev access Cloud Services Firewall, Port Forwarding Link Monitors Cellular, Wi-Fi, Ethernet GPS Position GPIO / SPI / PWM / I2C jdk.dio Custom Protocols Updates Management RemoteAccess Java HID APIs javax.bluetooth / BLE Your Application Kura Wires ...",
                    "Kura Framework Features MQTTGSM/GPRS 3G/4G EVDO SNMP HTTP / REST ServicesWeb ServicesBluetooth / BTLE Wi-Fi 802,15,4 / Zigbee RS485 GPIO RS232 CANbus SMBus Modbus Device Mgmt WatchDog SSLLegacy JNI’s Security SOA Power Mgmt Location Based Services",
                    "Kura Wires MQTT namespace",
                    "MQTT Transport 32",
                    "Multi-Service Gateway Approach Maximum SW Development Flexibility Multi- Service Gateway Yocto / WRL Hardware Platform Java VM OSGi Everyware Cloud Client Admin GUI Foundation Layer Business Logic Yocto Hardware Platform Java VM OSGi Everyware Cloud Client Admin GUI Foundation Layer Business Logic MQTT Other Cloud Client",
                    "Shoot-A-Pi Arcade Shooter Simulator Architecture Eclipse Equinox OSGi Java VM Linux Hardware Device/Gateway (data collection) MQTT Broker MQTT Websockets REST APIs Web Dashboards I2C Human Interface Device RF GPIO Laser",
                    "Shoot-A-Pi Arcade Shooter Simulator MQTT Topics and Metrics shootapi/ COMMAND/ DATA/ reset new stop shot score reload reloading - Timestamp - Metrics: Game ID - Timestamp - Metrics: Remaining rounds - Timestamp - Metrics: Current score - Timestamp - Metrics: Realod flag - Timestamp - Metrics: Realoding status",
                    "Simple Artemis MQTT Broker Service",
                    "the MQTT Adapter",
                    "to allow throttling of MQTT messages to prevent unnecessary congestion on the MQTT broker."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "om2m",
                "Sentences": [
                    "(XML or JSON) Serialization of the request and response primitives in MQTT protocol",
                    "Create AE via MQTT Binding",
                    "Create OneM2M subscription resource with MQTT",
                    "Forwarding Request MQTT",
                    "How to use oneM2M MQTT binding",
                    "MQTT Binding",
                    "MQTT Server Authorization (request/response topic)",
                    "MQTT communication binding",
                    "MQTT: Error in creating container/content instance on MN-CSE/IN-CSE",
                    "MQTT?",
                    "Notification over MQTT",
                    "OM2M MQTT Response Parameters",
                    "OM2M MQTT-TLS",
                    "Posting data object with MQTT",
                    "Problem when sending a notification over MQTT",
                    "Security over MQTT",
                    "Test MQTT blinding in OM2M",
                    "[Missing] MQTT binding enabled official release package in OM2M website",
                    "[REQUEST] Official Release with MQTT binding feature pre-built"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "ponte",
                "Sentences": [
                    ", on HTTP, MQTT and CoAP standard ports.",
                    "All the source code of QEST, an initial implementation for bridging REST and MQTT world, which is available at GitHub:",
                    "Configuration with MQTT and Redis",
                    "Define a simple REST API to expose the machines needs through REST, exposing multiple protocols (MQTT, CoAP) through the same API.",
                    "In order to publish a message that can be read from CoAP, a MQTT client needs to set the",
                    "In order to publish a message that can be read from HTTP, a MQTT client needs to set the",
                    "Introducing the QEST broker: Scaling the IoT by bridging MQTT and REST",
                    "MQTT",
                    "MQTT API",
                    "Ponte allows you to publish and receive the data using any protocol: HTTP, MQTT and CoAP.",
                    "Ponte bridges three different application protocols: HTTP, MQTT and CoAP.",
                    "Publishing MQTT to CoAP",
                    "Publishing from CoAP to MQTT",
                    "Publishing from HTTP to MQTT",
                    "Publishing from MQTT to HTTP",
                    "RabbitMQ",
                    "Thanks to MQTT subscribes and CoAP observe, your devices can get updated in real-time.",
                    "Thanks to MQTT-over-Websockets, your users can too!",
                    "You can mix and match: submit with CoAP and subscribe via MQTT.",
                    "can be run on top of MQTT broker while using Redis (or similarly MongoDB) with the following configuration:",
                    "requires a persistent storage for HTTP syndication and MQTT support.",
                    "which implements most of the MQTT 3.1 spec."
                ],
                "relationships": [
                    "interchangeable"
                ]
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "vorto",
                "Sentences": [
                    "(Free plan) for MQTT connectivity based on Eclipse Hono",
                    "Before we can start sending data via MQTT again, we need to make some changes to the Bosch IoT Hub Device Registry.",
                    "But we can change that quickly by sending some geolocation data to the MQTT endpoint.",
                    "Eclipse Paho MQTT",
                    "MQTT connector.",
                    "More code generators, that generate device code that integrates with Eclipse Hono via MQTT.",
                    "One of them is MQTT, exactly what we need in our solution to connect our sensors.",
                    "Publish data via MQTT",
                    "Step 2: Sending geolocation data to Bosch IoT Hub using MQTT protocol",
                    "Test the app by sending data via MQTT in different payload representations",
                    "Very much like in a gateway node, a cloud IoT platform normalizes incoming telemetry device data from various protocol adapters (MQTT, CoAP, etc) in order to provide value added services to northbound IoT solutions.",
                    "When you start the application and send data for the two sensors via MQTT, you will see the normalized geolocation data printed in the console of the application."
                ],
                "relationships": [
                    "use"
                ]
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "4diac",
                "Sentences": [
                    ": If you want to use a specific communication protocol supported by 4diac FORTE, for example MQTT, OPC UA, Modbus and so on, follow the link.",
                    "Allow to set security configurations for MQTT",
                    "ID data format and SD/RDs config for MQTT communication",
                    "Installing and Configuring MQTT in 4diac",
                    "It features ready-to-use field protocols (including Modbus, OPC-UA, S7), an application container, and a web-based visual data flow programming to acquire data from the field, process it at the edge, and publish it to leading IoT Cloud Platforms through MQTT connectivity.",
                    "MQTT",
                    "MQTT Implementation in 4diac",
                    "MQTT using",
                    "MQTT with Eclipse Paho",
                    "SUBSCRIBE Function Block truncates message received from MQTT",
                    "We already have MQTT, plain HTTP, Coap, and last year's GSoC brought us AMQP 1.0.",
                    "some suggestions for improving MQTT layer"
                ],
                "relationships": [
                    "use",
                    "interchangeable"
                ]
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "hono",
                "Sentences": [
                    ", then the payload size of the telemetry, event and command messages are calculated in accordance with the configured value and then reported to the metrics by the AMQP, HTTP and MQTT protocol adapters.",
                    "13 ● Interact with devices regardless of communication protocol ● Support large number of devices (106 ) ● Don't trade in throughput for reliability ● Support arbitrary device protocols (MQTT, HTTP, CoAP, AMQP 1.0, etc) ● Integrate with existing infrastructure Eclipse Hono Goals",
                    "13 ● Tailored general messaging for IoT solutions ● Provide standard APIs for interacting with devices ● Support for arbitrary protocols (MQTT, AMQP 1.0, HTTP, …) ● Support different underlying messaging infrastructures ○ AMQP 1.0 based ○ JMS ○ Apache Kafka ○ RabbitMQ Eclipse Hono Goals",
                    "14 ● Uniform APIs for interacting with devices (regardless of protocol) ● Out-of-the-Box Connectivity for Devices supporting MQTT or HTTP ○ Additional protocols by implementing custom Protocol Adapters ● Device-level Authentication ● Tenant based Security Model ● Support for arbitrary messaging infrastructure (AMQP 1.0 based) ● Horizontal Scalability ● End-to-End Flow Control Eclipse Hono Features",
                    "15 Eclipse Hono Building Blocks & Scope API Endpoints & Security Protocol Adapters Business Applications Devices AMQP 1.0 Hono AMQP messaging network end to end flow control AMQP 1.0 AMQP 1.0 HTTP MQTT etc.",
                    "24 Eclipse Hono Registration Assertion Flow MQTT Adapter Hono Messaging Device Registration 1. publish telemetry 2. assert (tenant-id, device-id) 6. forward message 5. create message (incl.",
                    "24 → /telemetry/tenand_id 17 DEMO Qpid Dispatch Router Artemis MQTT, HTTP clients 24 → /telemetry Hono Components Consumer application",
                    "24 → /telemetry/tenand_id 30 DEMO Qpid Dispatch Router ActiveMQ Artemis MQTT, HTTP clients 24 → /telemetry Hono Components Consumer application",
                    "25 Eclipse Hono Credentials ● handle authentication for devices on protocol adapters ● used by protocol adapters to retrieve credentials used to authenticate devices connecting to the adapter (MQTT, HTTP, …) ● different types of credentials ○ psk, hashed password, public key, … ● operations ○ add, get, update, remove ● Where an identity management system is already in place (i.e.",
                    "25 Eclipse Hono Credentials ● supports the process of authenticating devices ● used by protocol adapters to retrieve credentials used to authenticate devices connecting to the adapter (MQTT, HTTP, …) ● different types of credentials ○ psk, hashed password, public key, … ● operations ○ get (mandatory) ○ add, update, remove (optional) ● where a system for doing this is already in place … ○ implement this API as a facade to the existing system",
                    "26 Eclipse Hono Device Authentication Flow MQTT Adapter Credentials 1.",
                    "8 IoT : Interoperability Open standards AMQP 1.0 MQTT HTTP CoAP XMPP STOMP Here are some of the 14 ...",
                    "8 IoT : interoperability Open standards AMQP 1.0 MQTT HTTP CoAP XMPP STOMP",
                    ": AMQP 1.0 and MQTT.",
                    "> MQTT Adapter",
                    "> MQTT Adapter Configuration",
                    "A client uploads a message to the MQTT adapter.",
                    "AMQP/MQTT: Gateways may subscribe for commands to disabled devices",
                    "Assuming that the MQTT protocol adapter’s IP address is",
                    "Before uploading command responses, the MQTT and AMQP adapters now check whether the device is registered and also the adapter is enabled for the tenant.",
                    "Birdview PerspectiveBirdview Perspective Devices Solutions Application 1 Application 2 Application 3 Hono HTTP Adapter MQTT Adapter Device Registry AMQP 1.0 AMQP 1.0 Network Network Hono",
                    "Both the HTTP adapter as well as the MQTT adapter require devices to authenticate during connection establishment by default.",
                    "Command and Control - MQTT DemoCommand and Control - MQTT Demo $ ./mosquitto_pub -p 1883 -i 4711 -u \"sensor1@DEFAULT_TENANT\" -P \"hono-secret\" -t 'control///res/101089ccdcca-ed33-43c5-ada7-8a3532bbc919/200' -m \"command received and executed.\"",
                    "Command and ControlCommand and Control MQTTMQTT How to reach the devices?",
                    "Commands using MQTT",
                    "Contains the name of the MQTT topic that the Kura gateway has originally published the data to.",
                    "Contains the name of the MQTT topic that the device has originally published the data to.",
                    "Control API Endpoints Auth Service Device Registry Protocol Adapters Business Applications Devices AMQP 1.0 AMQP 1.0 HTTP, MQTT, AMQP 1.0 Qpid Dispatch Router ActiveMQ Artemis Broker AMQP 1.0 Hono components Messaging Infrastructure",
                    "Control API Endpoints Auth Service Device Registry Protocol Adapters Business Applications Devices AMQP 1.0 AMQP 1.0 ● EnMasse … ○ a messaging-as-a-service platform ○ elastic scaling ○ multiple communication patterns ○ … and more and more … ○ more info : enmasse.io HTTP, MQTT, AMQP 1.0",
                    "Control Protocol Adapters Business Applications Devices AMQP 1.0 AMQP 1.0 HTTP, MQTT, AMQP 1.0 end to end flow control API Endpoints & Security",
                    "Devices can also publish data to Hono using the MQTT protocol.",
                    "During the course of this guide, the devices publishing data will be represented by means of running some command line tools for posting HTTP requests and for publishing MQTT packets.",
                    "Eclipse Hono MQTT adapter: MQTT topic mapping",
                    "Eclipse Hono has supported the use of TLS in its HTTP and MQTT protocol adapters from the very beginning.",
                    "Eclipse Hono is designed to support multiple types of credentials, supporting authentication schemes like HTTP Basic auth, MQTT username/password authentication, X.509 client certificates and other TLS ciphers that support client authentication using Pre-Shared Keys or RawPublicKeys.",
                    "Eclipse-hono MQTT adapter: cannot process message",
                    "For information on how that works and additional examples for interacting with Hono via MQTT, please refer to the",
                    "Gateways running Kura version 4 and later should connect to the MQTT adapter instead.",
                    "Generic MQTT Protocol Gateway Template",
                    "HONO_MQTT_AUTHENTICATION_REQUIRED",
                    "HONO_MQTT_BIND_ADDRESS",
                    "HONO_MQTT_CERT_PATH",
                    "HONO_MQTT_COMMAND_ACK_TIMEOUT",
                    "HONO_MQTT_DEFAULTS_ENABLED",
                    "HONO_MQTT_INSECURE_PORT",
                    "HONO_MQTT_INSECURE_PORT_BIND_ADDRESS",
                    "HONO_MQTT_INSECURE_PORT_ENABLED",
                    "HONO_MQTT_KEY_PATH",
                    "HONO_MQTT_KEY_STORE_PASSWORD",
                    "HONO_MQTT_KEY_STORE_PATH",
                    "HONO_MQTT_MAPPERENDPOINTS_<mapperName>_HOST",
                    "HONO_MQTT_MAPPERENDPOINTS_<mapperName>_PORT",
                    "HONO_MQTT_MAPPERENDPOINTS_<mapperName>_URI",
                    "HONO_MQTT_MAX_CONNECTIONS",
                    "HONO_MQTT_MAX_PAYLOAD_SIZE",
                    "HONO_MQTT_NATIVE_TLS_REQUIRED",
                    "HONO_MQTT_PORT",
                    "HONO_MQTT_SECURE_PROTOCOLS",
                    "HONO_MQTT_SEND_MESSAGE_TO_DEVICE_TIMEOUT",
                    "HONO_MQTT_SNI",
                    "HONO_MQTT_TENANT_IDLE_TIMEOUT",
                    "Hono already comes with a set of standard protocol adapters which support the most widely used (IP based) IoT protocols like HTTP, MQTT and AMQP 1.0.",
                    "Hono supports devices communicating via common IoT protocols like HTTP, MQTT, AMQP and CoAP out of the box.",
                    "Hono’s MQTT protocol adapter",
                    "How does events from arbitrary mqtt topics such as \"base/context/qualifier/subtopic\" fold into Hono MQTT adapter topic structure?",
                    "How to know the connections number of MQTT adapter?",
                    "However, even if the device supports MQTT it might still not be possible to connect to the MQTT adapter because the device expects to use a topic structure that differs from the one employed by the MQTT adapter.",
                    "I am using MQTT simulator script that uses the Java Eclipse Paho library.",
                    "I can create things, set up connections and apply the connection policy to the thing so I can submit telemetry from a thing via HTTP and MQTT and receive it on my MQTT server/connection.",
                    "I have been trying to make a simple MQTT pub sub communication on my device using node-red.",
                    "I'm using Eclipse Hono, I've created a Tenant, and a device, and start to publish a data through MQTT and HTTP adapter, and i was able to consume it through the AMQP client.",
                    "If you do not install it then you will not be able to simulate an MQTT based device but otherwise will be able to get the same results described in this guide.",
                    "In (1) the device subscribes for commands (if connecting to the AMQP or MQTT adapter) or indicates that it will stay connected for a given amount of time to receive a command (if connecting to the HTTP adapter), using the",
                    "In many cases, data is sent over public networks fully unencrypted, which is quite surprising, given that all of the popular TCP/IP-based transport protocols used in today’s IoT devices (e.g., HTTP and MQTT) support the negotiation and use of a secure (encrypted) transport channel by means of",
                    "In order to support environments where the AMQP Messaging Network cannot be configured accordingly, the MQTT protocol adapter supports setting a downstream event message’s",
                    "In the example scenario used in the remainder of this guide, the devices will connect to the HTTP and MQTT adapters in order to publish telemetry data and events.",
                    "JMeter plugin for MQTT",
                    "MQTT",
                    "MQTT 3.1.1 has no notion of message headers.",
                    "MQTT Adapter",
                    "MQTT Adapter \"Close behavior\" in case of hono internal errors",
                    "MQTT Adapter :: Eclipse Hono™",
                    "MQTT Adapter Admin Guide",
                    "MQTT Adapter Configuration",
                    "MQTT Adapter Configuration :: Eclipse Hono™",
                    "MQTT Adapter authenticates device using the Credentials service",
                    "MQTT Adapter user guide",
                    "MQTT Adapter’s User Guide",
                    "MQTT Command and Control Hono",
                    "MQTT Protocol Adapter",
                    "MQTT Protocol Adapter fails to start",
                    "MQTT Send Command Hono",
                    "MQTT Send Command Response Hono",
                    "MQTT Telemetry Hono",
                    "MQTT adapter",
                    "MQTT adapter User Guide",
                    "MQTT adapter admin guide",
                    "MQTT adapter user guide",
                    "MQTT device:MQTT device: when is the right time to send a command to thewhen is the right time to send a command to the device?device?",
                    "MQTT on devices : geolocation in th...",
                    "MQTT on devices : geolocation in the IoT world",
                    "MQTT on the road",
                    "MQTT_ADAPTER_IP",
                    "Mosquitto MQTT Command Line Client",
                    "No more devices are able to connect to the MQTT Adapter",
                    "No more devices are able to connect to the MQTT Adapter.",
                    "Note that the device itself is not authenticated by the MQTT adapter in this case.",
                    "Now that the device has been registered, it is time to connect to the MQTT adapter using the newly created client certificate and publish some data.",
                    "Publishing Events to the MQTT Adapter",
                    "Publishing Telemetry Data to the MQTT Adapter",
                    "Send a Telemetry message via MQTT API For more details have a look in the",
                    "Specify the content-type of a telemetry/event message via MQTT property bag",
                    "Submit telemetry via gateway mode on HTTP & MQTT adaptors",
                    "The AMQP, HTTP, MQTT and Kura protocol adapters consider this property when setting a TTL on downstream event messages.",
                    "The Kura protocol adapter exposes an MQTT topic hierarchy allowing Eclipse Kura™ based gateways to access Eclipse Hono™’s south bound Telemetry, Event and Command & Control APIs.",
                    "The Kura protocol adapter exposes an MQTT topic hierarchy allowing Eclipse Kura™ based gateways to publish",
                    "The MQTT Adapter also supports publishing telemetry messages using QoS 1.",
                    "The MQTT Protocol Adapter fails to start with the warning message MemoryBasedConnectionLimitStrategy - Not enough memory in the log files.",
                    "The MQTT adapter accepts responses being published using either QoS 0 or QoS 1.",
                    "The MQTT adapter accepts the sensor data from the gateway and forwards it downstream.",
                    "The MQTT adapter by default requires clients (devices or gateway components) to authenticate during connection establishment.",
                    "The MQTT adapter checks the configured",
                    "The MQTT adapter checks the password and accepts the connection request.",
                    "The MQTT adapter currently does not use any properties except",
                    "The MQTT adapter determines the tenant from the",
                    "The MQTT adapter enables devices to receive commands that have been sent by business applications by means of sending an MQTT",
                    "The MQTT adapter failed to accept command response messages from authenticated gateways that had been published to the",
                    "The MQTT adapter invokes the Device Registration service’s",
                    "The MQTT adapter is",
                    "The MQTT adapter now closes the network connection to device on publish failures.",
                    "The MQTT adapter now includes a device’s MQTT client ID in its request to retrieve the device’s credentials.",
                    "The MQTT adapter now supports commands to be published using QoS 1.",
                    "The MQTT adapter now supports limiting the number of concurrent connections in order to prevent running out of resources.",
                    "The MQTT adapter supports the publishing of events by means of MQTT",
                    "The MQTT adapter supports the publishing of telemetry data by means of MQTT",
                    "The MQTT adapter supports the use of TLS for its connections to the Tenant service, the Device Registration service, the Credentials service and the AMQP Messaging Network.",
                    "The MQTT adapter’s type name is",
                    "The MQTT and AMQP adapters can be enabled to verify this connection limit before accepting any new connections.",
                    "The MQTT and AMQP protocol adapters keep the connections longer opened than their counterparts such as HTTP.",
                    "The MQTT protocol adapter automatically sends a",
                    "The MQTT protocol adapter can be configured to listen for connections on",
                    "The MQTT protocol adapter does not start and in its log I see the message io.vertx.core.VertxException: OpenSSL is not available.",
                    "The MQTT protocol adapter exposes an MQTT topic hierarchy for Eclipse Hono™’s south bound Telemetry, Event and Command & Control APIs.",
                    "The MQTT protocol adapter exposes an MQTT topic hierarchy for publishing telemetry data and events to downstream consumers and for receiving commands from applications and sending back responses.",
                    "The MQTT protocol adapter now supports authentication of devices using X.509 client certificates.",
                    "The MQTT protocol adapter will fail to start if none of the ports is configured properly.",
                    "The adapter supports both the authentication based on the username/password provided in an MQTT CONNECT packet as well as client certificate based authentication as part of a TLS handshake for that purpose.",
                    "The adapter will send an MQTT",
                    "The clients publish data to Hono’ MQTT adapter while the consumers receive messages from the AMQP 1.0 Messaging Network (in case of the example installation this is the Qpid Dispatch Router).",
                    "The connection status of devices using stateful protocols like MQTT and AMQP can usually be determined quite easily because these protocols often require peers to explicitly open or close a connection and often also support a kind of heart beat which can be used to determine if a connection is still alive.",
                    "The diagram below shows a device that supports the MQTT protocol and connects directly to Hono’s MQTT protocol adapter and another device that uses Bluetooth LE for connecting locally to a gateway which then connects to Hono’s MQTT adapter.",
                    "The example above assumes that the MQTT adapter is",
                    "The example below might be used by the MQTT adapter to indicate that a connection with a device using client identifier",
                    "The following example shows how an answer can be sent with MQTT.",
                    "The following table provides an overview of the configuration variables and corresponding command line options for configuring the MQTT adapter.",
                    "The gateway forwards the sensor data in an MQTT PUBLISH packet to the MQTT adapter.",
                    "The gateway sends an MQTT CONNECT packet to Hono’s MQTT adapter to establish an MQTT connection.",
                    "The maximum allowed size of an incoming MQTT message’s payload in bytes.",
                    "The recently released 0.9-M2 milestone has added support for the authentication of devices using an X.509 client certificate as part of the TLS handshake for both the HTTP and the MQTT adapter.",
                    "The topic filters used by MQTT devices to subscribe to commands has been changed slightly to better fit the addressing scheme used by the other protocol adapters.",
                    "Then, it will be shown how messages can be sent via the HTTP and MQTT protocol adapters.",
                    "Thereby the MQTT and AMQP adapters are enabled to check the connection limits before accepting any new connection to a device.",
                    "This may especially be the case for long-lasting command subscriptions (with the MQTT or AMQP adapter).",
                    "This means you can use RabbitMQ with the AMQP 1.0 plugin, for example, or any other messaging broker implementing the AMQP 1.0 protocol.",
                    "This template allows you to develop a production-ready protocol gateway with minimal effort, with which you can connect existing MQTT-enabled devices to Hono.",
                    "Unable to make an MQTT pub-sub connection",
                    "Using QoS 1 will result in the adapter sending an MQTT",
                    "We want to do a performance test on Hono to verify that it supports 12000 device connections (MQTT), but I can't find the number of device connections in grafana's dashboard.",
                    "When a device no longer wants to receive commands anymore, it can send an MQTT",
                    "When starting up, the protocol adapter will bind a TLS secured socket to the default secure MQTT port 8883.",
                    "When using this topic, the MQTT adapter determines the device’s tenant and device identity as part of the authentication process.",
                    "You will learn how devices can use Hono’s protocol adapters to publish telemetry data and events using both HTTP and/or MQTT.",
                    "a general purpose MQTT broker.",
                    "and, finally, use the certificate to authenticate the device to Hono’s MQTT protocol adapter.",
                    "by the AMQP, HTTP and MQTT protocol adapters and then recorded in the metrics system.",
                    "can use the MQTT protocol adapter",
                    "command is used in this guide for simulating a device publishing data using the MQTT protocol.",
                    "command line client, you can run the following command to publish arbitrary telemetry data to Hono’s MQTT adapter using QoS 0:",
                    "command you simulate an MQTT device that receives a command.",
                    "commands, devices send their responses to commands by means of sending an MQTT",
                    "contains a generic template for an MQTT protocol gateway.",
                    "credentials which the devices can use to authenticate with the HTTP protocol adapter using HTTP Basic Auth or with the MQTT adapter.",
                    "discards any MQTT PUBLISH packet containing telemetry data or an event that is sent by a client and",
                    "duration for event messages published using the HTTP and MQTT adapters by setting the",
                    "folder contains the following demo keys and certificates to be used with the MQTT adapter for that purpose.",
                    "from the client’s MQTT CONNECT packet as the Connection Event’s",
                    "implicitly configuring the default MQTT port (1883) by simply setting",
                    "in the MQTT",
                    "instance that exposes Hono’s Telemetry and Event APIs as a generic MQTT topic hierarchy.",
                    "is set to the default secure MQTT port (8883).",
                    "messaging publish/subscribe ● Commands & Inquiries are about … ○ … messaging request/response ● Different protocols (AMQP, MQTT, HTTP, …) implement them in different way ○ As built-in support … ○ … or on top of it at application level ○ Read more on “Strengths And Weaknesses Of IoT Communication Patterns” * * DZone IoT Guide : https://dzone.com/guides/iot-applications-protocols-and-best-practices",
                    "of secret and the MQTT client identifier as",
                    "of the MQTT adapter is now deprecated and planned to be removed in a future release.",
                    "or the default MQTT port number (",
                    "publishes an event using MQTT QoS 1.",
                    "runs a set of MQTT clients and AMQP 1.0 consumers for a given period of time.",
                    "supports MQTT 3.1.1 only.",
                    "to play the roles of a downstream application (consumer) and devices uploading data to the HTTP and MQTT protocol adapters."
                ],
                "relationships": [
                    "use"
                ]
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "kapua",
                "Sentences": [
                    "Connect IoT devices to Kapua via MQTT and other protocols.",
                    "It means Kapua just supports MQTT broker, so I want to use Kura transfer LWM2M connections to MQTT,"
                ],
                "relationships": [
                    "use"
                ]
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "unide",
                "Sentences": [
                    "It can be transported by protocols like REST, AMQP, MQTT.",
                    "It focuses on defining the JSON payload which can be transferred via a variety of transports (REST, AMQP, MQTT).",
                    "We started to capture this information in a simple payload specification and just like in the introducing language example where you can use phrases via phone, letter or in person, the payload is meant to be sent over different protocols (REST, MQTT, AMQP)."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "agile",
                "Sentences": [
                    "\" alt=\"\" width=\"27\" height=\"29\" data-wp-pid=\"1255\" /></a> to specify the MQTT broker you want to reach.",
                    "\">MQTT client demo</a>, we have to use this syntax.",
                    "# Double-click on the '''MQTT out''' node to edit it",
                    "# For the purpose of this Getting Started, we will designate the Eclipse IoT MQTT broker by specifying '''iot.eclipse.org''' in the '''Server''' field.",
                    "# We will now push this value to an MQTT broker on the cloud to be able to subscribe to this data stream from any MQTT client.",
                    "# You should be back at the '''MQTT out''' node editor.",
                    "## For the Server field, click on the pencil button to specify the MQTT broker you want to reach.",
                    "## For the purpose of this Getting Started, we will designate the Eclipse IoT MQTT broker by specifying '''iot.eclipse.org''' in the '''Server''' field.",
                    "## You should be back at the '''MQTT out''' node editor.",
                    "'''MQTT out''' node",
                    "'''MQTT out''' node to our current flow.",
                    ", click on the pencil button to specify the MQTT broker you want to reach.",
                    "2.3% 3.5% 5.3% 6.2% 7.4% 13.2% 13.9% 15.5% 19.2% 21.2% 52.4% 61.2% None DDS Other Proprietary vendor protocol I don’t know XMPP AMQP In-house / proprietary HTTP/2 CoAP MQTT HTTP 5/5/2016 IoT Developer Survey 2016 - Copyright Eclipse Foundation 10",
                    "=== Connect to the MQTT broker ===",
                    "At this point, our sample is collecting temperature data from our Sensor and it is sending them to a MQTT broker on the cloud.",
                    "At this point, the sample is collecting temperature data from the Sensor and it is sending them to a MQTT broker on the cloud.",
                    "Connect the gateway to Eclipse MQTT broker",
                    "Connect to the MQTT broker",
                    "Eclipse Mosquitto ● Open source MQTT broker ○ C implementation ○ MQTT 3.1.1 compliant ○ Scalable (1000 clients = 3MB RAM) ○ Extensible (e.g authentication plug-ins)",
                    "Eclipse Paho ● Open-source MQTT clients ● Pick your language!",
                    "For the Server field, click on the pencil button to specify the MQTT broker you want to reach.",
                    "For the purpose of this Getting Started, we will designate the Eclipse IoT MQTT broker by specifying",
                    "Implementation Pilot B: Open Field and Cattle Monitoring Developers UI – AGILE Node-RED flow • Interfaces with Node.js Application using MQTT • Using AGILE Cloud components – currently ownCloud",
                    "Implementation Pilot B: Open Field and Cattle Monitoring Sky-Watch AGILE Application • Node.js application deployed in docker container • Interfacing with AGILE API using agile-sdk • Interfacing with AGILE Node-RED using MQTT • Includes webserver for hosting frontend/UI • Currently communicating directly with LoRaWAN module for sensor input",
                    "In this case, we recommend you to change the MQTT broker topic we defined in the previous section for something else.",
                    "Libraries and tools: IoT Device Communication • Ponte http://www.eclipse.org/ponte/ • MQTT, Mosquitto http://mosquitto.org/ • CoAP, Californium http://www.eclipse.org/californium/ • Dbus client(s)(dbus.freedesktop.org/.../dbus-java/, sidorares/node-dbus)Bus AGILE Restful API Broker / Proxy & Static Server AGILE IO API AGILE PLENARY MEETING, 14-15 April 2016, Athens, GR",
                    "MQTT",
                    "MQTT CASE May-2016 Copyright (c) 2016, Eclipse Foundation, Inc. Made available under the Eclipse Public License 1.0 12",
                    "MQTT broker",
                    "MQTT client demo",
                    "MQTT node editor",
                    "MQTT out",
                    "MQTT output node",
                    "MQTT: Publish & Subscribe Sub KETTLE232/#Pub KETTLE232/temp Payload: 21°C Pub KETTLE232/temp Payload: 21°C BROKER",
                    "NR-12.png|MQTT output node",
                    "NR-13.png|MQTT node editor",
                    "Now, create a Node-RED flow from scratch by connecting to a Web Socket gathering data from your BLE Sensor and sending them to a MQTT broker to be displayed on a web UI.",
                    "On the Topic field, type the following topic name: <br/>'''javaonedemo/agile/sensors/temperature''' <br/>This ID could be simpler but, because we want to be able to reuse to an existing [https://iot.eclipse.org/java/tutorial/ MQTT client demo], we have to use this syntax.",
                    "Sandboxes Eclipse IoT operates open sandboxes for IoT developers ● MQTT ● CoAP ● LWM2M http://iot.eclipse.org/getting-started#sandboxes",
                    "Sensor and it is sending them to a MQTT broker on the cloud.",
                    "Software Requirements ◦ Yocto Linux ◦ Kura ◦ Kura Wires ◦ Everyware Cloud ◦ Eclipse OSGi Equinox ◦ Eclipse Paho ◦ Red Hat JBoss ◦ Apache Camel ◦ HyperSQL Protocol: ◦ MQTTS Pilot C 14-15 April 2016 AGILE MEETING, ATHENS 21",
                    "Subscription to MQTT for sensor data",
                    "The Eclipse IoT working group specializes in open source technology for IoT and hosts over 20 different open source projects that deliver technology for IoT standards (such as MQTT, CoAP, and LWM2M) and IoT frameworks that include IoT gateways, home automation, and SCADA systems.",
                    "The just created component can be configured in terms of publishing topic and MQTT message options.",
                    "This value will now be pushed to an MQTT broker on the cloud to be able to subscribe to this data stream from any MQTT client.",
                    "To do that, we need to add a '''MQTT out''' node to our current flow.",
                    "Use Mosquitto MQTT client to subscribe to available topics:",
                    "We will create from scratch a Node-RED flow connecting to a Web Socket gathering data from your BLE Sensor and sending them to a MQTT broker to be displayed on a web UI.",
                    "We will now push this value to an MQTT broker on the cloud to be able to subscribe to this data stream from any MQTT client.",
                    "What is MQTT • Simple Publish/Subscribe protocol • Small footprint • Minimal on-the-wire formal and payload May-2016 Copyright (c) 2016, Eclipse Foundation, Inc. Made available under the Eclipse Public License 1.0 13 MQTT Client MQTT Broker",
                    "[MQTT Broker]",
                    "[https://iot.eclipse.org/java/tutorial/ MQTT client demo], we have to use this syntax.",
                    "a Node-RED flow connecting to a Web Socket gathering data from your BLE Sensor and sending them to a MQTT broker to be displayed on a web UI.",
                    "an existing [https://iot.eclipse.org/java/tutorial/ MQTT client demo], we have to use this syntax.",
                    "connecting to a Web Socket gathering data from your BLE Sensor and sending them to a MQTT broker to be displayed on a web UI.",
                    "https://iot.eclipse.org/java/tutorial/ MQTT client demo",
                    "png|MQTT output node",
                    "to an MQTT broker on the cloud to be able to subscribe to this data stream from any MQTT client.",
                    "to specify the MQTT broker you want to reach.",
                    "|MQTT node editor",
                    "“MQTT” on Google Trends Can you guess what happened then?",
                    "● CoAP ○ « HTTP over UDP » ○ Expose your device as a resource on the Internet of Things ● MQTT ○ Publish/Subscribe model ○ TCP-based Connecting things to the IoT"
                ],
                "relationships": [
                    "use"
                ]
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "kuksa",
                "Sentences": [
                    "(AGL bindings for MQTT)",
                    "- Connects to the w3c-visserver service via Websocket and communicates with the Eclipse Hono MQTT adapter.",
                    "Built-in MQTT publisher",
                    "Currently, Eclipse HONO API (including MQTT) and Hawkbit API tests are implemented.",
                    "Eclipse HONO API (including MQTT) and Hawkbit API tests.",
                    "Eclipse MosQuitto (MQTT)",
                    "GH Readme MQTT Datalogger",
                    "MQTT for communication between In-Vehicle platform and Cloud backend",
                    "Reads the RPM, Speed, Fuel status and also custom DTC from the w3c-visserver to sends this information as telemetry data to the Hono MQTT adapter."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "thingweb",
                "Sentences": [
                    "MQTT"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "mita",
                "Sentences": [
                    "Eclipse Hono per MQTT"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "tahu",
                "Sentences": [
                    "All of this was intentional within the original MQTT specification to provide maximum flexibility across any solution sector that might choose to use MQTT infrastructures.",
                    "As with the topic namespace and payload the way state information is implemented and managed within the MQTT infrastructure is not defined.",
                    "But at some point, for industrial MQTT based solutions to be interoperable within a given market sector, the topic namespace, payload representation, and session state must be defined.",
                    "But for STATE aware OT applications like SCADA/DCS/FCS, there needs to be a succinct definition on how best to use MQTT’s built in STATE awareness in an overall SCADA/DCS/ICS infrastructure.",
                    "Eclipse Tahu addresses the existence of legacy SCADA/DCS/ICS protocols and infrastructures and provides a much-needed definition of how best to apply MQTT into these existing industrial operational environments.",
                    "Eclipse Tahu provide client libraries and reference implementations in various languages and for various devices to show how the device/remote application must connect and disconnect from the MQTT server using the Sparkplug specification explained below.",
                    "Efficient MQTT payload definition",
                    "GitHub - eclipse/tahu: Eclipse Tahu addresses the existence of legacy SCADA/DCS/ICS protocols and infrastructures and provides a much-needed definition of how best to apply MQTT into these existing industrial operational environments.",
                    "In addition to this, since the original use case for MQTT was targeting real-time SCADA, there are mechanisms defined to provide the state of an MQTT session such that SCADA/Control HMI application can monitor the current state of any MQTT device in the infrastructure.",
                    "In order to be interoperable across the plethora of OEM device manufacturers of industrial equipment and the SCADA/HMI/Control/Cloud Services backend components that desired to subscribe to the resulting information a well-defined MQTT topic namespace needs to be defined.",
                    "It addresses the existence of legacy SCADA/DCS/ICS protocols and infrastructures and provides a much-needed definition of how best to apply MQTT into these existing industrial operational environments.",
                    "MQTT STATE Management definition",
                    "MQTT has the awareness of the current MQTT session built in using the LWT feature.",
                    "MQTT was originally designed as a message transport for real-time SCADA (Supervisory Control and Data Acquisition) systems.",
                    "Meeting the operational requirements for these systems will enable MQTT based infrastructures to provide more valuable real-time information to Line of Business MES/OEE/Track-and-Trace/Cloud Services solution requirements as well.",
                    "Sparkplug is a specification for MQTT enabled devices and applications to send and receive messages in a stateful way.",
                    "Staying with the original intent of MQTT, the payload specification needs to stay “lean and mean” to best utilize low bandwidth networks (VSAT, Radio, Cellular).",
                    "Tahu is currently addressing the following features required for MQTT centric IIoT:",
                    "The MQTT message transport specification does not specify the topic namespace to use nor does it define the Payload representation of the data being published and/or subscribed to.",
                    "The Sparkplug Specification - This document describes the MQTT topic namespace, the payload-encoding scheme, and the required flow of messages, which ensure state of data originating from an edge device reporting to a backend/central application.",
                    "The intent and purpose of the Sparkplug specification is to define an MQTT topic namespace, payload, and session state management that can be applied generically to the overall IIoT market sector, but specifically meets the requirements of real-time SCADA/DSC (Distributed Control System)/ICS (Industrial Control System) OT solutions.",
                    "The purpose of the Sparkplug specification is to remain true to the original notion of keeping the topic namespace and message sizes to a minimum while still making the overall message transactions and session state management between MQTT devices and MQTT SCADA/DCS/ICS applications simple, efficient and easy to understand and implement.",
                    "The topic namespace needs to provide both the contextual information all the way to an individual device in the field, but also provide topic “verbs” to efficiently manage the “life cycle” of an MQTT session.",
                    "We believe that one of the best features of this technology is providing consistency around how MQTT is used in the Industrial Internet of Things (IIoT).",
                    "Well-defined MQTT Topic Namespace applicable for the IIoT market",
                    "While MQTT is stateful by nature it doesn't ensure that all data on a receiving MQTT application is current or valid."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "volttron",
                "Sentences": [
                    "Backward compatibility with the RabbitMQ message bus",
                    "Create RabbitMQ setup for VOLTTRON:",
                    "For RabbitMQ based VOLTTRON, some of the RabbitMQ specific software packages have to be installed.",
                    "From version 6.0, VOLTTRON supports two message buses - ZMQ and RabbitMQ.",
                    "If configured with a RabbitMQ message bus a config file would have been generated in",
                    "If doing so, it needs to be set to the RabbitMQ installation directory (default path is",
                    "If you are running an Debian or CentOS system, you can install the RabbitMQ dependencies by running the rabbit dependencies script, passing in the OS name and appropriate distribution as parameters.",
                    "It also installs RabbitMQ server as the current user.",
                    "NOTE: We configure the RabbitMQ instance for a single volttron_home and volttron_instance.",
                    "Note: RabbitMQ startup error would show up in syslog (/var/log/messages) file and not in RabbitMQ logs (/var/log/rabbitmq/rabbitmq@hostname.log)",
                    "RabbitMQ checks for this during initial boot.",
                    "RabbitMQ setup with Federation and Shovel plugins",
                    "RabbitMQ will be installed under",
                    "Steps for RabbitMQ",
                    "Steps for ZMQ",
                    "This will build the platform and create a virtual Python environment and dependencies for RabbitMQ.",
                    "Without this (for example, when running on a VM in NAT mode) RabbitMQ start would fail with the error \"unable to connect to empd (port 4369) on .\"",
                    "You can check if the RabbitMQ server is installed by checking its status."
                ],
                "relationships": [
                    "use"
                ]
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "streamsheets",
                "Sentences": [
                    ": Control, analysis, monitoring, visualization and simulation of industrial and other IoT processes (Smart Factory, Smart Building, Smart City, Smart Energy, Smart Farming, …) using MQTT, AMQP or other messaging protocols.",
                    ": are there already other options to integrate with Ditto, e.g., MQTT?",
                    "Did I miss something or is consuming from MQTT not included?",
                    "Streamsheets uses the MQTT protocol both for internal and external communication and uses Mosquitto as its standard MQTT broker.",
                    "The main dependencies for the backend are Express.js and MQTT.js.",
                    "When trying out Streamsheets I could not consume from MQTT brokers, only publish to them.",
                    "using MQTT, AMQP, UDP, REST, POP, SMTP protocols or simple input from text files."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "zenoh",
                "Sentences": [
                    "Protocols used today to build these systems, such as MQTT, DDS, CoAP and HTTP were not designed with these needs in mind."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "testware",
                "Sentences": [
                    "A Conformance Test Suite for the IoT protocol MQTT written in TTCN-3.",
                    "A flexible and configurable Proxy-Fuzzer for IoT protocols like MQTT and CoAP.",
                    "A performance test suite for the IoT protocols MQTT and CoAP.",
                    "Conformance test suites for MQTT and CoAP",
                    "Eclipse IoT-Testware: Die Open-Source-Testsuite für das MQTT-Protokoll.",
                    "Eclipse MQTT performance test suite",
                    "Eclipse MQTT test suite",
                    "Eclipse Titan has already protocol modules for CoAP and MQTT including type systems and codec.",
                    "Evaluation of test methods/tools for robustness and performance tests for MQTT and CoAP",
                    "Finish work for conformance test purposes and test suites for MQTT and CoAP",
                    "Finish work for robustness and performance test implementation for MQTT and CoAP",
                    "MQTT Discussion Group @ Google-Groups",
                    "MQTT Protocol",
                    "MQTT Specification",
                    "MQTT Test Suite",
                    "MQTT_Summary.pdf",
                    "Performance test suites for MQTT and CoAP",
                    "Prototypical implementation of robustness and performance tests scenarios for MQTT and CoAP",
                    "Robustness testing for MQTT and CoAP",
                    "Standardized conformance test purposes for MQTT and CoAP",
                    "Standardized performance test purposes for MQTT and CoAP",
                    "The biggest features are standardized test solutions for the IoT protocols MQTT and CoAP.",
                    "The initial contribution of IoT-Testware to Eclipse will focus on protocols like CoAP and MQTT."
                ],
                "relationships": [
                    "interchangeable"
                ]
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "sensinact",
                "Sentences": [
                    "Northbound bridges: this group includes implementation of remote access bridges to the platform such as REST APIs, JSON RPC, as well as publish subscribe protocols such as MQTT, XMPP, NGSI, etc.",
                    "Southbound bridges: this group includes implementation of bridges and adapters for various IoT protocols and platforms such as LoRa, Zigbee, IEEE 802.15.4, Sigfox, enOcean, CoAP, MQTT, XMPP, NGSI, HTTP, etc.",
                    "sensiNact Gateway interconnects IoT devices using different southbound IoT protocols such as Zigbee, EnOcean, LoRa, XBee, MQTT, XMPP, as well as platforms such as FIWARE and allows access to them with various northbound protocols such as HTTP REST, MQTT, XMPP, JSON RPC and CDMI.",
                    "sensiNact thus provides connectivity support to those data sources including today’s IoT protocols and platforms such as LoRa, Zigbee, IEEE 802.15.4, Sigfox, enOcean, MQTT, XMPP, NGSI, HTTP, CoAP, etc."
                ],
                "relationships": [
                    "interchangeable",
                    "use"
                ]
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "agail",
                "Sentences": [
                    "- Integration of Eclipse Paho for the extention of the internal Agail RESTful API and support of MQTT as alternative messaging and data subscription mechanism",
                    "Eclipse Paho will be used as an internal broker for extending the Agail RESTful API and allowing developers to communicate with the Agail gateway components using the MQTT protocol for data interaction between applicatons and connected IoT devices and the internal data storage."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "whiskers",
                "Sentences": [
                    "Create a SensorThings instance by passing the \"Client\", SensorThings MQTT broker address, port used for MQTT, and @iot.id for Datastream.",
                    "Create a SensorThings instance by passing the \"Client\", SensorThings server address, port used for HTTP requests, SensorThings MQTT broker address, and port used for MQTT.",
                    "Eclipse Whiskers for Arduino is using one other Arduino library for MQTT connections:",
                    "The library has methods for connecting to a SensorThings server as well as SensorThings MQTT broker."
                ],
                "relationships": [
                    "use"
                ]
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "moquette",
                "Sentences": [
                    ", request an account then use it from your MQTT clients.",
                    "2020-02-28 13:03:12.309 20418-20876/ I/System.out: 117404 [nioEventLoopGroup-5-1] INFO io.moquette.broker.metrics.MQTTMessageLogger - C->B CONNECT",
                    "2020-02-28 13:03:12.316 20418-20876/ I/System.out: 117412 [nioEventLoopGroup-5-1] DEBUG io.moquette.broker.MQTTConnection - Received MQTT message, type: CONNECT, channel: [id: 0x82488a46, L:/172.16.1.196:1883 - R:/172.16.1.196:38308]",
                    "2020-02-28 13:03:12.431 20418-20876/ I/System.out: 117431 [nioEventLoopGroup-5-1] ERROR io.moquette.broker.NewNettyMQTTHandler - Error processing protocol message: CONNECT",
                    "2020-02-28 13:03:12.432 20418-20876/ I/System.out: at io.moquette.broker.MQTTConnection.handleMessage(MQTTConnection.java:67)",
                    "2020-02-28 13:03:12.432 20418-20876/ I/System.out: at io.moquette.broker.MQTTConnection.login(MQTTConnection.java:235)",
                    "2020-02-28 13:03:12.432 20418-20876/ I/System.out: at io.moquette.broker.MQTTConnection.processConnect(MQTTConnection.java:160)",
                    "2020-02-28 13:03:12.433 20418-20876/ I/System.out: at io.moquette.broker.NewNettyMQTTHandler.channelRead(NewNettyMQTTHandler.java:58)",
                    "2020-02-28 13:03:12.433 20418-20876/ I/System.out: at io.moquette.broker.metrics.MQTTMessageLogger.channelRead(MQTTMessageLogger.java:46)",
                    "2020-02-28 13:03:12.450 20418-20876/ I/System.out: 117548 [nioEventLoopGroup-5-1] INFO io.moquette.broker.NewNettyMQTTHandler - Closed client channel due to exception in processing",
                    ">Moquette MQTT parent</",
                    ">Moquette MQTT</",
                    ">Moquette lightweight MQTT Broker</",
                    "?email_source=notifications&email_token=AAH5RUKNMO4ZMQSG3XPDDNLQ6F2OHA5CNFSM4KIDNQKKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEJHB7WQ#issuecomment-575545306>, or unsubscribe",
                    "?email_source=notifications&email_token=AAH5RUKNMO4ZMQSG3XPDDNLQ6F2OHA5CNFSM4KIDNQKKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEJHB7WQ#issuecomment-575545306>, or unsubscribe <",
                    "@@ -25,11 +25,11 @@ Point your MQTT client to _broker.moquette.io_",
                    "Broker does not reject connections with clientId longer than 23 characters for MQTT v3.1",
                    "Broker does not reject connections with clientId longer than 23 characters for MQTT v3.1 · Issue #522 · moquette-io/moquette · GitHub",
                    "Expected behavior Ping Request messages should be notified using the Interceptor interface Actual behavior Currently Ping Requests are handled without any notification Steps to reproduce Feature request Minimal yet complete reproducer code (or URL to code) or complete log file N/A Moquette MQTT version 0.12.1 JVM version (e.g.",
                    "GitHub - moquette-io/moquette: Java MQTT lightweight broker",
                    "GitHub - moquette-io/netty-mqtt5-codec: Netty codec implementation for MQTT3 and MQTT5",
                    "I believe it would be an interesting feature because MQTT is easily used on embedded devices, and SSL support is somewhat heavy, so my problem could be seen elsewhere.",
                    "If another process is using the MQTT ports the server fails with an exception, now exit with error message.",
                    "Increasing Netty worker threads number is important in our use case that handles a lot of MQTT requests.",
                    "JVM lightweight MQTT broker for the Internet of Things.",
                    "Java MQTT lightweight broker",
                    "MQTT Load Balancer with HAProxy",
                    "MQTT SSL not working",
                    "MQTT SSL not working · Issue #499 · moquette-io/moquette · GitHub",
                    "MQTT durable subscription exception",
                    "MQTT durable subscription exception · Issue #455 · moquette-io/moquette · GitHub",
                    "MQTT spy",
                    "MQTT throw SSL",
                    "MessageId=20314, CId=web_63, topic=OrganismStatus 97013256 [nioEventLoopGroup-3-1] INFO ConnectionDescriptorStore - Sending PUBLISH message CId=<web_63>, messageId=20314 97013256 [nioEventLoopGroup-3-1] ERROR NettyMQTTHandler - Exception was caught while processing MQTT message, null java.lang.IllegalStateException: Queue full at java.util.AbstractQueue.add(AbstractQueue.java:98) at java.util.concurrent.ArrayBlockingQueue.add(ArrayBlockingQueue.java:312) at io.moquette.spi.DurableSession.enqueue(DurableSession.java:207) at io.moquette.spi.impl.MessagesPublisher.publish2Subscribers(MessagesPublisher.java:107) at io.moquette.spi.impl.MessagesPublisher.publish2Subscribers(MessagesPublisher.java:71) at io.moquette.spi.impl.Qos1PublishHandler.receivedPublishQos1(Qos1PublishHandler.java:70) at io.moquette.spi.impl.ProtocolProcessor.processPublish(ProtocolProcessor.java:470) at io.moquette.server.netty.NettyMQTTHandler.channelRead(NettyMQTTHandler.java:56) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at io.moquette.server.netty.metrics.MQTTMessageLogger.channelRead(MQTTMessageLogger.java:44) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at io.moquette.server.netty.metrics.MessageMetricsHandler.channelRead(MessageMetricsHandler.java:48) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310) at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at io.moquette.server.netty.metrics.BytesMetricsHandler.channelRead(BytesMetricsHandler.java:49) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:287) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926) at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134) at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644) at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:579) at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:496) at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458) at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) at java.lang.Thread.run(Thread.java:748)",
                    "Moquette MQTT broker",
                    "Moquette MQTT version",
                    "Moquette aims to be a MQTT compliant broker.",
                    "Moquette is lightweight MQTT Java broker",
                    "Moquette lightweight MQTT Broker",
                    "Netty codec implementation for MQTT3 and MQTT5",
                    "Plans to support MQTT 5?",
                    "Point your MQTT client to",
                    "Start moquette MQTT server and establish client connection using MQTT v3.1 using a clientId with more than 23 characters",
                    "Vertx MQTT module",
                    "at io.moquette.broker.MQTTConnection.readCompleted(MQTTConnection.java:507)",
                    "at io.moquette.broker.NewNettyMQTTHandler.channelReadComplete(NewNettyMQTTHandler.java:76)",
                    "is an home automation framework and uses Moquette embedded to interface with MQTT by a specific",
                    "when a connection is not yet fully bootstrapped with MQTT, like when a connection is opened on an SSL port and the connection is closed without having fully bootstrapped the MQTT settngs."
                ],
                "relationships": [
                    "use"
                ]
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "titan",
                "Sentences": [
                    "(VSBOT, SIP_ETSI,DIAMETER_Rx_ETSI, CoAP Conformance test cases, CoAP and MQTT protocol modules for IOT-moved to Eclipse git, more to come...)",
                    "Formal verification of the implementation of the MQTT protocol in IoT devices",
                    "MQTT",
                    "MQTT CNL 113 831 R1C",
                    "MQTT CNL 113 831 R1D",
                    "MQTT_Server component added",
                    "MQTT_Server component bugfixes",
                    "Patch for Bug 546045: decoding MQTT remaining length field",
                    "Same algorithm, same fix as provided for the MQTT decoder in the previous patch",
                    "TPD updated, it now references the MQTT prot mod for positive testing",
                    "git://git.eclipse.org/gitroot/titan/titan.ApplicationLibraries.MQTT.git",
                    "git://git.eclipse.org/gitroot/titan/titan.ProtocolModules.MQTT.git",
                    "http://git.eclipse.org/c/titan/titan.ApplicationLibraries.MQTT",
                    "http://git.eclipse.org/c/titan/titan.ProtocolModules.MQTT",
                    "http://git.eclipse.org/gitroot/titan/titan.ApplicationLibraries.MQTT",
                    "http://git.eclipse.org/gitroot/titan/titan.ProtocolModules.MQTT",
                    "titan.ApplicationLibraries.MQTT",
                    "titan.ProtocolModules.MQTT",
                    "titan/titan.ApplicationLibraries.MQTT -",
                    "titan/titan.ApplicationLibraries.MQTT - Gitiles",
                    "titan/titan.ProtocolModules.MQTT -",
                    "titan/titan.ProtocolModules.MQTT - Gitiles",
                    "• Protocol module variants from negative testing have been added to MQTT and CoAP"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "uomo",
                "Sentences": [
                    "Define an MQTT Payload",
                    "Define an MQTT Topic Namespace",
                    "The intent of the Sparkplug specification is to strive to define payload encoding architectures that remain true to the original, lightweight, bandwidth efficient, low latency features of MQTT while adding modern encoding schemes targeting the SCADA/IIoT solution sector."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "mihini",
                "Sentences": [
                    "MQTT example?"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "koneki",
                "Sentences": [
                    "Collects Zigbee data on Subscribes to MQTT device’s serial port messages Publishes MQTT messages Displays sensor data with a fancy UIEclipse Day Toulouse Copyright © 2012 Sierra Wireless.",
                    "MQTT (Message Queue Telemetry Transport) is a messaging protocol over TCP/IP enabling bandwidth-efficient exchanges between communicating devices.",
                    "The initial contribution to the project is from IBM and Eurotech, in the form of C and Java client libraries for the MQTT protocol.",
                    "m2m.eclipse.org MQTT broker Wireless gateway Mobile phone Wireless (Zigbee) sensorsEclipse Day Toulouse Copyright © 2012 Sierra Wireless."
                ],
                "relationships": []
            }
        ]
    },
    {
        "py/object": "model.LinkKeyword.LinkKeyword",
        "Id": 2,
        "Description": "Open Platform Communication Unified Architecture",
        "Keys": [
            "OPCUA"
        ],
        "projects": [
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "milo",
                "Sentences": [
                    "Eclipse Milo does implement the binary protocol of OPC UA also know as IEC 62541.",
                    "Eclipse Milo™ - an open source implementation of OPC UA (IEC 62541).",
                    "GitHub - eclipse/milo: Eclipse Milo™ - an open source implementation of OPC UA (IEC 62541).",
                    "Milo currently targets OPC UA specification version 1.03 and this will remain the case for the eventual 1.0 release.",
                    "Milo is an open-source implementation of OPC UA.",
                    "New generated Node implementations for OPC UA namespace",
                    "OPC UA Client SDK",
                    "OPC UA Server SDK",
                    "What I'm looking for is to generate events and alarms from an OPC UA server application."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "kura",
                "Sentences": [
                    "* #1383: OPC UA Driver only supports string node ids",
                    "* #1384: OPC UA Driver channel descriptor property ids shouldn't be localised",
                    "* Contributed Eclipse Kura OPC UA driver based on Eclipse Milo",
                    "Kura + Wires • Enhanced Functional Architecture Drivers CANbus ModbusOPC UA S7 Asset Management Asset Java SE 7 / 8 (OpenJDK) OSGi Application Container (Eclipse Equinox, Concierge) Device Abstraction javax.comm Basic Gateway Services DB Service Clock Service Device Profile Watchdog Network ConfigurationNetwork Configuration Connectivity and Delivery Data Services MQTT Paho AdministrationGUI Applications Your Application RemoteManagement Configuration Management javax.usb w/ udev access Cloud Services Firewall, Port Forwarding Link Monitors Cellular, Wi-Fi, Ethernet GPS Position GPIO / SPI / PWM / I2C jdk.dio Custom Protocols Updates Management RemoteAccess Java HID APIs javax.bluetooth / BLE Your Application Kura Wires ...",
                    "OPC UA Driver"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "4diac",
                "Sentences": [
                    ") and connect to the OPC UA server running on FORTE:",
                    ": If you want to use a specific communication protocol supported by 4diac FORTE, for example MQTT, OPC UA, Modbus and so on, follow the link.",
                    "A Pick-and-Place module demonstrates the skill-based approach for an automation system using OPC UA.",
                    "Add support for different OPC UA namespaces",
                    "After some months of working, the improved OPC UA module for 4diac is now finally merged in the developed branch.",
                    "After version 1.11.0 of 4diac, the OPC UA module has changed its API, so applications developed before this version won't be compatible.",
                    "After working with OPC UA and real cases with different companies using different OPC UA stacks, we realized that the OPC UA module in FORTE wasn't reliable and often crashed, and wasn't easy to extend.",
                    "Build FORTE with OPC UA",
                    "Completely reworked and improved OPC UA integration, update to",
                    "Create an OPC UA subscription in an IEC 61499 Application",
                    "Cross compiling WAGO BSP along with OPC UA forte",
                    "Demonstrators at the Inspire Automation Camp, left TSN demonstrator, right OPC UA demonstrator",
                    "Docker alpine Image - Forte & OPC UA - compiling errrors",
                    "Error while trying to create Forte for OPC UA",
                    "HTTP and OPC UA on Raspberry Pi",
                    "Here you can see another example how to use SUBSCRIBE and PUBLISH to create an IEC 61499 application which adds two values, by reading the values from an OPC UA variable and providing the result.",
                    "I'm creating a Docker alpine image with Forte & OPC UA; however, I get Forte compiling errors",
                    "If you need to connect to OPC UA servers which have some kind of security enabled, you need some extra steps.",
                    "Improved OPC UA support for 4diac",
                    "In this step you will see how you can create an OPC UA data subscription in an IEC 61499 application.",
                    "Issues compiling Forte with OPC UA module included in Linux(Ubuntu 16.04)",
                    "Issues compiling Forte with OPC UA module included in Windows",
                    "Issues on implementing OPC UA with 4DIAC and OpenModelica",
                    "It is used to set up a data subscription to variables on an OPC UA server to get the value changes as they appear on the server.",
                    "Make OPC UA server port setable from the command line",
                    "Need OPC UA enabled forte.exe",
                    "OPC UA",
                    "OPC UA Client",
                    "OPC UA Client Subscriptions",
                    "OPC UA Method Call",
                    "OPC UA Method call",
                    "OPC UA Methods",
                    "OPC UA Publish does not CNF for external servers",
                    "OPC UA Server to PLC Simulator connectivity",
                    "OPC UA Subscription",
                    "OPC UA Variables",
                    "OPC UA connection issue",
                    "OPC UA example",
                    "OPC UA from 4diac 1.11.0",
                    "OPC UA implementation with client on 4DIAC and server on OpenModleica",
                    "OPC UA is not enabled by default in FORTE.",
                    "OPC UA same method calls from different method nodes",
                    "OPC UA stack which is open source and can also be used in commercial projects free of charge.",
                    "OPC UA using",
                    "OPC UA variables",
                    "OPC UA with IEC 61499 Tutorial (from v 1.11.0)",
                    "Offer an OPC UA method to be called by clients",
                    "On the server side we create an OPC UA variable",
                    "Provide OPC UA variables to clients",
                    "Read and Write OPC UA variables on a remote server",
                    "Robotics + Automation OPC UA Demonstrator",
                    "Set OPC UA Data Subscriptions Publishing Intervals",
                    "So we decided to make a deep clean-up of the OPC UA module and add the capabilities we found were needed.",
                    "The OPC UA module can be used with v1.0 of open62541.",
                    "The REQ event of the PUBLISH FB has to be triggered to set the new value from SD_1 in the address model of OPC UA (",
                    "The main changes are which Function Blocks are used for different OPC UA capabilites and how does the ID looks like.",
                    "The open platform automation forum aimed at promoting open technologies such as IEC 61499 and OPC UA for industrial automation.",
                    "Update OPC UA tests",
                    "When a client writes to this variable, it will be incremented (F_ADD) and then written to another OPC UA variable at",
                    "When the sum is ready, the RSP event on SERVER is triggered and the result is returned to the calling OPC UA Client, which is in this case UaExpert.",
                    "Why change the OPC UA Module?",
                    "over HTTP REST and/or OPC UA.",
                    "port matches the types from the OPC UA variable you want to subscribe to.",
                    "that can be called via OPC UA."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "unide",
                "Sentences": [
                    "Such data is surely provided by machines either via modern protocols such as OPC UA or via proprietary access methods but it is not provided in a common and easily accessible format, which can be used to do performance analysis and optimization."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "titan",
                "Sentences": [
                    "ServiceBody does not support `RAW' encoding for OPC UA"
                ],
                "relationships": []
            }
        ]
    },
    {
        "py/object": "model.LinkKeyword.LinkKeyword",
        "Id": 3,
        "Description": "Datagram Transport Layer Security",
        "Keys": [
            "DTLS"
        ],
        "projects": [
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "californium",
                "Sentences": [
                    "CoAP/DTLS Java Implementation",
                    "DTLS Return Routability Check (RRC)",
                    "DTLS1.3 support",
                    "Define a lifetime for DTLS session",
                    "GitHub - eclipse/californium: CoAP/DTLS Java Implementation",
                    "It implements DTLS 1.2 to secure your application through ECC with pre-shared keys, certificates, or raw public keys.",
                    "WIP: DTLS CID LoadBalancer - First Tutorials and Results"
                ],
                "relationships": [
                    "interchangeable"
                ]
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "leshan",
                "Sentences": [
                    "Access for peer credentials from initial DTLS connection to later phases",
                    "DTLS Client Certificate Chain not sent",
                    "DTLS based security",
                    "DTLS implementation"
                ],
                "relationships": [
                    "interchangeable"
                ]
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "wakaama",
                "Sentences": [
                    "DTLS based security",
                    "DTLS feature requires the tinydtls submodule.",
                    "If DTLS feature enable:",
                    "cmake -DDTLS=1 [wakaama directory]/examples/client"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "4diac",
                "Sentences": [
                    "For that, you need to set the UA_ENABLE_ENCRYPTION to true, which will show some new variables in CMake (MBEDCRYPTO_LIBRARY, MBEDTLS_INCLUDE_DIRS, MBEDTLS_LIBRARY and MBEDX509_LIBRARY)."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "tinydtls",
                "Sentences": [
                    "But in turn, investigating the bare minimum that is required to run a minimal DTLS stack would have implied significant changes to the existing code.",
                    "DTLS",
                    "Developing the DTLS engine from scratch also allowed to support not only POSIX-compliant systems but also embedded operating systems such as",
                    "Implementation of DTLS extensions that are useful in constrained environments, e.g.",
                    "It has been used as a blueprint and reference platform during development of other DTLS implementations such as",
                    "It would not have been too hard to enhance existing open source DTLS implementations, though.",
                    "One question addressed the applicability of DTLS together with two new cipher suites that have been proposed for resource-limited network nodes, i.e.",
                    "Since its initial release, tinydtls has become an important tool for experimenting with DTLS in constrained devices by users from academia as well as industry.",
                    "TinyDTLS JIPP Instance",
                    "Users that want to use DTLS with their Eclipse projects currently have to do the integration part by themselves.",
                    "Wakaama and other CoAP implementations need DTLS support for secure communication at transport layer.",
                    "began development of tinydtls in 2011 to estimate the memory footprint of a minimal Datagram Transport Layer Security (DTLS) engine.",
                    "for rapid prototyping of DTLS-enabled applications.",
                    "in DTLS were still in an early phase of standardization, no known DTLS implementation provided support.",
                    "tinydtls is a library for Datagram Transport Layer Security (DTLS) covering both the client and the server state machine."
                ],
                "relationships": [
                    "interchangeable"
                ]
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "hono",
                "Sentences": [
                    "HONO_COAP_DTLS_RETRANSMISSION_TIMEOUT",
                    "HONO_COAP_DTLS_THREADS",
                    "However, it might be desirable to expose a non-DTLS secured port instead, e.g.",
                    "The CoAP adapter also uses the DTLS handshake to prove its identity to devices and to authenticate the devices themselves.",
                    "The CoAP adapter has been enhanced to asynchronously look up a device’s PSK during the DTLS handshake.",
                    "The CoAP protocol is UDP based and as such uses the DTLS protocol to secure the communication between a client (device) and a server (adapter).",
                    "The DTLS protocol allows for different",
                    "The maximum number of concurrent DTLS connections that the protocol adapter should accept.",
                    "The number of threads to use for processing DTLS message exchanges at the connection layer.",
                    "The protocol adapter opens a DTLS secured port if any of the following criteria are met",
                    "The timeout in milliseconds for DTLS retransmissions.",
                    "Thus, requiring devices to authenticate effectively rules out setting up a non-DTLS secured port.",
                    "When starting up, the protocol adapter will bind a DTLS secured UDP socket to the configured port.",
                    "as part of a DTLS handshake for that purpose.",
                    "because CoAP authenticates clients (devices) as part of the DTLS handshake.",
                    "expose the non-DTLS secured port on a local interface only, thus providing easy access from within the local network, while still requiring encrypted communication when accessed from the outside over public network infrastructure."
                ],
                "relationships": [
                    "use"
                ]
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "agile",
                "Sentences": [
                    "Eclipse Californium ● Focus on scalability and usability ● To be used in IoT cloud servers or M2M/IoT devices running Java ● Includes DTLS implementation (Scandium), HTTP/CoAP bridge, Plugtests, … http://eclipse.org/californium",
                    "ü Standard IPv6 stack ü BSD-like ports for third-party modules/stacks: § OpenWSN, CCN-lite, Emb6, lwIP, tinyDTLS…"
                ],
                "relationships": [
                    "interchangeable"
                ]
            }
        ]
    },
    {
        "py/object": "model.LinkKeyword.LinkKeyword",
        "Id": 4,
        "Description": "Production Performance Management Protocol",
        "Keys": [
            "PPMP"
        ],
        "projects": [
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "unide",
                "Sentences": [
                    "Eclipse Unide provides a lightweight Production Performance Management Protocol (PPMP) server-client implementations (using JSON, REST and other).",
                    "PPMP",
                    "Production Performance management Protocol (PPMP).",
                    "The Eclipse Unide project publishes the current version of Production Performance Management Protocol (PPMP) and develops simple server/client implementations.",
                    "The Production Performance Management Protocol (PPMP) specifies a format that allows to capture data that is required to do performance analysis of production facilities.",
                    "The Production Performance Mangement Protocol (PPMP) is the name of the structure of the",
                    "The backend, usually in the cloud, is any component that \"speaks PPMP\" and",
                    "Through sample implementations of a simple information structure (Production Performance Management Protocol - PPMP) tailored to manufacturing environments, we want to encourage the community to use, share, and evolve this structure together.",
                    "We assembled a few frequently asked questions about the Production Performance Protocol (PPMP) and the Unide project.",
                    "publishes the current version of Production Performance Management Protocol (PPMP) and develops simple server/client implementations."
                ],
                "relationships": [
                    "interchangeable"
                ]
            }
        ]
    },
    {
        "py/object": "model.LinkKeyword.LinkKeyword",
        "Id": 5,
        "Description": "Attribute-based access control",
        "Keys": [
            "ABAC"
        ],
        "projects": [
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "keti",
                "Sentences": [
                    "Keti is a service that was designed to protect RESTfuls API using Attribute Based Access Control (ABAC).",
                    "Thus, we decided to build a service that offered a simplified and comprehensive Attribute Based Access Control (ABAC) for RESTful APIs."
                ],
                "relationships": []
            }
        ]
    },
    {
        "py/object": "model.LinkKeyword.LinkKeyword",
        "Id": 6,
        "Description": "open standard APplication Platform for carS and TrAnsportation vehiCLEs",
        "Keys": [
            "APPSTACLE"
        ],
        "projects": [
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "kuksa",
                "Sentences": [
                    "APPSTACLE",
                    "APPSTACLE project",
                    "APPSTACLE research project",
                    "Additionally, the involved partners of the publicly funded APPSTACLE project will utilise Eclipse Kuksa around their developments and include it for customer related projects.",
                    "EclipseCon Europe 2019 Interview: APPSTACLE & Eclilpse Kuksa",
                    "EclipseCon Europe 2019 Presentation: Using Eclipse Kuksa for Connected Vehicle Services … is presented by project comitters and contributers at the EclispeCon Europe 2019: EclipseCon Europe 2019 Interview: APPSTACLE & Eclilpse Kuksa",
                    "Setup an Eclipse Che based APPSTACLE IDE to either develop, build, and deploy cloud or in-vehicle applications (see more info",
                    "With the end of the publicly funded APPSTACLE project, the first major release Eclipse Kuksa 1.0 is expected"
                ],
                "relationships": [
                    "use"
                ]
            }
        ]
    },
    {
        "py/object": "model.LinkKeyword.LinkKeyword",
        "Id": 7,
        "Description": "Automotive Grade Linux",
        "Keys": [
            "AGL"
        ],
        "projects": [
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "kuksa",
                "Sentences": [
                    "(AGL bindings for Hono)",
                    "(AGL bindings for MQTT)",
                    ") to build custom AGL-based in-vehicle HMI systems",
                    "- Hawkbit appmanager which deploys in-vehicle apps as docker containers, AGL widgets and more..",
                    "- Scripts to automate AGL build system with the meta-kuksa layers.",
                    "- Scripts to automate the AGL build system with the meta-kuksa layers.",
                    "AGL",
                    "AGL KUKSA Build and Run on Raspberry PI 3:",
                    "AGL Kuksa",
                    "AGL build scripts",
                    "AGL c",
                    "AGL image",
                    "Add services to Kuksa-AGL (see more info",
                    "An adapted Eclipse Che stack featuring an AGL and Yocto stacks",
                    "As the In-Vehicle gateway can be run on different operating systems (Raspbian, AGL, Debian etc.)",
                    "As the In-Vehicle gateway can be run on different operating systems (Raspbian, AGL, Debian, Apertis, etc.)",
                    "Automotive Grade Linux (AGL) stack with Yocto support: AGL represents an automotive specific Linux distribution specifically designed as open software stack for connected car scenarios.",
                    "Build and deploy in-vehicle applications based on AGL (see more info",
                    "Build configuration commands for AGL",
                    "From its side, AGL uses Yocto/Bitbake building system to build an automotive domain specific Linux distribution.",
                    "How to build and run AGL-Kuksa on Raspberry Pi 3",
                    "However, an adapted AGL build will be secondary licensed",
                    "In-Vehicle developments will adapt to Automotive Grade Linux (AGL) that is partially LGPL and GPL.",
                    "Introduction — AGL Kuksa 0.0.1 documentation",
                    "Kuksa.AGL",
                    "Link to Pre-build Pi images are dead and unable to build AGL",
                    "Provided scripts to build AGL images are based on AGL Funky Flounder 6.0.1",
                    "Sphinx Build AGL-Kuksa",
                    "The Eclipse Kuksa developers will clarify if AGL code can be fully defined as a dependency i.e.",
                    "The Eclipse Kuksa project conatins a set of repositories and this repo is one among those that contains in-vehicle platform code and also contains required layers and bindings to build a Kuksa adapted AGL (Automotive Grade Linux) distribution.",
                    "The following video features an example on how to use the Kuksa-IDE for developing AGL applications and services running on a",
                    "The in-vehicle platform is primarily designed to work with AGL.",
                    "agl-kuksa - Scripts to automate AGL build system with the meta-kuksa layers.",
                    "inux (AGL, in-vehicle basis platform)",
                    "that no AGL code must be included in Eclipse Kuksa."
                ],
                "relationships": []
            }
        ]
    },
    {
        "py/object": "model.LinkKeyword.LinkKeyword",
        "Id": 8,
        "Description": "Data Distribution Service",
        "Keys": [
            "DDS"
        ],
        "projects": [
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "mosquitto",
                "Sentences": [
                    "Eclipse Cyclone DDS"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "om2m",
                "Sentences": [
                    "Eclipse Cyclone DDS"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "4diac",
                "Sentences": [
                    "Eclipse Cyclone DDS"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "agile",
                "Sentences": [
                    "(DDSP), leveraging artificial intelligence to anticipate problems, detect unexpected event patterns and to optimize processes, services and decisions.",
                    "2.3% 3.5% 5.3% 6.2% 7.4% 13.2% 13.9% 15.5% 19.2% 21.2% 52.4% 61.2% None DDS Other Proprietary vendor protocol I don’t know XMPP AMQP In-house / proprietary HTTP/2 CoAP MQTT HTTP 5/5/2016 IoT Developer Survey 2016 - Copyright Eclipse Foundation 10",
                    "DDSP"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "cyclonedds",
                "Sentences": [
                    "\" release of ROS2, where Cyclone DDS is one of 3 tier-1 middleware options.",
                    "\"DDS\" is a trademark of the Object Management Group, Inc.",
                    "\"Eclipse Cyclone DDS\" and \"Cyclone DDS\" are trademarks of the Eclipse Foundation.",
                    "<install-location>/share/CycloneDDS",
                    "<install-location>/share/CycloneDDS-CXX",
                    "A basic DDS implementation that is demonstrably usable in real-life projects.",
                    "Acceptance of Eclipse Cyclone DDS as a recognized (data-sharing) standard in the Industrial Internet of Things (IIoT)",
                    "At this point you are ready to use Eclipse Cyclone DDS in your own projects.",
                    "Background information on configuring Cyclone DDS can be found",
                    "Building Eclipse Cyclone DDS",
                    "Building the Eclipse Cyclone DDS C++ binding",
                    "C++ binding for Eclipse Cyclone DDS",
                    "CYCLONEDDS_URI",
                    "Cleaning up these issues is an ongoing process, undertaken as a background activity while working towards covering all of the DDS specification famliy.",
                    "Concrete examples of this are our evolving 'Vortex Insight' tooling for monitoring DDS-based systems and prototyped integrations with 3rd party tools such as apache-spark/storm, node-red and freeboard (see http://prismtech.github.io/ which will be transferred to Eclipse too)",
                    "Contributing to Eclipse Cyclone DDS",
                    "Cyclone DDS is developed completely in the open as an Eclipse IoT project (see",
                    "Cyclone DDS supports Linux, macOS and Windows as first-tier platforms.",
                    "Cyclone DDS's own CI on travis ensures compatibility with Windows, Linux and macOS on x64.",
                    "DDS Security defines a set of plug-in interfaces and protocol hooks that are part of the core DDS implementation and a set of \"default\" plug-ins that users may expect the DDS implementation to provide, but they can also provide their own plug-ins.",
                    "DDSI specification version 2.3",
                    "Depending on whether you want to develop applications using Cyclone DDS or contribute to it you can follow different procedures",
                    "Depending on whether you want to develop applications using the C++ binding for Cyclone DDS or contribute to it you can follow different procedures.",
                    "Eclipse Cyclone DDS",
                    "Eclipse Cyclone DDS 0.1.0 (Preambule)",
                    "Eclipse Cyclone DDS 0.1.0 (Preambule) Release Review",
                    "Eclipse Cyclone DDS 0.5.0 (Eusebius)",
                    "Eclipse Cyclone DDS 0.5.0 (Eusebius) Release Review",
                    "Eclipse Cyclone DDS 0.6.0 (Florestan)",
                    "Eclipse Cyclone DDS 0.6.0 (Florestan) Release Review",
                    "Eclipse Cyclone DDS 0.7.0 (Coquette)",
                    "Eclipse Cyclone DDS 0.7.0 (Coquette) Release Review",
                    "Eclipse Cyclone DDS Creation Review",
                    "Eclipse Cyclone DDS is a very performant and robust open-source DDS implementation.",
                    "Eclipse Cyclone DDS is an implementation of the OMG Data Distribution Service (DDS) specification (see http://www.omg.org/spec/DDS/ ) and the related specifications for interoperability (see http://www.omg.org/spec/DDSI-RTPS/ )",
                    "Eclipse Cyclone DDS offers unique data-sharing capabilities compared to the already existing Eclipse solutions (i.e.",
                    "Eclipse Cyclone DDS project",
                    "Eclipse Cyclone DDS | projects.eclipse.org",
                    "GitHub - eclipse-cyclonedds/cyclonedds: Eclipse Cyclone DDS project",
                    "Given that Cyclone DDS is a middleware library aimed at developers, the absence of translations is not believed to be an obstacle to adoption, and besides the active people would not be able to do much in the way of internationalisation ...",
                    "Given that Cyclone DDS now supports DDS Security, it is now \"at risk\" of having vulnerabilities.",
                    "If security supported is compiled out, the DDS_HAS_SECURITY macro will be undefined (otherwise it is defined to 1) and any attempt at creating a participant with security settings will be rejected with a \"precondition not met\" failure.",
                    "In order to build Cyclone DDS you need a Linux, Mac or Windows 10 machine (or, with some caveats, a *BSD, OpenIndiana or a Solaris 2.6 one) with the following installed on your host:",
                    "In order to build the C++ binding for Cyclone DDS you need a Linux, Mac or Windows 10 machine (or, with some caveats, a *BSD, OpenIndiana one) with the following installed on your host:",
                    "In the scope of this project we (ADLINK) will contribute our proven DDS solution as a starting point for a true open-source DDS offering with applicability in a wide range of existing and upcoming IoT applications.",
                    "Needless to say, anyone who simply wishes to use DDS will always be able to do so without being required to do such specialisation.",
                    "OMG DDS 1.4 (Minimum Profile with some of the Content Filtered Profile), but with an alternative API.",
                    "OMG DDS:",
                    "OMG DDSI-RTPS 2.2",
                    "One can choose at build-time whether to include the interfaces and protocol hooks in the core of Cyclone DDS.",
                    "Some rather well-known companies have chosen to use Cyclone DDS over the incumbent middleware implementations in the ROS2 ecosystem (https://iot.eclipse.org/adopters/?#iot.cyclonedds).",
                    "Support for an arbitrary number of concurrent DDS domains (fully independent instantiations of DDS) in a single process — this is a common feature for DDS implementations, but involved quite a bit of surgery for Cyclone DDS because of its heritage.",
                    "The \"create topic\" and \"find topic\" operations now create a new entity (thus with a unique handle), matching the DDS specification.",
                    "The OMG DDS standard is recognized as a highly applicable standard for reliable and robust data-sharing in business- and mission-critical environments (",
                    "The addition of DDS Security has unfortunately laid bare some more of these details.",
                    "The examples are built automatically when you build Cyclone DDS, so you don't need to follow these steps to be able to run the program, it is merely to illustrate the process.",
                    "The examples are built automatically when you build the C++ language binding for Cyclone DDS, so you don't need to follow these steps to be able to run the program, it is merely to illustrate the process.",
                    "The jump to 0.5 is because I have received some comments that \"0.1\" (and hence \"0.2\") makes Cyclone DDS look much less mature than it really is.",
                    "The key feature of this release is the support for the core of DDS Security 1.1: authentication, access control and encryption.",
                    "The tireless promotion of Cyclone DDS in the ROS2 community by Mr. Joe Speed (in particular) has dramatically increased visibility and use of Cyclone DDS.",
                    "The use of and contributions to Cyclone DDS has grown notably since becoming a tier-1 middleware in \"Foxy Fitzroy\", released June 5.",
                    "There are also activities underway to combine Cyclone DDS and Eclipse Iceoryx to get the best of both in a single system, and to combine Cyclone DDS and Eclipse Zenoh to overcome some of the scalability limitations inherent in the DDS specification.",
                    "There is currently no dependency of Cyclone DDS on any other project, and therefore no relationship to any of these resolved vulnerabilities.",
                    "These changes will turn Cyclone DDS from a dedicated DDS implementation into a more general platform that can then be optimised for specific applications.",
                    "This is an ongoing process, undertaken as a background activity while working towards covering all of the DDS specification famliy.",
                    "This is particularly relevant to language bindings and embedding Cyclone DDS in other frameworks, such as ROS2.",
                    "This is visible in several ways: more well-known companies putting their logo up on the \"adopters\" board (https://iot.eclipse.org/adopters/?#iot.cyclonedds), more issues and pull requests on Cyclone DDS itself, but more notably on the ROS 2 Middleware abstraction where various people have now joined in maintaining the abstraction layer.",
                    "This project implements the OMG Data Distribution Service (DDS) specification (see http://www.omg.org/spec/DDS/ ) and the related specifications for interoperability (see http://www.omg.org/spec/DDSI-RTPS/ )",
                    "To build and install the required libraries needed to develop your own applications using Cyclone DDS requires a few simple steps.",
                    "To build and install the required libraries needed to develop your own applications using the C++ binding for Cyclone DDS requires a few simple steps.",
                    "To obtain Eclipse Cyclone DDS, do",
                    "To obtain the C++ binding for Cyclone DDS, do",
                    "Two key features are not in place yet: an implementation of the DDS Security specification, and support for what the specification calls \"transient data\", that is, data managed by the infrastructure and remaining available to new subscribers even when the original publishers have terminated.",
                    "We would also like to contribute plugins to other eclipse IOT projects to enable users to benefit from DDS",
                    "We're quite proud of this: at the time of the initial release of \"Dashing\" there was no support for Cyclone DDS at all, both other tier-1 middleware options were there from the beginning, and no other newcomers have even made it to tier-2.",
                    "and are typically sufficient for protecting a DDS system.",
                    "by the directory under which you would like to install Cyclone DDS and",
                    "by the directory under which you would like to install the C++ binding for Cyclone DDS and",
                    "is a temporary dependency, a new IDL compiler for both Eclipse Cyclone DDS and Eclipse Cyclone DDS CXX is in the works.",
                    "set CYCLONEDDS_URI=file://...",
                    "support for the extensible data-types specification (OMG DDS-Xtypes rev 1.2)",
                    "support for the interoperable DDS security specification (OMG DDS-Security rev 1.0)",
                    "the Vortex OpenSplice code-base (v6.8): a polyglot DDS implementation covering all DCPS-profiles and related QoS-policies",
                    "​Furthermore we foresee a flow of tools and additional-features and integrations from our commercial offering towards opensource as the need for them grows by the community and its uptake of DDS."
                ],
                "relationships": [
                    "interchangeable"
                ]
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "zenoh",
                "Sentences": [
                    "A zenoh plug-in that allows to transparently route DDS data.",
                    "As mentioned above, ROS2 has adopted DDS as the mechanism to exchange data between nodes within and potentially across a robot.",
                    "DDS connector",
                    "GitHub - eclipse-zenoh/zenoh-plugin-dds: A zenoh plug-in that allows to transparently route DDS data.",
                    "Given a DDS Reader/Writer for topic",
                    "In order to get running with the DDS plugin for zenoh you need first to install the following dependencies:",
                    "Mapping DDS to zenoh",
                    "Our issue is the number of different channels we typically use, and a desire to limit the discovery flood that occurs in DDS through more intelligent mechanisms.",
                    "Protocols used today to build these systems, such as MQTT, DDS, CoAP and HTTP were not designed with these needs in mind.",
                    "Route the data produced by discovered DDS writers to data to matching entities.",
                    "Spoof DDS discovery data and transparently expose DDS writers/readers as zenoh publisher/subscribers",
                    "That said, due to some of the very core assumptions at the foundations of the DDS wire-protocol, beside the fact that it leverage UDP/IP multicast for communication, it is not so straightforward to scale DDS communication over a WAN or across multiple LANs.",
                    "That's just Zenoh trying to protect you from the horrors of DDS.",
                    "The Data Distribution Service (DDS) is a standard for data-centric publish subscribe.",
                    "The mapping between DDS and zenoh is rather straightforward.",
                    "This plugin can be used by DDS applications, such as ROS2 robotic applications and others, to leverage the zenoh for geographical routing or for better scaling discovery.",
                    "Thus the most natural way to implement a DDS connector for zenoh is to do that as a zenoh router plugin.",
                    "Whilst DDS has been around for quite some time and has a long history of deployments in various industries, it has recently gained quite a bit of attentions thanks to its adoption by the Robotic Operating System (ROS2) -- where it is used for communication between ROS2 nodes.",
                    "Zenoh plugin for DDS",
                    "Zenoh's authors have co-invented and built some of the communication infrastructures deployed today as part of telecommunication, aerospace and early Industrial Internet applications (notably DDS).",
                    "daemon will operate like a transparent router discovering DDS traffic and forwarding it on zenoh w/o you having to configure anything.",
                    "that can be used to transparently bridge DDS data on zenoh and viceversa.",
                    "🤣 if DDS is a horror, then cyclonedds is Casper the Friendly Ghost👻"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "iceoryx",
                "Sentences": [
                    "Cyclone DDS",
                    "Eclipse Cyclone DDS",
                    "Performant and robust open-source DDS implementation maintained by"
                ],
                "relationships": [
                    "interchangeable"
                ]
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "risev2g",
                "Sentences": [
                    "Eclipse Cyclone DDS"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "titan",
                "Sentences": [
                    "Eclipse Cyclone DDS"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "mtj",
                "Sentences": [
                    "Eclipse Cyclone DDS"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "uomo",
                "Sentences": [
                    "Eclipse Cyclone DDS"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "koneki",
                "Sentences": [
                    "Eclipse Cyclone DDS"
                ],
                "relationships": []
            }
        ]
    },
    {
        "py/object": "model.LinkKeyword.LinkKeyword",
        "Id": 9,
        "Description": "Web of Thing",
        "Keys": [
            "WoT"
        ],
        "projects": [
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "thingweb",
                "Sentences": [
                    ", as well as a runtime system (\"WoT Runtime\") providing the",
                    "A Thing Directory is a directory service for WoT Thing Descriptions (TDs) that provides a Web interface to register TDs (aligned with",
                    "Eclipse IoT is seen as the best fit, as \"Eclipse IoT provides the technology needed to build IoT Devices, Gateways, and Cloud Platforms\", and hence is spot on the W3C WoT idea of technological building blocks that span all levels of IoT systems.",
                    "Furthermore, Thingweb shall include auxiliary tools for the WoT ecosystem such as user interfaces or visualizers for Things, converters to the Thing Description and its serializations, semantic processors around the Thing Description, etc.",
                    "GitHub - thingweb/thingweb-directory: W3C WoT Thing Directory implementation",
                    "In short, W3C WoT seeks to extend the Web from a Web of pages to a Web of Things.",
                    "It is simply a toolkit with some demo applications enabling you to create and experiment with WoT applications.",
                    "Once these documents reach Candidate Recommendation status, the W3C WoT activity intends to re-charter the WoT Working Group to standardize the next set of building blocks.",
                    "Services to support the W3C WoT Plugfests",
                    "The WoT Working Group was re-chartered to standardize the next set of building blocks and to advance the existing ones.",
                    "The first phase of W3C WoT standardization activity already ended and yielded to a recommendation for the Thing Description.",
                    "The former is being explored and identified by the WoT Interest Group, which operates in parallel to the Working Group.",
                    "Thingweb - WoT Plugfest services",
                    "Thingweb is an implementation of the WoT Model discussed in the",
                    "This is being explored and identified by the WoT Interest Group, which operates in parallel to the Working Group.",
                    "This library implements the WoT Scripting API:",
                    "This may include early work by the WoT Interest Group that is not part of the standards track yet.",
                    "W3C Web of Things (WoT)",
                    "W3C WoT Thing Directory implementation",
                    "W3C WoT WG",
                    "We provide sevices to support exploring W3C WoT",
                    "We will provide sevices to support the operation of a Plugfest of W3C WoT",
                    "Web of Things (WoT) Architecture",
                    "Web of Things (WoT) Binding Templates",
                    "Web of Things (WoT) Scripting API",
                    "Web of Things (WoT) Thing Description",
                    "WoT Binding Templates",
                    "WoT Scripting API",
                    "WoT Thing Description",
                    "WoT-FXUI",
                    "node-wot is the official reference implementation of the W3C WoT Working Group and implements the so-called \"Servient Architecture\":"
                ],
                "relationships": [
                    "use",
                    "interchangeable"
                ]
            }
        ]
    },
    {
        "py/object": "model.LinkKeyword.LinkKeyword",
        "Id": 10,
        "Description": "the standard for contactless tickets and cards",
        "Keys": [
            "Calypso"
        ],
        "projects": [
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "hip",
                "Sentences": [
                    "Calypso Networks Association"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "keyple",
                "Sentences": [
                    "'Keyple Calypso Library JAR'",
                    "(As Transpor Ticketing in France is 100% Calypso based they have to be Calypso Compliant)",
                    "(Old API of Keyple, & Generic Terminal Interface for Reader & Calypso",
                    ") is required too if security features are involved (Calypso secure session, Stored value transaction, PIN encryption, etc…).",
                    "5T: Transport Operator of Piemonte Region in italy that wants to use Keyple to use their Calypso Card for new mobility services (Bike Sharing, Car Sharing, Parking...",
                    ": the Calypso API to operate a transaction with a Calypso Portable Object.",
                    ": the high-level interface to operate Calypso Card processing",
                    "A Calypso PO image provides public ‘getters’ in order to",
                    "A Calypso Portable Object (CalypsoPo) is the image of a selected Calypso PO.",
                    "A Calypso Portable Object is the image of a selected Calypso PO.",
                    "A Calypso SAM (CalypsoSam) is the image of a selected Calypso SAM.",
                    "A Calypso SAM is the image of a selected Calypso SAM.",
                    "A transaction with a Calypso PO is fully managed through the PoTransaction object:",
                    "A ‘Calypso Keyple extension' : a high level Calypso Processing API allowing to operate commands with a Calypso Portable Object, and to manage a secure Calypso transaction (",
                    "A ‘Calypso Keyple extension' : a high level Calypso Processing API allowing to operate commands with a Calypso Portable Object, and to manage a secure Calypso transaction.",
                    "API guides for the Keyple Core and Keyple Calypso are available on",
                    "All the code of the initial contribution is owned by Calypso Networks Association.",
                    "At least a Calypso Resource (CardResource",
                    "At least a Calypso resource (SeResource",
                    "Bixi: Company that operates BikeSharing system in Montreal using the OPUS Transport card (which is Calypso-based) in cooperation with STM, the tranport operator of Montreal.",
                    "Calypso",
                    "Calypso - low level API to manage the common Calypso features (secure session for authentication, read and write commands of EF records)",
                    "Calypso - simplified high level API to build the Portable Object APDU commands (PO data still recovered through a lower API managing APDI response parser)",
                    "Calypso Api",
                    "Calypso PO & SAM APDU commands' sets",
                    "Calypso PO & SAM commands' sets",
                    "Calypso PO responses data parsing",
                    "Calypso Portable Object Selection",
                    "Calypso Portable Object Transaction",
                    "Calypso Portable Object commands and secure transaction management",
                    "Calypso SAM (Secure Module) operations automatically processed",
                    "Calypso SAM responses data parsing",
                    "Calypso card image",
                    "Calypso is a set of specifications describing a fast and secure off-line contactless transaction, between a portable object and a terminal.",
                    "Calypso processing API",
                    "Calypso standard",
                    "Calypso transaction",
                    "Consequently, Calypso Networks Association, leaded by Public Transport operators, decided to develop and publish an Open Source SDK that could fit with any type of terminal and contactless reader architecture in order to facilitate and spread the adoption of the calypso standard.",
                    "Eclipse Keyple provides generic librairies for simplifying the development of contactless applications based on the Calypso standard, and for facilitating integration with the secure elements typically involved in a secure contactless solution.",
                    "Extension': the library to define transaction with Calypso card.",
                    "Furthermore, other mobility actors (Car sharing, bike sharing…) that would like to be integrated in the mobility ecosystem led by public transport operator would like to benefit of the highly secured Calypso transaction “as a service”, and consequently be ready for global integration without being ”killed” by complexity and security issues that would oblige them to make too big investments.",
                    "In case file records have been read during the selection: the corresponding data could be recovered in the Calypso PO card image.",
                    "In fact, from the very beginning, the scope of Calypso Networks Association is to promote the open standard Calypso which has been originally designed for Interoperability in transportation.",
                    "In fact, if the Calypso specifications are open, the terminal applications operating ticketing data (contracts, pricing, user profile) which have to be implemented on top of a smartcard management layer are proprietary of a few ticketing integrator/manufacturer, and the networks who used this solutions may only manage evolutions in a “purchase by agreement” manner, with a direct impact on the price.",
                    "It manages the advanced security features of Calypso but is also able to manage non-Calypso smartcard solutions, for ticketing or payment.",
                    "Ixxi: ITS Subsidiary of RATP, that want to use Keyple as the Core of a Calypso Based NFC Ticketing Mobile app",
                    "KEYP-101 : enhanced CalypsoPo with card data (updated during the transaction)",
                    "KEYP-102 : update the content of CalypsoPo during selection",
                    "KEYP-225 : PoResource and SamResource classes are removed, their usage is replaced by SeResource<CalypsoPo/CalypsoSam>",
                    "KEYP-292 : make CalypsoPo and CalypsoSam classes extendable",
                    "Keyple Calypso",
                    "Keyple Calypso - Application API",
                    "Keyple Calypso - Transaction API",
                    "Keyple Calypso - features / packages and corresponding usages",
                    "Keyple Calypso Application API",
                    "Keyple Calypso Application API | keyple",
                    "Keyple Calypso User Guide",
                    "Keyple features defined to support the Calypso solution:",
                    "Low level API: support of the main Calypso PO & SAM commands",
                    "Missing the Calypso CLAp automatic setting, the support of the PIN, Stored Value, Confidential session, & Data Signature features.",
                    "Most of the process methods have a ‘Channel Control’ parameter in order to define if the logical with the selected Calypso has to be kept open or to be closed after the processing of the prepared PO commands.",
                    "Note that from now the “prepare” methods no longer return indexes, the data will be placed in the CalypsoPo object.",
                    "Some tests have a dependency with the Calypso library.",
                    "Thanks to its modular architecture, Keyple can be used also to communicate with non Calypso contactless portable objects, using the SE Proxy API.",
                    "The Calypso standard is managed by the Calypso Networks Association (CNA) , which is led by transports operators and public authorities in order to ensure openness and independence from industrials in confront of other proprietary schemes.",
                    "The Keyple Brand is also owned by Calypso Networks Association which will transfer its propriety to the Eclipse Fondation.",
                    "The Keyple Calypso extension uses the card interface to exchange APDU commands with Calypso cards and SAM.",
                    "The Keyple Cpp is currently limited to support of the 'Calypso Core', 'Calypso Extension', the 'stub plugin', and the ‘PC/SC plugin' (based on the same API as for Java compnents).",
                    "The data received from the PO are now made available in CalypsoPo instead of the previous parser system.",
                    "The data received from the PO are now made available in CalypsoPo.",
                    "The goal of Eclipse Keyple is to allow developers to easily implement fast and secure off-line contactless transactions (using NFC cards, mobile phones, …) based on the Calypso standard.",
                    "The matching SE resulting from a PO Selection Request is a Calypso PO.",
                    "The matching SmartCard resulting from a PO Selection Request is a Calypso PO.",
                    "The only exception is the implementation a Calypso PO/SAM test tool, the setting of low-level APDU commands with wrong settings could require the usage of the Calypso command packages.",
                    "The project hosts a first extension to support the Calypso ticketing solution.",
                    "The public getter methods of CalypsoPo are:",
                    "The responses of the PO are then recovered through the Calypso PO image.",
                    "The transaction API is defined on a low-level Calypso commands API which contains the builders of PO and SAM APDU commands, and the corresponding parsers of APDU responses.",
                    "They want to use Keyple to adress Calypso Based Markets",
                    "This is the repository for the C++ implementation of 'Calypso API' for the '",
                    "This is the repository for the Java implementation of 'Calypso API' for the '",
                    "Ticketing terminal applications must import only the high-level Calypso transaction package.",
                    "To operate a Calypso transaction:",
                    "Today Calypso represent 20% of the world market of contactless smart ticketing in 25 countries and 125 cities.",
                    "Transaction API; management a Calypso secure session",
                    "We can affirm that a real openness is achieved for cards and portable objects with the Calypso standard with a large choice of products and providers (card manufacturer, OS makers and chip providers) and a real competition between them.",
                    "We plan to offer before the end of the year a more complete Calypso processing module that will implement all additional and optional features of the last Calypso version.",
                    "With Keyple API 0.9, Calypso PO data is made available in the CalypsoPo object obtained during selection and enriched all along the operations performed with PoTransaction.",
                    "example: source for Keyple implementation examples, generic or Calypso specific.",
                    "full set of Calypso PO features",
                    "keyple-calypso: source and unit tests for the Calypso library (artifact : keyple-java-calypso)",
                    "low level Calypso API, commands’ settings include technical parameters specific to Calypso PO revisions or Calypso SAM revisions",
                    "simplified Calypso API",
                    "specific packages for Calypso",
                    "the 'keyple-calypso' module: it’s an extension library which provides the support de define commands and secure transaction specific to the Calypso ticketing solution",
                    "the Calypso PO test in contact mode has yet to be performed",
                    "the addition of the Calypso features Stored Value transaction and PIN verification, the support Invalidate/Rehabilitate PO commands, and the Unlock SAM command.",
                    "to manage Calypso commands & security features.",
                    "to prepare Select File command (useful in particular to manage REV1 Calypso PO for which the select of the targeted DF is required).",
                    "{\"@type\":\"WebPage\",\"headline\":\"Keyple Calypso Application API\",\"url\":\"https://calypsonet.github.io/keyple/KeypleCalypsoApi/Application/\",\"description\":\"keyple project\",\"@context\":\"https://schema.org\"}",
                    "{\"@type\":\"WebPage\",\"headline\":\"Keyple Calypso Application API\",\"url\":\"https://calypsonet.github.io/keyple/KeypleCalypsoApi/KeypleCalypso_Transaction.html\",\"description\":\"keyple project\",\"@context\":\"https://schema.org\"}"
                ],
                "relationships": [
                    "use"
                ]
            }
        ]
    }
]