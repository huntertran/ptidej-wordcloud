[
    {
        "py/object": "model.LinkKeyword.LinkKeyword",
        "Id": 1,
        "Description": "Message Queuing Telemetry Transport",
        "Keys": [
            "MQTT",
            "ZMQ",
            "RabbitMQ"
        ],
        "projects": [
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "paho",
                "Sentences": [
                    "<name>Paho MQTT Client</name>",
                    "A broker in MQTT handles receiving published messages and sending them on to any clients who have subscribed.",
                    "AWS Announces Amazon MQ Will Support RabbitMQ",
                    "Although there are a number of brokers available, the Mosquitto broker is by far the easiest to configure and run for MQTT-only work.",
                    "As well as standalone MQTT brokers, it has also been integrated into other message queuing brokers such as ActiveMQ and RabbitMQ, providing a bridge into the enterprise network.",
                    "Diving deeper into MQTT",
                    "Each message in MQTT can have its quality of service and retain flag set.",
                    "Finally we disconnect from the broker and we've completed an MQTT session.",
                    "First, as the Paho MQTT code isn't in Maven Central (yet), we need to include its repository – open the pom.xml file and after </version> add",
                    "How to read MQTT messages from subscribed topics?",
                    "In this article we'll be showing how to use the Paho Java MQTT libraries to publish and subscribe.",
                    "In this article we'll be showing how to use the Paho Java MQTT libraries to publish and subscribe.”",
                    "In this article we’ll show how MQTT and the Eclipse Paho project can let you answer that challenge.”",
                    "In this snippet, we create a client connection to an MQTT broker running on the local host, over TCP to port 1883 (the default port for MQTT).",
                    "It’s a powerful tool and we haven't even started looking at it in the environment it was designed for, in the Internet of Things connecting sensors to servers - we'll come to that in our next part of Practical MQTT with Paho.",
                    "MQTT",
                    "MQTT 3.1.1 is also an ISO standard (ISO/IEC 20922).",
                    "MQTT also has a very light API, with all of five protocol methods, making it easy to learn and recall, but there's also support for SSL-encrypted connections and username/password authentication for clients to brokers.",
                    "MQTT and MQTT-SN are lightweight publish/subscribe messaging transports",
                    "MQTT and MQTT-SN in a variety of programming languages.",
                    "MQTT comes from the world of M2M (Machine to Machine) and the Internet of Things.",
                    "MQTT is a light weight publish/subscribe messaging protocol, originally created by IBM and Arcom (later to become part of Eurotech) around 1998.",
                    "MQTT is a protocol and protocols need client implementations.",
                    "MQTT is a publish/subscribe messaging system that allows clients to publish messages without concerning themselves about their eventual destination; messages are sent to an MQTT broker where they may be retained.",
                    "MQTT is an OASIS standard.",
                    "MQTT was originally created by IBM's Andy Stanford-Clark and Arlen Nipper of Arcom (taken over later by Eurotech) as a complement to enterprise messaging systems so that a wealth of data outside the enterprise could be safely and easily brought inside the enterprise.",
                    "More information about the protocols can be found on MQTT.org.",
                    "One important point to note is that we have, for simplicity, only covered the synchronous version of the API where every call to the MQTT API blocks and the only thing that comes through on its own schedule are inbound messages from subscriptions.",
                    "Practical MQTT with Paho",
                    "Practical MQTT with Paho »",
                    "Serving statistics via MQTT",
                    "Since making its debut, MQTT has proved itself in production scenarios.",
                    "So, MQTT and the Paho project gives us a flexible, lightweight protocol with Java and C and Lua and other implementations which can be easily tuned to a range of use cases and doesn't place requirements on how we pass data across it.",
                    "Talking Small: Using Eclipse Paho's MQTT on BeagleBone Black and Raspberry Pi »",
                    "The Eclipse Foundation is no stranger to Mosquitto – it runs a public instance of Mosquitto as an MQTT sandbox on m2m.eclipse.org so if you cannot download and run your own Mosquitto server you can change the connection URI in the example to \"tcp://m2m.eclipse.org:1883\".",
                    "The core of listening to MQTT activity in the Java API is the MqttCallback interface.",
                    "The messages' payloads are just a sequence of bytes, up to 256MB, with no requirements placed on the format of those payloads and with the MQTT protocol usually adding a fixed header of two bytes to most messages.",
                    "The most recent version of the specification MQTT 3.1 is being used as the basis for an OASIS standard for messaging telemetry, a basis that’s not expected to vary much, if at all, from the MQTT specification in order to maintain compatibility.",
                    "There is an Eclipse IoT sandbox MQTT server available at mqtt.eclipse.org.",
                    "To allow for the variety of possible situations where MQTT can be put to use, it lets clients and brokers set a \"Quality of Service\" on a per-message basis from \"fire and forget\" to \"confirmed delivery\".",
                    "To avoid the obvious problem of every client getting every message published by every other client, MQTT messages are published with what are called topics.",
                    "To start thinking about MQTT in code, here's the simplest use of the MQTT API:",
                    "Under the Paho banner, open source client libraries for MQTT are being curated and developed; there are already MQTT C and Java libraries with Lua, Python, C++ and JavaScript at various stages of development.",
                    "We've now got a basic Paho MQTT publish client running and we can start exploring the various options available.",
                    "When you progress further into developing MQTT-based applications, it is worth considering whether using the synchronous API or the asynchronous API is more appropriate for your case.",
                    "Why MQTT?",
                    "“Under the Paho banner, open source client libraries for MQTT are being curated and developed; there are already MQTT C and Java libraries with Lua, Python, C++ and JavaScript at various stages of development."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "mosquitto",
                "Sentences": [
                    "An MQTT bridge, to allow Mosquitto to connect to other MQTT servers.",
                    "As well as accepting connections from MQTT client applications, Mosquitto has a bridge which allows it to connect to other MQTT servers, including other Mosquitto instances.",
                    "Both MQTT and MQTT-SN are client-server protocols, for which a server is needed to distribute messages between the client applications.",
                    "Control arduino via MQTT By: Federico R on Thu, 14 June 2018",
                    "Disappearing Mosquitto 1.6.0 MQTT bridge messagesMosquitto v1.14 mosquitto bridge forwards all messages.",
                    "Eclipse Mosquitto provides a lightweight server implementation of the MQTT protocol that is suitable for all situations from full power machines to embedded and low power machines.",
                    "How to securely store the password of Mosquitto as a client to RabbitMQ By: Chris H on Wed, 06 December 2017",
                    "In 2010, Roger Light learned about MQTT and RSMB from an Andy Stanford-Clark presentation.",
                    "It is less mature than MQTT, the specification being published in 2008, by Andy Stanford-Clark and Hong Linh Truong, both of IBM.",
                    "It's aim was to be a minimalist MQTT server, and according to the usual alphaWorks practices, was closed source and released under an evaluation-only license.",
                    "MODBUS to MQTT Can MQTT broker send custom message (commands) back to publisher.",
                    "MQTT - SSL Connection to test.mosquitto.org:8883MQTT - SSL Connection to test.mosquitto.org:8883 refused using mosquitto By: Tom Becnel on Sat, 09 September 2017",
                    "MQTT BLE gateway By: Rowan Sylvester-Bradley on Sat, 03 October 2020",
                    "MQTT Broker - Topic remap or message edit By: BhanuKiran Chaluvadi on Mon, 14 January 2019",
                    "MQTT Community",
                    "MQTT Community site aka mqtt.org",
                    "MQTT Protocol discussion Google Group (note: not Mosquitti-specific)",
                    "MQTT and MQTT-SN are undergoing an increase in interest as a consequence of the activity and publicity around the Internet of Things, to which they are suited.",
                    "MQTT create username and password using PHPMQTT create username and password using PHP By: Srinivas Pokala on Mon, 06 June 2016",
                    "MQTT disconnect problems By: Krister Skare Andersen on Thu, 27 June 2019",
                    "MQTT is a protocol created in the late 1990s by Andy Stanford-Clark of IBM and Arlen Nipper, then of Arcom Control Systems.",
                    "MQTT is currently undergoing standardization at",
                    "MQTT mosquitto clientPosting multiple messages using mosquitto MQTT publisher By: nila rajesh on Wed, 23 September 2015",
                    "MQTT no connection with ESP8266 but connect to AndroidMQTT refuses connection with ESP8266 and Laptop but works with Android By: Derek Belz on Sat, 11 May 2019",
                    "MQTT protocol discussion Google Group",
                    "MQTT-SN (currently being renamed from MQTT-S) is a protocol derived from MQTT, designed for connectionless underlying network transports such as UDP.",
                    "MQTT.fx: Can not send message By: Juergen Babenhauserheide on Fri, 29 November 2019",
                    "Mosquitto Install ErrorMosquitto MQTT By: Anthony Cangemi on Thu, 19 May 2016",
                    "Mosquitto MQTT issue on AWSConnections dropping on AWS t3.medium instance By: Sharath Kumar on Tue, 22 October 2019",
                    "Mosquitto is a core component of the Eclipse Streamsheets project, which provides an easy to use realtime spreadsheet like interface to allow the incoming data from MQTT, OPC-UA, REST, and other protocols to be processed by non-developers to produce dashboards, control processes, or just about anything requiring multiprotocol input and output.",
                    "Mosquitto is a lightweight implementation of a broker that supports the MQTT protocol.",
                    "Mosquitto is able to translate and transfer messages between MQTT and MQTT-SN, so that it can act as a gateway between devices which communicate with either protocol.",
                    "Mosquitto keeps up to date with any MQTT or MQTT-SN specification changes, for instance the outcome of the OASIS MQTT specification standardization.",
                    "Mosquitto provides a lightweight server implementation of the MQTT and MQTT-SN protocols, written in C. The reason for writing it in C is to enable the server to run on machines which do not even have capacity for running a JVM.",
                    "No TCP Response from iot.eclipse.orgUnable to establish an MQTT connection By: Mike n on Fri, 29 September 2017",
                    "OASIS MQTT Technical Committee",
                    "October 15, 2020Re: [mosquitto-dev] MQTT-based voltage sensor Posted 19:08 by mohamed AbdulmajidRe: [mosquitto-dev] MQTT-based voltage sensor Posted 18:39 by Dustin Sallings[mosquitto-dev] MQTT-based voltage sensor Posted 18:33 by mohamed Abdulmajid",
                    "October 16, 2020Re: [mosquitto-dev] MQTT-based voltage sensor Posted 06:01 by Edwin van den OetelaarRe: [mosquitto-dev] MQTT-based voltage sensor Posted 02:55 by Josef Möllers",
                    "Paho provides MQTT client libraries in various languages.",
                    "Possible Memory Leak with 2 ESP32?Two ESP's sending to one MQTT Server with data loss.",
                    "Problem in receiving data in MQTT paho C Problem in receiving data in MQTT paho C By: shakti gupta on Thu, 29 September 2016",
                    "Received MQTT data from a subscribed topic on text file.I have to receive MQTT data from a subscribed topic and I want to save the data in a text file By: sayali Kutwal on Fri, 05 April 2019",
                    "Redundant / High Available InstallCan the MQTT Server be installed in a HA configuration By: John Fowler on Tue, 19 February 2019",
                    "Sensors and actuators, which are often the sources and destinations of MQTT and MQTT-SN messages, can be very small and lacking in power.",
                    "Sensors and actuators, which are often the sources and destinations of MQTT messages, can be very small and lacking in power.",
                    "Socket error on client<unknown>,disconnecting.MQTT client is unable to connect with mosquitto broker through mqtt/tls protocol By: Priya Sundararaj on Wed, 14 August 2019",
                    "The Mosquitto project provides a small server implementation of the MQTT and MQTT-SN protocols.",
                    "The combination of Paho and Mosquitto will allow complete MQTT and MQTT-SN based M2M solutions to be built.",
                    "The current version of MQTT is 3.1; the specification is for which is held on",
                    "The definition of the MQTT-SN protocol is held at MQTT.org.",
                    "The existing open-source Mosquitto project is already linked with Eclipse as it provides the MQTT sandbox server available at m2m.eclipse.org.",
                    "The proposed Mosquitto project is complementary with existing Eclipse projects that make use of MQTT, such as Paho and Koneki.",
                    "The second contribution is the Really Small Message Broker server and MQTT-SN client code, all of which is copyright IBM in its entirety - there is no third party licensed code.",
                    "The server has the following features, which are not described in the MQTT specification:",
                    "This allows networks of MQTT servers to be constructed, passing MQTT messages from any location in the network to any other, depending on the configuration of the bridges.",
                    "This includes the broker/server itself, as well as MQTT client libraries in C, C++, Python and JavaScript.",
                    "Use Advanced MQTT tools to send wireless vibration sensor data to node red dashboard By: Gerred Jhon on Wed, 12 December 2018",
                    "User authorization - the ability to restrict user access to MQTT topics.",
                    "Using MQTT with HTTP serving streamusing both MQTT with HTTP causing MQTT messages to be lost (Python) By: ball chu on Mon, 14 September 2020",
                    "Web Based MQTT Client Feedback By: Muhammad Afzal on Sun, 25 August 2019",
                    "Wireless Sensor+ Google Sheet+MQTTSynchronize Wireless Temperature sensor data with google sheet and MQTT By: Gerred Jhon on Wed, 14 November 2018",
                    "flow data bteween SQL Data base and SmartPhoen via MQTT brokersample app for connecting to CloudMQTT or Mosquitto broker By: yomegni leopold on Tue, 08 October 2019",
                    "mqtt.eclipse.org: Receiving to many MQTT Messages By: Johannes Ebner on Wed, 25 December 2019"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "californium",
                "Sentences": [
                    "Together with MQTT, CoAP is one of the popular IoT protocols."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "ditto",
                "Sentences": [
                    "Acknowledges the received MQTT 3.1.1 message",
                    "Also in scenarios where you have no direct connection like HTTP / WS but have messaging involved like MQTT or generally Hono you can not rely that the timestamp when you receive an update message is roughly equivalent to the timestamp when it was measured.",
                    "As MQTT 3.1.1 does not support headers in its protocol, a header mapping is not possible to configure here.",
                    "By default (configured true), a single Ditto connection would open 2 MQTT connections/sessions: one for subscribing and one for publishing.",
                    "Configure the MQTT client’s cleanSession flag.",
                    "Configures a specific MQTT client ID for the case that \"separatePublisherClient\" is enabled.",
                    "Configures that the MQTT connection re-connects whenever a consumed message (via a connection source) with QoS 1",
                    "Configures whether to create a separate physical client and connection to the MQTT broker for publishing messages, or not.",
                    "Connection configuration to create a new MQTT connection:",
                    "Consume messages from MQTT brokers via sources and send messages to MQTT brokers via",
                    "Create a connection (MQTT)",
                    "Default: not set - the ID of the Ditto connection is used as MQTT client ID.",
                    "Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5",
                    "Ditto supports certificate-based authentication for MQTT connections.",
                    "Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g.",
                    "Eclipse Hono, a RabbitMQ broker or an",
                    "Establishing a connection to an MQTT 3.1.1 endpoint",
                    "Establishing and maintaining connections to AMQP 0.9.1, AMQP 1.0, MQTT and Apache Kafka endpoints",
                    "Following are some specifics for MQTT connections:",
                    "For MQTT 3.1.1 sources, when configuring",
                    "For MQTT 3.1.1 targets, when configuring",
                    "For an MQTT connection, the target address is the MQTT topic to publish events and messages to.",
                    "For an MQTT connection:",
                    "Here is an example MQTT connection, which checks the broker certificate and authenticates by a client certificate.",
                    "How to establish a MQTT connection",
                    "If configured to false, the MQTT message is simply acknowledged (PUBACK or PUBREC, PUBREL).",
                    "If configured to false, the same MQTT connection/session is used both: for subscribing to messages, and for",
                    "IoT-Device connected directly to Ditto via MQTT - controlled by a custom solution",
                    "Let’s assume your device sends telemetry data via Eclipse Hono’s MQTT adapter into the cloud.",
                    "MQTT 3.1.1",
                    "MQTT 3.1.1 does not support headers in its protocol, however Ditto extracts the following headers from each consumed message:",
                    "MQTT 3.1.1 messages have no application headers.",
                    "MQTT 3.1.1 properties",
                    "MQTT 3.1.1 protocol binding",
                    "MQTT 3.1.1 protocol binding • Eclipse Ditto • a digital twin framework",
                    "MQTT 5",
                    "MQTT 5 protocol binding",
                    "Once the MQTT 3.1.1 client signals that the message was acknowledged by the MQTT 3.1.1 broker, the following information",
                    "Overall example JSON of the MQTT \"specificConfig\":",
                    "Overwrites the default MQTT client id.",
                    "Re: [ditto-dev] Support for MQTT in ditto-client,",
                    "Source \"addresses\" are MQTT topics to subscribe to.",
                    "Support of any Quality of Service depends on the external MQTT broker.",
                    "Support of any Quality of Service depends on the external MQTT broker; AWS IoT for example does not",
                    "That causes that the MQTT broker will re-publish the message once the connection reconnected.",
                    "The MQTT 3.1.1 binding offers additional specific configurations",
                    "The headers are lost for connection protocols without application headers such as MQTT 3.",
                    "There are various APIs in order to interact with the devices: an HTTP and WebSocket API, additionally the capability to integrate with other systems via AMQP, MQTT and Apache Kafka.",
                    "When MQTT messages are sent in Ditto Protocol,",
                    "When your device now sends its payload via the MQTT adapter of Eclipse Hono:",
                    "[ditto-dev] Support for MQTT in ditto-client,",
                    "acknowledgement requests, consumed messages from the MQTT 3.1.1",
                    "acknowledges the received MQTT 3.1.1 message as redelivery does not make sense",
                    "all connectivity types (AMQP, MQTT, ...)",
                    "and an AMQP, MQTT 5, Kafka message with payload or an HTTP request with body of 6 bytes",
                    "closes and reconnects the MQTT connection in order to receive unACKed QoS 1/2 messages again",
                    "connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)",
                    "ditto-message-thing-id (mandatory for MQTT 3): ID of the thing to send the message command or response to.",
                    "if not, the \"replyTarget.address\" may also be filled with a static reply address where the MQTT device sends its replies todid you previously define a separate \"source\" for the replies?",
                    "mqtt.qos: contains the MQTT QoS value of a received message",
                    "mqtt.retain: contains the MQTT retain flag of a received message",
                    "mqtt.topic: contains the MQTT topic on which a message was received",
                    "of AMQP, MQTT and Kafka messages and the body of HTTP requests.",
                    "or simply acknowledges the received MQTT 3.1.1 message",
                    "similar to kafka, AMQP or MQTT notifying you of a new message",
                    "the \"replyTarget\" in a connection's target defines on which address responses are consumed for outgoing messages Ditto sends (in this case published to a MQTT topic)previously that was purely defined by the \"reply-to\" header (which should also be the default for the \"replyTarget\" \"address\", isn't it?",
                    "the MQTT endpoint of Eclipse Hono to a digital twin in Ditto:",
                    "the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before",
                    "the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some pointsome \"fake headers\" may now be used in a headerMapping for MQTT 3, see: https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mappingbut to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs",
                    "to apply for the used MQTT client.",
                    "to fix that, configure \"separatePublisherClient\" also to true in order to publish via another MQTT connection",
                    "via WebSocket or the connectivity - AMQP, MQTT, Kafka, HTTP), only the actually changed values are contained in that published event.",
                    "when set to false, MQTT messages with QoS 1 and 2 could get lost (e.g.",
                    "when set to true and there is also an MQTT target configured to publish messages,",
                    "will be 200, if the message was successfully ACKed by the MQTT 3.1.1 broker or when the target has QoS 0",
                    "will be 503, if the MQTT 3.1.1 broker ran into an error before an acknowledgement message was received"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "hawkbit",
                "Sentences": [
                    "(Optional) RabbitMQ: 3.6,3.7",
                    "Auf Ebene des Transportprotokolls sehen wir von HTTP über MQTT, AMQP oder CoAP so ziemlich alles im Einsatz.",
                    "Authentication is provided by RabbitMQ vhost and user credentials that is used for the integration.",
                    "Configure RabbitMQ connection settings for update server and device simulator (optional).",
                    "Correct outdated RabbitMQ listener properties (#899)",
                    "Hi all,I have a question regarding DMF API and RabbitMQ.",
                    "RabbitMQ",
                    "RabbitMQ for DMF communication.",
                    "Start the hawkBit Update Server and Device Simulator together with an MySQL and RabbitMQ instance as services within a swarm",
                    "Start the hawkBit Update Server together with an MySQL and RabbitMQ instance as containers",
                    "The hawkbit Update Server uses RabbitMQ binder.",
                    "The provided RabbitMQ vhost and user should be provided with the necessary permissions to send messages to hawkBit through the exchange and receive messages from it through the specified queue.",
                    "There are all sorts of transport protocols currently in use, ranging from HTTP to MQTT, AMQP, and CoAP.",
                    "Using NATS instead of RabbitMQ",
                    "hi... have just run the docker image, which I thought is standalone.... but it fails badly looking for an MQTT server!"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "kura",
                "Sentences": [
                    "* #1246: [Wires] MQTT namespace",
                    "* #1644: [Artemis] MQTT clients fail to reconnect after the broker is restarted",
                    "* Added selection of the MQTT protocol version to the MqttDataTransport configuration",
                    "* Added support for MQTT over Websockets",
                    "* Cloud connections (MQTT) with local store and forward capabilities to handle disconnected states as well as Google Protobuf message packing",
                    "* Improved management and security of the keystore used for the MQTT",
                    "* MQTT publish rate improvement: A limit parameter will be added to the MQTT transport service",
                    "* MqttDataTransport configuration: changed default MQTT protocol version to 3.1.1.",
                    "ASSET-V1 MQTT Namespace",
                    "CloudClientListener will listen for MQTT messages on the «Commands» topic",
                    "Data Services MQTT Paho",
                    "It features ready-to-use field protocols (including Modbus, OPC-UA, S7), an application container, and a web-based visual data flow programming to acquire data from the field, process it at the edge, and publish it to leading IoT Cloud Platforms through MQTT connectivity.",
                    "Kura Wires MQTT namespace",
                    "MQTT",
                    "MQTT Topics and Metrics",
                    "MQTT Transport",
                    "MQTT Websockets",
                    "MQTTGSM/GPRS",
                    "Simple Artemis MQTT Broker Service",
                    "logic explanation, MQTT topics and metrics (Luca, 15 mins)",
                    "the MQTT Adapter",
                    "to allow throttling of MQTT messages to prevent unnecessary congestion on the MQTT broker.",
                    "– MQTT",
                    " Listens for requests on the Commands MQTT topic",
                    " Publishes data to the MQTT Broker using the MQTTDataTransport"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "om2m",
                "Sentences": [
                    "(XML or JSON) Serialization of the request and response primitives in MQTT protocol By: Klemen Petrovcic on Sun, 01 May 2016",
                    "Create AE via MQTT BindingMQTT Binding By: teak jin kim on Thu, 01 June 2017",
                    "Create OneM2M subscription resource with MQTT By: Ramakrishnan Bala on Thu, 27 April 2017",
                    "Forwarding Request MQTTUsing a central broker.",
                    "How to use oneM2M MQTT binding",
                    "MQTT Server Authorization (request/response topic) By: Brahim AIT ELHAJ on Wed, 21 June 2017",
                    "MQTT communication binding",
                    "MQTT: Error in creating container/content instance on MN-CSE/IN-CSE By: Muhammad Kamran on Fri, 16 February 2018",
                    "MQTT?is it already there?",
                    "Notification over MQTTProblem when sending a notification over MQTT By: Maite Bezunartea on Mon, 15 May 2017",
                    "OM2M MQTT Response Parameters By: Loula Beck on Tue, 20 March 2018",
                    "OM2M MQTT-TLSSecurity over MQTT By: Loula Beck on Tue, 12 June 2018",
                    "Posting data object with MQTTPosting data object with MQTT By: Jairo Ariza on Wed, 07 March 2018",
                    "Test MQTT blinding in OM2MTest MQTT blinding in OM2M By: hieu tran on Wed, 22 November 2017",
                    "[REQUEST] Official Release with MQTT binding feature pre-built[Missing] MQTT binding enabled official release package in OM2M website By: Ilan t on Tue, 16 April 2019"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "ponte",
                "Sentences": [
                    "All the source code of QEST, an initial implementation for bridging REST and MQTT world, which is available at GitHub: http://github.com/mcollina/qest.",
                    "As the current state it supports MQTT and REST",
                    "Configuration with MQTT and Redis",
                    "Define a simple REST API to expose the machines needs through REST, exposing multiple protocols (MQTT, CoAP) through the same API.",
                    "HTTP, MQTT and CoAP.",
                    "MQTT",
                    "MQTT API",
                    "MQTT and CoAP standard ports.",
                    "MQTT protocol.",
                    "Ponte allows you to publish and receive the data using any protocol: HTTP, MQTT and CoAP.",
                    "Ponte can be run on top of MQTT broker while using Redis (or similarly MongoDB) with the following configuration:",
                    "Ponte requires a persistent storage for HTTP syndication and MQTT",
                    "Publishing MQTT to CoAP",
                    "Publishing from CoAP to MQTT",
                    "Publishing from HTTP to MQTT",
                    "Publishing from MQTT to HTTP",
                    "RabbitMQ and all implementations of",
                    "See also: Introducing the QEST broker: Scaling the IoT by bridging MQTT and REST",
                    "Thanks to MQTT subscribes and CoAP observe, your devices can get updated in real-time.",
                    "Thanks to MQTT-over-Websockets, your users can too!",
                    "Then you can connect to it with your preferred MQTT,",
                    "You can mix and match: submit with CoAP and subscribe via MQTT.",
                    "a MQTT client needs to set the retain flag.",
                    "which implements most of the MQTT 3.1 spec."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "vorto",
                "Sentences": [
                    "Before we can start sending data via MQTT again, we need to make some changes to the Bosch IoT Hub Device Registry.",
                    "But we can change that quickly by sending some geolocation data to the MQTT endpoint.",
                    "Code Generators supporting Arduino, Python and Java - based devices, generating code to send telemetry data to Eclipse Hono and Eclipse Ditto based platforms via Eclipse Paho MQTT",
                    "In our case, we send CSV data from a permanent-magnet synchronous motor (PMSM) to an Eclipse Hono MQTT connector.",
                    "More code generators, that generate device code that integrates with Eclipse Hono via MQTT.",
                    "One of them is MQTT, exactly what we need in our solution to connect our sensors.",
                    "Publish data via MQTT",
                    "Step 2: Sending geolocation data to Bosch IoT Hub using MQTT protocol",
                    "Subscribe to Bosch IoT Hub (Free plan) for MQTT connectivity based on Eclipse Hono",
                    "Test the app by sending data via MQTT in different payload representations",
                    "Very much like in a gateway node, a cloud IoT platform normalizes incoming telemetry device data from various protocol adapters (MQTT, CoAP, etc) in order to provide value added services to northbound IoT solutions.",
                    "When you start the application and send data for the two sensors via MQTT, you will see the normalized geolocation data printed in the console of the application."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "4diac",
                "Sentences": [
                    "560313 Allow to set security configurations for MQTT [closed/fixed]",
                    "Compilation error: MQTT for raspberry PICompilation error: MQTT for raspberry PI By: Pradeep Patel on Thu, 05 November 2020",
                    "Conversion of array to stringConverting array values to string for transferring data using MQTT By: Pradeep Patel on Fri, 06 November 2020",
                    "If you want to use a specific communication protocol supported by 4diac FORTE, for example MQTT, OPC UA, Modbus and so on, follow the link.",
                    "It features ready-to-use field protocols (including Modbus, OPC-UA, S7), an application container, and a web-based visual data flow programming to acquire data from the field, process it at the edge, and publish it to leading IoT Cloud Platforms through MQTT connectivity.",
                    "MQTT - NO Socket issuePublish and Subscribe FBs do not communicate with QTT By: Pradeep Patel on Wed, 04 November 2020",
                    "MQTT Implementation in 4diac By: ardianto vn on Tue, 07 May 2019",
                    "MQTT using Eclipse Paho",
                    "MQTT with Eclipse Paho",
                    "MQTTInstalling and Configuring MQTT in 4diac By: Reza ELC on Fri, 01 March 2019",
                    "SUBSCRIBE truncates messageSUBSCRIBE Function Block truncates message received from MQTT By: Jose Antonio Izquierdo on Mon, 04 May 2020",
                    "We already have MQTT, plain HTTP, Coap, and last year's GSoC brought us AMQP 1.0."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "hono",
                "Sentences": [
                    "A client uploads a message to the MQTT adapter.",
                    "AMQP/MQTT: Gateways may subscribe for commands to disabled devices",
                    "Alternatively, the HONO_MQTT_KEY_STORE_PATH option can be used to configure a key store containing both the key as well as the certificate.",
                    "An MQTT Adapter instance that exposes Hono’s Telemetry and Event APIs as a generic MQTT topic hierarchy.",
                    "Assuming that the MQTT protocol adapter’s IP address is 10.100.84.23, its secure endpoint is bound to port 31884 and it has",
                    "Based on the components shown above, the following sequence diagram shows how the MQTT Adapter connects to the Device Registry and gets authenticated transparently using the Auth Server.",
                    "Before uploading command responses, the MQTT and AMQP adapters now check whether the device is",
                    "Both the HTTP adapter as well as the MQTT adapter require devices to authenticate during connection establishment by default.",
                    "Command and Control - MQTT DemoCommand and Control - MQTT Demo",
                    "Contains the name of the MQTT topic that the Kura gateway has originally published the data to.",
                    "Contains the name of the MQTT topic that the device has originally published the data to.",
                    "Create a subscription to the command topic in the terminal for the simulated device (don’t forget to set the environment variables MQTT_ADAPTER_IP, MY_TENANT and MY_DEVICE)",
                    "Device 4711 publishes an event using MQTT QoS 1.",
                    "Devices can also publish data to Hono using the MQTT protocol.",
                    "Documentation > Admin Guide > MQTT Adapter Configuration",
                    "Documentation > User Guide > MQTT Adapter",
                    "During the course of this guide, the devices publishing data will be represented by means of running some command line tools for posting HTTP requests and for publishing MQTT packets.",
                    "Eclipse Hono MQTT adapter: MQTT topic mapping",
                    "Eclipse Hono has supported the use of TLS in its HTTP and MQTT protocol adapters from the very beginning.",
                    "Eclipse Hono is designed to support multiple types of credentials, supporting authentication schemes like HTTP Basic auth, MQTT username/password authentication, X.509 client certificates and other TLS ciphers that support client authentication using Pre-Shared Keys or RawPublicKeys.",
                    "Eclipse-hono MQTT adapter: cannot process message",
                    "Either this option or the HONO_MQTT_KEY_PATH and HONO_MQTT_CERT_PATH options need to be set in order to enable TLS secured connections with clients.",
                    "For Request/Response commands, devices send their responses to commands by means of sending an MQTT PUBLISH message to a topic that is specific to the command that has been executed.",
                    "Gateways running Kura version 4 and later should connect to the MQTT adapter instead.",
                    "Generic MQTT Protocol Gateway Template",
                    "HONO_MQTT_AUTHENTICATION_REQUIRED configuration property to be explicitly set to false.",
                    "HONO_MQTT_AUTHENTICATION_REQUIRED--hono.mqtt.authenticationRequired",
                    "HONO_MQTT_BIND_ADDRESS--hono.mqtt.bindAddress",
                    "HONO_MQTT_CERT_PATH--hono.mqtt.certPath",
                    "HONO_MQTT_COMMAND_ACK_TIMEOUT--hono.mqtt.commandAckTimeout",
                    "HONO_MQTT_DEFAULTS_ENABLED--hono.mqtt.defaultsEnabled",
                    "HONO_MQTT_INSECURE_PORT_BIND_ADDRESS--hono.mqtt.insecurePortBindAddress",
                    "HONO_MQTT_INSECURE_PORT_ENABLED--hono.mqtt.insecurePortEnabled",
                    "HONO_MQTT_KEY_PATH--hono.mqtt.keyPath",
                    "HONO_MQTT_KEY_STORE_PASSWORD--hono.mqtt.keyStorePassword",
                    "HONO_MQTT_KEY_STORE_PATH--hono.mqtt.keyStorePath",
                    "HONO_MQTT_MAPPERENDPOINTS_<mapperName>_HOST--hono.mqtt.mapperEndpoints.<mapperName>.host",
                    "HONO_MQTT_MAPPERENDPOINTS_<mapperName>_PORT--hono.mqtt.mapperEndpoints.<mapperName>.port",
                    "HONO_MQTT_MAPPERENDPOINTS_<mapperName>_URI--hono.mqtt.mapperEndpoints.<mapperName>.uri",
                    "HONO_MQTT_MAX_CONNECTIONS--hono.mqtt.maxConnections",
                    "HONO_MQTT_MAX_PAYLOAD_SIZE--hono.mqtt.maxPayloadSize",
                    "HONO_MQTT_NATIVE_TLS_REQUIRED--hono.mqtt.nativeTlsRequired",
                    "HONO_MQTT_PORT--hono.mqtt.port",
                    "HONO_MQTT_SECURE_PROTOCOLS--hono.mqtt.secureProtocols",
                    "HONO_MQTT_SEND_MESSAGE_TO_DEVICE_TIMEOUT--hono.mqtt.sendMessageToDeviceTimeout",
                    "HONO_MQTT_SNI--hono.mqtt.sni",
                    "HONO_MQTT_TENANT_IDLE_TIMEOUT--hono.mqtt.tenantIdleTimeout",
                    "HTTP, MQTT, AMQP 1.0",
                    "Hono supports devices communicating via common IoT protocols like HTTP, MQTT, AMQP and CoAP out of the box.",
                    "Hono’s MQTT protocol adapter",
                    "How to know the connections number of MQTT adapter?",
                    "However, even if the device supports MQTT it might still not be possible",
                    "However, for the sake of simplicity, we will use simple hashed-password credentials which the devices can use to authenticate with the HTTP protocol adapter using HTTP Basic Auth or with the MQTT adapter.",
                    "However, if set to true then the key store format , HONO_MQTT_KEY_STORE_PATH, should be either JKS or PKCS12 indicated by a .jks or .p12 file suffix respectively.",
                    "I am using MQTT simulator script that uses the Java Eclipse Paho library.",
                    "I can create things, set up connections and apply the connection policy to the thing so I can submit telemetry from a thing via HTTP and MQTT and receive it on my MQTT server/connection.",
                    "I have been trying to make a simple MQTT pub sub communication on my device using node-red.",
                    "I have registered a device to receive commands through MQTT.",
                    "I'm using Eclipse Hono, I've created a Tenant, and a device, and start to publish a data through MQTT and HTTP adapter, and i was able to consume it through the AMQP client.",
                    "If set to true the protocol adapter will open an insecure port (not secured by TLS) using either the port number set via HONO_KURA_INSECURE_PORT or the default MQTT port number (1883) if not set explicitly.See Port Configuration below for details.",
                    "If set to true the protocol adapter will open an insecure port (not secured by TLS) using either the port number set via HONO_MQTT_INSECURE_PORT or the default MQTT port number (1883) if not set explicitly.See Port Configuration below for details.",
                    "In (1) the device subscribes for commands (if connecting to the AMQP or MQTT adapter) or indicates that it will stay connected for a given amount of time to receive a command (if connecting to the HTTP adapter), using the ttd (“time till disconnect”) parameter.",
                    "In many cases, data is sent over public networks fully unencrypted, which is quite surprising, given that all of the popular TCP/IP-based transport protocols used in today’s IoT devices (e.g., HTTP and MQTT) support the negotiation and use of a secure (encrypted) transport channel by means of Transport Layer Security (TLS).",
                    "In order to support environments where the AMQP Messaging Network cannot be configured accordingly, the MQTT protocol adapter supports setting a",
                    "In the example scenario used in the remainder of this guide, the devices will connect to the HTTP and MQTT adapters in order to publish telemetry data and events.",
                    "In this blog post I will walk you through a full example of how to create and register a tenant-specific trust anchor, create a certificate for a device, register its subject distinguished name and, finally, use the certificate to authenticate the device to Hono’s MQTT protocol adapter.",
                    "MQTT",
                    "MQTT 3.1.1 has no notion of message headers.",
                    "MQTT Adapter",
                    "MQTT Adapter :: Eclipse Hono™",
                    "MQTT Adapter Configuration",
                    "MQTT Adapter Configuration :: Eclipse Hono™",
                    "MQTT Adapter Configuration for details.",
                    "MQTT Adapter Credentials",
                    "MQTT Adapter acknowledges the reception of the message to the Device.",
                    "MQTT Adapter authenticates device using the Credentials service",
                    "MQTT Adapter transfers data to AMQP 1.0 Messaging Network.",
                    "MQTT Adapter’s User Guide.",
                    "MQTT Command and Control Hono",
                    "MQTT Protocol Adapter fails to start",
                    "MQTT Send Command Hono",
                    "MQTT Send Command Response",
                    "MQTT Telemetry Hono",
                    "MQTT adapter",
                    "MQTT adapter User Guide for details.",
                    "MQTT device:MQTT device:",
                    "MQTT on devices : geolocation in th...",
                    "MQTT on devices : geolocation in the IoT world",
                    "MQTT on the road",
                    "MQTT, HTTP clients",
                    "MQTTMQTT",
                    "MQTT_ADAPTER_IP=`az group deployment show --name HonoBasicInfrastructure --resource-group $resourcegroup_name --query properties.outputs.mqttPublicIPFQDN.value -o tsv`",
                    "More information can be found in the user guide of the protocol adapters (MQTT, HTTP).",
                    "Moreover, EnMasse supports all common messaging patterns (request/reply, publish/subscribe, and competing consumers) and two main protocols: AMQP 1.0 and MQTT.",
                    "Mosquitto MQTT Command Line Client",
                    "NB The example above assumes that the MQTT adapter is configured for TLS and the secure port is used.",
                    "No more devices are able to connect to the MQTT Adapter",
                    "No more devices are able to connect to the MQTT Adapter.",
                    "Note that the device itself is not authenticated by the MQTT adapter in this case.",
                    "Now that the device has been registered, it is time to connect to the MQTT adapter using the newly created client certificate and publish some data.",
                    "Please refer to the MQTT Adapter Admin Guide",
                    "Please refer to the MQTT adapter admin guide for details regarding the required configuration steps.",
                    "Please refer to the MQTT adapter user guide",
                    "Publishing Events to the MQTT Adapter",
                    "Publishing Telemetry Data to the MQTT Adapter",
                    "Putting MQTT client identifier in credentials API 'get' operation",
                    "Send a Telemetry message via MQTT API",
                    "Specify the content-type of a telemetry/event message via MQTT property bag",
                    "Submit telemetry via gateway mode on HTTP & MQTT adaptors",
                    "The AMQP, HTTP, MQTT and Kura protocol adapters consider this property when setting a TTL on",
                    "The HONO_MQTT_BIND_ADDRESS variable can be used to specify the network interface that the port should be exposed on.",
                    "The HONO_MQTT_INSECURE_PORT_BIND_ADDRESS variable can be used to specify the network interface that the port should be exposed on.",
                    "The Kura protocol adapter exposes an MQTT topic hierarchy allowing Eclipse Kura™ based gateways to access Eclipse Hono™’s",
                    "The Kura protocol adapter exposes an MQTT topic hierarchy allowing Eclipse Kura™ based gateways to publish control and data messages to Eclipse Hono™’s Telemetry and Event endpoints.",
                    "The MQTT Adapter also supports publishing telemetry messages using QoS 1.",
                    "The MQTT Protocol Adapter fails to start with the warning message MemoryBasedConnectionLimitStrategy - Not enough memory in the log files.",
                    "The MQTT adapter accepts responses being published using either QoS 0 or QoS 1.",
                    "The MQTT adapter accepts the sensor data from the gateway and forwards it downstream.",
                    "The MQTT adapter by default requires clients (devices or gateway components) to authenticate during connection establishment.",
                    "The MQTT adapter checks the configured message limit before accepting any command requests and responses.",
                    "The MQTT adapter checks the password and accepts the connection request.",
                    "The MQTT adapter currently does not use any properties except hono-ttl.",
                    "The MQTT adapter determines the tenant from the username contained in the CONNECT packet and retrieves",
                    "The MQTT adapter enables devices to receive commands that have been sent by business applications by means of sending an MQTT SUBSCRIBE packet containing a device specific topic filter as described below.",
                    "The MQTT adapter failed to accept command response messages from authenticated gateways that had",
                    "The MQTT adapter invokes the Device Registration service’s assert Device Registration operation to",
                    "The MQTT adapter is not a general purpose MQTT broker.",
                    "The MQTT adapter now closes the network connection to device on publish failures.",
                    "The MQTT adapter now includes a device’s MQTT client ID in its request to retrieve the device’s",
                    "The MQTT adapter now supports commands to be published using QoS 1.",
                    "The MQTT adapter now supports limiting the number of concurrent connections in order",
                    "The MQTT adapter now supports specifying the content-type of a telemetry/event message via a MQTT property bag.",
                    "The MQTT adapter supports the publishing of events by means of MQTT PUBLISH packets using QoS 1 only.",
                    "The MQTT adapter supports the publishing of telemetry data by means of MQTT PUBLISH packets using either QoS 0 or QoS 1.",
                    "The MQTT adapter supports the use of TLS for its connections to the Tenant service, the Device Registration service, the Credentials service and the AMQP Messaging Network.",
                    "The MQTT adapter’s type name is hono-mqtt.",
                    "The MQTT and AMQP",
                    "The MQTT and AMQP protocol adapters keep the connections longer opened than their counterparts such as HTTP.",
                    "The MQTT and HTTP Adapters use the Device Registry to authenticate Devices connecting to the adapters and asserting their",
                    "The MQTT protocol adapter automatically sends a Time until disconnect notification with a ttd value of -1",
                    "The MQTT protocol adapter can be configured to listen for connections on",
                    "The MQTT protocol adapter does not start and in its log I see the message io.vertx.core.VertxException: OpenSSL is not available.",
                    "The MQTT protocol adapter exposes an MQTT topic hierarchy for Eclipse Hono™’s south bound Telemetry, Event and Command & Control APIs.",
                    "The MQTT protocol adapter exposes an MQTT topic hierarchy for publishing telemetry data and events to downstream consumers and for receiving commands from applications and sending back responses.",
                    "The MQTT protocol adapter now supports authentication of devices using X.509 client certificates.",
                    "The MQTT protocol adapter will fail to start if none of the ports is configured properly.",
                    "The adapter includes the client identifier from the client’s MQTT CONNECT packet as the Connection Event’s remote-id.",
                    "The adapter supports both the authentication based on the username/password provided in an MQTT CONNECT packet as well as client",
                    "The adapter will send an MQTT PUBACK packet to the client once the event has been settled with the accepted outcome by the AMQP 1.0 Messaging Network.",
                    "The clients publish data to Hono’ MQTT adapter while the consumers receive messages from the AMQP 1.0 Messaging Network (in case of the example installation this is the Qpid Dispatch Router).",
                    "The configuration property HONO_MQTT_COMMAND_ACK_TIMEOUT of the MQTT adapter is now deprecated",
                    "The connection status of devices using stateful protocols like MQTT and AMQP can usually",
                    "The demo-certs/certs folder contains the following demo keys and certificates to be used with the MQTT adapter for that purpose.",
                    "The diagram below shows a device that supports the MQTT protocol and connects directly to Hono’s MQTT protocol adapter",
                    "The example below might be used by the MQTT adapter to indicate that a connection with a device using client identifier mqtt-client-id-1 has been established:",
                    "The following example shows how an answer can be sent with MQTT.",
                    "The following sequence diagram illustrates the flow of messages involved in the MQTT Adapter forwarding an event to the downstream AMQP Messaging Network.",
                    "The following table provides an overview of the configuration variables and corresponding command line options for configuring the MQTT adapter.",
                    "The gateway forwards the sensor data in an MQTT PUBLISH packet to the MQTT adapter.",
                    "The gateway sends an MQTT CONNECT packet to Hono’s MQTT adapter to establish an MQTT connection.",
                    "The maximum allowed size of an incoming MQTT message’s payload in bytes.",
                    "The mosquitto_pub command is used in this guide for simulating a device publishing data using the MQTT protocol.",
                    "The plugin provides a Hono Receiver Sampler which can be used together with JMeter’s standard HTTP Sampler and XMeter’s JMeter plugin for MQTT to play the roles of a downstream application (consumer) and devices uploading data to the HTTP and MQTT protocol adapters.",
                    "The port number can also be set explicitly using the HONO_MQTT_PORT variable.",
                    "The protocol adapter issues a warning on the console if HONO_KURA_INSECURE_PORT is set to the default secure MQTT port (8883).",
                    "The protocol adapter issues a warning on the console if HONO_MQTT_INSECURE_PORT is set to the default secure MQTT port (8883).",
                    "The recently released 0.9-M2 milestone has added support for the authentication of devices using an X.509 client certificate as part of the TLS handshake for both the HTTP and the MQTT adapter.",
                    "The repository hono-extras contains a generic template for an MQTT protocol gateway.",
                    "The topic filters used by MQTT devices to subscribe to commands has been changed slightly",
                    "Then, it will be shown how messages can be sent via the HTTP and MQTT protocol adapters.",
                    "Thereby the MQTT and AMQP adapters are enabled to check the connection limits before accepting any new connection to a device.",
                    "This is shown for the MQTT Protocol Adapter as example how a device authenticates with a username and a hashed-password.",
                    "This may especially be the case for long-lasting command subscriptions (with the MQTT or AMQP adapter).",
                    "This means you can use RabbitMQ with the AMQP 1.0 plugin, for example, or any other messaging broker implementing the AMQP 1.0 protocol.",
                    "This option must be used in conjunction with HONO_MQTT_CERT_PATH.",
                    "This option must be used in conjunction with HONO_MQTT_KEY_PATH.Alternatively, the HONO_MQTT_KEY_STORE_PATH option can be used to configure a key store containing both the key as well as the certificate.",
                    "To use this plan you also need to add the JMeter plugin for MQTT to your JMeter plugin path.",
                    "Unable to make an MQTT pub-sub connection",
                    "Use HONO_MQTT_SEND_MESSAGE_TO_DEVICE_TIMEOUT instead.",
                    "Using QoS 1 will result in the adapter sending an MQTT PUBACK packet to the client once the message has been settled with the accepted outcome by the AMQP 1.0 Messaging Network.",
                    "We want to do a performance test on Hono to verify that it supports 12000 device connections (MQTT), but I can't find the number of device connections in grafana's dashboard.",
                    "When a device no longer wants to receive commands anymore, it can send an MQTT UNSUBSCRIBE packet to the adapter, including the same topic filter that has been used to subscribe.",
                    "When a device wants to authenticate using this mechanism, it needs to provide a username and a password in the MQTT CONNECT packet",
                    "When starting up, the protocol adapter will bind a TLS secured socket to the default secure MQTT port 8883.",
                    "When using this topic, the MQTT adapter determines the device’s tenant and device identity as part of the authentication process.",
                    "With the mosquitto_sub command you simulate an MQTT device that receives a command.",
                    "You will learn how devices can use Hono’s protocol adapters to publish telemetry data and events using both HTTP and/or MQTT.",
                    "an MQTT based device but otherwise will be able to get the same results described in this guide.",
                    "and Commands using MQTT.",
                    "and MQTT Adapter for details.",
                    "and additional examples for interacting with Hono via MQTT, please refer to the",
                    "and another device that uses Bluetooth LE for connecting locally to a gateway which then connects to Hono’s MQTT adapter.",
                    "and command messages are calculated in accordance with the minimum message size by the AMQP, HTTP and MQTT",
                    "authenticate devices connecting to the adapter (MQTT, HTTP, …)",
                    "by the MQTT adapter.",
                    "by the client in the username, hashed-password as the type of secret and the MQTT client identifier as client-id in the request payload.",
                    "can run the following command to publish arbitrary telemetry data to Hono’s MQTT adapter using QoS 0:",
                    "can use the MQTT protocol adapter",
                    "certificate’s subject DN as the auth-id, x509-cert as the type of secret and the MQTT client identifier as client-id in the",
                    "connecting to the adapter (MQTT, HTTP, …)",
                    "discards any MQTT PUBLISH packet containing telemetry data or an event that is sent by a client and",
                    "either setting the HONO_MQTT_KEY_STORE_PATH and the HONO_MQTT_KEY_STORE_PASSWORD variables in order to load the key & certificate from a password protected key store, or",
                    "existing MQTT-enabled devices to Hono.",
                    "explicitly setting HONO_MQTT_INSECURE_PORT to a valid port number, or by",
                    "export MQTT_ADAPTER_IP=hono.eclipseprojects.io",
                    "for a device that subscribes to the appropriate command topic (refer to the MQTT Adapter user guide for details).",
                    "implicitly configuring the default MQTT port (1883) by simply setting HONO_KURA_INSECURE_PORT_ENABLED to true.",
                    "implicitly configuring the default MQTT port (1883) by simply setting HONO_MQTT_INSECURE_PORT_ENABLED to true.",
                    "like HTTP, MQTT and AMQP 1.0.",
                    "mosquitto_sub -v -h $MQTT_ADAPTER_IP -u $MY_DEVICE@$MY_TENANT -P $MY_PWD -t command/+/+/req/#",
                    "mqtt_messaging_throughput_test.jmx runs a set of MQTT clients and AMQP 1.0 consumers for a given period of time.",
                    "setting the HONO_MQTT_KEY_PATH and HONO_MQTT_CERT_PATH variables in order to load the key and certificate from two separate PEM files in PKCS8 format.",
                    "supports MQTT 3.1.1 only.",
                    "the HTTP and MQTT adapters by setting the hono-ttl property in requests explicitly.",
                    "the MQTT adapter user guide for details regarding configuration.",
                    "to connect to the MQTT adapter because the device expects to use a topic structure that differs from the one employed",
                    "value and then reported to the metrics by the AMQP, HTTP and MQTT protocol adapters.",
                    "○ RabbitMQ",
                    "● Different protocols (AMQP, MQTT, HTTP, …) implement them in",
                    "● Different protocols (AMQP, MQTT, HTTP, …) implement them in different way",
                    "● Out-of-the-Box Connectivity for Devices supporting MQTT or HTTP",
                    "● Support arbitrary device protocols (MQTT, HTTP, CoAP, AMQP 1.0, etc)",
                    "● Support for arbitrary protocols (MQTT, AMQP 1.0, HTTP, …)"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "kapua",
                "Sentences": [
                    "Add MQTT connector for internal use (Console, RestAPI).",
                    "Connect IoT devices to Kapua via MQTT and other protocols.",
                    "MQTT Internal Connector",
                    "MQTT Internal Connector by riccardomodanese · Pull Request #3067 · eclipse/kapua · GitHub",
                    "Use SystemToken to authenticate Pooled MQTT Clients",
                    "[messaging] MQTT Internal Connector (#3067)",
                    "add MQTT connector for internal use",
                    "add MQTT connector for internal use - change broker.port to broker.co…"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "unide",
                "Sentences": [
                    "It can be transported by protocols like REST, AMQP, MQTT.",
                    "It focuses on defining the JSON payload which can be transferred via a variety of transports (REST, AMQP, MQTT).",
                    "We started to capture this information in a simple payload specification and just like in the introducing language example where you can use phrases via phone, letter or in person, the payload is meant to be sent over different protocols (REST, MQTT, AMQP)."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "agile",
                "Sentences": [
                    "# Double-click on the '''MQTT out''' node to edit it # Double-click on the '''MQTT out''' node to edit it",
                    "# Double-click on the '''MQTT out''' node to edit it.",
                    "# This value will now be pushed to an MQTT broker on the cloud to be able to subscribe to this data stream from any MQTT client.",
                    "## For the Server field, click on the pencil button to specify the MQTT broker you want to reach.",
                    "## For the purpose of this Getting Started, we will designate the Eclipse IoT MQTT broker by specifying '''iot.eclipse.org''' in the '''Server''' field.",
                    "## You should be back at the '''MQTT out''' node editor.",
                    "(→‎Connect to the MQTT broker)",
                    "+# This value will now be pushed to an MQTT broker on the cloud to be able to subscribe to this data stream from any MQTT client.",
                    "+NR-12.png|MQTT output node",
                    "+NR-13.png|MQTT node editor",
                    "1.5.5 Connect to the MQTT broker",
                    "4.6 Connect to the MQTT broker",
                    "<br/>[[File:NR-12.png|thumb|none]]+# This value will now be pushed to an MQTT broker on the cloud to be able to subscribe to this data stream from any MQTT client.",
                    "<br/>[[File:NR-12.png|thumb|none]]+# We will now push this value to an MQTT broker on the cloud to be able to subscribe to this data stream from any MQTT client.",
                    "=== Connect to the MQTT broker ===",
                    "=== Connect to the MQTT broker === === Connect to the MQTT broker ===",
                    "At this point, our sample is collecting temperature data from our Sensor and it is sending them to a MQTT broker on the cloud.",
                    "At this point, the sample is collecting temperature data from the Sensor and it is sending them to a MQTT broker on the cloud.",
                    "Connect the gateway to Eclipse MQTT broker",
                    "Connect to the MQTT broker",
                    "Double-click on the MQTT out node to edit it",
                    "Double-click on the MQTT out node to edit it.",
                    "For the Server field, click on the pencil button to specify the MQTT broker you want to reach.",
                    "For the Server filed, click on the pencil button <a href=\"http://agile-iot.eu/wp-content/uploads/2017/03/NR-03.png\"><img class=\"alignnone wp-image-1255\" src=\"http://agile-iot.eu/wp-content/uploads/2017/03/NR-03.png\" alt=\"\" width=\"27\" height=\"29\" data-wp-pid=\"1255\" /></a> to specify the MQTT broker you want to reach.",
                    "For the Server filed, click on the pencil button to specify the MQTT broker you want to reach.",
                    "For the purpose of this Getting Started, we will designate the Eclipse IoT MQTT broker by specifying iot.eclipse.org in the Server field.",
                    "In this case, we recommend you to change the MQTT broker topic we defined in the previous section for something else.",
                    "MQTT",
                    "MQTT CASE",
                    "MQTT Client MQTT Broker",
                    "MQTT broker",
                    "MQTT client demo, we have to use this syntax.",
                    "MQTT node editor",
                    "MQTT output node",
                    "MQTT: Publish & Subscribe",
                    "NR-12.png|MQTT output node",
                    "NR-12.png|MQTT output node NR-12.png|MQTT output node",
                    "NR-13.png|MQTT node editor",
                    "Now, create a Node-RED flow from scratch by connecting to a Web Socket gathering data from your BLE Sensor and sending them to a MQTT broker to be displayed on a web UI.",
                    "On the Topic field, type the following topic name: <br/>'''javaonedemo/agile/sensors/temperature''' <br/>This ID could be simpler but, because we want to be able to reuse to an existing [https://iot.eclipse.org/java/tutorial/ MQTT client demo], we have to use this syntax.",
                    "On the Topic field, type the following topic name: <br/>'''javaonedemo/agile/sensors/temperature''' <br/>This ID could be simpler but, because we want to be able to reuse to an existing [https://iot.eclipse.org/java/tutorial/ MQTT client demo], we have to use this syntax.+## You should be back at the '''MQTT out''' node editor.",
                    "On the Topic field, type the following topic name: javaonedemo/agile/sensors/temperature This ID could be simpler but, because we want to be able to reuse to an existing MQTT client demo, we have to use this syntax.",
                    "Posted in Open Calls, Technologies and tagged ESP8266/32, Ex Machina, Hawkbit, Kapua, Kura, Modbus, MQTT, NodeRED, OpenHAB, Resin.io, Thingsboard.io.",
                    "Revision as of 01:02, 22 March 2017 (view source) Agile iot (talk | contribs) (→‎Connect to the MQTT broker)Newer edit →",
                    "Revision as of 01:02, 22 March 2017 (view source)Agile iot (talk | contribs) (→‎Connect to the MQTT broker)← Older edit",
                    "Revision as of 01:02, 22 March 2017 by Agile iot (talk | contribs) (→‎Connect to the MQTT broker)(diff) ← Older revision | Latest revision (diff) | Newer revision → (diff)",
                    "Revision as of 20:29, 23 March 2017 (view source) Roxanne (talk | contribs) (→‎Connect to the MQTT broker)Newer edit →",
                    "Revision as of 20:29, 23 March 2017 (view source)Roxanne (talk | contribs) (→‎Connect to the MQTT broker)← Older edit",
                    "Revision as of 20:29, 23 March 2017 by Roxanne (talk | contribs) (→‎Connect to the MQTT broker)(diff) ← Older revision | Latest revision (diff) | Newer revision → (diff)",
                    "The Ex Machina solution is built on open source technologies like Eclipse Kura, Eclipse Kapua, Eclipse hawkBit, Thingsboard.io, Agile-IoT, Resin.io, Node-RED, openHAB, Raspberry Pi, ESP8266/32, Modbus, and MQTT.",
                    "The just created component can be configured in terms of publishing topic and MQTT message options.",
                    "This value will now be pushed to an MQTT broker on the cloud to be able to subscribe to this data stream from any MQTT client.",
                    "To do that, an '''MQTT out''' node needs to be added to our current flow.",
                    "To do that, an MQTT out node needs to be added to our current flow.",
                    "To do that, we need to add a '''MQTT out''' node to our current flow.",
                    "To do that, we need to add a '''MQTT out''' node to our current flow.+# This value will now be pushed to an MQTT broker on the cloud to be able to subscribe to this data stream from any MQTT client.",
                    "To do that, we need to add a '''MQTT out''' node to our current flow.+# We will now push this value to an MQTT broker on the cloud to be able to subscribe to this data stream from any MQTT client.",
                    "To do that, we need to add a MQTT out node to our current flow.",
                    "Use Mosquitto MQTT client to subscribe to available topics:",
                    "We will create from scratch a Node-RED flow connecting to a Web Socket gathering data from your BLE Sensor and sending them to a MQTT broker to be displayed on a web UI.",
                    "We will now push this value to an MQTT broker on the cloud to be able to subscribe to this data stream from any MQTT client.",
                    "What is MQTT",
                    "You should be back at the MQTT out node editor.",
                    "[AGILE] Subscription to MQTT for sensor data",
                    "[MQTT Broker] Post sensor data to the AGILE GW",
                    "[[File:AGILE-03.png|thumb|right|Web interface]]+At this point, the sample is collecting temperature data from the Sensor and it is sending them to a MQTT broker on the cloud.",
                    "[https://iot.eclipse.org/java/tutorial/ MQTT client demo], we have to use this syntax.",
                    "deliver technology for IoT standards (such as MQTT, CoAP, and LWM2M) and IoT frameworks that include IoT gateways, home automation, and SCADA systems.",
                    "this ID could be simpler but, because we want to be able to reuse to an existing <a href=\"https://iot.eclipse.org/java/tutorial/\">MQTT client demo</a>, we have to use this syntax.",
                    "using MQTT",
                    "‎ (→‎Connect to the MQTT broker)",
                    "“MQTT” on Google Trends",
                    "• MQTT, Mosquitto http://mosquitto.org/",
                    "− +## For the Server filed, click on the pencil button [[File:NR-03.png|none|none]] to specify the MQTT broker you want to reach.",
                    "− +## For the purpose of this Getting Started, we will designate the Eclipse IoT MQTT broker by specifying '''iot.eclipse.org''' in the '''Server''' field.",
                    "−# Double-click on the '''MQTT out''' node to edit it+# Double-click on the '''MQTT out''' node to edit it.",
                    "−# Double-click on the '''MQTT out''' node to edit it+## For the Server field, click on the pencil button to specify the MQTT broker you want to reach.",
                    "−# For the Server filed, click on the pencil button <a href=\"http://agile-iot.eu/wp-content/uploads/2017/03/NR-03.png\"><img class=\"alignnone wp-image-1255\" src=\"http://agile-iot.eu/wp-content/uploads/2017/03/NR-03.png\" alt=\"\" width=\"27\" height=\"29\" data-wp-pid=\"1255\" /></a> to specify the MQTT broker you want to reach.+## For the purpose of this Getting Started, we will designate the Eclipse IoT MQTT broker by specifying '''iot.eclipse.org''' in the '''Server''' field.",
                    "−# For the Server filed, click on the pencil button <a href=\"http://agile-iot.eu/wp-content/uploads/2017/03/NR-03.png\"><img class=\"alignnone wp-image-1255\" src=\"http://agile-iot.eu/wp-content/uploads/2017/03/NR-03.png\" alt=\"\" width=\"27\" height=\"29\" data-wp-pid=\"1255\" /></a> to specify the MQTT broker you want to reach.+## Leave the port number (1883) unchanged and close this dialog by pressing the '''Add''' button.",
                    "−# For the purpose of this Getting Started, we will designate the Eclipse IoT MQTT broker by specifying '''iot.eclipse.org''' in the '''Server''' field.+## Leave the port number (1883) unchanged and close this dialog by pressing the '''Add''' button.",
                    "−# For the purpose of this Getting Started, we will designate the Eclipse IoT MQTT broker by specifying '''iot.eclipse.org''' in the '''Server''' field.+## You should be back at the '''MQTT out''' node editor.",
                    "−# Leave the port number (1883) unchanged and close this dialog by pressing the '''Add''' button.+## You should be back at the '''MQTT out''' node editor.",
                    "−# We will now push this value to an MQTT broker on the cloud to be able to subscribe to this data stream from any MQTT client.",
                    "−# You should be back at the '''MQTT out''' node editor.",
                    "−## For the Server filed, click on the pencil button [[File:NR-03.png|none|none]] to specify the MQTT broker you want to reach.+## For the Server field, click on the pencil button to specify the MQTT broker you want to reach.",
                    "−## You should be back at the '''MQTT out''' node editor.",
                    "−<img class=\"alignnone size-full wp-image-1279\" src=\"http://agile-iot.eu/wp-content/uploads/2017/03/NR-12.png\" alt=\"\" width=\"234\" height=\"100\" data-wp-pid=\"1279\" />+# Double-click on the '''MQTT out''' node to edit it.",
                    "−At this point, our sample is collecting temperature data from our Sensor and it is sending them to a MQTT broker on the cloud.",
                    "−At this point, our sample is collecting temperature data from our Sensor and it is sending them to a MQTT broker on the cloud.+At this point, our sample is collecting temperature data from our Sensor and it is sending them to a MQTT broker on the cloud.",
                    "−At this point, our sample is collecting temperature data from our Sensor and it is sending them to a MQTT broker on the cloud.+At this point, the sample is collecting temperature data from the Sensor and it is sending them to a MQTT broker on the cloud.",
                    "−We will create from scratch a Node-RED flow connecting to a Web Socket gathering data from your BLE Sensor and sending them to a MQTT broker to be displayed on a web UI.+Now, create a Node-RED flow from scratch by connecting to a Web Socket gathering data from your BLE Sensor and sending them to a MQTT broker to be displayed on a web UI.",
                    "−this ID could be simpler but, because we want to be able to reuse to an existing <a href=\"https://iot.eclipse.org/java/tutorial/\">MQTT client demo</a>, we have to use this syntax.",
                    "○ MQTT 3.1.1 compliant",
                    "● MQTT",
                    "● Open source MQTT broker",
                    "● Open-source MQTT clients",
                    "◦ MQTTS"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "kuksa",
                "Sentences": [
                    "Built-in MQTT publisher",
                    "Currently, Eclipse HONO API (including MQTT) and Hawkbit API tests are implemented.",
                    "Eclipse HONO API (including MQTT) and Hawkbit API tests.",
                    "Eclipse MosQuitto (MQTT)",
                    "GH Readme MQTT Datalogger",
                    "MQTT for communication between In-Vehicle platform and Cloud backend",
                    "Reads the RPM, Speed, Fuel status and also custom DTC from the w3c-visserver to sends this information as telemetry data to the Hono MQTT adapter.",
                    "You can also use node-red to talk with kuksa-val-server, either via MQTT or via Websocket.",
                    "kuksa-cloud-mechanic - Connects to the w3c-visserver service via Websocket and communicates with the Eclipse Hono MQTT adapter.",
                    "org.eclipse.kuksa-mqtt (AGL bindings for MQTT)"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "thingweb",
                "Sentences": [
                    "MQTT ✔️"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "mita",
                "Sentences": [
                    "Eclipse Hono per MQTT"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "tahu",
                "Sentences": [
                    "All of this was intentional within the original MQTT specification to provide maximum flexibility across any solution sector that might choose to use MQTT infrastructures.",
                    "As with the topic namespace and payload the way state information is implemented and managed within the MQTT infrastructure is not defined.",
                    "Background: MQTT was originally designed as a message transport for real-time SCADA (Supervisory Control and Data Acquisition) systems.",
                    "But at some point, for industrial MQTT based solutions to be interoperable within a given market sector, the topic namespace, payload representation, and session state must be defined.",
                    "But for STATE aware OT applications like SCADA/DCS/FCS, there needs to be a succinct definition on how best to use MQTT’s built in STATE awareness in an overall SCADA/DCS/ICS infrastructure.",
                    "Description: Eclipse Tahu addresses the existence of legacy SCADA/DCS/ICS protocols and infrastructures and provides a much-needed definition of how best to apply MQTT into these existing industrial operational environments.",
                    "Eclipse Tahu addresses the existence of legacy SCADA/DCS/ICS protocols and infrastructures and provides a much-needed definition of how best to apply MQTT into these existing industrial operational environments.",
                    "Efficient MQTT payload definition",
                    "GitHub - eclipse/tahu: Eclipse Tahu addresses the existence of legacy SCADA/DCS/ICS protocols and infrastructures and provides a much-needed definition of how best to apply MQTT into these existing industrial operational environments.",
                    "In addition to this, since the original use case for MQTT was targeting real-time SCADA, there are mechanisms defined to provide the state of an MQTT session such that SCADA/Control HMI application can monitor the current state of any MQTT device in the infrastructure.",
                    "In order to be interoperable across the plethora of OEM device manufacturers of industrial equipment and the SCADA/HMI/Control/Cloud Services backend components that desired to subscribe to the resulting information a well-defined MQTT topic namespace needs to be defined.",
                    "It addresses the existence of legacy SCADA/DCS/ICS protocols and infrastructures and provides a much-needed definition of how best to apply MQTT into these existing industrial operational environments.",
                    "MQTT STATE Management definition",
                    "MQTT has the awareness of the current MQTT session built in using the LWT feature.",
                    "Meeting the operational requirements for these systems will enable MQTT based infrastructures to provide more valuable real-time information to Line of Business MES/OEE/Track-and-Trace/Cloud Services solution requirements as well.",
                    "Parent Project: Eclipse IoTBackground: MQTT was originally designed as a message transport for real-time SCADA (Supervisory Control and Data Acquisition) systems.",
                    "Sparkplug is a specification for MQTT enabled devices and applications to send and receive messages in a stateful way.",
                    "Staying with the original intent of MQTT, the payload specification needs to stay “lean and mean” to best utilize low bandwidth networks (VSAT, Radio, Cellular).",
                    "Tahu is currently addressing the following features required for MQTT centric IIoT:",
                    "The MQTT message transport specification does not specify the topic namespace to use nor does it define the Payload representation of the data being published and/or subscribed to.",
                    "The Sparkplug Specification - This document describes the MQTT topic namespace, the payload-encoding scheme, and the required flow of messages, which ensure state of data originating from an edge device reporting to a backend/central application.",
                    "The intent and purpose of the Sparkplug specification is to define an MQTT topic namespace, payload, and session state management that can be applied generically to the overall IIoT market sector, but specifically meets the requirements of real-time SCADA/DSC (Distributed Control System)/ICS (Industrial Control System) OT solutions.",
                    "The purpose of the Sparkplug specification is to remain true to the original notion of keeping the topic namespace and message sizes to a minimum while still making the overall message transactions and session state management between MQTT devices and MQTT SCADA/DCS/ICS applications simple, efficient and easy to understand and implement.",
                    "The topic namespace needs to provide both the contextual information all the way to an individual device in the field, but also provide topic “verbs” to efficiently manage the “life cycle” of an MQTT session.",
                    "We believe that one of the best features of this technology is providing consistency around how MQTT is used in the Industrial Internet of Things (IIoT).",
                    "Well-defined MQTT Topic Namespace applicable for the IIoT market",
                    "While MQTT is stateful by nature it doesn't ensure that all data on a receiving MQTT application is current or valid.",
                    "to show how the device/remote application must connect and disconnect from the MQTT server using the Sparkplug"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "volttron",
                "Sentences": [
                    "AMQP port for RabbitMQ: [5672]:",
                    "AMQPS (SSL) port RabbitMQ address: [5671]:",
                    "Backward compatibility with the RabbitMQ message bus",
                    "Create RabbitMQ setup for VOLTTRON:",
                    "Do you want to use default values for RabbitMQ home, ports, and virtual host: [Y]: N",
                    "For RabbitMQ based VOLTTRON, some of the RabbitMQ specific software packages have to be installed.",
                    "From version 6.0, VOLTTRON supports two message buses - ZMQ and RabbitMQ.",
                    "If configured with a RabbitMQ message bus a config file would have been",
                    "If you are running an Debian or CentOS system, you can install the RabbitMQ dependencies by running the rabbit",
                    "It also installs RabbitMQ server as the current user.",
                    "NOTE: We configure the RabbitMQ instance for a single volttron_home and",
                    "Name of the virtual host under which RabbitMQ VOLTTRON will be running: [volttron]:",
                    "Note: RabbitMQ startup error would show up in syslog (/var/log/messages) file",
                    "RabbitMQ checks for this during initial",
                    "RabbitMQ server home: [/home/vdev/rabbitmq_server/rabbitmq_server-3.7.7]:",
                    "RabbitMQ setup with Federation and Shovel plugins",
                    "RabbitMQ will be installed under <install dir>/rabbitmq_server-3.7.7.",
                    "Steps for RabbitMQ",
                    "Steps for ZMQ",
                    "Without this (for example, when running on a VM in NAT mode) RabbitMQ start would fail with the error \"unable to",
                    "You can check if the RabbitMQ server is installed by checking its status.",
                    "and not in RabbitMQ logs (/var/log/rabbitmq/rabbitmq@hostname.log)",
                    "dependencies for RabbitMQ.",
                    "http port for the RabbitMQ management plugin: [15672]:",
                    "https port for the RabbitMQ management plugin: [15671]:",
                    "it needs to be set to the RabbitMQ installation directory (default path is"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "streamsheets",
                "Sentences": [
                    ": are there already other options to integrate with Ditto, e.g., MQTT?",
                    "Did I miss something or is consuming from MQTT not included?",
                    "IoT: Control, analysis, monitoring, visualization and simulation of industrial and other IoT processes (Smart Factory, Smart Building, Smart City, Smart Energy, Smart Farming, …) using MQTT, AMQP or other messaging protocols.",
                    "Streamsheets uses the MQTT protocol both for internal and external communication and uses Mosquitto as its standard MQTT broker.",
                    "The main dependencies for the backend are Express.js and MQTT.js.",
                    "When trying out Streamsheets I could not consume from MQTT brokers, only publish to them.",
                    "using MQTT, AMQP, UDP, REST, POP, SMTP protocols or simple input from text files."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "zenoh",
                "Sentences": [
                    "Protocols used today to build these systems, such as MQTT, DDS, CoAP and HTTP were not designed with these needs in mind."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "testware",
                "Sentences": [
                    "A Conformance Test Suite for the IoT protocol MQTT written in TTCN-3.",
                    "A flexible and configurable Proxy-Fuzzer for IoT protocols like MQTT and CoAP.",
                    "A performance test suite for the IoT protocols MQTT and CoAP.",
                    "Additionally, we have shown activities in the MQTT Discussion Group @ Google-Groups.",
                    "Conformance test suites for MQTT and CoAP",
                    "Eclipse IoT-Testware: Die Open-Source-Testsuite für das MQTT-Protokoll.",
                    "Eclipse MQTT performance test suite",
                    "Eclipse MQTT test suite",
                    "Eclipse Titan has already protocol modules for CoAP and MQTT including type systems and codec.",
                    "M12019/08/19Evaluation of test methods/tools for robustness and performance tests for MQTT and CoAP",
                    "M22019/11/08Prototypical implementation of robustness and performance tests scenarios for MQTT and CoAP",
                    "M32019/11/29Finish work for conformance test purposes and test suites for MQTT and CoAP",
                    "M42019/12/13Finish work for robustness and performance test implementation for MQTT and CoAP",
                    "MQTT Protocol",
                    "MQTT Specification",
                    "MQTT Test Suite",
                    "MQTT_Summary.pdf",
                    "Performance test suites for MQTT and CoAP",
                    "Robustness testing for MQTT and CoAP",
                    "Standardized conformance test purposes for MQTT and CoAP",
                    "Standardized performance test purposes for MQTT and CoAP",
                    "The biggest features are standardized test solutions for the IoT protocols MQTT and CoAP.",
                    "The initial contribution of IoT-Testware to Eclipse will focus on protocols like CoAP and MQTT."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "sensinact",
                "Sentences": [
                    "Northbound bridges: this group includes implementation of remote access bridges to the platform such as REST APIs, JSON RPC, as well as publish subscribe protocols such as MQTT, XMPP, NGSI, etc.",
                    "Southbound bridges: this group includes implementation of bridges and adapters for various IoT protocols and platforms such as LoRa, Zigbee, IEEE 802.15.4, Sigfox, enOcean, CoAP, MQTT, XMPP, NGSI, HTTP, etc.",
                    "sensiNact Gateway interconnects IoT devices using different southbound IoT protocols such as Zigbee, EnOcean, LoRa, XBee, MQTT, XMPP, as well as platforms such as FIWARE and allows access to them with various northbound protocols such as HTTP REST, MQTT, XMPP, JSON RPC and CDMI.",
                    "sensiNact thus provides connectivity support to those data sources including today’s IoT protocols and platforms such as LoRa, Zigbee, IEEE 802.15.4, Sigfox, enOcean, MQTT, XMPP, NGSI, HTTP, CoAP, etc."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "agail",
                "Sentences": [
                    "- Integration of Eclipse Paho for the extention of the internal Agail RESTful API and support of MQTT as alternative messaging and data subscription mechanism",
                    "Eclipse Paho will be used as an internal broker for extending the Agail RESTful API and allowing developers to communicate with the Agail gateway components using the MQTT protocol for data interaction between applicatons and connected IoT devices and the internal data storage."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "whiskers",
                "Sentences": [
                    "Create a SensorThings instance by passing the \"Client\", SensorThings MQTT broker address, port used for MQTT, and @iot.id for Datastream.",
                    "Create a SensorThings instance by passing the \"Client\", SensorThings server address, port used for HTTP requests, SensorThings MQTT broker address, and port used for MQTT.",
                    "Eclipse Whiskers for Arduino is using one other Arduino library for MQTT connections:",
                    "The library has methods for connecting to a SensorThings server as well as SensorThings MQTT broker."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "moquette",
                "Sentences": [
                    "### Moquette MQTT version",
                    "* Class responsible to handle the logic of MQTT protocol it's the director of",
                    "// MQTT 3.1.2.8-17",
                    "07:42:33.467 [nioEventLoopGroup-3-1] ERROR i.m.broker.NewNettyMQTTHandler - Unexpected exception while processing MQTT message.",
                    "09:28:02.560 [nioEventLoopGroup-3-1] ERROR i.m.broker.NewNettyMQTTHandler - Error processing protocol message: PUBLISH",
                    "2019-03-08 14:19:37.194 ERROR 31746 --- [ntLoopGroup-5-5] io.moquette.broker.NewNettyMQTTHandler : Unexpected exception while processing MQTT message.",
                    "2019-12-17 18:11:34.865 9128-16229/in.dotworld.mqttserver I/System.out: 7468827 [nioEventLoopGroup-9-6] DEBUG io.moquette.server.netty.NettyMQTTHandler - Processing MQTT message, type: PUBLISH",
                    "2019-12-17 18:11:34.866 9128-16229/in.dotworld.mqttserver I/System.out: 7468827 [nioEventLoopGroup-9-6] DEBUG io.moquette.server.netty.NettyMQTTHandler - Processing MQTT message, type: PUBLISH",
                    "2020-02-28 13:03:12.309 20418-20876/ I/System.out: 117404 [nioEventLoopGroup-5-1] INFO io.moquette.broker.metrics.MQTTMessageLogger - C->B CONNECT",
                    "2020-02-28 13:03:12.316 20418-20876/ I/System.out: 117412 [nioEventLoopGroup-5-1] DEBUG io.moquette.broker.MQTTConnection - Received MQTT message, type: CONNECT, channel: [id: 0x82488a46, L:/172.16.1.196:1883 - R:/172.16.1.196:38308]",
                    "2020-02-28 13:03:12.431 20418-20876/ I/System.out: 117431 [nioEventLoopGroup-5-1] ERROR io.moquette.broker.NewNettyMQTTHandler - Error processing protocol message: CONNECT",
                    "2020-02-28 13:03:12.432 20418-20876/ I/System.out: at io.moquette.broker.MQTTConnection.handleMessage(MQTTConnection.java:67)",
                    "2020-02-28 13:03:12.432 20418-20876/ I/System.out: at io.moquette.broker.MQTTConnection.login(MQTTConnection.java:235)",
                    "2020-02-28 13:03:12.432 20418-20876/ I/System.out: at io.moquette.broker.MQTTConnection.processConnect(MQTTConnection.java:160)",
                    "2020-02-28 13:03:12.433 20418-20876/ I/System.out: at io.moquette.broker.NewNettyMQTTHandler.channelRead(NewNettyMQTTHandler.java:58)",
                    "2020-02-28 13:03:12.433 20418-20876/ I/System.out: at io.moquette.broker.metrics.MQTTMessageLogger.channelRead(MQTTMessageLogger.java:46)",
                    "2020-02-28 13:03:12.450 20418-20876/ I/System.out: 117548 [nioEventLoopGroup-5-1] INFO io.moquette.broker.NewNettyMQTTHandler - Closed client channel due to exception in processing",
                    "<#513?email_source=notifications&email_token=AAH5RUKNMO4ZMQSG3XPDDNLQ6F2OHA5CNFSM4KIDNQKKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEJHB7WQ#issuecomment-575545306>,",
                    "<description>Moquette lightweight MQTT Broker</description>",
                    "<name>Moquette MQTT</name>",
                    "<p>The Eclipse Foundation makes available all content in this plug-in (&quot;Moquette MQTT&quot;).",
                    "@@ -25,11 +25,11 @@ Point your MQTT client to _broker.moquette.io_",
                    "Broker does not reject connections with clientId longer than 23 characters for MQTT v3.1",
                    "Broker does not reject connections with clientId longer than 23 characters for MQTT v3.1 · Issue #522 · moquette-io/moquette · GitHub",
                    "ERROR NewNettyMQTTHandler - Unexpected exception while processing MQTT message.",
                    "ERROR i.m.s.netty.NettyMQTTHandler - Unexpected exception while processing MQTT message.",
                    "Fix issue #38, added aligned to MQTT 3.1.1",
                    "Flush written data in MQTTConnection#sendIfWritableElseDrop",
                    "Freedomotic is an home automation framework and uses Moquette embedded to interface with MQTT by a specific plugin.",
                    "GitHub - moquette-io/moquette: Java MQTT lightweight broker",
                    "GitHub - moquette-io/netty-mqtt5-codec: Netty codec implementation for MQTT3 and MQTT5",
                    "I am having some problems with the configuration of MQTT throw SSL, below description and useful code.",
                    "I believe it would be an interesting feature because MQTT is easily used on embedded devices, and SSL support is somewhat heavy, so my problem could be seen elsewhere.",
                    "Increasing Netty worker threads number is important in our use case that handles a lot of MQTT requests.",
                    "JVM lightweight MQTT broker for the Internet of Things.",
                    "Java MQTT lightweight broker",
                    "LOG.debug(\"Configuring MQTT authenticator\");",
                    "LOG.debug(\"Configuring MQTT authorizator policy\");",
                    "LOG.debug(\"Initialized MQTT protocol processor\");",
                    "LOG.debug(\"Processing MQTT message, type={}\", messageType);",
                    "LOG.error(\"An unexpected exception was caught while processing MQTT message.",
                    "LOG.error(\"Exception was caught while processing MQTT message, \" + ex.getCause(), ex);",
                    "LOG.error(\"Exception was caught while processing MQTT message, {}\", ex.getCause(), ex);",
                    "LOG.error(\"MQTT client ID doesn't have an associated session.",
                    "LOG.error(\"Moquette is not started, MQTT message interceptor cannot be added.",
                    "LOG.error(\"Moquette is not started, MQTT message interceptor cannot be removed.",
                    "LOG.info(\"Adding MQTT message interceptor.",
                    "LOG.info(\"Configuring SSL MQTT transport\");",
                    "LOG.info(\"Configuring TCP MQTT transport\");",
                    "LOG.info(\"Configuring Websocket MQTT transport\");",
                    "LOG.info(\"Configuring secure websocket MQTT transport\");",
                    "LOG.info(\"Removing MQTT message interceptor.",
                    "LOG.trace(\"Stopping MQTT protocol processor\");",
                    "Log.d(TAG, \"MQTT Broker Started\");",
                    "MQTT Load Balancer with HAProxy",
                    "MQTT SSL not working",
                    "MQTT SSL not working · Issue #499 · moquette-io/moquette · GitHub",
                    "MQTT durable subscription exception",
                    "MQTT durable subscription exception · Issue #455 · moquette-io/moquette · GitHub",
                    "MQTT message interceptors={}\", getInterceptorIds(handlers));",
                    "MQTTConnection connection = connectionFactory.create(ctx.channel());",
                    "MQTTConnection connection = createMQTTConnection(CONFIG, channel);",
                    "MQTTConnection connection1 = createMQTTConnection(ALLOW_ANONYMOUS_AND_ZERO_BYTES_CLID, channel1);",
                    "MQTTConnection connection2 = createMQTTConnection(ALLOW_ANONYMOUS_AND_ZERO_BYTES_CLID, channel2);",
                    "MQTTConnection mqttConnection) {",
                    "MQTTConnection pubConn = createMQTTConnection(ALLOW_ANONYMOUS_AND_ZERO_BYTES_CLID, pubChannel);",
                    "MQTTConnection secondConn = createMQTTConnection(ALLOW_ANONYMOUS_AND_ZERO_BYTES_CLID, secondChannel);",
                    "MQTTConnectionFactory connectionFactory = new MQTTConnectionFactory(brokerConfig, authenticator, sessions,",
                    "MessageId=20314, CId=web_63, topic=OrganismStatus 97013256 [nioEventLoopGroup-3-1] INFO ConnectionDescriptorStore - Sending PUBLISH message CId=<web_63>, messageId=20314 97013256 [nioEventLoopGroup-3-1] ERROR NettyMQTTHandler - Exception was caught while processing MQTT message, null java.lang.IllegalStateException: Queue full at java.util.AbstractQueue.add(AbstractQueue.java:98) at java.util.concurrent.ArrayBlockingQueue.add(ArrayBlockingQueue.java:312) at io.moquette.spi.DurableSession.enqueue(DurableSession.java:207) at io.moquette.spi.impl.MessagesPublisher.publish2Subscribers(MessagesPublisher.java:107) at io.moquette.spi.impl.MessagesPublisher.publish2Subscribers(MessagesPublisher.java:71) at io.moquette.spi.impl.Qos1PublishHandler.receivedPublishQos1(Qos1PublishHandler.java:70) at io.moquette.spi.impl.ProtocolProcessor.processPublish(ProtocolProcessor.java:470) at io.moquette.server.netty.NettyMQTTHandler.channelRead(NettyMQTTHandler.java:56) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at io.moquette.server.netty.metrics.MQTTMessageLogger.channelRead(MQTTMessageLogger.java:44) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at io.moquette.server.netty.metrics.MessageMetricsHandler.channelRead(MessageMetricsHandler.java:48) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310) at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at io.moquette.server.netty.metrics.BytesMetricsHandler.channelRead(BytesMetricsHandler.java:49) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:287) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926) at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134) at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644) at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:579) at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:496) at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458) at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) at java.lang.Thread.run(Thread.java:748)",
                    "Moquette MQTT broker",
                    "Moquette MQTT version",
                    "Moquette aims to be a MQTT compliant broker.",
                    "Moquette is lightweight MQTT Java broker",
                    "Moved flow of CONNECT completely inside MQTTConnection",
                    "Moved flow of CONNECT completely inside MQTTConnection by andsel · Pull Request #548 · moquette-io/moquette · GitHub",
                    "MqttVersion.MQTT_3_1.protocolName(), MqttVersion.MQTT_3_1.protocolLevel(), false, false, false, 1, false,",
                    "Netty codec implementation for MQTT3 and MQTT5",
                    "Part of moquette are used into the Vertx MQTT module, into MQTT spy",
                    "Part of moquette are used into the [Vertx MQTT module] (https://github.com/giovibal/vertx-mqtt-broker-mod), into MQTT spy",
                    "Plans to support MQTT 5?",
                    "Point your MQTT client to _broker.moquette.io_",
                    "Point your MQTT client to broker.moquette.io",
                    "Point your browser to cloud instance, request an account then use it from your MQTT clients.",
                    "Reply to this email directly, view it on GitHub <#513?email_source=notifications&email_token=AAH5RUKNMO4ZMQSG3XPDDNLQ6F2OHA5CNFSM4KIDNQKKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEJHB7WQ#issuecomment-575545306>, or unsubscribe https://github.com/notifications/unsubscribe-auth/AAH5RUMNBGPURCWKGD2UKLTQ6F2OHANCNFSM4KIDNQKA .",
                    "Start moquette MQTT server and establish client connection using MQTT v3.1 using a clientId with more than 23 characters",
                    "This PR has the target to move all the control flow of connect into MQTTConnection.",
                    "This simplifies changes to introduce MQTT5 support",
                    "Update MQTTMessageLogger.java",
                    "Updates Netty to 4.1.53 to have MQTT5 support",
                    "Updates Netty to 4.1.53 to have MQTT5 support (#546)",
                    "Updates Netty to 4.1.53 to have MQTT5 support (#546) · moquette-io/moquette@89a4ada · GitHub",
                    "Updates Netty to 4.1.53 to have MQTT5 support by andsel · Pull Request #546 · moquette-io/moquette · GitHub",
                    "Updates Netty to 4.1.53 to have MQTT5 support · moquette-io/moquette@b81b4c9 · GitHub",
                    "Updates Netty to 4.1.53 to have MQTT5 support · moquette-io/moquette@c504891 · GitHub",
                    "[Freedomotic] (http://www.freedomotic.com/) Is an home automation framework, uses Moquette embedded to interface with MQTT world.",
                    "at io.moquette.broker.MQTTConnection.handleMessage(MQTTConnection.java:71)",
                    "at io.moquette.broker.MQTTConnection.handleMessage(MQTTConnection.java:77)",
                    "at io.moquette.broker.MQTTConnection.processPublish(MQTTConnection.java:361)",
                    "at io.moquette.broker.MQTTConnection.processSubscribe(MQTTConnection.java:309)",
                    "at io.moquette.broker.MQTTConnection.readCompleted(MQTTConnection.java:507)",
                    "at io.moquette.broker.MQTTConnection.resendNotAckedPublishes(MQTTConnection.java:481)",
                    "at io.moquette.broker.NewNettyMQTTHandler.channelRead(NewNettyMQTTHandler.java:55)",
                    "at io.moquette.broker.NewNettyMQTTHandler.channelRead(NewNettyMQTTHandler.java:58)",
                    "at io.moquette.broker.NewNettyMQTTHandler.channelReadComplete(NewNettyMQTTHandler.java:76)",
                    "at io.moquette.broker.NewNettyMQTTHandler.userEventTriggered(NewNettyMQTTHandler.java:106)",
                    "at io.moquette.broker.metrics.MQTTMessageLogger.channelRead(MQTTMessageLogger.java:46)",
                    "at io.moquette.server.netty.metrics.MQTTMessageLogger.channelRead(MQTTMessageLogger.java:44)",
                    "at io.moquette.server.netty.metrics.MQTTMessageLogger.logMQTTMessage(MQTTMessageLogger.java:54)",
                    "broker/src/main/java/io/moquette/broker/MQTTConnection.java",
                    "broker/src/main/java/io/moquette/broker/NewNettyMQTTHandler.java",
                    "broker/src/main/java/io/moquette/server/netty/NettyMQTTHandler.java",
                    "broker/src/main/java/io/moquette/server/netty/metrics/MQTTMessageLogger.java",
                    "broker/src/main/java/org/dna/mqtt/moquette/server/netty/NettyMQTTHandler.java",
                    "broker/src/test/java/io/moquette/testclient/ClientNettyMQTTHandler.java",
                    "broker/src/test/java/org/dna/mqtt/moquette/server/MQTTWebSocket.java",
                    "broker/src/test/java/org/dna/mqtt/moquette/testclient/ClientNettyMQTTHandler.java",
                    "connection = createMQTTConnection(ALLOW_ANONYMOUS_AND_ZERO_BYTES_CLID);",
                    "final MQTTConnection clientXA = connectAs(\"subscriber\");",
                    "final MQTTConnection clientXB = connectAs(\"publisher\");",
                    "final MQTTConnection clientYA = connectAs(\"subscriber\");",
                    "final MQTTConnection clientYB = connectAs(\"publisher\");",
                    "final MQTTConnection mqttConnection = mqttConnection(ctx.channel());",
                    "final NettyMQTTHandler mqttHandler = new NettyMQTTHandler(processor);",
                    "final NewNettyMQTTHandler mqttHandler = new NewNettyMQTTHandler(connectionFactory);",
                    "import org.dna.mqtt.moquette.MQTTException;",
                    "important in our use case that handles a lot of MQTT requests.",
                    "initFactory(host, port, \"TCP MQTT\", new PipelineInitializer() {",
                    "initFactory(host, port, \"Websocket MQTT\", new PipelineInitializer() {",
                    "initFactory(host, sslPort, \"SSL MQTT\", new PipelineInitializer() {",
                    "instruction 'Bundle-Description', 'Moquette lightweight MQTT Broker'",
                    "logMQTTMessage(ctx, message, \"C->B\");",
                    "logMQTTMessage(ctx, msg, \"C<-B\");",
                    "moquette/MQTTMessageLogger.java at 033a428184ce1e8a134fda082c04346ac6858c61 · moquette-io/moquette · GitHub",
                    "moquette/NettyMQTTHandler.java at 033a428184ce1e8a134fda082c04346ac6858c61 · moquette-io/moquette · GitHub",
                    "moquette/broker/src/main/java/io/moquette/server/netty/NettyMQTTHandler.java",
                    "moquette/broker/src/main/java/io/moquette/server/netty/metrics/MQTTMessageLogger.java",
                    "netty_parser/src/main/java/org/dna/mqtt/moquette/parser/netty/MQTTDecoder.java",
                    "netty_parser/src/main/java/org/dna/mqtt/moquette/parser/netty/MQTTEncoder.java",
                    "new WebSocketServerProtocolHandler(\"/mqtt\", MQTT_SUBPROTOCOL_CSV_LIST));",
                    "parser_commons/src/main/java/org/dna/mqtt/moquette/MQTTException.java",
                    "perf/src/main/java/io/moquette/parser/netty/performance/LoopMQTTHandler.java",
                    "pipeline.addLast(\"messageLogger\", new MQTTMessageLogger());",
                    "private MQTTConnection connectAs(String clientId) {",
                    "private MQTTConnection connection;",
                    "private MQTTConnection createMQTTConnection(BrokerConfiguration config) {",
                    "private MQTTConnection createMQTTConnection(BrokerConfiguration config, Channel channel) {",
                    "private static final Logger LOG = LoggerFactory.getLogger(NettyMQTTHandler.class);",
                    "private static final String BAD_FORMATTED_TOPIC = \"#MQTTClient\";",
                    "private static final String MQTT_SUBPROTOCOL_CSV_LIST = \"mqtt, mqttv3.1, mqttv3.1.1\";",
                    "private static final String TAG = \"MQTTBrokerThread\";",
                    "private void initializePlainTCPTransport(final NettyMQTTHandler handler,",
                    "private void initializeSSLTCPTransport(final NettyMQTTHandler handler, IConfig props, final SSLContext sslContext)",
                    "private void initializeWSSTransport(final NettyMQTTHandler handler, IConfig props, final SSLContext sslContext)",
                    "private void initializeWebSocketTransport(final NettyMQTTHandler handler, IConfig props) throws IOException {",
                    "private void logMQTTMessage(ChannelHandlerContext ctx, Object message, String direction) {",
                    "private void subscribe(MqttQoS topic, String newsTopic, MQTTConnection connection) {",
                    "protected void subscribe(MQTTConnection connection, String topic, MqttQoS desiredQos) {",
                    "public MQTTBroker(Properties config) {",
                    "public NettyMQTTHandler(ProtocolProcessor processor) {",
                    "public class MQTTBroker implements Callable<Boolean> {",
                    "public class MQTTMessageLogger extends ChannelDuplexHandler {",
                    "public class NettyMQTTHandler extends ChannelInboundHandlerAdapter {",
                    "public void unsubscribe(List<String> topics, MQTTConnection mqttConnection, int messageId) {",
                    "return createMQTTConnection(config, channel);",
                    "return new MQTTConnection(channel, config, mockAuthenticator, sessionRegistry, sut);",
                    "throw new MQTTException(\"Can't create temp file for subscriptions storage [\" + storeFile + \"]\", ex);",
                    "var mqtt_client = new Paho.MQTT.Client(host, Number(port), \"/mqtt\", device_guid);",
                    "void flushInFlight(MQTTConnection mqttConnection) {",
                    "void receivedPublishQos1(MQTTConnection connection, Topic topic, String username, ByteBuf payload, int messageID,",
                    "void receivedPublishQos2(MQTTConnection connection, MqttPublishMessage mqttPublishMessage, String username) {"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "titan",
                "Sentences": [
                    "(VSBOT, SIP_ETSI,DIAMETER_Rx_ETSI, CoAP Conformance test cases, CoAP and MQTT protocol modules for IOT-moved to Eclipse git, more to come...)",
                    "Formal verification of the implementation of the MQTT protocol in IoT devices",
                    "MQTT CNL 113 831 R1C",
                    "MQTT CNL 113 831 R1D",
                    "MQTT CNL 113 831 R1G",
                    "http://git.eclipse.org/c/titan/titan.ApplicationLibraries.MQTT",
                    "http://git.eclipse.org/c/titan/titan.ProtocolModules.MQTT",
                    "http://git.eclipse.org/gitroot/titan/titan.ApplicationLibraries.MQTT",
                    "http://git.eclipse.org/gitroot/titan/titan.ProtocolModules.MQTT",
                    "titan/titan.ApplicationLibraries.MQTT - Clone: git://git.eclipse.org/gitroot/titan/titan.ApplicationLibraries.MQTT.gitReview With Gerrit",
                    "titan/titan.ApplicationLibraries.MQTT - GitilesGitiles Code Review Sign In git.eclipse.org / titan / titan.ApplicationLibraries.MQTTClone this repo:BranchesmasterTagsCNL113860_R1AR1Adfdfb16 regression tests added; various bugfixes by eantwuh · 3 weeks ago master9ecffef TPD updated, it now references the MQTT prot mod for positive testing by eantwuh · 2 months ago815f1fc setLocalAddress step added by eantwuh · 3 months agodd6e045 generated apidoc documentation added by ETHGRY · 9 months ago CNL113860_R1A2f3b305 apidocs comments added by eantwuh · 9 months agoMore »titan.ApplicationLibraries.MQTTMain project page:https://projects.eclipse.org/projects/tools.titanThe source code of the TTCN-3 compiler and executor:https://github.com/eclipse/titan.core Powered by Gitilestxt json",
                    "titan/titan.Applications.IoT_Functiontest_Framework - GitilesGitiles Code Review Sign In git.eclipse.org / titan / titan.Applications.IoT_Functiontest_FrameworkClone this repo:BranchesmasterTagsCNL113910_R1A7df94ff MQTT_Server component bugfixes by eantwuh · 3 weeks ago master80da38c MQTT_Server component added by eantwuh · 3 months ago0cc8ef9 HTTP_Client: connect test step added by eantwuh · 4 months ago8e543a3 HTTP_Server::close() added by eantwuh · 8 months ago28e5d19 Product number and magic string added to test files headers by ETHGRY · 9 months ago CNL113910_R1AMore »titan.Applications.IoT_Functiontest_FrameworkMain project page:https://projects.eclipse.org/projects/tools.titanThe source code of the TTCN-3 compiler and executor:https://github.com/eclipse/titan.core Powered by Gitilestxt json",
                    "titan/titan.ProtocolModules.MQTT - Clone: git://git.eclipse.org/gitroot/titan/titan.ProtocolModules.MQTT.gitReview With Gerrit",
                    "titan/titan.ProtocolModules.MQTT - GitilesGitiles Code Review Sign In git.eclipse.org / titan / titan.ProtocolModules.MQTTClone this repo:BranchesmasterTagsR.1.GR.1.FR.1.ER.1.DR.1.CR.1.BR.1.A65a0375 Copyright datum changed for 2000-2019 by balaskoa · 1 year, 7 months ago mastera791ed8 Same algorithm, same fix as provided for the MQTT decoder in the previous patch by Alexander Kaiser · 1 year, 7 months ago612dd98 Patch for Bug 546045: decoding MQTT remaining length field by Alexander Kaiser · 1 year, 7 months agod7f8f8a asciidoc added by erititan · 2 years, 3 months ago3d64111 LICENSE file has been replaced to EPL 2.0 by balaskoa · 2 years, 3 months agoMore »titan.ProtocolModules.MQTTMain project page:https://projects.eclipse.org/projects/tools.titanThe source code of the TTCN-3 compiler and executor:https://github.com/eclipse/titan.core Powered by Gitilestxt json",
                    "• Protocol module variants from negative testing have been added to MQTT and CoAP"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "uomo",
                "Sentences": [
                    "Define an MQTT Payload",
                    "Define an MQTT Topic Namespace",
                    "The intent of the Sparkplug specification is to strive to define payload encoding architectures that remain true to the original, lightweight, bandwidth efficient, low latency features of MQTT while adding modern encoding schemes targeting the SCADA/IIoT solution sector."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "mihini",
                "Sentences": [
                    "MQTT example?"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "koneki",
                "Sentences": [
                    "Collects Zigbee data on Subscribes to MQTT device’s serial port messages Publishes MQTT messages Displays sensor data with a fancy UIEclipse Day Toulouse Copyright © 2012 Sierra Wireless.",
                    "MQTT (Message Queue Telemetry Transport) is",
                    "for the MQTT protocol.",
                    "m2m.eclipse.org MQTT broker Wireless gateway Mobile phone Wireless (Zigbee) sensorsEclipse Day Toulouse Copyright © 2012 Sierra Wireless."
                ],
                "relationships": []
            }
        ]
    },
    {
        "py/object": "model.LinkKeyword.LinkKeyword",
        "Id": 2,
        "Description": "Open Platform Communication Unified Architecture",
        "Keys": [
            "OPC UA"
        ],
        "projects": [
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "milo",
                "Sentences": [
                    "Eclipse Milo™ - an open source implementation of OPC UA (IEC 62541).",
                    "GitHub - eclipse/milo: Eclipse Milo™ - an open source implementation of OPC UA (IEC 62541).",
                    "Milo currently targets OPC UA specification version 1.03 and this will remain the case for the eventual 1.0 release.",
                    "Milo is an open-source implementation of OPC UA.",
                    "New generated Node implementations for OPC UA namespace",
                    "OPC UA Client SDK",
                    "OPC UA Server SDK",
                    "Standards: Eclipse Milo does implement the binary protocol of OPC UA also know as IEC 62541.",
                    "What I'm looking for is to generate events and alarms from an OPC UA server application."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "kura",
                "Sentences": [
                    "* #1383: OPC UA Driver only supports string node ids",
                    "* #1384: OPC UA Driver channel descriptor property ids shouldn't be localised",
                    "* Contributed Eclipse Kura OPC UA driver based on Eclipse Milo",
                    "ModbusOPC UA",
                    "OPC UA Driver"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "4diac",
                "Sentences": [
                    "2019-10-30Update OPC UA testsJose Cabral2-1562/+2362",
                    "520400 Add support for different OPC UA namespaces [closed/fixed]",
                    "528090 Make OPC UA server port setable from the command line [closed/fixed]",
                    "534749 OPC UA Publish does not CNF for external servers [closed/fixed]",
                    "537650 OPC UA same method calls from different method nodes [closed/fixed]",
                    "550698 Set OPC UA Data Subscriptions Publishing Intervals [closed/fixed]",
                    "A Pick-and-Place module demonstrates the skill-based approach for an automation system using OPC UA.",
                    "A working group within VDMA is currently working on standardizing a skill interface as OPC UA companion specification.",
                    "Additionaly, you need to make sure that the data type of the RD port matches the types from the OPC UA variable you want to subscribe to.",
                    "After some months of working, the improved OPC UA module for 4diac is now finally merged in the developed branch.",
                    "After version 1.11.0 of 4diac, the OPC UA module has changed its API, so applications developed before this version won't be compatible.",
                    "After working with OPC UA and real cases with different companies using different OPC UA stacks, we realized that the OPC UA module in FORTE wasn't reliable and often crashed, and wasn't easy to extend.",
                    "Arrowhead framework & Registering Services How to registering the end point URL address of OPC UA By: Ahsan Zia on Tue, 10 November 2020",
                    "Build FORTE with OPC UA",
                    "Building FORTE with open62541Need OPC UA enabled forte.exe By: zhang yunpeng on Sun, 17 March 2019",
                    "Completely reworked and improved OPC UA integration, update to open62541 V1.0",
                    "Create an OPC UA subscription in an IEC 61499 Application",
                    "Demonstrators at the Inspire Automation Camp, left TSN demonstrator, right OPC UA demonstrator",
                    "Docker alpine Image - Forte & OPC UA - compiling errrorsI'm creating a Docker alpine image with Forte & OPC UA; however, I get Forte compiling errors By: Franklin Amador on Fri, 29 June 2018",
                    "Error while trying to create Forte for OPC UA By: Sabarigirish Sreekesh on Wed, 19 August 2020",
                    "FORTE uses the open62541 OPC UA stack which is open source and can also be used in commercial projects free of charge.",
                    "HTTP and OPC UA on Raspberry PiHTTP Post request By: Manuel Reif on Sat, 26 September 2020",
                    "Here you can see another example how to use SUBSCRIBE and PUBLISH to create an IEC 61499 application which adds two values, by reading the values from an OPC UA variable and providing the result.",
                    "How to use and configure OPC UA in 4diac applications",
                    "If you need to connect to OPC UA servers which have some kind of security enabled, you need some extra steps.",
                    "If you want to use a specific communication protocol supported by 4diac FORTE, for example MQTT, OPC UA, Modbus and so on, follow the link.",
                    "Improved OPC UA support for 4diac 2019-09-02 Age: 436 days",
                    "Improved OPC UA support for 4diac By: Jose Maria Jesus Cabral Lassalle on Wed, 04 September 2019",
                    "Issues compiling Forte with OPC UA module included in Linux(Ubuntu 16.04) By: Manas Das on Fri, 01 February 2019",
                    "Issues compiling Forte with OPC UA module included in WindowsPlatform: Windows 10, CMake 3.10, VisualStudio 2017 By: Matthias Plasch on Thu, 03 January 2019",
                    "Issues on implementing OPC UA with 4DIAC and OpenModelica OPC UA implementation with client on 4DIAC and server on OpenModleica By: Manas Das on Mon, 04 February 2019",
                    "OPC UA",
                    "OPC UA Client",
                    "OPC UA Client Subscriptions",
                    "OPC UA Method Call",
                    "OPC UA Method call",
                    "OPC UA Methods",
                    "OPC UA Subscription",
                    "OPC UA Variables",
                    "OPC UA connection issue By: Mariusz Balon on Thu, 08 August 2019",
                    "OPC UA example By: Sabarigirish Sreekesh on Thu, 20 August 2020",
                    "OPC UA from 4diac 1.11.0",
                    "OPC UA is not enabled by default in FORTE.",
                    "OPC UA using open62541",
                    "OPC UA variables",
                    "OPC UA with IEC 61499 Tutorial (from v 1.11.0)",
                    "Offer an OPC UA method to be called by clients",
                    "On the server side we create an OPC UA variable /Objects/Increment (SUBSCRIBE_1).",
                    "Open UaExpert (you can get it from here) and connect to the OPC UA server running on FORTE: opc.tcp://localhost:4840",
                    "Provide OPC UA variables to clients",
                    "Read and Write OPC UA variables on a remote server",
                    "So we decided to make a deep clean-up of the OPC UA module and add the capabilities we found were needed.",
                    "The 4diac application can now communicate with the Arrowhead Framework over HTTP REST and/or OPC UA.",
                    "The 4diac examples repository now contains an example on the first implementation of skills FBs, which is used in Robotics + Automation OPC UA Demonstrator.",
                    "The OPC UA module can be used with v1.0 of open62541.",
                    "The REQ event of the PUBLISH FB has to be triggered to set the new value from SD_1 in the address model of OPC UA (Flop variable).",
                    "The gripper, for example, is controlled by a skill gripper that can be called via OPC UA.",
                    "The main changes are which Function Blocks are used for different OPC UA capabilites and how does the ID looks like.",
                    "The open platform automation forum aimed at promoting open technologies such as IEC 61499 and OPC UA for industrial automation.",
                    "This tutorial shows how you can use OPC UA in an IEC 61499 Application using available FBs.",
                    "When a client writes to this variable, it will be incremented (F_ADD) and then written to another OPC UA variable at /Objects/Incremented (PUBLISH_1).",
                    "When the sum is ready, the RSP event on SERVER is triggered and the result is returned to the calling OPC UA Client, which is in this case UaExpert.",
                    "Why change the OPC UA Module?"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "unide",
                "Sentences": [
                    "Such data is surely provided by machines either via modern protocols such as OPC UA or via proprietary access methods but it is not provided in a common and easily accessible format, which can be used to do performance analysis and optimization."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "titan",
                "Sentences": [
                    "ServiceBody does not support `RAW' encoding for OPC UA By: Avdoot Chalke on Tue, 18 June 2019"
                ],
                "relationships": []
            }
        ]
    },
    {
        "py/object": "model.LinkKeyword.LinkKeyword",
        "Id": 3,
        "Description": "Datagram Transport Layer Security",
        "Keys": [
            "DTLS"
        ],
        "projects": [
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "californium",
                "Sentences": [
                    "CoAP/DTLS Java Implementation",
                    "DTLS Return Routability Check (RRC)",
                    "DTLS1.3 support",
                    "Define a lifetime for DTLS session",
                    "GitHub - eclipse/californium: CoAP/DTLS Java Implementation",
                    "It implements DTLS 1.2 to secure your application",
                    "WIP: DTLS CID LoadBalancer - First Tutorials and Results"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "leshan",
                "Sentences": [
                    "Access for peer credentials from initial DTLS connection to later phases",
                    "Based on Scandium DTLS implementation",
                    "DTLS Client Certificate Chain not sent",
                    "DTLS based security"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "wakaama",
                "Sentences": [
                    "DTLS based security",
                    "DTLS feature requires the tinydtls submodule.",
                    "If DTLS feature enable:",
                    "cmake -DDTLS=1 [wakaama directory]/examples/client"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "4diac",
                "Sentences": [
                    "For that, you need to set the UA_ENABLE_ENCRYPTION to true, which will show some new variables in CMake (MBEDCRYPTO_LIBRARY, MBEDTLS_INCLUDE_DIRS, MBEDTLS_LIBRARY and MBEDX509_LIBRARY)."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "tinydtls",
                "Sentences": [
                    "As these new cipher suites as well as the use of raw public keys in DTLS were still in an early phase of standardization, no known DTLS implementation provided support.",
                    "Background: TZI began development of tinydtls in 2011 to estimate the memory footprint of a minimal Datagram Transport Layer Security (DTLS) engine.",
                    "Basic support for DTLS with pre-shared key mode and RPK mode with ECC.",
                    "But in turn, investigating the bare minimum that is required to run a minimal DTLS stack would have implied significant changes to the existing code.",
                    "Description: tinydtls is a library for Datagram Transport Layer Security (DTLS) covering both the client and the server state machine.",
                    "Developing the DTLS engine from scratch also allowed to support not only POSIX-compliant systems but also embedded operating systems such as Contiki.",
                    "Implementation of DTLS extensions that are useful in constrained environments, e.g.",
                    "Include optional lua binding for rapid prototyping of DTLS-enabled applications.",
                    "It has been used as a blueprint and reference platform during development of other DTLS implementations such as Scandium and contiki-dtls, and is designed to integrate with libcoap, a widely deployed CoAP implementation in C. Bindings for other languages such as lua exist.",
                    "It would not have been too hard to enhance existing open source DTLS implementations, though.",
                    "One question addressed the applicability of DTLS together with two new cipher suites that have been proposed for resource-limited network nodes, i.e.",
                    "Parent Project: Eclipse IoTBackground: TZI began development of tinydtls in 2011 to estimate the memory footprint of a minimal Datagram Transport Layer Security (DTLS) engine.",
                    "Scope: tinydtls provides a light-weight implementation of the DTLS protocol that can be used in devices with tight memory constraints, i.e.",
                    "Since its initial release, tinydtls has become an important tool for experimenting with DTLS in constrained devices by users from academia as well as industry.",
                    "Users that want to use DTLS with their Eclipse projects currently have to do the integration part by themselves.",
                    "Wakaama and other CoAP implementations need DTLS support for secure communication at transport layer.",
                    "constructing a single-threaded UDP server with DTLS support in",
                    "tinydtls is a library for Datagram Transport Layer Security (DTLS) covering both the client and the server state machine."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "hono",
                "Sentences": [
                    "DTLS handshake.",
                    "HONO_COAP_DTLS_RETRANSMISSION_TIMEOUT--hono.coap.dtlsRetransmissionTimeout",
                    "HONO_COAP_DTLS_THREADS--hono.coap.dtlsThreads",
                    "However, it might be desirable to expose a non-DTLS secured port instead, e.g.",
                    "The CoAP adapter also uses the DTLS handshake",
                    "The CoAP protocol is UDP based and as such uses the DTLS protocol to secure the communication between a client (device) and a server (adapter).",
                    "The DTLS protocol allows for different cipher suites to be",
                    "The adapter (currently) only supports PSK as part of a DTLS handshake for that purpose.",
                    "The maximum number of concurrent DTLS connections that the protocol adapter should accept.",
                    "The number of threads to use for processing DTLS message exchanges at the connection layer.",
                    "The protocol adapter opens a DTLS secured port if any of the following criteria are met",
                    "The timeout in milliseconds for DTLS retransmissions.",
                    "Thus, requiring devices to authenticate effectively rules out setting up a non-DTLS secured port.",
                    "When starting up, the protocol adapter will bind a DTLS secured UDP socket to the configured port.",
                    "expose the non-DTLS secured port on a local interface only, thus providing easy access from within",
                    "part of the DTLS handshake."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "agile",
                "Sentences": [
                    "§ OpenWSN, CCN-lite, Emb6, lwIP, tinyDTLS…",
                    "● Includes DTLS implementation (Scandium),"
                ],
                "relationships": []
            }
        ]
    },
    {
        "py/object": "model.LinkKeyword.LinkKeyword",
        "Id": 4,
        "Description": "Production Performance Management Protocol",
        "Keys": [
            "PPMP"
        ],
        "projects": [
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "unide",
                "Sentences": [
                    "Collaboration with partner Production Performance Management Protocol (PPMP)",
                    "Eclipse Unide provides a lightweight Production Performance Management Protocol (PPMP) server-client implementations (using JSON, REST and other).",
                    "Production Performance management Protocol (PPMP).",
                    "The Eclipse Unide project publishes the current version of Production Performance Management Protocol (PPMP) and develops simple server/client implementations.",
                    "The Production Performance Management Protocol (PPMP) specifies a format that allows to capture data that is required to do performance analysis of production facilities.",
                    "The Production Performance Mangement Protocol (PPMP) is the name of the structure of the payload whereas Unide is the project that aims to provide sample implementations and further development of this protocol in and with the Eclipse Open Source community.",
                    "The backend, usually in the cloud, is any component that \"speaks PPMP\" and",
                    "This payload is the Production Performance Management Protocol (PPMP).",
                    "Through sample implementations of a simple information structure (Production Performance Management Protocol - PPMP) tailored to manufacturing environments, we want to encourage the community to use, share, and evolve this structure together.",
                    "We assembled a few frequently asked questions about the Production Performance Protocol (PPMP) and the Unide project."
                ],
                "relationships": []
            }
        ]
    },
    {
        "py/object": "model.LinkKeyword.LinkKeyword",
        "Id": 5,
        "Description": "Attribute-based access control",
        "Keys": [
            "ABAC"
        ],
        "projects": [
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "keti",
                "Sentences": [
                    "Description: Keti is a service that was designed to protect RESTfuls API using Attribute Based Access Control (ABAC).",
                    "Keti is a service that was designed to protect RESTfuls API using Attribute Based Access Control (ABAC).",
                    "Thus, we decided to build a service that offered a simplified and comprehensive Attribute Based Access Control (ABAC) for RESTful APIs."
                ],
                "relationships": []
            }
        ]
    },
    {
        "py/object": "model.LinkKeyword.LinkKeyword",
        "Id": 6,
        "Description": "open standard APplication Platform for carS and TrAnsportation vehiCLEs",
        "Keys": [
            "APPSTACLE"
        ],
        "projects": [
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "kuksa",
                "Sentences": [
                    "Additionally, the involved partners of the publicly funded APPSTACLE project will utilise Eclipse Kuksa around their developments and include it for customer related projects.",
                    "Eclipse Kuksa has its origins in the APPSTACLE project that is part of the European ITEA3 programme",
                    "EclipseCon Europe 2019 Interview: APPSTACLE & Eclilpse Kuksa",
                    "Setup an Eclipse Che based APPSTACLE IDE to either develop, build, and deploy cloud or in-vehicle applications (see more info here)",
                    "The Eclipse KUKSA project implements the open source part of the APPSTACLE research project.",
                    "The publicly funded European ITEA research project APPSTACLE forms a basis for addressing such challenges.",
                    "With the end of the publicly funded APPSTACLE project, the first major release Eclipse Kuksa 1.0 is expected"
                ],
                "relationships": []
            }
        ]
    },
    {
        "py/object": "model.LinkKeyword.LinkKeyword",
        "Id": 7,
        "Description": "Automotive Grade Linux",
        "Keys": [
            "AGL"
        ],
        "projects": [
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "kuksa",
                "Sentences": [
                    "AGL KUKSA Build and Run on Raspberry PI 3:",
                    "AGL Kuksa",
                    "AGL build scripts",
                    "AGL content that includes a secondary license clause will link directly with content that is licensed under the terms of that secondary license (see EPL2.0 FAQ).",
                    "AGL image",
                    "AGL represents an automotive specific Linux distribution specifically designed as open software stack for connected car scenarios.",
                    "AGL.",
                    "Add services to Kuksa-AGL (see more info here) to build custom AGL-based in-vehicle HMI systems",
                    "An adapted Eclipse Che stack featuring an AGL and Yocto stacks",
                    "As the In-Vehicle gateway can be run on different operating systems (Raspbian, AGL, Debian etc.)",
                    "As the In-Vehicle gateway can be run on different operating systems (Raspbian, AGL, Debian, Apertis, etc.)",
                    "Automotive Grade Linux (AGL) stack with Yocto support:",
                    "Automotive Grade Linux (AGL, in-vehicle basis platform)",
                    "Build and deploy in-vehicle applications based on AGL (see more info here)",
                    "Build configuration commands for AGL",
                    "How to build and run AGL-Kuksa on Raspberry Pi 3",
                    "However, an adapted AGL build will be secondary licensed such that the combined work will be licensed under the GPL-2.0, and then distributed as combined work under the GPL-2.0.",
                    "In-Vehicle developments will adapt to Automotive Grade Linux (AGL) that is partially LGPL and GPL.",
                    "Introduction — AGL Kuksa 0.0.1 documentation",
                    "Kuksa is a wrapper project around AGL.",
                    "Kuksa.AGL (wrapper: scripts, separate builds for different licenses)",
                    "Link to Pre-build Pi images are dead and unable to build AGL",
                    "Provided scripts to build AGL images are based on AGL Funky Flounder 6.0.1",
                    "Sphinx Build AGL-Kuksa",
                    "The Eclipse Kuksa developers will clarify if AGL code can be fully defined as a dependency i.e.",
                    "The Eclipse Kuksa project conatins a set of repositories and this repo is one among those that contains in-vehicle platform code and also contains required layers and bindings to build a Kuksa adapted AGL (Automotive Grade Linux) distribution.",
                    "The following video features an example on how to use the Kuksa-IDE for developing AGL applications and services running on a Rover",
                    "The in-vehicle platform is primarily designed to work with AGL.",
                    "agl-kuksa - Scripts to automate AGL build system with the meta-kuksa layers.",
                    "agl-kuksa - Scripts to automate the AGL build system with the meta-kuksa layers.",
                    "its side, AGL uses Yocto/Bitbake building system to build an automotive domain",
                    "kuksa-appmanager - Hawkbit appmanager which deploys in-vehicle apps as docker containers, AGL widgets and more..",
                    "org.eclipse.kuksa-hono (AGL bindings for Hono)",
                    "org.eclipse.kuksa-mqtt (AGL bindings for MQTT)",
                    "that no AGL code must be included in Eclipse Kuksa."
                ],
                "relationships": []
            }
        ]
    },
    {
        "py/object": "model.LinkKeyword.LinkKeyword",
        "Id": 8,
        "Description": "Data Distribution Service",
        "Keys": [
            "DDS"
        ],
        "projects": [
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "mosquitto",
                "Sentences": [
                    "- Newcomers Newcomers- Language IDEs AJDT Andmore C / C++ IDE (CDT) Che Java Development Tools (JDT) Objectteams Orion PHP Development Tools (PDT) Eclipse Web Tools Platform Project (WTP) ServerTools (WTP)- Modeling AMP Amalgam ATL BPEL Designer Compare Ecore Tools EMF EMF \"Technology\" (Ecore Tools, EMFatic, etc) Epsilon eTrice Extended Editing Framework (READ ONLY) Eclipse Generation Factories (EGF) GMF (Graphical Modeling Framework) Graphiti M2T (model-to-text transformation) MDT (Model Development Tools) Modeling (top-level project) OCL Papyrus TMF (Xtext) UML2 UML2 Tools XSD MoDisco Presentation Modeling Framework (PMF) Sphinx VIATRA Model-to-Model Transformation QVT-OML QVT-Relations EMF Diff/Merge EMF Parsley Eclipse Layout Kernel- Eclipse Projects 4DIAC - Framework for Distributed Industrial Automation and Control ACTF Advanced Scripting Environment (EASE) Agile UML APP4MC AsciiDoc Language Babel BIRT BPMN 2.0 Modeler Buckminster dev Buildship Californium (Cf) CoAP Framework Capra ChemClipse Cloud Application Management Framework Commercial Common Build Infrastructure Concierge Dali Dash Dirigible DSDP - Mobile Tools for Java (MTJ) DSDP - Real-Time Software Components (RTSC) DSDP - Target Management DTP Dynamic Languages Toolkit (DLTK) e(fx)clipse EATOP Eclipse 4 Eclipse Adore Eclipse Advanced Visualization Eclipse Agail Eclipse Apogy Eclipse Arrowhead Eclipse Avsys Eclipse Basyx Eclipse Bridge.IoT Eclipse Bundle Recipes Eclipse Cargotracker Eclipse Ceylon Eclipse Che4z Eclipse Cloe Eclipse Codewind Eclipse CogniCrypt Eclipse Collections Eclipse Communications Framework (ECF) Eclipse Corrosion Eclipse Crossmeter Eclipse Cyclone DDS Eclipse Dartboard Eclipse Deeplearning4j Eclipse Ditto Eclipse Duttile Eclipse EclEmma Eclipse EdiTDor Eclipse Embedded CDT Eclipse EMF Cloud Eclipse Enterprise for Java Eclipse ESCET Eclipse fog05 Eclipse Formal Modeling Eclipse Free BIRD Tools Eclipse GLSP Eclipse Grizzly Eclipse Hara Eclipse Hawk Eclipse iceoryx Eclipse Implementation of JAXB Eclipse ioFog Eclipse IoT Packages Eclipse Jakarta EE Platform Eclipse Jakarta EE TCK Eclipse January Eclipse JDT LS Eclipse Jemo Eclipse Jersey Eclipse Jifa Eclipse JKube Eclipse JNoSQL Eclipse JustJ Eclipse Kapua Eclipse Keyple Eclipse Kiso Eclipse Krazo Eclipse Kuksa Eclipse LemMinX Eclipse LSP4J Eclipse LSP4MP Eclipse Metro Eclipse Microprofile Eclipse Milo Eclipse Mojarra Eclipse MOSAIC Eclipse MRAA Eclipse N4JS Eclipse OneOFour Eclipse Open Standard Business Platform Eclipse Open VSX Eclipse OpenJ9 Eclipse OpenK Core Modules Eclipse openK User Modules Eclipse OpenMQ Eclipse OpenVSX Eclipse ORB Eclipse Packager Eclipse Packages Eclipse Passage Eclipse Phizog Eclipse Platform Eclipse Project for Common Annotations Eclipse Project for Concurrency Utilities Eclipse Project for EJB Eclipse Project for Enterprise Security Eclipse Project for Expression Language Eclipse Project for Interceptors Eclipse Project for JACC Eclipse Project for JAF Eclipse Project for JASPIC Eclipse Project for JavaMail Eclipse Project for JAX-RS Eclipse Project for JAX-WS Eclipse Project for JAXB Eclipse Project for JCA Eclipse Project for JMS Eclipse Project for JPA Eclipse Project for JSON Processing Eclipse Project for JSON-B Eclipse Project for JSP Eclipse Project for JSTL Eclipse Project for JTA Eclipse Project for Servlet Eclipse Project for Stable Jakarta EE APIs Eclipse Project for WebSocket Eclipse RedDeer Eclipse Repairnator Eclipse Rich Beans Eclipse RT (runtime) Eclipse SCADA Eclipse Scanning Eclipse SeCo Blocks Eclipse sensiNact Eclipse Shellwax Eclipse Signalling Engineering Toolbox Eclipse sim@openPASS Eclipse Skills Eclipse SmartMDSD Eclipse Sprotty Eclipse Steady Eclipse Streamsheets Eclipse SW360 Eclipse SW360antenna Eclipse SWTChart Eclipse SystemFOCUS Eclipse Tahu Eclipse TEA Eclipse TeXlipse Eclipse Theia Eclipse ThingWeb Eclipse Titan Eclipse TM4E Eclipse Transformer Eclipse Tyrus Eclipse UML Generators Eclipse UML Profiles Repository Eclipse UPM Eclipse USS SDK Eclipse VOLTTRON Eclipse WaSP Eclipse Website Eclipse Wild Web Developer Eclipse XACC Eclipse Xpect Eclipse Xsemantics Eclipse Yasson Eclipse zenoh EclipseLink eGerrit EGit / JGit eLogbook@openk EPF EPP Equinox eRCP Examples for Jakarta EE Franca Fundamental Modeling Concepts GEF GEF3D Gemini GEMOC Studio Gendoc GlassFish GlassFish Tools Golo Handly hawkBit Hono Hudson Ignite Ignite|IoT IoT-Testware Jakarta Activation Jakarta Annotations Jakarta Authentication Jakarta Authorization Jakarta Batch Jakarta Bean Validation Jakarta Concurrency Jakarta Connectors Jakarta Contexts and Dependency Injection Jakarta EE Examples Jakarta EE Platform Jakarta EE TCK Jakarta Enterprise Beans Jakarta Expression Language Jakarta Interceptors Jakarta JSON Binding Jakarta JSON Processing Jakarta Mail Jakarta Messaging Jakarta MVC Jakarta NoSQL Jakarta Pages Jakarta Persistence Jakarta RESTful Web Services Jakarta Security Jakarta Server Faces Jakarta Server Pages Jakarta Servlet Jakarta Stable APIs Jakarta Standard Tag Library Jakarta Transactions Jakarta WebSocket Jakarta XML Binding Jakarta XML Web Services Java Workflow Tooling Java WorkFlow Tooling (JWT) JavaServer Faces JDT LS JFace Jubula Keti Kura Libra Linux Tools Linux Tools Project Lua Development Tools Lyo Mangrove Marketplace Client Project Maven Integration for Web Tools Platform Mbeddr MDM|BL Memory Analyzer Microprofile Mita Model Driven Health Tools Model Focusing Tools Mosquitto Mylyn Mylyn Builds Mylyn Context Mylyn Intent Mylyn Versions NatTable Nebula Ogee OM2M OMR Oomph OpenHW Group CORE-V cores openK platform Orbit OSEE P2 Package Drone Paho Paho Incubator Papyrus for Real Time Platform - User Assistance (UA) Plugin Development Environment (PDE) Ponte project_hip [archived] RasterFrames RCP Testing Tool RDF4J Remote Application Platform (RAP) Requirements Modeling Framework Rich Client Platform (RCP) Riena Runtime Packaging Runtimes Sapphire Scanning scout SeMantic Information Logistics Architecture (SMILA) Service Oriented Architecture Simultaneous release Sirius Sisu Skalli Soteria Sparkplug Specification Project Spatiotemporal Epidemiological Modeler (STEM) Standard Widget Toolkit (SWT) Starter for Jakarta EE Subversive SWTBot Tangle Identity Tangle Marketplaces Target Communication Framework Target Management Technology Project and PMC The Eclipse Integrated Computational Environment Thym Tigerstripe tinydtls Tools for Cloud Foundry Trace Compass Triquetrum Turkish Users Unide UOMo Vert.x Vex Virgo Vorto Wakaama Webtools incubator WindowBuilder XML Schema Definition (XSD) XWT- Polarsys Capella General Arcadia Capella workbench Capella Studio M2Doc Requirements Addon Kitalpha 3p CHESS- General (non-technical) Eclipse Foundation Project Proposals Jobs and employment Polish users Test- Eclipse Working Groups Automotive IWG Science WG- Proposals OSGi Enterprise Tools Eclipse Advanced Scripting Environment (EASE) DAWNSci Eclipse Sumo- Archived Potomac B3 Tiaki MOFScript secRT Chinese users AMW Buckminster ATF Board committer reps Blinki COBOL Pulsar Albireo Code Recommenders Incubator Code Recommenders Apricot Service Oriented Architecture GMT (Generative Modeling Technologies) IDE4EDU Damos AM3 openArchitectureWare BPMN Modeler EMF Store EMF Client Apogee C-Sharp Corona Hibachi Glimmer Maynstall DSDP - Device Debugging DSDP - Native Application Builder (NAB) eBPM ORMF eBAM DSDP - Tools for Mobile Linux (TML) Eclipse aCute Spaces ScalaModules Visual Editor (VE) Textual Concrete Syntax (TCS) P2 dev Cloud Deployment Toolkit Memory Analyzer (MAT) DSDP COSMOS Esl OFMP Faceted Project Framework UMLX IAM (Eclipse Integration for Apache Maven) M2M (model-to-model transformation) OHF Tycho Sketch IMP g-Eclipse Eclipse HIP Eclipse Examples EMF-IncQuery Eclipse Process Manager (Stardust) Eclipse IOTA Trinity Swordfish Maven Integration (M2E) Koneki Mihini Test and Performance Tools Platform (TPTP) Voicetools Sequoyah Xtend Eclipse LSP4E Eclipse Monkey Project Runtime Analysis Tools Service Oriented Architecture GEMS WTP - PAVE Service Oriented Architecture Tools Platform (STP) MST OMCW Silverlight Development Toolkit (SLDT) Woolsey Winery Higgins EGL Development Tools Service Component Architecture (SCA) Tools Wazaabi Eclipse Picasso MDM WEB Krikkit Gyrex Eclipse Papyrus for xtUML StatET Edje RISE V2G Eclipse Whiskers Flux Eclipse SmartHome Remus Information Management"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "om2m",
                "Sentences": [
                    "- Newcomers Newcomers- Language IDEs AJDT Andmore C / C++ IDE (CDT) Che Java Development Tools (JDT) Objectteams Orion PHP Development Tools (PDT) Eclipse Web Tools Platform Project (WTP) ServerTools (WTP)- Modeling AMP Amalgam ATL BPEL Designer Compare Ecore Tools EMF EMF \"Technology\" (Ecore Tools, EMFatic, etc) Epsilon eTrice Extended Editing Framework (READ ONLY) Eclipse Generation Factories (EGF) GMF (Graphical Modeling Framework) Graphiti M2T (model-to-text transformation) MDT (Model Development Tools) Modeling (top-level project) OCL Papyrus TMF (Xtext) UML2 UML2 Tools XSD MoDisco Presentation Modeling Framework (PMF) Sphinx VIATRA Model-to-Model Transformation QVT-OML QVT-Relations EMF Diff/Merge EMF Parsley Eclipse Layout Kernel- Eclipse Projects 4DIAC - Framework for Distributed Industrial Automation and Control ACTF Advanced Scripting Environment (EASE) Agile UML APP4MC AsciiDoc Language Babel BIRT BPMN 2.0 Modeler Buckminster dev Buildship Californium (Cf) CoAP Framework Capra ChemClipse Cloud Application Management Framework Commercial Common Build Infrastructure Concierge Dali Dash Dirigible DSDP - Mobile Tools for Java (MTJ) DSDP - Real-Time Software Components (RTSC) DSDP - Target Management DTP Dynamic Languages Toolkit (DLTK) e(fx)clipse EATOP Eclipse 4 Eclipse Adore Eclipse Advanced Visualization Eclipse Agail Eclipse Apogy Eclipse Arrowhead Eclipse Avsys Eclipse Basyx Eclipse Bridge.IoT Eclipse Bundle Recipes Eclipse Cargotracker Eclipse Ceylon Eclipse Che4z Eclipse Cloe Eclipse Codewind Eclipse CogniCrypt Eclipse Collections Eclipse Communications Framework (ECF) Eclipse Corrosion Eclipse Crossmeter Eclipse Cyclone DDS Eclipse Dartboard Eclipse Deeplearning4j Eclipse Ditto Eclipse Duttile Eclipse EclEmma Eclipse EdiTDor Eclipse Embedded CDT Eclipse EMF Cloud Eclipse Enterprise for Java Eclipse ESCET Eclipse fog05 Eclipse Formal Modeling Eclipse Free BIRD Tools Eclipse GLSP Eclipse Grizzly Eclipse Hara Eclipse Hawk Eclipse iceoryx Eclipse Implementation of JAXB Eclipse ioFog Eclipse IoT Packages Eclipse Jakarta EE Platform Eclipse Jakarta EE TCK Eclipse January Eclipse JDT LS Eclipse Jemo Eclipse Jersey Eclipse Jifa Eclipse JKube Eclipse JNoSQL Eclipse JustJ Eclipse Kapua Eclipse Keyple Eclipse Kiso Eclipse Krazo Eclipse Kuksa Eclipse LemMinX Eclipse LSP4J Eclipse LSP4MP Eclipse Metro Eclipse Microprofile Eclipse Milo Eclipse Mojarra Eclipse MOSAIC Eclipse MRAA Eclipse N4JS Eclipse OneOFour Eclipse Open Standard Business Platform Eclipse Open VSX Eclipse OpenJ9 Eclipse OpenK Core Modules Eclipse openK User Modules Eclipse OpenMQ Eclipse OpenVSX Eclipse ORB Eclipse Packager Eclipse Packages Eclipse Passage Eclipse Phizog Eclipse Platform Eclipse Project for Common Annotations Eclipse Project for Concurrency Utilities Eclipse Project for EJB Eclipse Project for Enterprise Security Eclipse Project for Expression Language Eclipse Project for Interceptors Eclipse Project for JACC Eclipse Project for JAF Eclipse Project for JASPIC Eclipse Project for JavaMail Eclipse Project for JAX-RS Eclipse Project for JAX-WS Eclipse Project for JAXB Eclipse Project for JCA Eclipse Project for JMS Eclipse Project for JPA Eclipse Project for JSON Processing Eclipse Project for JSON-B Eclipse Project for JSP Eclipse Project for JSTL Eclipse Project for JTA Eclipse Project for Servlet Eclipse Project for Stable Jakarta EE APIs Eclipse Project for WebSocket Eclipse RedDeer Eclipse Repairnator Eclipse Rich Beans Eclipse RT (runtime) Eclipse SCADA Eclipse Scanning Eclipse SeCo Blocks Eclipse sensiNact Eclipse Shellwax Eclipse Signalling Engineering Toolbox Eclipse sim@openPASS Eclipse Skills Eclipse SmartMDSD Eclipse Sprotty Eclipse Steady Eclipse Streamsheets Eclipse SW360 Eclipse SW360antenna Eclipse SWTChart Eclipse SystemFOCUS Eclipse Tahu Eclipse TEA Eclipse TeXlipse Eclipse Theia Eclipse ThingWeb Eclipse Titan Eclipse TM4E Eclipse Transformer Eclipse Tyrus Eclipse UML Generators Eclipse UML Profiles Repository Eclipse UPM Eclipse USS SDK Eclipse VOLTTRON Eclipse WaSP Eclipse Website Eclipse Wild Web Developer Eclipse XACC Eclipse Xpect Eclipse Xsemantics Eclipse Yasson Eclipse zenoh EclipseLink eGerrit EGit / JGit eLogbook@openk EPF EPP Equinox eRCP Examples for Jakarta EE Franca Fundamental Modeling Concepts GEF GEF3D Gemini GEMOC Studio Gendoc GlassFish GlassFish Tools Golo Handly hawkBit Hono Hudson Ignite Ignite|IoT IoT-Testware Jakarta Activation Jakarta Annotations Jakarta Authentication Jakarta Authorization Jakarta Batch Jakarta Bean Validation Jakarta Concurrency Jakarta Connectors Jakarta Contexts and Dependency Injection Jakarta EE Examples Jakarta EE Platform Jakarta EE TCK Jakarta Enterprise Beans Jakarta Expression Language Jakarta Interceptors Jakarta JSON Binding Jakarta JSON Processing Jakarta Mail Jakarta Messaging Jakarta MVC Jakarta NoSQL Jakarta Pages Jakarta Persistence Jakarta RESTful Web Services Jakarta Security Jakarta Server Faces Jakarta Server Pages Jakarta Servlet Jakarta Stable APIs Jakarta Standard Tag Library Jakarta Transactions Jakarta WebSocket Jakarta XML Binding Jakarta XML Web Services Java Workflow Tooling Java WorkFlow Tooling (JWT) JavaServer Faces JDT LS JFace Jubula Keti Kura Libra Linux Tools Linux Tools Project Lua Development Tools Lyo Mangrove Marketplace Client Project Maven Integration for Web Tools Platform Mbeddr MDM|BL Memory Analyzer Microprofile Mita Model Driven Health Tools Model Focusing Tools Mosquitto Mylyn Mylyn Builds Mylyn Context Mylyn Intent Mylyn Versions NatTable Nebula Ogee OM2M OMR Oomph OpenHW Group CORE-V cores openK platform Orbit OSEE P2 Package Drone Paho Paho Incubator Papyrus for Real Time Platform - User Assistance (UA) Plugin Development Environment (PDE) Ponte project_hip [archived] RasterFrames RCP Testing Tool RDF4J Remote Application Platform (RAP) Requirements Modeling Framework Rich Client Platform (RCP) Riena Runtime Packaging Runtimes Sapphire Scanning scout SeMantic Information Logistics Architecture (SMILA) Service Oriented Architecture Simultaneous release Sirius Sisu Skalli Soteria Sparkplug Specification Project Spatiotemporal Epidemiological Modeler (STEM) Standard Widget Toolkit (SWT) Starter for Jakarta EE Subversive SWTBot Tangle Identity Tangle Marketplaces Target Communication Framework Target Management Technology Project and PMC The Eclipse Integrated Computational Environment Thym Tigerstripe tinydtls Tools for Cloud Foundry Trace Compass Triquetrum Turkish Users Unide UOMo Vert.x Vex Virgo Vorto Wakaama Webtools incubator WindowBuilder XML Schema Definition (XSD) XWT- Polarsys Capella General Arcadia Capella workbench Capella Studio M2Doc Requirements Addon Kitalpha 3p CHESS- General (non-technical) Eclipse Foundation Project Proposals Jobs and employment Polish users Test- Eclipse Working Groups Automotive IWG Science WG- Proposals OSGi Enterprise Tools Eclipse Advanced Scripting Environment (EASE) DAWNSci Eclipse Sumo- Archived Potomac B3 Tiaki MOFScript secRT Chinese users AMW Buckminster ATF Board committer reps Blinki COBOL Pulsar Albireo Code Recommenders Incubator Code Recommenders Apricot Service Oriented Architecture GMT (Generative Modeling Technologies) IDE4EDU Damos AM3 openArchitectureWare BPMN Modeler EMF Store EMF Client Apogee C-Sharp Corona Hibachi Glimmer Maynstall DSDP - Device Debugging DSDP - Native Application Builder (NAB) eBPM ORMF eBAM DSDP - Tools for Mobile Linux (TML) Eclipse aCute Spaces ScalaModules Visual Editor (VE) Textual Concrete Syntax (TCS) P2 dev Cloud Deployment Toolkit Memory Analyzer (MAT) DSDP COSMOS Esl OFMP Faceted Project Framework UMLX IAM (Eclipse Integration for Apache Maven) M2M (model-to-model transformation) OHF Tycho Sketch IMP g-Eclipse Eclipse HIP Eclipse Examples EMF-IncQuery Eclipse Process Manager (Stardust) Eclipse IOTA Trinity Swordfish Maven Integration (M2E) Koneki Mihini Test and Performance Tools Platform (TPTP) Voicetools Sequoyah Xtend Eclipse LSP4E Eclipse Monkey Project Runtime Analysis Tools Service Oriented Architecture GEMS WTP - PAVE Service Oriented Architecture Tools Platform (STP) MST OMCW Silverlight Development Toolkit (SLDT) Woolsey Winery Higgins EGL Development Tools Service Component Architecture (SCA) Tools Wazaabi Eclipse Picasso MDM WEB Krikkit Gyrex Eclipse Papyrus for xtUML StatET Edje RISE V2G Eclipse Whiskers Flux Eclipse SmartHome Remus Information Management"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "4diac",
                "Sentences": [
                    "- Newcomers Newcomers- Language IDEs AJDT Andmore C / C++ IDE (CDT) Che Java Development Tools (JDT) Objectteams Orion PHP Development Tools (PDT) Eclipse Web Tools Platform Project (WTP) ServerTools (WTP)- Modeling AMP Amalgam ATL BPEL Designer Compare Ecore Tools EMF EMF \"Technology\" (Ecore Tools, EMFatic, etc) Epsilon eTrice Extended Editing Framework (READ ONLY) Eclipse Generation Factories (EGF) GMF (Graphical Modeling Framework) Graphiti M2T (model-to-text transformation) MDT (Model Development Tools) Modeling (top-level project) OCL Papyrus TMF (Xtext) UML2 UML2 Tools XSD MoDisco Presentation Modeling Framework (PMF) Sphinx VIATRA Model-to-Model Transformation QVT-OML QVT-Relations EMF Diff/Merge EMF Parsley Eclipse Layout Kernel- Eclipse Projects 4DIAC - Framework for Distributed Industrial Automation and Control ACTF Advanced Scripting Environment (EASE) Agile UML APP4MC AsciiDoc Language Babel BIRT BPMN 2.0 Modeler Buckminster dev Buildship Californium (Cf) CoAP Framework Capra ChemClipse Cloud Application Management Framework Commercial Common Build Infrastructure Concierge Dali Dash Dirigible DSDP - Mobile Tools for Java (MTJ) DSDP - Real-Time Software Components (RTSC) DSDP - Target Management DTP Dynamic Languages Toolkit (DLTK) e(fx)clipse EATOP Eclipse 4 Eclipse Adore Eclipse Advanced Visualization Eclipse Agail Eclipse Apogy Eclipse Arrowhead Eclipse Avsys Eclipse Basyx Eclipse Bridge.IoT Eclipse Bundle Recipes Eclipse Cargotracker Eclipse Ceylon Eclipse Che4z Eclipse Cloe Eclipse Codewind Eclipse CogniCrypt Eclipse Collections Eclipse Communications Framework (ECF) Eclipse Corrosion Eclipse Crossmeter Eclipse Cyclone DDS Eclipse Dartboard Eclipse Deeplearning4j Eclipse Ditto Eclipse Duttile Eclipse EclEmma Eclipse EdiTDor Eclipse Embedded CDT Eclipse EMF Cloud Eclipse Enterprise for Java Eclipse ESCET Eclipse fog05 Eclipse Formal Modeling Eclipse Free BIRD Tools Eclipse GLSP Eclipse Grizzly Eclipse Hara Eclipse Hawk Eclipse iceoryx Eclipse Implementation of JAXB Eclipse ioFog Eclipse IoT Packages Eclipse Jakarta EE Platform Eclipse Jakarta EE TCK Eclipse January Eclipse JDT LS Eclipse Jemo Eclipse Jersey Eclipse Jifa Eclipse JKube Eclipse JNoSQL Eclipse JustJ Eclipse Kapua Eclipse Keyple Eclipse Kiso Eclipse Krazo Eclipse Kuksa Eclipse LemMinX Eclipse LSP4J Eclipse LSP4MP Eclipse Metro Eclipse Microprofile Eclipse Milo Eclipse Mojarra Eclipse MOSAIC Eclipse MRAA Eclipse N4JS Eclipse OneOFour Eclipse Open Standard Business Platform Eclipse Open VSX Eclipse OpenJ9 Eclipse OpenK Core Modules Eclipse openK User Modules Eclipse OpenMQ Eclipse OpenVSX Eclipse ORB Eclipse Packager Eclipse Packages Eclipse Passage Eclipse Phizog Eclipse Platform Eclipse Project for Common Annotations Eclipse Project for Concurrency Utilities Eclipse Project for EJB Eclipse Project for Enterprise Security Eclipse Project for Expression Language Eclipse Project for Interceptors Eclipse Project for JACC Eclipse Project for JAF Eclipse Project for JASPIC Eclipse Project for JavaMail Eclipse Project for JAX-RS Eclipse Project for JAX-WS Eclipse Project for JAXB Eclipse Project for JCA Eclipse Project for JMS Eclipse Project for JPA Eclipse Project for JSON Processing Eclipse Project for JSON-B Eclipse Project for JSP Eclipse Project for JSTL Eclipse Project for JTA Eclipse Project for Servlet Eclipse Project for Stable Jakarta EE APIs Eclipse Project for WebSocket Eclipse RedDeer Eclipse Repairnator Eclipse Rich Beans Eclipse RT (runtime) Eclipse SCADA Eclipse Scanning Eclipse SeCo Blocks Eclipse sensiNact Eclipse Shellwax Eclipse Signalling Engineering Toolbox Eclipse sim@openPASS Eclipse Skills Eclipse SmartMDSD Eclipse Sprotty Eclipse Steady Eclipse Streamsheets Eclipse SW360 Eclipse SW360antenna Eclipse SWTChart Eclipse SystemFOCUS Eclipse Tahu Eclipse TEA Eclipse TeXlipse Eclipse Theia Eclipse ThingWeb Eclipse Titan Eclipse TM4E Eclipse Transformer Eclipse Tyrus Eclipse UML Generators Eclipse UML Profiles Repository Eclipse UPM Eclipse USS SDK Eclipse VOLTTRON Eclipse WaSP Eclipse Website Eclipse Wild Web Developer Eclipse XACC Eclipse Xpect Eclipse Xsemantics Eclipse Yasson Eclipse zenoh EclipseLink eGerrit EGit / JGit eLogbook@openk EPF EPP Equinox eRCP Examples for Jakarta EE Franca Fundamental Modeling Concepts GEF GEF3D Gemini GEMOC Studio Gendoc GlassFish GlassFish Tools Golo Handly hawkBit Hono Hudson Ignite Ignite|IoT IoT-Testware Jakarta Activation Jakarta Annotations Jakarta Authentication Jakarta Authorization Jakarta Batch Jakarta Bean Validation Jakarta Concurrency Jakarta Connectors Jakarta Contexts and Dependency Injection Jakarta EE Examples Jakarta EE Platform Jakarta EE TCK Jakarta Enterprise Beans Jakarta Expression Language Jakarta Interceptors Jakarta JSON Binding Jakarta JSON Processing Jakarta Mail Jakarta Messaging Jakarta MVC Jakarta NoSQL Jakarta Pages Jakarta Persistence Jakarta RESTful Web Services Jakarta Security Jakarta Server Faces Jakarta Server Pages Jakarta Servlet Jakarta Stable APIs Jakarta Standard Tag Library Jakarta Transactions Jakarta WebSocket Jakarta XML Binding Jakarta XML Web Services Java Workflow Tooling Java WorkFlow Tooling (JWT) JavaServer Faces JDT LS JFace Jubula Keti Kura Libra Linux Tools Linux Tools Project Lua Development Tools Lyo Mangrove Marketplace Client Project Maven Integration for Web Tools Platform Mbeddr MDM|BL Memory Analyzer Microprofile Mita Model Driven Health Tools Model Focusing Tools Mosquitto Mylyn Mylyn Builds Mylyn Context Mylyn Intent Mylyn Versions NatTable Nebula Ogee OM2M OMR Oomph OpenHW Group CORE-V cores openK platform Orbit OSEE P2 Package Drone Paho Paho Incubator Papyrus for Real Time Platform - User Assistance (UA) Plugin Development Environment (PDE) Ponte project_hip [archived] RasterFrames RCP Testing Tool RDF4J Remote Application Platform (RAP) Requirements Modeling Framework Rich Client Platform (RCP) Riena Runtime Packaging Runtimes Sapphire Scanning scout SeMantic Information Logistics Architecture (SMILA) Service Oriented Architecture Simultaneous release Sirius Sisu Skalli Soteria Sparkplug Specification Project Spatiotemporal Epidemiological Modeler (STEM) Standard Widget Toolkit (SWT) Starter for Jakarta EE Subversive SWTBot Tangle Identity Tangle Marketplaces Target Communication Framework Target Management Technology Project and PMC The Eclipse Integrated Computational Environment Thym Tigerstripe tinydtls Tools for Cloud Foundry Trace Compass Triquetrum Turkish Users Unide UOMo Vert.x Vex Virgo Vorto Wakaama Webtools incubator WindowBuilder XML Schema Definition (XSD) XWT- Polarsys Capella General Arcadia Capella workbench Capella Studio M2Doc Requirements Addon Kitalpha 3p CHESS- General (non-technical) Eclipse Foundation Project Proposals Jobs and employment Polish users Test- Eclipse Working Groups Automotive IWG Science WG- Proposals OSGi Enterprise Tools Eclipse Advanced Scripting Environment (EASE) DAWNSci Eclipse Sumo- Archived Potomac B3 Tiaki MOFScript secRT Chinese users AMW Buckminster ATF Board committer reps Blinki COBOL Pulsar Albireo Code Recommenders Incubator Code Recommenders Apricot Service Oriented Architecture GMT (Generative Modeling Technologies) IDE4EDU Damos AM3 openArchitectureWare BPMN Modeler EMF Store EMF Client Apogee C-Sharp Corona Hibachi Glimmer Maynstall DSDP - Device Debugging DSDP - Native Application Builder (NAB) eBPM ORMF eBAM DSDP - Tools for Mobile Linux (TML) Eclipse aCute Spaces ScalaModules Visual Editor (VE) Textual Concrete Syntax (TCS) P2 dev Cloud Deployment Toolkit Memory Analyzer (MAT) DSDP COSMOS Esl OFMP Faceted Project Framework UMLX IAM (Eclipse Integration for Apache Maven) M2M (model-to-model transformation) OHF Tycho Sketch IMP g-Eclipse Eclipse HIP Eclipse Examples EMF-IncQuery Eclipse Process Manager (Stardust) Eclipse IOTA Trinity Swordfish Maven Integration (M2E) Koneki Mihini Test and Performance Tools Platform (TPTP) Voicetools Sequoyah Xtend Eclipse LSP4E Eclipse Monkey Project Runtime Analysis Tools Service Oriented Architecture GEMS WTP - PAVE Service Oriented Architecture Tools Platform (STP) MST OMCW Silverlight Development Toolkit (SLDT) Woolsey Winery Higgins EGL Development Tools Service Component Architecture (SCA) Tools Wazaabi Eclipse Picasso MDM WEB Krikkit Gyrex Eclipse Papyrus for xtUML StatET Edje RISE V2G Eclipse Whiskers Flux Eclipse SmartHome Remus Information Management"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "agile",
                "Sentences": [
                    "DDS",
                    "On the other hand, Senseioty offers a usable Distributed Data Stream Processor (DDSP), leveraging artificial intelligence to anticipate problems, detect unexpected event patterns and to optimize processes, services and decisions.",
                    "Posted in Community, Events, Open Calls and tagged Big Data Analytics, DDSP, FlairBit, Senseioty."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "cyclonedds",
                "Sentences": [
                    "\"DDS\" is a trademark of the Object Management Group, Inc.",
                    "\"Eclipse Cyclone DDS\" and \"Cyclone DDS\" are trademarks of the Eclipse Foundation.",
                    "$ cmake <install-location>/share/CycloneDDS-CXX/examples/helloworld",
                    "$ cmake <install-location>/share/CycloneDDS/examples/roundtrip",
                    "$ export CYCLONEDDS_URI=file://$PWD/cyclonedds.xml",
                    "(on Windows, one would have to use set CYCLONEDDS_URI=file://...",
                    ": Eclipse Cyclone DDS offers unique data-sharing capabilities compared to the already existing Eclipse solutions (i.e.",
                    "</CycloneDDS>",
                    "<CycloneDDS xmlns=\"https://cdds.io/config\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"https://cdds.io/config https://raw.githubusercontent.com/eclipse-cyclonedds/cyclonedds/master/etc/cyclonedds.xsd\">",
                    "<install-location>/share/CycloneDDS",
                    "<install-location>/share/CycloneDDS-CXX",
                    "Architectural Issues: Cyclone DDS supports Linux, macOS and Windows as first-tier platforms.",
                    "At this point you are ready to use Eclipse Cyclone DDS in your own projects.",
                    "Background information on configuring Cyclone DDS can be found",
                    "Building Eclipse Cyclone DDS",
                    "Building the Eclipse Cyclone DDS C++ binding",
                    "C++ binding for Eclipse Cyclone DDS",
                    "Cleaning up these issues is an ongoing process, undertaken as a background activity while working towards covering all of the DDS specification famliy.",
                    "Communities: The use of and contributions to Cyclone DDS has grown notably since becoming a tier-1 middleware in \"Foxy Fitzroy\", released June 5.",
                    "Communities: This release is specifically aimed at matching the upcoming \"Foxy Fitzroy\" release of ROS2, where Cyclone DDS is one of 3 tier-1 middleware options.",
                    "Concrete examples of this are our evolving 'Vortex Insight' tooling for monitoring DDS-based systems and prototyped integrations with 3rd party tools such as apache-spark/storm, node-red and freeboard (see http://prismtech.github.io/ which will be transferred to Eclipse too)",
                    "Contributing to Eclipse Cyclone DDS",
                    "Cyclone DDS is developed completely in the open",
                    "Cyclone DDS is developed completely in the open as an Eclipse IoT project",
                    "DDS Security defines a set of plug-in interfaces and protocol hooks that are part of the core DDS implementation and a set of \"default\" plug-ins that users may expect the DDS implementation to provide, but they can also provide their own plug-ins.",
                    "DDS requires a few simple steps.",
                    "DDSI specification version 2.3",
                    "Depending on whether you want to develop applications using Cyclone DDS or contribute to it you can",
                    "Description: The key feature of this release is the support for the core of DDS Security 1.1: authentication, access control and encryption.",
                    "Eclipse Cyclone DDS",
                    "Eclipse Cyclone DDS 0.1.0 (Preambule)",
                    "Eclipse Cyclone DDS 0.1.0 (Preambule) Release Review",
                    "Eclipse Cyclone DDS 0.5.0 (Eusebius)",
                    "Eclipse Cyclone DDS 0.5.0 (Eusebius) Release Review",
                    "Eclipse Cyclone DDS 0.6.0 (Florestan)",
                    "Eclipse Cyclone DDS 0.6.0 (Florestan) Release Review",
                    "Eclipse Cyclone DDS 0.7.0 (Coquette)",
                    "Eclipse Cyclone DDS 0.7.0 (Coquette) Release Review",
                    "Eclipse Cyclone DDS Creation Review",
                    "Eclipse Cyclone DDS and the CXX Idl compiler have dependencies of their",
                    "Eclipse Cyclone DDS is a very performant and robust open-source DDS implementation.",
                    "Eclipse Cyclone DDS is an implementation of the OMG Data Distribution Service (DDS) specification (see http://www.omg.org/spec/DDS/ ) and the related specifications for interoperability (see http://www.omg.org/spec/DDSI-RTPS/ )",
                    "Eclipse Cyclone DDS offers unique data-sharing capabilities compared to the already existing Eclipse solutions (i.e.",
                    "Eclipse Cyclone DDS project",
                    "Eclipse Cyclone DDS | projects.eclipse.org",
                    "Forums: Eclipse Cyclone DDSDeveloper Mailing List: cyclonedds-dev - cyclonedds developer discussions",
                    "GitHub - eclipse-cyclonedds/cyclonedds: Eclipse Cyclone DDS project",
                    "Given that Cyclone DDS is a middleware library aimed at developers, the absence of translations is not believed to be an obstacle to adoption, and besides the active people would not be able to do much in the way of internationalisation ...",
                    "Given that Cyclone DDS now supports DDS Security, it is now \"at risk\" of having vulnerabilities.",
                    "If security supported is compiled out, the DDS_HAS_SECURITY macro will be undefined (otherwise it is defined to 1) and any attempt at creating a participant with security settings will be rejected with a \"precondition not met\" failure.",
                    "In order to build Cyclone DDS you need a Linux, Mac or Windows 10 machine (or, with some caveats, a *BSD, OpenIndiana or a Solaris 2.6 one) with the following installed on your host:",
                    "In order to build the C++ binding for Cyclone DDS you need a Linux, Mac or",
                    "In the scope of this project we (ADLINK) will contribute our proven DDS solution as a starting point for a true open-source DDS offering with applicability in a wide range of existing and upcoming IoT applications.",
                    "Initial Contribution: The initial contribution will exist of the Vortex OpenSplice code-base (v6.8): a polyglot DDS implementation covering all DCPS-profiles and related QoS-policies​",
                    "Needless to say, anyone who simply wishes to use DDS will always be able to do so without being required to do such specialisation.",
                    "OMG DDSI-RTPS 2.2",
                    "One can choose at build-time whether to include the interfaces and protocol hooks in the core of Cyclone DDS.",
                    "Parent Project: Eclipse IoTBackground: Acceptance of Eclipse Cyclone DDS as a recognized (data-sharing) standard in the Industrial Internet of Things (IIoT) (see http://www.iiconsortium.org/IIRA.htm and http://www.iiconsortium.org/IICF.htm for a detailed assessment of this) really calls for an opensource-based solution and we feel that Eclipse IoT can provide the thriving ecosystem that will make this project a huge success",
                    "Release Date: Friday, March 1, 2019Deliverables: A basic DDS implementation that is demonstrably usable in real-life projects.",
                    "Scope: This project implements the OMG Data Distribution Service (DDS) specification (see http://www.omg.org/spec/DDS/ ) and the related specifications for interoperability (see http://www.omg.org/spec/DDSI-RTPS/ )",
                    "Security Issues: There is currently no dependency of Cyclone DDS on any other project, and therefore no relationship to any of these resolved vulnerabilities.",
                    "Some rather well-known companies have chosen to use Cyclone DDS over the incumbent middleware implementations in the ROS2 ecosystem (https://iot.eclipse.org/adopters/?#iot.cyclonedds).",
                    "Standards: OMG DDS 1.4 (Minimum Profile with some of the Content Filtered Profile), but with an alternative API.",
                    "Standards: OMG DDS:",
                    "Support for an arbitrary number of concurrent DDS domains (fully independent instantiations of DDS) in a single process — this is a common feature for DDS implementations, but involved quite a bit of surgery for Cyclone DDS because of its heritage.",
                    "Target Environments: Cyclone DDS's own CI on travis ensures compatibility with Windows, Linux and macOS on x64.",
                    "The \"create topic\" and \"find topic\" operations now create a new entity (thus with a unique handle), matching the DDS specification.",
                    "The OMG DDS standard is recognized as a highly applicable standard for reliable and robust data-sharing in business- and mission-critical environments (see http://www.iiconsortium.org/IIRA.htm and http://www.iiconsortium.org/IICF.htm ) and with that a great fit with the Eclipse-IOT ecosystem.",
                    "The addition of DDS Security has unfortunately laid bare some more of these details.",
                    "The jump to 0.5 is because I have received some comments that \"0.1\" (and hence \"0.2\") makes Cyclone DDS look much less mature than it really is.",
                    "The key feature of this release is the support for the core of DDS Security 1.1: authentication, access control and encryption.",
                    "The tireless promotion of Cyclone DDS in the ROS2 community by Mr. Joe Speed (in particular) has dramatically increased visibility and use of Cyclone DDS.",
                    "There are also activities underway to combine Cyclone DDS and Eclipse Iceoryx to get the best of both in a single system, and to combine Cyclone DDS and Eclipse Zenoh to overcome some of the scalability limitations inherent in the DDS specification.",
                    "These changes will turn Cyclone DDS from a dedicated DDS implementation into a more general platform that can then be optimised for specific applications.",
                    "This is an ongoing process, undertaken as a background activity while working towards covering all of the DDS specification famliy.",
                    "This is particularly relevant to language bindings and embedding Cyclone DDS in other frameworks, such as ROS2.",
                    "This is the last day to make comments or ask questions about this review.Wednesday, August 5, 2020Project: Eclipse Cyclone DDSRelease:",
                    "This is the last day to make comments or ask questions about this review.Wednesday, December 20, 2017Project: Eclipse Cyclone DDSProposal:",
                    "This is the last day to make comments or ask questions about this review.Wednesday, December 4, 2019Project: Eclipse Cyclone DDSRelease:",
                    "This is the last day to make comments or ask questions about this review.Wednesday, February 20, 2019Project: Eclipse Cyclone DDSRelease:",
                    "This is the last day to make comments or ask questions about this review.Wednesday, June 3, 2020Project: Eclipse Cyclone DDSRelease:",
                    "This is visible in several ways: more well-known companies putting their logo up on the \"adopters\" board (https://iot.eclipse.org/adopters/?#iot.cyclonedds), more issues and pull requests on Cyclone DDS itself, but more notably on the ROS 2 Middleware abstraction where various people have now joined in maintaining the abstraction layer.",
                    "To obtain Eclipse Cyclone DDS, do",
                    "To obtain the C++ binding for Cyclone DDS, do",
                    "Two key features are not in place yet: an implementation of the DDS Security specification, and support for what the specification calls \"transient data\", that is, data managed by the infrastructure and remaining available to new subscribers even when the original publishers have terminated.",
                    "We would also like to contribute plugins to other eclipse IOT projects to enable users to benefit from DDS",
                    "We're quite proud of this: at the time of the initial release of \"Dashing\" there was no support for Cyclone DDS at all, both other tier-1 middleware options were there from the beginning, and no other newcomers have even made it to tier-2.",
                    "and are typically sufficient for protecting a DDS system.",
                    "applications using the C++ binding for Cyclone DDS requires a few simple",
                    "be tweaked by creating an XML file with the desired settings and defining the CYCLONEDDS_URI to",
                    "both Eclipse Cyclone DDS and Eclipse Cyclone DDS CXX is in the works.",
                    "built automatically when you build Cyclone DDS, so you don't need to follow these steps to be able",
                    "for Cyclone DDS or contribute to it you can follow different procedures.",
                    "for Eclipse Cyclone DDS.",
                    "install Cyclone DDS and <generator-name> by one of the ways",
                    "support for the extensible data-types specification (OMG DDS-Xtypes rev 1.2)",
                    "support for the interoperable DDS security specification (OMG DDS-Security rev 1.0)",
                    "when you build the C++ language binding for Cyclone DDS, so you don't need to",
                    "would like to install the C++ binding for Cyclone DDS and <generator-name>",
                    "​Furthermore we foresee a flow of tools and additional-features and integrations from our commercial offering towards opensource as the need for them grows by the community and its uptake of DDS."
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "zenoh",
                "Sentences": [
                    "A zenoh plug-in that allows to transparently route DDS data.",
                    "Additionally DDS discovery does not allow for generalisation and the DDS reliability protocol requires precise knowledge of all readers/writers.",
                    "As mentioned above, ROS2 has adopted DDS as the mechanism to exchange data between nodes within and potentially across a robot.",
                    "Beside the zenoh router plugin we also support a stand-alone bridge called dzd that can be used to transparently bridge DDS data on zenoh and viceversa.",
                    "First working version of zenoh's DDS bridge",
                    "GitHub - eclipse-zenoh/zenoh-plugin-dds: A zenoh plug-in that allows to transparently route DDS data.",
                    "Given a DDS Reader/Writer for topic A in a given partition P with a set of QoS Q, then the equivalent zenoh resource will be named as P/A/*.",
                    "Hello @gbiggs, today the DDS-Plugin for zenoh can be used to enable and scale (1) DDS WAN discovery and (2) DDS WAN Communication.",
                    "In order to get running with the DDS plugin for zenoh you need first to install the following dependencies:",
                    "Mapping DDS to zenoh",
                    "Protocols used today to build these systems, such as MQTT, DDS, CoAP and HTTP were not designed with these needs in mind.",
                    "Route the data produced by discovered DDS writers to data to matching entities.",
                    "Spoof DDS discovery data and transparently expose DDS writers/readers as zenoh publisher/subscribers",
                    "That said, due to some of the very core assumptions at the foundations of the DDS wire-protocol, beside the fact that it leverage UDP/IP multicast for communication, it is not so straightforward to scale DDS communication over a WAN or across multiple LANs.",
                    "That said, if we consider a Robot as a system in which all internal communication is DDS, then having a DDS-Plugin deployed for each robot would make it possible to use the zenoh routing framework to have scalable and multicast-less discovery.",
                    "That's just Zenoh trying to protect you from the horrors of DDS.",
                    "The DDS plugin for zenoh, could additionally allow to control the set of resources that are exposed to the rest of the world to further reduce the discovery traffic.",
                    "The Data Distribution Service (DDS) is a standard for data-centric publish subscribe.",
                    "The dzd daemon will operate like a transparent router discovering DDS traffic and forwarding it on zenoh w/o you having to",
                    "The mapping between DDS and zenoh is rather straightforward.",
                    "This plugin can be used by DDS applications, such as ROS2 robotic applications and others, to leverage the zenoh for geographical routing or for better scaling discovery.",
                    "Thus the most natural way to implement a DDS connector for zenoh is to do that as a zenoh router plugin.",
                    "Thus the number of ways in which we can compact the discovery traffic is beyond what DDS provides.",
                    "Thus, the main motivations to have a DDS connector for zenoh are:",
                    "Whilst DDS has been around for quite some time and has a long history of deployments in various industries, it has recently gained quite a bit of attentions thanks to its adoption by the Robotic Operating System (ROS2) -- where it is used for communication between ROS2 nodes.",
                    "Zenoh plugin for DDS",
                    "Zenoh's authors have co-invented and built some of the communication infrastructures deployed today as part of telecommunication, aerospace and early Industrial Internet applications (notably DDS).",
                    "🤣 if DDS is a horror, then cyclonedds is Casper the Friendly Ghost👻"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "iceoryx",
                "Sentences": [
                    "Cyclone DDS",
                    "Performant and robust open-source DDS implementation maintained by ADLINK Technology Inc.",
                    "Related Projects:Eclipse IoTEclipse Cyclone DDS"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "risev2g",
                "Sentences": [
                    "- Newcomers Newcomers- Language IDEs AJDT Andmore C / C++ IDE (CDT) Che Java Development Tools (JDT) Objectteams Orion PHP Development Tools (PDT) Eclipse Web Tools Platform Project (WTP) ServerTools (WTP)- Modeling AMP Amalgam ATL BPEL Designer Compare Ecore Tools EMF EMF \"Technology\" (Ecore Tools, EMFatic, etc) Epsilon eTrice Extended Editing Framework (READ ONLY) Eclipse Generation Factories (EGF) GMF (Graphical Modeling Framework) Graphiti M2T (model-to-text transformation) MDT (Model Development Tools) Modeling (top-level project) OCL Papyrus TMF (Xtext) UML2 UML2 Tools XSD MoDisco Presentation Modeling Framework (PMF) Sphinx VIATRA Model-to-Model Transformation QVT-OML QVT-Relations EMF Diff/Merge EMF Parsley Eclipse Layout Kernel- Eclipse Projects 4DIAC - Framework for Distributed Industrial Automation and Control ACTF Advanced Scripting Environment (EASE) Agile UML APP4MC AsciiDoc Language Babel BIRT BPMN 2.0 Modeler Buckminster dev Buildship Californium (Cf) CoAP Framework Capra ChemClipse Cloud Application Management Framework Commercial Common Build Infrastructure Concierge Dali Dash Dirigible DSDP - Mobile Tools for Java (MTJ) DSDP - Real-Time Software Components (RTSC) DSDP - Target Management DTP Dynamic Languages Toolkit (DLTK) e(fx)clipse EATOP Eclipse 4 Eclipse Adore Eclipse Advanced Visualization Eclipse Agail Eclipse Apogy Eclipse Arrowhead Eclipse Avsys Eclipse Basyx Eclipse Bridge.IoT Eclipse Bundle Recipes Eclipse Cargotracker Eclipse Ceylon Eclipse Che4z Eclipse Cloe Eclipse Codewind Eclipse CogniCrypt Eclipse Collections Eclipse Communications Framework (ECF) Eclipse Corrosion Eclipse Crossmeter Eclipse Cyclone DDS Eclipse Dartboard Eclipse Deeplearning4j Eclipse Ditto Eclipse Duttile Eclipse EclEmma Eclipse EdiTDor Eclipse Embedded CDT Eclipse EMF Cloud Eclipse Enterprise for Java Eclipse ESCET Eclipse fog05 Eclipse Formal Modeling Eclipse Free BIRD Tools Eclipse GLSP Eclipse Grizzly Eclipse Hara Eclipse Hawk Eclipse iceoryx Eclipse Implementation of JAXB Eclipse ioFog Eclipse IoT Packages Eclipse Jakarta EE Platform Eclipse Jakarta EE TCK Eclipse January Eclipse JDT LS Eclipse Jemo Eclipse Jersey Eclipse Jifa Eclipse JKube Eclipse JNoSQL Eclipse JustJ Eclipse Kapua Eclipse Keyple Eclipse Kiso Eclipse Krazo Eclipse Kuksa Eclipse LemMinX Eclipse LSP4J Eclipse LSP4MP Eclipse Metro Eclipse Microprofile Eclipse Milo Eclipse Mojarra Eclipse MOSAIC Eclipse MRAA Eclipse N4JS Eclipse OneOFour Eclipse Open Standard Business Platform Eclipse Open VSX Eclipse OpenJ9 Eclipse OpenK Core Modules Eclipse openK User Modules Eclipse OpenMQ Eclipse OpenVSX Eclipse ORB Eclipse Packager Eclipse Packages Eclipse Passage Eclipse Phizog Eclipse Platform Eclipse Project for Common Annotations Eclipse Project for Concurrency Utilities Eclipse Project for EJB Eclipse Project for Enterprise Security Eclipse Project for Expression Language Eclipse Project for Interceptors Eclipse Project for JACC Eclipse Project for JAF Eclipse Project for JASPIC Eclipse Project for JavaMail Eclipse Project for JAX-RS Eclipse Project for JAX-WS Eclipse Project for JAXB Eclipse Project for JCA Eclipse Project for JMS Eclipse Project for JPA Eclipse Project for JSON Processing Eclipse Project for JSON-B Eclipse Project for JSP Eclipse Project for JSTL Eclipse Project for JTA Eclipse Project for Servlet Eclipse Project for Stable Jakarta EE APIs Eclipse Project for WebSocket Eclipse RedDeer Eclipse Repairnator Eclipse Rich Beans Eclipse RT (runtime) Eclipse SCADA Eclipse Scanning Eclipse SeCo Blocks Eclipse sensiNact Eclipse Shellwax Eclipse Signalling Engineering Toolbox Eclipse sim@openPASS Eclipse Skills Eclipse SmartMDSD Eclipse Sprotty Eclipse Steady Eclipse Streamsheets Eclipse SW360 Eclipse SW360antenna Eclipse SWTChart Eclipse SystemFOCUS Eclipse Tahu Eclipse TEA Eclipse TeXlipse Eclipse Theia Eclipse ThingWeb Eclipse Titan Eclipse TM4E Eclipse Transformer Eclipse Tyrus Eclipse UML Generators Eclipse UML Profiles Repository Eclipse UPM Eclipse USS SDK Eclipse VOLTTRON Eclipse WaSP Eclipse Website Eclipse Wild Web Developer Eclipse XACC Eclipse Xpect Eclipse Xsemantics Eclipse Yasson Eclipse zenoh EclipseLink eGerrit EGit / JGit eLogbook@openk EPF EPP Equinox eRCP Examples for Jakarta EE Franca Fundamental Modeling Concepts GEF GEF3D Gemini GEMOC Studio Gendoc GlassFish GlassFish Tools Golo Handly hawkBit Hono Hudson Ignite Ignite|IoT IoT-Testware Jakarta Activation Jakarta Annotations Jakarta Authentication Jakarta Authorization Jakarta Batch Jakarta Bean Validation Jakarta Concurrency Jakarta Connectors Jakarta Contexts and Dependency Injection Jakarta EE Examples Jakarta EE Platform Jakarta EE TCK Jakarta Enterprise Beans Jakarta Expression Language Jakarta Interceptors Jakarta JSON Binding Jakarta JSON Processing Jakarta Mail Jakarta Messaging Jakarta MVC Jakarta NoSQL Jakarta Pages Jakarta Persistence Jakarta RESTful Web Services Jakarta Security Jakarta Server Faces Jakarta Server Pages Jakarta Servlet Jakarta Stable APIs Jakarta Standard Tag Library Jakarta Transactions Jakarta WebSocket Jakarta XML Binding Jakarta XML Web Services Java Workflow Tooling Java WorkFlow Tooling (JWT) JavaServer Faces JDT LS JFace Jubula Keti Kura Libra Linux Tools Linux Tools Project Lua Development Tools Lyo Mangrove Marketplace Client Project Maven Integration for Web Tools Platform Mbeddr MDM|BL Memory Analyzer Microprofile Mita Model Driven Health Tools Model Focusing Tools Mosquitto Mylyn Mylyn Builds Mylyn Context Mylyn Intent Mylyn Versions NatTable Nebula Ogee OM2M OMR Oomph OpenHW Group CORE-V cores openK platform Orbit OSEE P2 Package Drone Paho Paho Incubator Papyrus for Real Time Platform - User Assistance (UA) Plugin Development Environment (PDE) Ponte project_hip [archived] RasterFrames RCP Testing Tool RDF4J Remote Application Platform (RAP) Requirements Modeling Framework Rich Client Platform (RCP) Riena Runtime Packaging Runtimes Sapphire Scanning scout SeMantic Information Logistics Architecture (SMILA) Service Oriented Architecture Simultaneous release Sirius Sisu Skalli Soteria Sparkplug Specification Project Spatiotemporal Epidemiological Modeler (STEM) Standard Widget Toolkit (SWT) Starter for Jakarta EE Subversive SWTBot Tangle Identity Tangle Marketplaces Target Communication Framework Target Management Technology Project and PMC The Eclipse Integrated Computational Environment Thym Tigerstripe tinydtls Tools for Cloud Foundry Trace Compass Triquetrum Turkish Users Unide UOMo Vert.x Vex Virgo Vorto Wakaama Webtools incubator WindowBuilder XML Schema Definition (XSD) XWT- Polarsys Capella General Arcadia Capella workbench Capella Studio M2Doc Requirements Addon Kitalpha 3p CHESS- General (non-technical) Eclipse Foundation Project Proposals Jobs and employment Polish users Test- Eclipse Working Groups Automotive IWG Science WG- Proposals OSGi Enterprise Tools Eclipse Advanced Scripting Environment (EASE) DAWNSci Eclipse Sumo- Archived Potomac B3 Tiaki MOFScript secRT Chinese users AMW Buckminster ATF Board committer reps Blinki COBOL Pulsar Albireo Code Recommenders Incubator Code Recommenders Apricot Service Oriented Architecture GMT (Generative Modeling Technologies) IDE4EDU Damos AM3 openArchitectureWare BPMN Modeler EMF Store EMF Client Apogee C-Sharp Corona Hibachi Glimmer Maynstall DSDP - Device Debugging DSDP - Native Application Builder (NAB) eBPM ORMF eBAM DSDP - Tools for Mobile Linux (TML) Eclipse aCute Spaces ScalaModules Visual Editor (VE) Textual Concrete Syntax (TCS) P2 dev Cloud Deployment Toolkit Memory Analyzer (MAT) DSDP COSMOS Esl OFMP Faceted Project Framework UMLX IAM (Eclipse Integration for Apache Maven) M2M (model-to-model transformation) OHF Tycho Sketch IMP g-Eclipse Eclipse HIP Eclipse Examples EMF-IncQuery Eclipse Process Manager (Stardust) Eclipse IOTA Trinity Swordfish Maven Integration (M2E) Koneki Mihini Test and Performance Tools Platform (TPTP) Voicetools Sequoyah Xtend Eclipse LSP4E Eclipse Monkey Project Runtime Analysis Tools Service Oriented Architecture GEMS WTP - PAVE Service Oriented Architecture Tools Platform (STP) MST OMCW Silverlight Development Toolkit (SLDT) Woolsey Winery Higgins EGL Development Tools Service Component Architecture (SCA) Tools Wazaabi Eclipse Picasso MDM WEB Krikkit Gyrex Eclipse Papyrus for xtUML StatET Edje RISE V2G Eclipse Whiskers Flux Eclipse SmartHome Remus Information Management"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "titan",
                "Sentences": [
                    "- Newcomers Newcomers- Language IDEs AJDT Andmore C / C++ IDE (CDT) Che Java Development Tools (JDT) Objectteams Orion PHP Development Tools (PDT) Eclipse Web Tools Platform Project (WTP) ServerTools (WTP)- Modeling AMP Amalgam ATL BPEL Designer Compare Ecore Tools EMF EMF \"Technology\" (Ecore Tools, EMFatic, etc) Epsilon eTrice Extended Editing Framework (READ ONLY) Eclipse Generation Factories (EGF) GMF (Graphical Modeling Framework) Graphiti M2T (model-to-text transformation) MDT (Model Development Tools) Modeling (top-level project) OCL Papyrus TMF (Xtext) UML2 UML2 Tools XSD MoDisco Presentation Modeling Framework (PMF) Sphinx VIATRA Model-to-Model Transformation QVT-OML QVT-Relations EMF Diff/Merge EMF Parsley Eclipse Layout Kernel- Eclipse Projects 4DIAC - Framework for Distributed Industrial Automation and Control ACTF Advanced Scripting Environment (EASE) Agile UML APP4MC AsciiDoc Language Babel BIRT BPMN 2.0 Modeler Buckminster dev Buildship Californium (Cf) CoAP Framework Capra ChemClipse Cloud Application Management Framework Commercial Common Build Infrastructure Concierge Dali Dash Dirigible DSDP - Mobile Tools for Java (MTJ) DSDP - Real-Time Software Components (RTSC) DSDP - Target Management DTP Dynamic Languages Toolkit (DLTK) e(fx)clipse EATOP Eclipse 4 Eclipse Adore Eclipse Advanced Visualization Eclipse Agail Eclipse Apogy Eclipse Arrowhead Eclipse Avsys Eclipse Basyx Eclipse Bridge.IoT Eclipse Bundle Recipes Eclipse Cargotracker Eclipse Ceylon Eclipse Che4z Eclipse Cloe Eclipse Codewind Eclipse CogniCrypt Eclipse Collections Eclipse Communications Framework (ECF) Eclipse Corrosion Eclipse Crossmeter Eclipse Cyclone DDS Eclipse Dartboard Eclipse Deeplearning4j Eclipse Ditto Eclipse Duttile Eclipse EclEmma Eclipse EdiTDor Eclipse Embedded CDT Eclipse EMF Cloud Eclipse Enterprise for Java Eclipse ESCET Eclipse fog05 Eclipse Formal Modeling Eclipse Free BIRD Tools Eclipse GLSP Eclipse Grizzly Eclipse Hara Eclipse Hawk Eclipse iceoryx Eclipse Implementation of JAXB Eclipse ioFog Eclipse IoT Packages Eclipse Jakarta EE Platform Eclipse Jakarta EE TCK Eclipse January Eclipse JDT LS Eclipse Jemo Eclipse Jersey Eclipse Jifa Eclipse JKube Eclipse JNoSQL Eclipse JustJ Eclipse Kapua Eclipse Keyple Eclipse Kiso Eclipse Krazo Eclipse Kuksa Eclipse LemMinX Eclipse LSP4J Eclipse LSP4MP Eclipse Metro Eclipse Microprofile Eclipse Milo Eclipse Mojarra Eclipse MOSAIC Eclipse MRAA Eclipse N4JS Eclipse OneOFour Eclipse Open Standard Business Platform Eclipse Open VSX Eclipse OpenJ9 Eclipse OpenK Core Modules Eclipse openK User Modules Eclipse OpenMQ Eclipse OpenVSX Eclipse ORB Eclipse Packager Eclipse Packages Eclipse Passage Eclipse Phizog Eclipse Platform Eclipse Project for Common Annotations Eclipse Project for Concurrency Utilities Eclipse Project for EJB Eclipse Project for Enterprise Security Eclipse Project for Expression Language Eclipse Project for Interceptors Eclipse Project for JACC Eclipse Project for JAF Eclipse Project for JASPIC Eclipse Project for JavaMail Eclipse Project for JAX-RS Eclipse Project for JAX-WS Eclipse Project for JAXB Eclipse Project for JCA Eclipse Project for JMS Eclipse Project for JPA Eclipse Project for JSON Processing Eclipse Project for JSON-B Eclipse Project for JSP Eclipse Project for JSTL Eclipse Project for JTA Eclipse Project for Servlet Eclipse Project for Stable Jakarta EE APIs Eclipse Project for WebSocket Eclipse RedDeer Eclipse Repairnator Eclipse Rich Beans Eclipse RT (runtime) Eclipse SCADA Eclipse Scanning Eclipse SeCo Blocks Eclipse sensiNact Eclipse Shellwax Eclipse Signalling Engineering Toolbox Eclipse sim@openPASS Eclipse Skills Eclipse SmartMDSD Eclipse Sprotty Eclipse Steady Eclipse Streamsheets Eclipse SW360 Eclipse SW360antenna Eclipse SWTChart Eclipse SystemFOCUS Eclipse Tahu Eclipse TEA Eclipse TeXlipse Eclipse Theia Eclipse ThingWeb Eclipse Titan Eclipse TM4E Eclipse Transformer Eclipse Tyrus Eclipse UML Generators Eclipse UML Profiles Repository Eclipse UPM Eclipse USS SDK Eclipse VOLTTRON Eclipse WaSP Eclipse Website Eclipse Wild Web Developer Eclipse XACC Eclipse Xpect Eclipse Xsemantics Eclipse Yasson Eclipse zenoh EclipseLink eGerrit EGit / JGit eLogbook@openk EPF EPP Equinox eRCP Examples for Jakarta EE Franca Fundamental Modeling Concepts GEF GEF3D Gemini GEMOC Studio Gendoc GlassFish GlassFish Tools Golo Handly hawkBit Hono Hudson Ignite Ignite|IoT IoT-Testware Jakarta Activation Jakarta Annotations Jakarta Authentication Jakarta Authorization Jakarta Batch Jakarta Bean Validation Jakarta Concurrency Jakarta Connectors Jakarta Contexts and Dependency Injection Jakarta EE Examples Jakarta EE Platform Jakarta EE TCK Jakarta Enterprise Beans Jakarta Expression Language Jakarta Interceptors Jakarta JSON Binding Jakarta JSON Processing Jakarta Mail Jakarta Messaging Jakarta MVC Jakarta NoSQL Jakarta Pages Jakarta Persistence Jakarta RESTful Web Services Jakarta Security Jakarta Server Faces Jakarta Server Pages Jakarta Servlet Jakarta Stable APIs Jakarta Standard Tag Library Jakarta Transactions Jakarta WebSocket Jakarta XML Binding Jakarta XML Web Services Java Workflow Tooling Java WorkFlow Tooling (JWT) JavaServer Faces JDT LS JFace Jubula Keti Kura Libra Linux Tools Linux Tools Project Lua Development Tools Lyo Mangrove Marketplace Client Project Maven Integration for Web Tools Platform Mbeddr MDM|BL Memory Analyzer Microprofile Mita Model Driven Health Tools Model Focusing Tools Mosquitto Mylyn Mylyn Builds Mylyn Context Mylyn Intent Mylyn Versions NatTable Nebula Ogee OM2M OMR Oomph OpenHW Group CORE-V cores openK platform Orbit OSEE P2 Package Drone Paho Paho Incubator Papyrus for Real Time Platform - User Assistance (UA) Plugin Development Environment (PDE) Ponte project_hip [archived] RasterFrames RCP Testing Tool RDF4J Remote Application Platform (RAP) Requirements Modeling Framework Rich Client Platform (RCP) Riena Runtime Packaging Runtimes Sapphire Scanning scout SeMantic Information Logistics Architecture (SMILA) Service Oriented Architecture Simultaneous release Sirius Sisu Skalli Soteria Sparkplug Specification Project Spatiotemporal Epidemiological Modeler (STEM) Standard Widget Toolkit (SWT) Starter for Jakarta EE Subversive SWTBot Tangle Identity Tangle Marketplaces Target Communication Framework Target Management Technology Project and PMC The Eclipse Integrated Computational Environment Thym Tigerstripe tinydtls Tools for Cloud Foundry Trace Compass Triquetrum Turkish Users Unide UOMo Vert.x Vex Virgo Vorto Wakaama Webtools incubator WindowBuilder XML Schema Definition (XSD) XWT- Polarsys Capella General Arcadia Capella workbench Capella Studio M2Doc Requirements Addon Kitalpha 3p CHESS- General (non-technical) Eclipse Foundation Project Proposals Jobs and employment Polish users Test- Eclipse Working Groups Automotive IWG Science WG- Proposals OSGi Enterprise Tools Eclipse Advanced Scripting Environment (EASE) DAWNSci Eclipse Sumo- Archived Potomac B3 Tiaki MOFScript secRT Chinese users AMW Buckminster ATF Board committer reps Blinki COBOL Pulsar Albireo Code Recommenders Incubator Code Recommenders Apricot Service Oriented Architecture GMT (Generative Modeling Technologies) IDE4EDU Damos AM3 openArchitectureWare BPMN Modeler EMF Store EMF Client Apogee C-Sharp Corona Hibachi Glimmer Maynstall DSDP - Device Debugging DSDP - Native Application Builder (NAB) eBPM ORMF eBAM DSDP - Tools for Mobile Linux (TML) Eclipse aCute Spaces ScalaModules Visual Editor (VE) Textual Concrete Syntax (TCS) P2 dev Cloud Deployment Toolkit Memory Analyzer (MAT) DSDP COSMOS Esl OFMP Faceted Project Framework UMLX IAM (Eclipse Integration for Apache Maven) M2M (model-to-model transformation) OHF Tycho Sketch IMP g-Eclipse Eclipse HIP Eclipse Examples EMF-IncQuery Eclipse Process Manager (Stardust) Eclipse IOTA Trinity Swordfish Maven Integration (M2E) Koneki Mihini Test and Performance Tools Platform (TPTP) Voicetools Sequoyah Xtend Eclipse LSP4E Eclipse Monkey Project Runtime Analysis Tools Service Oriented Architecture GEMS WTP - PAVE Service Oriented Architecture Tools Platform (STP) MST OMCW Silverlight Development Toolkit (SLDT) Woolsey Winery Higgins EGL Development Tools Service Component Architecture (SCA) Tools Wazaabi Eclipse Picasso MDM WEB Krikkit Gyrex Eclipse Papyrus for xtUML StatET Edje RISE V2G Eclipse Whiskers Flux Eclipse SmartHome Remus Information Management"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "mtj",
                "Sentences": [
                    "- Newcomers Newcomers- Language IDEs AJDT Andmore C / C++ IDE (CDT) Che Java Development Tools (JDT) Objectteams Orion PHP Development Tools (PDT) Eclipse Web Tools Platform Project (WTP) ServerTools (WTP)- Modeling AMP Amalgam ATL BPEL Designer Compare Ecore Tools EMF EMF \"Technology\" (Ecore Tools, EMFatic, etc) Epsilon eTrice Extended Editing Framework (READ ONLY) Eclipse Generation Factories (EGF) GMF (Graphical Modeling Framework) Graphiti M2T (model-to-text transformation) MDT (Model Development Tools) Modeling (top-level project) OCL Papyrus TMF (Xtext) UML2 UML2 Tools XSD MoDisco Presentation Modeling Framework (PMF) Sphinx VIATRA Model-to-Model Transformation QVT-OML QVT-Relations EMF Diff/Merge EMF Parsley Eclipse Layout Kernel- Eclipse Projects 4DIAC - Framework for Distributed Industrial Automation and Control ACTF Advanced Scripting Environment (EASE) Agile UML APP4MC AsciiDoc Language Babel BIRT BPMN 2.0 Modeler Buckminster dev Buildship Californium (Cf) CoAP Framework Capra ChemClipse Cloud Application Management Framework Commercial Common Build Infrastructure Concierge Dali Dash Dirigible DSDP - Mobile Tools for Java (MTJ) DSDP - Real-Time Software Components (RTSC) DSDP - Target Management DTP Dynamic Languages Toolkit (DLTK) e(fx)clipse EATOP Eclipse 4 Eclipse Adore Eclipse Advanced Visualization Eclipse Agail Eclipse Apogy Eclipse Arrowhead Eclipse Avsys Eclipse Basyx Eclipse Bridge.IoT Eclipse Bundle Recipes Eclipse Cargotracker Eclipse Ceylon Eclipse Che4z Eclipse Cloe Eclipse Codewind Eclipse CogniCrypt Eclipse Collections Eclipse Communications Framework (ECF) Eclipse Corrosion Eclipse Crossmeter Eclipse Cyclone DDS Eclipse Dartboard Eclipse Deeplearning4j Eclipse Ditto Eclipse Duttile Eclipse EclEmma Eclipse EdiTDor Eclipse Embedded CDT Eclipse EMF Cloud Eclipse Enterprise for Java Eclipse ESCET Eclipse fog05 Eclipse Formal Modeling Eclipse Free BIRD Tools Eclipse GLSP Eclipse Grizzly Eclipse Hara Eclipse Hawk Eclipse iceoryx Eclipse Implementation of JAXB Eclipse ioFog Eclipse IoT Packages Eclipse Jakarta EE Platform Eclipse Jakarta EE TCK Eclipse January Eclipse JDT LS Eclipse Jemo Eclipse Jersey Eclipse Jifa Eclipse JKube Eclipse JNoSQL Eclipse JustJ Eclipse Kapua Eclipse Keyple Eclipse Kiso Eclipse Krazo Eclipse Kuksa Eclipse LemMinX Eclipse LSP4J Eclipse LSP4MP Eclipse Metro Eclipse Microprofile Eclipse Milo Eclipse Mojarra Eclipse MOSAIC Eclipse MRAA Eclipse N4JS Eclipse OneOFour Eclipse Open Standard Business Platform Eclipse Open VSX Eclipse OpenJ9 Eclipse OpenK Core Modules Eclipse openK User Modules Eclipse OpenMQ Eclipse OpenVSX Eclipse ORB Eclipse Packager Eclipse Packages Eclipse Passage Eclipse Phizog Eclipse Platform Eclipse Project for Common Annotations Eclipse Project for Concurrency Utilities Eclipse Project for EJB Eclipse Project for Enterprise Security Eclipse Project for Expression Language Eclipse Project for Interceptors Eclipse Project for JACC Eclipse Project for JAF Eclipse Project for JASPIC Eclipse Project for JavaMail Eclipse Project for JAX-RS Eclipse Project for JAX-WS Eclipse Project for JAXB Eclipse Project for JCA Eclipse Project for JMS Eclipse Project for JPA Eclipse Project for JSON Processing Eclipse Project for JSON-B Eclipse Project for JSP Eclipse Project for JSTL Eclipse Project for JTA Eclipse Project for Servlet Eclipse Project for Stable Jakarta EE APIs Eclipse Project for WebSocket Eclipse RedDeer Eclipse Repairnator Eclipse Rich Beans Eclipse RT (runtime) Eclipse SCADA Eclipse Scanning Eclipse SeCo Blocks Eclipse sensiNact Eclipse Shellwax Eclipse Signalling Engineering Toolbox Eclipse sim@openPASS Eclipse Skills Eclipse SmartMDSD Eclipse Sprotty Eclipse Steady Eclipse Streamsheets Eclipse SW360 Eclipse SW360antenna Eclipse SWTChart Eclipse SystemFOCUS Eclipse Tahu Eclipse TEA Eclipse TeXlipse Eclipse Theia Eclipse ThingWeb Eclipse Titan Eclipse TM4E Eclipse Transformer Eclipse Tyrus Eclipse UML Generators Eclipse UML Profiles Repository Eclipse UPM Eclipse USS SDK Eclipse VOLTTRON Eclipse WaSP Eclipse Website Eclipse Wild Web Developer Eclipse XACC Eclipse Xpect Eclipse Xsemantics Eclipse Yasson Eclipse zenoh EclipseLink eGerrit EGit / JGit eLogbook@openk EPF EPP Equinox eRCP Examples for Jakarta EE Franca Fundamental Modeling Concepts GEF GEF3D Gemini GEMOC Studio Gendoc GlassFish GlassFish Tools Golo Handly hawkBit Hono Hudson Ignite Ignite|IoT IoT-Testware Jakarta Activation Jakarta Annotations Jakarta Authentication Jakarta Authorization Jakarta Batch Jakarta Bean Validation Jakarta Concurrency Jakarta Connectors Jakarta Contexts and Dependency Injection Jakarta EE Examples Jakarta EE Platform Jakarta EE TCK Jakarta Enterprise Beans Jakarta Expression Language Jakarta Interceptors Jakarta JSON Binding Jakarta JSON Processing Jakarta Mail Jakarta Messaging Jakarta MVC Jakarta NoSQL Jakarta Pages Jakarta Persistence Jakarta RESTful Web Services Jakarta Security Jakarta Server Faces Jakarta Server Pages Jakarta Servlet Jakarta Stable APIs Jakarta Standard Tag Library Jakarta Transactions Jakarta WebSocket Jakarta XML Binding Jakarta XML Web Services Java Workflow Tooling Java WorkFlow Tooling (JWT) JavaServer Faces JDT LS JFace Jubula Keti Kura Libra Linux Tools Linux Tools Project Lua Development Tools Lyo Mangrove Marketplace Client Project Maven Integration for Web Tools Platform Mbeddr MDM|BL Memory Analyzer Microprofile Mita Model Driven Health Tools Model Focusing Tools Mosquitto Mylyn Mylyn Builds Mylyn Context Mylyn Intent Mylyn Versions NatTable Nebula Ogee OM2M OMR Oomph OpenHW Group CORE-V cores openK platform Orbit OSEE P2 Package Drone Paho Paho Incubator Papyrus for Real Time Platform - User Assistance (UA) Plugin Development Environment (PDE) Ponte project_hip [archived] RasterFrames RCP Testing Tool RDF4J Remote Application Platform (RAP) Requirements Modeling Framework Rich Client Platform (RCP) Riena Runtime Packaging Runtimes Sapphire Scanning scout SeMantic Information Logistics Architecture (SMILA) Service Oriented Architecture Simultaneous release Sirius Sisu Skalli Soteria Sparkplug Specification Project Spatiotemporal Epidemiological Modeler (STEM) Standard Widget Toolkit (SWT) Starter for Jakarta EE Subversive SWTBot Tangle Identity Tangle Marketplaces Target Communication Framework Target Management Technology Project and PMC The Eclipse Integrated Computational Environment Thym Tigerstripe tinydtls Tools for Cloud Foundry Trace Compass Triquetrum Turkish Users Unide UOMo Vert.x Vex Virgo Vorto Wakaama Webtools incubator WindowBuilder XML Schema Definition (XSD) XWT- Polarsys Capella General Arcadia Capella workbench Capella Studio M2Doc Requirements Addon Kitalpha 3p CHESS- General (non-technical) Eclipse Foundation Project Proposals Jobs and employment Polish users Test- Eclipse Working Groups Automotive IWG Science WG- Proposals OSGi Enterprise Tools Eclipse Advanced Scripting Environment (EASE) DAWNSci Eclipse Sumo- Archived Potomac B3 Tiaki MOFScript secRT Chinese users AMW Buckminster ATF Board committer reps Blinki COBOL Pulsar Albireo Code Recommenders Incubator Code Recommenders Apricot Service Oriented Architecture GMT (Generative Modeling Technologies) IDE4EDU Damos AM3 openArchitectureWare BPMN Modeler EMF Store EMF Client Apogee C-Sharp Corona Hibachi Glimmer Maynstall DSDP - Device Debugging DSDP - Native Application Builder (NAB) eBPM ORMF eBAM DSDP - Tools for Mobile Linux (TML) Eclipse aCute Spaces ScalaModules Visual Editor (VE) Textual Concrete Syntax (TCS) P2 dev Cloud Deployment Toolkit Memory Analyzer (MAT) DSDP COSMOS Esl OFMP Faceted Project Framework UMLX IAM (Eclipse Integration for Apache Maven) M2M (model-to-model transformation) OHF Tycho Sketch IMP g-Eclipse Eclipse HIP Eclipse Examples EMF-IncQuery Eclipse Process Manager (Stardust) Eclipse IOTA Trinity Swordfish Maven Integration (M2E) Koneki Mihini Test and Performance Tools Platform (TPTP) Voicetools Sequoyah Xtend Eclipse LSP4E Eclipse Monkey Project Runtime Analysis Tools Service Oriented Architecture GEMS WTP - PAVE Service Oriented Architecture Tools Platform (STP) MST OMCW Silverlight Development Toolkit (SLDT) Woolsey Winery Higgins EGL Development Tools Service Component Architecture (SCA) Tools Wazaabi Eclipse Picasso MDM WEB Krikkit Gyrex Eclipse Papyrus for xtUML StatET Edje RISE V2G Eclipse Whiskers Flux Eclipse SmartHome Remus Information Management"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "uomo",
                "Sentences": [
                    "- Newcomers Newcomers- Language IDEs AJDT Andmore C / C++ IDE (CDT) Che Java Development Tools (JDT) Objectteams Orion PHP Development Tools (PDT) Eclipse Web Tools Platform Project (WTP) ServerTools (WTP)- Modeling AMP Amalgam ATL BPEL Designer Compare Ecore Tools EMF EMF \"Technology\" (Ecore Tools, EMFatic, etc) Epsilon eTrice Extended Editing Framework (READ ONLY) Eclipse Generation Factories (EGF) GMF (Graphical Modeling Framework) Graphiti M2T (model-to-text transformation) MDT (Model Development Tools) Modeling (top-level project) OCL Papyrus TMF (Xtext) UML2 UML2 Tools XSD MoDisco Presentation Modeling Framework (PMF) Sphinx VIATRA Model-to-Model Transformation QVT-OML QVT-Relations EMF Diff/Merge EMF Parsley Eclipse Layout Kernel- Eclipse Projects 4DIAC - Framework for Distributed Industrial Automation and Control ACTF Advanced Scripting Environment (EASE) Agile UML APP4MC AsciiDoc Language Babel BIRT BPMN 2.0 Modeler Buckminster dev Buildship Californium (Cf) CoAP Framework Capra ChemClipse Cloud Application Management Framework Commercial Common Build Infrastructure Concierge Dali Dash Dirigible DSDP - Mobile Tools for Java (MTJ) DSDP - Real-Time Software Components (RTSC) DSDP - Target Management DTP Dynamic Languages Toolkit (DLTK) e(fx)clipse EATOP Eclipse 4 Eclipse Adore Eclipse Advanced Visualization Eclipse Agail Eclipse Apogy Eclipse Arrowhead Eclipse Avsys Eclipse Basyx Eclipse Bridge.IoT Eclipse Bundle Recipes Eclipse Cargotracker Eclipse Ceylon Eclipse Che4z Eclipse Cloe Eclipse Codewind Eclipse CogniCrypt Eclipse Collections Eclipse Communications Framework (ECF) Eclipse Corrosion Eclipse Crossmeter Eclipse Cyclone DDS Eclipse Dartboard Eclipse Deeplearning4j Eclipse Ditto Eclipse Duttile Eclipse EclEmma Eclipse EdiTDor Eclipse Embedded CDT Eclipse EMF Cloud Eclipse Enterprise for Java Eclipse ESCET Eclipse fog05 Eclipse Formal Modeling Eclipse Free BIRD Tools Eclipse GLSP Eclipse Grizzly Eclipse Hara Eclipse Hawk Eclipse iceoryx Eclipse Implementation of JAXB Eclipse ioFog Eclipse IoT Packages Eclipse Jakarta EE Platform Eclipse Jakarta EE TCK Eclipse January Eclipse JDT LS Eclipse Jemo Eclipse Jersey Eclipse Jifa Eclipse JKube Eclipse JNoSQL Eclipse JustJ Eclipse Kapua Eclipse Keyple Eclipse Kiso Eclipse Krazo Eclipse Kuksa Eclipse LemMinX Eclipse LSP4J Eclipse LSP4MP Eclipse Metro Eclipse Microprofile Eclipse Milo Eclipse Mojarra Eclipse MOSAIC Eclipse MRAA Eclipse N4JS Eclipse OneOFour Eclipse Open Standard Business Platform Eclipse Open VSX Eclipse OpenJ9 Eclipse OpenK Core Modules Eclipse openK User Modules Eclipse OpenMQ Eclipse OpenVSX Eclipse ORB Eclipse Packager Eclipse Packages Eclipse Passage Eclipse Phizog Eclipse Platform Eclipse Project for Common Annotations Eclipse Project for Concurrency Utilities Eclipse Project for EJB Eclipse Project for Enterprise Security Eclipse Project for Expression Language Eclipse Project for Interceptors Eclipse Project for JACC Eclipse Project for JAF Eclipse Project for JASPIC Eclipse Project for JavaMail Eclipse Project for JAX-RS Eclipse Project for JAX-WS Eclipse Project for JAXB Eclipse Project for JCA Eclipse Project for JMS Eclipse Project for JPA Eclipse Project for JSON Processing Eclipse Project for JSON-B Eclipse Project for JSP Eclipse Project for JSTL Eclipse Project for JTA Eclipse Project for Servlet Eclipse Project for Stable Jakarta EE APIs Eclipse Project for WebSocket Eclipse RedDeer Eclipse Repairnator Eclipse Rich Beans Eclipse RT (runtime) Eclipse SCADA Eclipse Scanning Eclipse SeCo Blocks Eclipse sensiNact Eclipse Shellwax Eclipse Signalling Engineering Toolbox Eclipse sim@openPASS Eclipse Skills Eclipse SmartMDSD Eclipse Sprotty Eclipse Steady Eclipse Streamsheets Eclipse SW360 Eclipse SW360antenna Eclipse SWTChart Eclipse SystemFOCUS Eclipse Tahu Eclipse TEA Eclipse TeXlipse Eclipse Theia Eclipse ThingWeb Eclipse Titan Eclipse TM4E Eclipse Transformer Eclipse Tyrus Eclipse UML Generators Eclipse UML Profiles Repository Eclipse UPM Eclipse USS SDK Eclipse VOLTTRON Eclipse WaSP Eclipse Website Eclipse Wild Web Developer Eclipse XACC Eclipse Xpect Eclipse Xsemantics Eclipse Yasson Eclipse zenoh EclipseLink eGerrit EGit / JGit eLogbook@openk EPF EPP Equinox eRCP Examples for Jakarta EE Franca Fundamental Modeling Concepts GEF GEF3D Gemini GEMOC Studio Gendoc GlassFish GlassFish Tools Golo Handly hawkBit Hono Hudson Ignite Ignite|IoT IoT-Testware Jakarta Activation Jakarta Annotations Jakarta Authentication Jakarta Authorization Jakarta Batch Jakarta Bean Validation Jakarta Concurrency Jakarta Connectors Jakarta Contexts and Dependency Injection Jakarta EE Examples Jakarta EE Platform Jakarta EE TCK Jakarta Enterprise Beans Jakarta Expression Language Jakarta Interceptors Jakarta JSON Binding Jakarta JSON Processing Jakarta Mail Jakarta Messaging Jakarta MVC Jakarta NoSQL Jakarta Pages Jakarta Persistence Jakarta RESTful Web Services Jakarta Security Jakarta Server Faces Jakarta Server Pages Jakarta Servlet Jakarta Stable APIs Jakarta Standard Tag Library Jakarta Transactions Jakarta WebSocket Jakarta XML Binding Jakarta XML Web Services Java Workflow Tooling Java WorkFlow Tooling (JWT) JavaServer Faces JDT LS JFace Jubula Keti Kura Libra Linux Tools Linux Tools Project Lua Development Tools Lyo Mangrove Marketplace Client Project Maven Integration for Web Tools Platform Mbeddr MDM|BL Memory Analyzer Microprofile Mita Model Driven Health Tools Model Focusing Tools Mosquitto Mylyn Mylyn Builds Mylyn Context Mylyn Intent Mylyn Versions NatTable Nebula Ogee OM2M OMR Oomph OpenHW Group CORE-V cores openK platform Orbit OSEE P2 Package Drone Paho Paho Incubator Papyrus for Real Time Platform - User Assistance (UA) Plugin Development Environment (PDE) Ponte project_hip [archived] RasterFrames RCP Testing Tool RDF4J Remote Application Platform (RAP) Requirements Modeling Framework Rich Client Platform (RCP) Riena Runtime Packaging Runtimes Sapphire Scanning scout SeMantic Information Logistics Architecture (SMILA) Service Oriented Architecture Simultaneous release Sirius Sisu Skalli Soteria Sparkplug Specification Project Spatiotemporal Epidemiological Modeler (STEM) Standard Widget Toolkit (SWT) Starter for Jakarta EE Subversive SWTBot Tangle Identity Tangle Marketplaces Target Communication Framework Target Management Technology Project and PMC The Eclipse Integrated Computational Environment Thym Tigerstripe tinydtls Tools for Cloud Foundry Trace Compass Triquetrum Turkish Users Unide UOMo Vert.x Vex Virgo Vorto Wakaama Webtools incubator WindowBuilder XML Schema Definition (XSD) XWT- Polarsys Capella General Arcadia Capella workbench Capella Studio M2Doc Requirements Addon Kitalpha 3p CHESS- General (non-technical) Eclipse Foundation Project Proposals Jobs and employment Polish users Test- Eclipse Working Groups Automotive IWG Science WG- Proposals OSGi Enterprise Tools Eclipse Advanced Scripting Environment (EASE) DAWNSci Eclipse Sumo- Archived Potomac B3 Tiaki MOFScript secRT Chinese users AMW Buckminster ATF Board committer reps Blinki COBOL Pulsar Albireo Code Recommenders Incubator Code Recommenders Apricot Service Oriented Architecture GMT (Generative Modeling Technologies) IDE4EDU Damos AM3 openArchitectureWare BPMN Modeler EMF Store EMF Client Apogee C-Sharp Corona Hibachi Glimmer Maynstall DSDP - Device Debugging DSDP - Native Application Builder (NAB) eBPM ORMF eBAM DSDP - Tools for Mobile Linux (TML) Eclipse aCute Spaces ScalaModules Visual Editor (VE) Textual Concrete Syntax (TCS) P2 dev Cloud Deployment Toolkit Memory Analyzer (MAT) DSDP COSMOS Esl OFMP Faceted Project Framework UMLX IAM (Eclipse Integration for Apache Maven) M2M (model-to-model transformation) OHF Tycho Sketch IMP g-Eclipse Eclipse HIP Eclipse Examples EMF-IncQuery Eclipse Process Manager (Stardust) Eclipse IOTA Trinity Swordfish Maven Integration (M2E) Koneki Mihini Test and Performance Tools Platform (TPTP) Voicetools Sequoyah Xtend Eclipse LSP4E Eclipse Monkey Project Runtime Analysis Tools Service Oriented Architecture GEMS WTP - PAVE Service Oriented Architecture Tools Platform (STP) MST OMCW Silverlight Development Toolkit (SLDT) Woolsey Winery Higgins EGL Development Tools Service Component Architecture (SCA) Tools Wazaabi Eclipse Picasso MDM WEB Krikkit Gyrex Eclipse Papyrus for xtUML StatET Edje RISE V2G Eclipse Whiskers Flux Eclipse SmartHome Remus Information Management"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "koneki",
                "Sentences": [
                    "- Newcomers Newcomers- Language IDEs AJDT Andmore C / C++ IDE (CDT) Che Java Development Tools (JDT) Objectteams Orion PHP Development Tools (PDT) Eclipse Web Tools Platform Project (WTP) ServerTools (WTP)- Modeling AMP Amalgam ATL BPEL Designer Compare Ecore Tools EMF EMF \"Technology\" (Ecore Tools, EMFatic, etc) Epsilon eTrice Extended Editing Framework (READ ONLY) Eclipse Generation Factories (EGF) GMF (Graphical Modeling Framework) Graphiti M2T (model-to-text transformation) MDT (Model Development Tools) Modeling (top-level project) OCL Papyrus TMF (Xtext) UML2 UML2 Tools XSD MoDisco Presentation Modeling Framework (PMF) Sphinx VIATRA Model-to-Model Transformation QVT-OML QVT-Relations EMF Diff/Merge EMF Parsley Eclipse Layout Kernel- Eclipse Projects 4DIAC - Framework for Distributed Industrial Automation and Control ACTF Advanced Scripting Environment (EASE) Agile UML APP4MC AsciiDoc Language Babel BIRT BPMN 2.0 Modeler Buckminster dev Buildship Californium (Cf) CoAP Framework Capra ChemClipse Cloud Application Management Framework Commercial Common Build Infrastructure Concierge Dali Dash Dirigible DSDP - Mobile Tools for Java (MTJ) DSDP - Real-Time Software Components (RTSC) DSDP - Target Management DTP Dynamic Languages Toolkit (DLTK) e(fx)clipse EATOP Eclipse 4 Eclipse Adore Eclipse Advanced Visualization Eclipse Agail Eclipse Apogy Eclipse Arrowhead Eclipse Avsys Eclipse Basyx Eclipse Bridge.IoT Eclipse Bundle Recipes Eclipse Cargotracker Eclipse Ceylon Eclipse Che4z Eclipse Cloe Eclipse Codewind Eclipse CogniCrypt Eclipse Collections Eclipse Communications Framework (ECF) Eclipse Corrosion Eclipse Crossmeter Eclipse Cyclone DDS Eclipse Dartboard Eclipse Deeplearning4j Eclipse Ditto Eclipse Duttile Eclipse EclEmma Eclipse EdiTDor Eclipse Embedded CDT Eclipse EMF Cloud Eclipse Enterprise for Java Eclipse ESCET Eclipse fog05 Eclipse Formal Modeling Eclipse Free BIRD Tools Eclipse GLSP Eclipse Grizzly Eclipse Hara Eclipse Hawk Eclipse iceoryx Eclipse Implementation of JAXB Eclipse ioFog Eclipse IoT Packages Eclipse Jakarta EE Platform Eclipse Jakarta EE TCK Eclipse January Eclipse JDT LS Eclipse Jemo Eclipse Jersey Eclipse Jifa Eclipse JKube Eclipse JNoSQL Eclipse JustJ Eclipse Kapua Eclipse Keyple Eclipse Kiso Eclipse Krazo Eclipse Kuksa Eclipse LemMinX Eclipse LSP4J Eclipse LSP4MP Eclipse Metro Eclipse Microprofile Eclipse Milo Eclipse Mojarra Eclipse MOSAIC Eclipse MRAA Eclipse N4JS Eclipse OneOFour Eclipse Open Standard Business Platform Eclipse Open VSX Eclipse OpenJ9 Eclipse OpenK Core Modules Eclipse openK User Modules Eclipse OpenMQ Eclipse OpenVSX Eclipse ORB Eclipse Packager Eclipse Packages Eclipse Passage Eclipse Phizog Eclipse Platform Eclipse Project for Common Annotations Eclipse Project for Concurrency Utilities Eclipse Project for EJB Eclipse Project for Enterprise Security Eclipse Project for Expression Language Eclipse Project for Interceptors Eclipse Project for JACC Eclipse Project for JAF Eclipse Project for JASPIC Eclipse Project for JavaMail Eclipse Project for JAX-RS Eclipse Project for JAX-WS Eclipse Project for JAXB Eclipse Project for JCA Eclipse Project for JMS Eclipse Project for JPA Eclipse Project for JSON Processing Eclipse Project for JSON-B Eclipse Project for JSP Eclipse Project for JSTL Eclipse Project for JTA Eclipse Project for Servlet Eclipse Project for Stable Jakarta EE APIs Eclipse Project for WebSocket Eclipse RedDeer Eclipse Repairnator Eclipse Rich Beans Eclipse RT (runtime) Eclipse SCADA Eclipse Scanning Eclipse SeCo Blocks Eclipse sensiNact Eclipse Shellwax Eclipse Signalling Engineering Toolbox Eclipse sim@openPASS Eclipse Skills Eclipse SmartMDSD Eclipse Sprotty Eclipse Steady Eclipse Streamsheets Eclipse SW360 Eclipse SW360antenna Eclipse SWTChart Eclipse SystemFOCUS Eclipse Tahu Eclipse TEA Eclipse TeXlipse Eclipse Theia Eclipse ThingWeb Eclipse Titan Eclipse TM4E Eclipse Transformer Eclipse Tyrus Eclipse UML Generators Eclipse UML Profiles Repository Eclipse UPM Eclipse USS SDK Eclipse VOLTTRON Eclipse WaSP Eclipse Website Eclipse Wild Web Developer Eclipse XACC Eclipse Xpect Eclipse Xsemantics Eclipse Yasson Eclipse zenoh EclipseLink eGerrit EGit / JGit eLogbook@openk EPF EPP Equinox eRCP Examples for Jakarta EE Franca Fundamental Modeling Concepts GEF GEF3D Gemini GEMOC Studio Gendoc GlassFish GlassFish Tools Golo Handly hawkBit Hono Hudson Ignite Ignite|IoT IoT-Testware Jakarta Activation Jakarta Annotations Jakarta Authentication Jakarta Authorization Jakarta Batch Jakarta Bean Validation Jakarta Concurrency Jakarta Connectors Jakarta Contexts and Dependency Injection Jakarta EE Examples Jakarta EE Platform Jakarta EE TCK Jakarta Enterprise Beans Jakarta Expression Language Jakarta Interceptors Jakarta JSON Binding Jakarta JSON Processing Jakarta Mail Jakarta Messaging Jakarta MVC Jakarta NoSQL Jakarta Pages Jakarta Persistence Jakarta RESTful Web Services Jakarta Security Jakarta Server Faces Jakarta Server Pages Jakarta Servlet Jakarta Stable APIs Jakarta Standard Tag Library Jakarta Transactions Jakarta WebSocket Jakarta XML Binding Jakarta XML Web Services Java Workflow Tooling Java WorkFlow Tooling (JWT) JavaServer Faces JDT LS JFace Jubula Keti Kura Libra Linux Tools Linux Tools Project Lua Development Tools Lyo Mangrove Marketplace Client Project Maven Integration for Web Tools Platform Mbeddr MDM|BL Memory Analyzer Microprofile Mita Model Driven Health Tools Model Focusing Tools Mosquitto Mylyn Mylyn Builds Mylyn Context Mylyn Intent Mylyn Versions NatTable Nebula Ogee OM2M OMR Oomph OpenHW Group CORE-V cores openK platform Orbit OSEE P2 Package Drone Paho Paho Incubator Papyrus for Real Time Platform - User Assistance (UA) Plugin Development Environment (PDE) Ponte project_hip [archived] RasterFrames RCP Testing Tool RDF4J Remote Application Platform (RAP) Requirements Modeling Framework Rich Client Platform (RCP) Riena Runtime Packaging Runtimes Sapphire Scanning scout SeMantic Information Logistics Architecture (SMILA) Service Oriented Architecture Simultaneous release Sirius Sisu Skalli Soteria Sparkplug Specification Project Spatiotemporal Epidemiological Modeler (STEM) Standard Widget Toolkit (SWT) Starter for Jakarta EE Subversive SWTBot Tangle Identity Tangle Marketplaces Target Communication Framework Target Management Technology Project and PMC The Eclipse Integrated Computational Environment Thym Tigerstripe tinydtls Tools for Cloud Foundry Trace Compass Triquetrum Turkish Users Unide UOMo Vert.x Vex Virgo Vorto Wakaama Webtools incubator WindowBuilder XML Schema Definition (XSD) XWT- Polarsys Capella General Arcadia Capella workbench Capella Studio M2Doc Requirements Addon Kitalpha 3p CHESS- General (non-technical) Eclipse Foundation Project Proposals Jobs and employment Polish users Test- Eclipse Working Groups Automotive IWG Science WG- Proposals OSGi Enterprise Tools Eclipse Advanced Scripting Environment (EASE) DAWNSci Eclipse Sumo- Archived Potomac B3 Tiaki MOFScript secRT Chinese users AMW Buckminster ATF Board committer reps Blinki COBOL Pulsar Albireo Code Recommenders Incubator Code Recommenders Apricot Service Oriented Architecture GMT (Generative Modeling Technologies) IDE4EDU Damos AM3 openArchitectureWare BPMN Modeler EMF Store EMF Client Apogee C-Sharp Corona Hibachi Glimmer Maynstall DSDP - Device Debugging DSDP - Native Application Builder (NAB) eBPM ORMF eBAM DSDP - Tools for Mobile Linux (TML) Eclipse aCute Spaces ScalaModules Visual Editor (VE) Textual Concrete Syntax (TCS) P2 dev Cloud Deployment Toolkit Memory Analyzer (MAT) DSDP COSMOS Esl OFMP Faceted Project Framework UMLX IAM (Eclipse Integration for Apache Maven) M2M (model-to-model transformation) OHF Tycho Sketch IMP g-Eclipse Eclipse HIP Eclipse Examples EMF-IncQuery Eclipse Process Manager (Stardust) Eclipse IOTA Trinity Swordfish Maven Integration (M2E) Koneki Mihini Test and Performance Tools Platform (TPTP) Voicetools Sequoyah Xtend Eclipse LSP4E Eclipse Monkey Project Runtime Analysis Tools Service Oriented Architecture GEMS WTP - PAVE Service Oriented Architecture Tools Platform (STP) MST OMCW Silverlight Development Toolkit (SLDT) Woolsey Winery Higgins EGL Development Tools Service Component Architecture (SCA) Tools Wazaabi Eclipse Picasso MDM WEB Krikkit Gyrex Eclipse Papyrus for xtUML StatET Edje RISE V2G Eclipse Whiskers Flux Eclipse SmartHome Remus Information Management"
                ],
                "relationships": []
            }
        ]
    },
    {
        "py/object": "model.LinkKeyword.LinkKeyword",
        "Id": 9,
        "Description": "Web of Thing",
        "Keys": [
            "WoT"
        ],
        "projects": [
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "thingweb",
                "Sentences": [
                    "// WoT runtime is provided as global object",
                    "//Then from here on use WoT object to consume/produce Things",
                    "A Thing Directory is a directory service for WoT Thing Descriptions (TDs) that provides a Web interface to register TDs (aligned with draft-ietf-core-resource-directory) and look them up (e.g., using SPARQL queries or CoRE Link Format).",
                    "A detailed introduction to the abstract architecture and deployment scenarios, but also use cases and requirements can be found in the Web of Things (WoT) Architecture document, a W3C Working Draft.",
                    "Eclipse IoT is seen as the best fit, as \"Eclipse IoT provides the technology needed to build IoT Devices, Gateways, and Cloud Platforms\", and hence is spot on the W3C WoT idea of technological building blocks that span all levels of IoT systems.",
                    "Furthermore, Thingweb shall include auxiliary tools for the WoT ecosystem such as user interfaces or visualizers for Things, converters to the Thing Description and its serializations, semantic processors around the Thing Description, etc.",
                    "GitHub - thingweb/thingweb-directory: W3C WoT Thing Directory implementation",
                    "In short, W3C WoT seeks to extend the Web from a Web of pages to a Web of Things.",
                    "It is simply a toolkit with some demo applications enabling you to create and experiment with WoT applications.",
                    "JavaFX-based UI (see WoT-FXUI)",
                    "Once these documents reach Candidate Recommendation status, the W3C WoT activity intends to re-charter the WoT Working Group to standardize the next set of building blocks.",
                    "Services to support the W3C WoT Plugfests",
                    "The W3C Web of Things (WoT) seeks to counter the fragmentation of the IoT by using and extending Web standards (e.g., metadata and APIs) and providing re-usable technological building blocks in order to enable easy integration across IoT platforms and application domains.",
                    "The WoT Working Group was re-chartered to standardize the next set of building blocks and to advance the existing ones.",
                    "The first phase of W3C WoT standardization activity already ended and yielded to a recommendation for the Thing Description.",
                    "The former is being explored and identified by the WoT Interest Group, which operates in parallel to the Working Group.",
                    "Thingweb - WoT Plugfest services",
                    "Thingweb is an implementation of the WoT Model discussed in the W3C WoT WG.",
                    "This is being explored and identified by the WoT Interest Group, which operates in parallel to the Working Group.",
                    "This library implements the WoT Scripting API:",
                    "This may include early work by the WoT Interest Group that is not part of the standards track yet.",
                    "W3C WoT Thing Directory implementation",
                    "We provide sevices to support exploring W3C WoT",
                    "We will provide sevices to support the operation of a Plugfest of W3C WoT",
                    "Web of Things (WoT) Binding Templates",
                    "Web of Things (WoT) Scripting API",
                    "Web of Things (WoT) Thing Description",
                    "const WoT = await this.servient.start()",
                    "node-wot is the official reference implementation of the W3C WoT Working Group and implements the so-called \"Servient Architecture\":",
                    "node-wot provides a WoT Thing Description parser and serializer, several \"Protocol Binding\" implementing the WoT Binding Templates, as well as a runtime system (\"WoT Runtime\") providing the WoT Scripting API for applications.",
                    "node-wot provides a WoT Thing Description parser and serializer, several \"Protocol Bindings\" implementing the WoT Binding Templates, as well as a runtime system (\"WoT Runtime\") providing the WoT Scripting API for applications."
                ],
                "relationships": []
            }
        ]
    },
    {
        "py/object": "model.LinkKeyword.LinkKeyword",
        "Id": 10,
        "Description": "the standard for contactless tickets and cards",
        "Keys": [
            "Calypso"
        ],
        "projects": [
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "hip",
                "Sentences": [
                    "Calypso Networks Association"
                ],
                "relationships": []
            },
            {
                "py/object": "model.LinkKeyword.LinkProject",
                "Project": "keyple",
                "Sentences": [
                    "'Calypso Extension': the library to define transaction with Calypso card.",
                    "'Keyple Calypso Library JAR': the Calypso API to operate a transaction with a Calypso Portable Object.",
                    "(As Transpor Ticketing in France is 100% Calypso based they have to be Calypso Compliant)",
                    "(Old API of Keyple, & Generic Terminal Interface for Reader & Calypso)",
                    "//Import Calypso library to support Calypso Portable Object, in this case import the last version of keyple-java-calypso",
                    "5T: Transport Operator of Piemonte Region in italy that wants to use Keyple to use their Calypso Card for new mobility services (Bike Sharing, Car Sharing, Parking...",
                    "A Calypso PO image provides public ‘getters’ in order to recover the information of the selected PO (startup data, file data, … etc).",
                    "A Calypso Portable Object (CalypsoPo) is the image of a selected Calypso PO.",
                    "A Calypso Portable Object is the image of a selected Calypso PO.",
                    "A Calypso SAM (CalypsoSam) is the image of a selected Calypso SAM.",
                    "A Calypso SAM is the image of a selected Calypso SAM.",
                    "A SAM Resource ((CardResource) is required too if security features are involved (Calypso secure session, Stored value transaction, PIN encryption, etc…).",
                    "A SAM resource ((SeResource) is required too if security features are involved (Calypso secure session, Stored value transaction, PIN encryption, etc…).",
                    "A transaction with a Calypso PO is fully managed through the PoTransaction object:",
                    "A ‘Calypso Keyple extension' : a high level Calypso Processing API allowing to operate commands with a Calypso Portable Object, and to manage a secure Calypso transaction (Keyple Calypso User Guide).",
                    "A ‘Calypso Keyple extension' : a high level Calypso Processing API allowing to operate commands with a Calypso Portable Object, and to manage a secure Calypso transaction.",
                    "API guides for the Keyple Core and Keyple Calypso are available on keyple.org.",
                    "AidSelector aidSelector = AidSelector.builder().aidToSelect(CalypsoClassicInfo.AID).build();",
                    "At least a Calypso Resource (CardResource) is required.",
                    "At least a Calypso resource (SeResource) is required.",
                    "Background: Calypso is a set of specifications describing a fast and secure off-line contactless transaction, between a portable object and a terminal.",
                    "Bixi: Company that operates BikeSharing system in Montreal using the OPUS Transport card (which is Calypso-based) in cooperation with STM, the tranport operator of Montreal.",
                    "Calypso",
                    "Calypso - low level API to manage the common Calypso features (secure session for authentication, read and write commands of EF records)",
                    "Calypso - simplified high level API to build the Portable Object APDU commands (PO data still recovered through a lower API managing APDI response parser)",
                    "Calypso Api",
                    "Calypso PO & SAM APDU commands' sets",
                    "Calypso PO & SAM commands' setslow level Calypso API, commands’ settings include technical parameters specific to Calypso PO revisions or Calypso SAM revisions",
                    "Calypso PO responses data parsing",
                    "Calypso Portable Object Selection",
                    "Calypso Portable Object Transaction",
                    "Calypso Portable Object commands and secure transaction management",
                    "Calypso SAM (Secure Module) operations automatically processed",
                    "Calypso SAM responses data parsing",
                    "Calypso card image",
                    "Calypso transaction",
                    "CalypsoClassicInfo.RECORD_NUMBER_1, 4, 29);",
                    "Consequently, Calypso Networks Association, leaded by Public Transport operators, decided to develop and publish an Open Source SDK that could fit with any type of terminal and contactless reader architecture in order to facilitate and spread the adoption of the calypso standard.",
                    "Description: The goal of Eclipse Keyple is to allow developers to easily implement fast and secure off-line contactless transactions (using NFC cards, mobile phones, …) based on the Calypso standard.",
                    "ElementaryFile efContracts = calypsoPo.getFileBySfi(CalypsoClassicInfo.SFI_Contracts);",
                    "Furthermore, other mobility actors (Car sharing, bike sharing…) that would like to be integrated in the mobility ecosystem led by public transport operator would like to benefit of the highly secured Calypso transaction “as a service”, and consequently be ready for global integration without being ”killed” by complexity and security issues that would oblige them to make too big investments.",
                    "Future Work: We plan to offer before the end of the year a more complete Calypso processing module that will implement all additional and optional features of the last Calypso version.",
                    "In case file records have been read during the selection: the corresponding data could be recovered in the Calypso PO card image.",
                    "In fact, from the very beginning, the scope of Calypso Networks Association is to promote the open standard Calypso which has been originally designed for Interoperability in transportation.",
                    "In fact, if the Calypso specifications are open, the terminal applications operating ticketing data (contracts, pricing, user profile) which have to be implemented on top of a smartcard management layer are proprietary of a few ticketing integrator/manufacturer, and the networks who used this solutions may only manage evolutions in a “purchase by agreement” manner, with a direct impact on the price.",
                    "It manages the advanced security features of Calypso but is also able to manage non-Calypso smartcard solutions, for ticketing or payment.",
                    "Ixxi: ITS Subsidiary of RATP, that want to use Keyple as the Core of a Calypso Based NFC Ticketing Mobile app",
                    "KEYP-101 : enhanced CalypsoPo with card data (updated during the transaction)",
                    "KEYP-102 : update the content of CalypsoPo during selection",
                    "KEYP-225 : PoResource and SamResource classes are removed, their usage is replaced by SeResource<CalypsoPo/CalypsoSam>",
                    "KEYP-292 : make CalypsoPo and CalypsoSam classes extendable",
                    "Keyple Calypso - Application API",
                    "Keyple Calypso - Transaction API: the high-level interface to operate Calypso Card processing",
                    "Keyple Calypso - features / packages and corresponding usages",
                    "Keyple Calypso Application API",
                    "Keyple Calypso Application API | keyple",
                    "Keyple features defined to support the Calypso solution:",
                    "Legal Issues: All the code of the initial contribution is owned by Calypso Networks Association.",
                    "Licenses: Eclipse Distribution License 1.0 (BSD)Eclipse Public License 2.0Legal Issues: All the code of the initial contribution is owned by Calypso Networks Association.",
                    "Low level API: support of the main Calypso PO & SAM commands",
                    "Missing the Calypso CLAp automatic setting, the support of the PIN, Stored Value, Confidential session, & Data Signature features.",
                    "Most of the process methods have a ‘Channel Control’ parameter in order to define if the logical with the selected Calypso has to be kept open or to be closed after the processing of the prepared PO commands.",
                    "Note that from now the “prepare” methods no longer return indexes, the data will be placed in the CalypsoPo object.",
                    "Parent Project: Eclipse IoTBackground: Calypso is a set of specifications describing a fast and secure off-line contactless transaction, between a portable object and a terminal.",
                    "Scope: Eclipse Keyple provides generic librairies for simplifying the development of contactless applications based on the Calypso standard, and for facilitating integration with the secure elements typically involved in a secure contactless solution.",
                    "Some tests have a dependency with the Calypso library.",
                    "Thanks to its modular architecture, Keyple can be used also to communicate with non Calypso contactless portable objects, using the SE Proxy API.",
                    "The Calypso standard is managed by the Calypso Networks Association (CNA) , which is led by transports operators and public authorities in order to ensure openness and independence from industrials in confront of other proprietary schemes.",
                    "The Keyple Brand is also owned by Calypso Networks Association which will transfer its propriety to the Eclipse Fondation.",
                    "The Keyple Calypso API provides a high-level interface to implement fast and secure contactless ticketing transactions based on the Calypso standard.",
                    "The Keyple Calypso extension uses the card interface to exchange APDU commands with Calypso cards and SAM.",
                    "The Keyple Cpp is currently limited to support of the 'Calypso Core', 'Calypso Extension', the 'stub plugin', and the ‘PC/SC plugin' (based on the same API as for Java compnents).",
                    "The data received from the PO are now made available in CalypsoPo instead of the previous parser system.",
                    "The data received from the PO are now made available in CalypsoPo.",
                    "The matching SE resulting from a PO Selection Request is a Calypso PO.",
                    "The matching SmartCard resulting from a PO Selection Request is a Calypso PO.",
                    "The only exception is the implementation a Calypso PO/SAM test tool, the setting of low-level APDU commands with wrong settings could require the usage of the Calypso command packages.",
                    "The project hosts a first extension to support the Calypso ticketing solution.",
                    "The public getter methods of CalypsoPo are:",
                    "The responses of the PO are then recovered through the Calypso PO image.",
                    "The transaction API is defined on a low-level Calypso commands API which contains the builders of PO and SAM APDU commands, and the corresponding parsers of APDU responses.",
                    "They want to use Keyple to adress Calypso Based Markets",
                    "This is the repository for the C++ implementation of 'Calypso API' for the 'Eclipse Keyple' project.",
                    "This is the repository for the Java implementation of 'Calypso API' for the 'Eclipse Keyple' project.",
                    "Ticketing applications relies on a high-level Calypso processing API to manage Calypso commands & security features.",
                    "Ticketing terminal applications must import only the high-level Calypso transaction package.",
                    "To operate a Calypso transaction:",
                    "Today Calypso represent 20% of the world market of contactless smart ticketing in 25 countries and 125 cities.",
                    "Transaction API; management a Calypso secure session",
                    "We can affirm that a real openness is achieved for cards and portable objects with the Calypso standard with a large choice of products and providers (card manufacturer, OS makers and chip providers) and a real competition between them.",
                    "With Keyple API 0.9, Calypso PO data is made available in the CalypsoPo object obtained during selection and enriched all along the operations performed with PoTransaction.",
                    "a simplified Calypso API to recover the APDU responses' data by using a card image,",
                    "example: source for Keyple implementation examples, generic or Calypso specific.",
                    "for the 'Keyple Calypso extension':",
                    "keyple-calypso: source and unit tests for the Calypso library (artifact : keyple-java-calypso)",
                    "poTransaction.prepareReadRecordFile(CalypsoClassicInfo.SFI_Contracts,",
                    "specific packages for Calypso",
                    "the 'keyple-calypso' module: it’s an extension library which provides the support de define commands and secure transaction specific to the Calypso ticketing solution",
                    "the Calypso PO test in contact mode has yet to be performed",
                    "the addition of the Calypso features Stored Value transaction and PIN verification, the support Invalidate/Rehabilitate PO commands, and the Unlock SAM command.",
                    "to prepare Select File command (useful in particular to manage REV1 Calypso PO for which the select of the targeted DF is required)."
                ],
                "relationships": []
            }
        ]
    }
]