Eclipse Hara | projects.eclipse.org
Google Tag Manager
Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
Projects
Working Groups
Members
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
More
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse hawkBit
Eclipse Hara
Eclipse Hara
Primary tabs
Overview
(active tab)
Downloads
Who's Involved
Developer Resources
Governance
Contact Us
The scope of the project is to provide a reference agent software implementation featuring the Eclipse hawkBit device API. Such reference implementations are initially driven by operating systems and application frameworks that today constitute the main platforms for the majority of IoT and embedded devices. These devices include but are not limited to: Open Embedded, Android, QT, etc. The scope of the project is to fill the gap that was intentionally left out by the hawkbit project. The purpose is to provide device update management and client solutions for handling software updates on the device. By providing a solid open source reference implementations of a hawkBit client, which is driven by the fundamental use cases for updating a remote device, the project can be beneficial toward the adoption of the hawkBit update server as a backend solution.
Fundamental blocks of the client design are:
hawBit DDI Client, which implements API towards the update server
the Service, which is the runtime execution context of the DDI Client. The service includes the DDI client as a library
messaging systems (IPC) between the Service and the Service Consumer
The Service Consumer is implemented in the Application context and it communicates with the Service by using an interprocess communication mechanism provided by the Server. The proposed model is independent from the particular device operating system and all the blocks can be implemented in any language. In particular the DDI Client implementation is based on a straightforward states interaction which can serve as a reference for other implementations.
The first implementation has been developed to serve Android OS based embedded devices. In fact, the lack of an OSS distribution model for Android OS and application updates, that could be used in other specific industries other than consumer context (smartphones), facilitates the adoption of existing OSS device management systems for embedded Android and IoT appliances. In this scenario we have seen the opportunity to use Eclipse hawkBit as the artifacts (Android apps and OS updates) content delivery platform and of course we needed to handle such artifacts on the device.
Because Android SDK is based on a JVM Runtime environment, we have decided to develop the DDI Client block neutral with respect to the operating system. In this way, the same code could be used in a Linux operating system. Of course the Service and the IPC towards the service consumer are Android specific, nevertheless a Linux based Service using DBUS as IPC can fit perfectly the reference design.
There are important aspects that has to be considered in the update process which can be applied to any other Platform/OS in particular related to the particular update strategy:
Single copy update
Dual copy update (A/B)
Nowadays due to the larger size in MMC memories, we have an increased number of devices implementing the redundant A/B double copy update. Our current Android client implementation supports both.
HawkBit is a device neutral platform and it can provision artifacts also to Microcotroller based embedded systems. Having identified a common artifacts management workflow it is possible to provide an implementation based on free RTOS by writing the just DDI Client block as a Task without the need of any other sophistication.
Licenses:
Eclipse Public License 2.0
Related Projects
Project Hierarchy:
Eclipse IoT
Eclipse hawkBit
Eclipse Hara
Tags
Technology Types
Internet of Things
Join us for EclipseCon 2020
EclipseCon 2020 is a free virtual event for the Eclipse community. Join us October 19-22!
Register Now
Eclipse Foundation
About Us
Contact Us
Donate
Members
Governance
Code of Conduct
Logo and Artwork
Board of Directors
Legal
Privacy Policy
Terms of Use
Copyright Agent
Eclipse Public License
Legal Resources
Useful Links
Report a Bug
Documentation
How to Contribute
Mailing Lists
Forums
Marketplace
Other
IDE and Tools
Projects
Working Groups
Research@Eclipse
Report a Vulnerability
Service Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Eclipse Hara | projects.eclipse.org
Google Tag Manager
Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
Projects
Working Groups
Members
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
More
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse hawkBit
Eclipse Hara
Downloads
Eclipse Hara
Primary tabs
Overview
Downloads
(active tab)
Who's Involved
Developer Resources
Governance
Contact Us
This project has not provided download information.
Related Projects
Project Hierarchy:
Eclipse IoT
Eclipse hawkBit
Eclipse Hara
Tags
Technology Types
Internet of Things
Join us for EclipseCon 2020
EclipseCon 2020 is a free virtual event for the Eclipse community. Join us October 19-22!
Register Now
Eclipse Foundation
About Us
Contact Us
Donate
Members
Governance
Code of Conduct
Logo and Artwork
Board of Directors
Legal
Privacy Policy
Terms of Use
Copyright Agent
Eclipse Public License
Legal Resources
Useful Links
Report a Bug
Documentation
How to Contribute
Mailing Lists
Forums
Marketplace
Other
IDE and Tools
Projects
Working Groups
Research@Eclipse
Report a Vulnerability
Service Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Eclipse Hara | projects.eclipse.org
Google Tag Manager
Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
Projects
Working Groups
Members
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
More
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse hawkBit
Eclipse Hara
Who's Involved
Eclipse Hara
Primary tabs
Overview
Downloads
Who's Involved
(active tab)
Developer Resources
Governance
Contact Us
Project Members:
Project Leads
Andrea Zoleo
Daniele Sergio
Diego Rondini
Matteo Di Pirro
Nicola La Gloria
Committers
Andrea Zoleo
Daniele Sergio
Diego Rondini
Matteo Di Pirro
Nicola La Gloria
Mentor
Kai Hudalla
Related Projects
Eclipse Hara | projects.eclipse.org
Project Hierarchy:
Eclipse IoT
Eclipse hawkBit
Eclipse Hara
Tags
Technology Types
Internet of Things
The Eclipse IDE 2020-09 is now available!
Download Now
Eclipse Foundation
About Us
Contact Us
Donate
Members
Governance
Code of Conduct
Google Tag Manager
Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
Projects
Working Groups
Members
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Logo and Artwork
Board of Directors
Legal
Privacy Policy
Terms of Use
Copyright Agent
Eclipse Public License
Legal Resources
Useful Links
Report a Bug
Documentation
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
More
Community
Marketplace
Events
How to Contribute
Mailing Lists
Forums
Marketplace
Other
IDE and Tools
Projects
Working Groups
Research@Eclipse
Report a Vulnerability
Service Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse hawkBit
Eclipse Hara
Governance
Eclipse Hara
Primary tabs
Overview
Downloads
Who's Involved
Developer Resources
Governance
(active tab)
Contact Us
Scope:
The scope of the project is to provide a reference agent software implementation featuring the Eclipse hawkBit device API. Such reference implementations are initially driven by operating systems and application frameworks that today constitute the main platforms for the majority of IoT and embedded devices. These devices include but are not limited to: Open Embedded, Android, QT, etc. The scope of the project is to fill the gap that was intentionally left out by the hawkbit project. The purpose is to provide an artifacts management system for handling software updates on the device. By providing a solid open source reference implementations of a hawkBit client, which is driven by proven use cases for updating a remote device, the project can be beneficial toward the adoption of the hawkBit by closing the loop between backend and the target device.
Reviews:
Name
Date
Creation Review
2019-12-18
IP Due Diligence Type:
Type A - License Compatibility Certification
Project Links
Proposal
Related Projects
Project Hierarchy:
Eclipse IoT
Eclipse hawkBit
Eclipse Hara
Tags
Eclipse Hara | projects.eclipse.org
Technology Types
Internet of Things
The Eclipse IDE 2020-09 is now available!
Download Now
Eclipse Foundation
About Us
Contact Us
Donate
Members
Governance
Code of Conduct
Logo and Artwork
Board of Directors
Legal
Privacy Policy
Terms of Use
Copyright Agent
Eclipse Public License
Legal Resources
Eclipse Hara | projects.eclipse.org
Google Tag Manager
Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
Projects
Working Groups
Members
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Useful Links
Report a Bug
Documentation
How to Contribute
Mailing Lists
Forums
Marketplace
Other
IDE and Tools
Projects
Working Groups
Research@Eclipse
Report a Vulnerability
Service Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Google Tag Manager
Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
Projects
Working Groups
Members
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
More
Community
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
More
Community
Marketplace
Events
Planet Eclipse
Newsletter
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
Videos
Blogs
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
Toggle navigation
Home
How to Contribute
IDE and Tools
Newcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse hawkBit
Eclipse Hara
Developer Resources
Eclipse Hara
Primary tabs
Overview
Downloads
Who's Involved
Developer Resources
(active tab)
Governance
Contact Us
Projects
Eclipse IoT
Eclipse hawkBit
Eclipse Hara
Contact Us
Eclipse Hara
Primary tabs
Overview
Downloads
Who's Involved
Developer Resources
Governance
Contact Us
(active tab)
The project has not provided information for this page.
Related Projects
Project Hierarchy:
Eclipse IoT
The project has not provided information for this page.
Related Projects
Project Hierarchy:
Eclipse IoT
Eclipse hawkBit
Eclipse Hara
Tags
Technology Types
Internet of Things
Join us for EclipseCon 2020
EclipseCon 2020 is a free virtual event for the Eclipse community. Join us October 19-22!
Register Now
Eclipse Foundation
About Us
Contact Us
Donate
Members
Governance
Eclipse hawkBit
Eclipse Hara
Tags
Technology Types
Internet of Things
Join us for EclipseCon 2020
EclipseCon 2020 is a free virtual event for the Eclipse community. Join us October 19-22!
Register Now
Eclipse Foundation
About Us
Contact Us
Donate
Members
Governance
Code of Conduct
Logo and Artwork
Board of Directors
Code of Conduct
Logo and Artwork
Board of Directors
Legal
Privacy Policy
Terms of Use
Copyright Agent
Eclipse Public License
Legal Resources
Useful Links
Report a Bug
Documentation
How to Contribute
Mailing Lists
Forums
Marketplace
Other
IDE and Tools
Legal
Privacy Policy
Terms of Use
Copyright Agent
Eclipse Public License
Legal Resources
Useful Links
Report a Bug
Documentation
How to Contribute
Mailing Lists
Forums
Marketplace
Other
IDE and Tools
Projects
Working Groups
Research@Eclipse
Projects
Working Groups
Research@Eclipse
Report a Vulnerability
Service Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Report a Vulnerability
Service Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Creation Review | projects.eclipse.org
Google Tag Manager
Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
Projects
Working Groups
Members
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
More
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse hawkBit
Eclipse Hara
Eclipse Hara
Creation Review
Eclipse Hara Creation Review
Type:
Creation
State:
Successful
End Date of the Review Period:
Reviews run for a minimum of one week. The outcome of the review is decided on this date. This is the last day to make comments or ask questions about this review.
Wednesday, December 18, 2019
Project:
Eclipse Hara
Proposal:
Eclipse Hara
Parent Project:
Eclipse hawkBit
Background:
How should the devices react to connection timeouts during download, in terms of user experience?
How should the device orchestrate effectively, the server states of an entire update cycle?
How should the device handle the update of the client software itself?
What if an update artifact is malformed?
...
It is clear that many of these questions have their answers in the remote device context and no matter how good the hawkBit server is operating on the backend, a poor client implementation can make the entire update process unreliable, especially in a production environment.
Scope:
The scope of the project is to provide a reference agent software implementation featuring the Eclipse hawkBit device API. Such reference implementations are initially driven by operating systems and application frameworks that today constitute the main platforms for the majority of IoT and embedded devices. These devices include but are not limited to: Open Embedded, Android, QT, etc. The scope of the project is to fill the gap that was intentionally left out by the hawkbit project. The purpose is to provide an artifacts management system for handling software updates on the device. By providing a solid open source reference implementations of a hawkBit client, which is driven by proven use cases for updating a remote device, the project can be beneficial toward the adoption of the hawkBit by closing the loop between backend and the target device.
Description:
The scope of the project is to provide a reference agent software implementation featuring the Eclipse hawkBit device API. Such reference implementations are initially driven by operating systems and application frameworks that today constitute the main platforms for the majority of IoT and embedded devices. These devices include but are not limited to: Open Embedded, Android, QT, etc. The scope of the project is to fill the gap that was intentionally left out by the hawkbit project. The purpose is to provide device update management, andclient solutions for handling software updates on the device. By providing a solid open source reference implementations of a hawkBit client, which is driven by the fundamental use cases for updating a remote device, the project can be beneficial toward the adoption of the hawkBit update server as a backend solution.
Fundamental blocks of the client design are:
hawBit DDI Client, which implements API towards the update server
the Service, which is the runtime execution context of the DDI Client. The service includes the DDI client as a library
messaging systems (IPC) between the Service and the Service Consumer
The Service Consumer is implemented in the Application context and it communicates with the Service by using an interprocess communication mechanism provided by the Server. The proposed model is independent from the particular device operating system and all the blocks can be implemented in any language. In particular the DDI Client implementation is based on a straightforward states interaction which can serve as a reference for other implementations.
The first implementation has been developed to serve Android OS based embedded devices. In fact, the lack of an OSS distribution model for Android OS and application updates, that could be used in other specific industries other than consumer context (smartphones), facilitates the adoption of existing OSS device management systems for embedded Android and IoT appliances. In this scenario we have seen the opportunity to use Eclipse hawkBit as the artifacts (Android apps and OS updates) content delivery platform and of course we needed to handle such artifacts on the device.
Because Android SDK is based on a JVM Runtime environment, we have decided to develop the DDI Client block neutral with respect to the operating system. In this way, the same code could be used in a Linux operating system. Of course the Service and the IPC towards the service consumer are Android specific, nevertheless a Linux based Service using DBUS as IPC can fit perfectly the reference design.
There are important aspects that has to be considered in the update process which can be applied to any other Platform/OS in particular related to the particular update strategy:
Single copy update
Dual copy update (A/B)
Nowadays due to the larger size in MMC memories, we have an increased number of devices implementing the redundant A/B double copy update. Our current Android client implementation supports both.
HawkBit is a device neutral platform and it can provision artifacts also to Microcotroller based embedded systems. Having identified a common artifacts management workflow it is possible to provide an implementation based on free RTOS by writing the just DDI Client block as a Task without the need of any other sophistication.
Why Here?:
The hawkBit project has been released under the Eclipse IoT umbrella and of course we find such a place the perfect fit also for the Hara project as the last mile for implementing a complete Eclipse IoT OSS solution for handling software updates.
Legal Issues:
We don't have details about potential trademark conficts with the name Hara, we are open to change the name in case.
Licenses:
Eclipse Public License 2.0
Project Scheduling:
0.4.x already released
Initial contribution for 1.0 expected: 11/2019
First working and tested build of 1.0: 11/2010
Future Work:
DDI Client and Service for QT
Linux Service (Java) which uses the current implementation of the DDI Client
Free RTOS DDI Client
People
Project Leads:
Nicola La Gloria
Diego Rondini
Andrea Zoleo
Daniele Sergio
Matteo Di Pirro
Committers:
Daniele Sergio
Matteo Di Pirro
Andrea Zoleo
Diego Rondini
Nicola La Gloria
Mentors:
Kai Hudalla
Sign in
to post comments.
Sign in
to post comments.
Related Projects
Project Hierarchy:
Eclipse IoT
Eclipse hawkBit
Eclipse Hara
Tags
Technology Types
Internet of Things
The Eclipse IDE 2020-09 is now available!
Download Now
Eclipse Foundation
About Us
Contact Us
Donate
Members
Governance
Code of Conduct
Logo and Artwork
Board of Directors
Legal
Privacy Policy
Terms of Use
Copyright Agent
Eclipse Public License
Legal Resources
Useful Links
Report a Bug
Documentation
How to Contribute
Mailing Lists
Forums
Marketplace
Other
IDE and Tools
Projects
Working Groups
Research@Eclipse
Report a Vulnerability
Service Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
