Eclipse Ditto • open source framework for digital twins in the IoT
Toggle navigation
Blog
Documentation
HTTP API
Sandbox
GitHub
GitHub examples
Links
Eclipse Ditto Project
Forum
Jenkins
Mailing list archives
Gitter.im chat
… where IoT devices and their digital twins get together
Device-as-a-Service
Provide a higher abstraction level in form of an API used to work with individual devices.
State management for digital twins
Differ between reported (last known), desired (target) and current state (live) of devices, including support for synchronization and publishing of state changes.
Organize your set of digital twins
Who's using Eclipse Ditto?
Add your logo as adopter/user of Eclipse Ditto to this list.
©2020 Eclipse Ditto.
Site last generated: Nov 2, 2020
> Privacy Policy
> Terms of Use
> Copyright Agent
> Legal
> License
> Report a Vulnerability
eclipse/ditto - Gitter
eclipse/ditto - Gitter
MQTT 3.1.1 protocol binding • Eclipse Ditto • a digital twin framework
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
Toggle navigation
Blog
Documentation
HTTP API
Sandbox
GitHub
GitHub examples
Links
Eclipse Ditto Project
Forum
Jenkins
Mailing list archives
Gitter.im chat
Eclipse Ditto version:
development
1.0
Thomas Jaeckle
@thjaeckle
the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some pointsome "fake headers" may now be used in a headerMapping for MQTT 3, see: https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mappingbut to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs
Alexander Wellbrock
@lionax_gitlab
The connectivity service logs a lot of [WARN] No publish flow registered for MqttStatefulPublish... Might that be related?
It seems that while the targets are working finde the sources cause some problem right now. It seems that I'm also only sometimes able to get a working creation command executed in ditto if it's received by ditto via mqtt-source.I'm not using any header mapping right now. The app just sets the header object in the response payload before handing it over to mqtt->ditto-source
Thomas Jaeckle
@thjaeckle
the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
robmontalvojr
@robmontalvojr
oscarfh
@oscarfh
Just found eclipse/ditto#512 , which is exactly what we need. thanks!
sheldonTest
@sheldonTest
Hello all. After executing the building process then running the docker-compose up -d command I am now getting the following error: ERROR: manifest for eclipse/ditto-policies:0-SNAPSHOT not found: manifest unknown: manifest unknown
Pulling policies (docker.io/eclipse/ditto-policies:0-SNAPSHOT)...ERROR: manifest for eclipse/ditto-policies:0-SNAPSHOT not found: manifest unknown: manifest unknown
How should I fix or proceed?
Stefan Maute
@stmaute
Hi @sheldonTest. After the build process has finished you need to build the docker images with the following script ./ditto/services/build-images.sh. Then you can run the docker-compose up -d.
sheldonTest
@sheldonTest
@stmaute thank you i will try this. I'm not sure if I skipped this step or I missed it in the helloworld example. Is there a link with this instruction?
Stefan Maute
WebSocket protocol binding • Eclipse Ditto • a digital twin framework
eclipse/ditto - Gitter
1.1
1.2
1.3
1.4
Important: This documentation reflects the latest 'development'. You might want to choose a released version.
Introduction
Overview
Digital twins
Hello world
Release Notes
1.4.0
1.3.0
1.2.1
1.2.0
1.1.5
1.1.3
1.1.2
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
Julian
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
@stmaute
@sheldonTest No problem. Here is the link to our documentation: https://www.eclipse.org/ditto/installation-building.html
Thomas Jaeckle
@thjaeckle
@sheldonTest are you sure that you want/need to build Ditto - or do you just want to try out the helloworld example?in that case you don't need to build Ditto, just use the official Docker images and go ahead starting it, e.g. with docker compose:https://www.eclipse.org/ditto/installation-running.htmlOr in a Kubernetes cluster: https://github.com/eclipse/ditto/tree/master/deployment/kubernetesOr using the Helm chart: https://github.com/eclipse/ditto/tree/master/deployment/helm
mangexl
@mangexl
Hello, I am looking at setting up a ditto cluster using akka-dns service discovery (running AWS/ECS). Do you know if this is possible with current implementation? I see that default discovery method is akka-dns in ditto-akka-config.conf. But I do not find any maven dependency for akka-discovery-dns.
Thomas Jaeckle
@thjaeckle
@mangexl for using akka-dns, no additional dependency is required and this is the default, yessee the Akka doc: https://doc.akka.io/docs/akka/current/discovery/index.html#discovery-method-dnsso that should be possible on AWS/ECSadditionally, there is another possibility for ECS as well: https://doc.akka.io/docs/akka-management/current/discovery/aws.html#discovery-method-aws-api-ecs-discoveryfor that however we would need another depedency: com.lightbend.akka.discovery:akka-discovery-aws-api_2.13 or com.lightbend.akka.discovery:akka-discovery-aws-api-async_2.13
Patrick Sernetz
@patrickse
Is it possible to use ditto with keycloak without using https. I am creating a rather simple environment for a little workshop. The workshop will be onsite and cloud-less so no chance to use proper certificates and I really would like to skip the part of installing self-signed certs to the different machines.
Toggle navigation
Blog
Documentation
HTTP API
Sandbox
GitHub
GitHub examples
Links
Eclipse Ditto Project
Forum
Jenkins
Mailing list archives
Gitter.im chat
Eclipse Ditto version:
development
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
1.1.1
1.1.0
1.0.0
0.9.0
0.8.0
Milestone releases
1.0.0-M2
1.0.0-M1a
0.9.0-M2
0.9.0-M1
0.8.0-M3
0.8.0-M2
0.8.0-M1
0.3.0-M2
0.3.0-M1
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
Julian
@JulianFeinauer
AFAIR as I remember it is not
Its harcoded in Ditto to use https, I think
66 replies
mangexl
@mangexl
@thjaeckle Thanks! I am trying to find which/how to provide the adress to use for the service discovery in ditto. If i have an address for example ditto-test.com that shall be used for discovery, do you know how I could provide it?
Thomas Jaeckle
@thjaeckle
@mangexl that should be controllable via this configuration section: https://github.com/eclipse/ditto/blob/master/services/utils/config/src/main/resources/ditto-akka-config.conf#L62
by default, ditto-cluster is used as DNS name to use for discovery .. also have a look at the Akka reference configuration for the details on those options:https://github.com/akka/akka-management/blob/master/cluster-bootstrap/src/main/resources/reference.conf#L30
eclipse/ditto - Gitter
1.0
1.1
1.2
1.3
1.4
Important: This documentation reflects the latest 'development'. You might want to choose a released version.
Introduction
Overview
Digital twins
Hello world
Release Notes
1.4.0
1.3.0
1.2.1
1.2.0
1.1.5
Tobias Månsson
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
0.2.0-M1
0.1.0-M3
0.1.0-M1
Installation
Building Ditto
Running Ditto
Operating Ditto
Basic concepts
Overview
Model entities
Thing
Access Control List (ACL)
Feature
Policy
Namespaces and Names
Thing Metadata
Errors
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
to use ditto-test.com as DNS address I would overwrite the effective-name .. that one should be the "total" overwrite for DNS discovery
Alexander Wellbrock
@lionax_gitlab
Did something change with the mqtt / connectivity system regarding responses for ditto live messages? I'm using a HTTP client to issue a live message which is then forwarded via mqtt to some application doing stuff and returning a response via mqtt back to ditto. To get request and response correlated I used to have a correlation-id header with the response using the id from the request. That used to work a while ago but now doesn't. I've verified that ditto writes the message to mqtt broker, the broker transmits it to the app and the app sends a response with correlation-id header. Then nothing except for a timeout at the HTTP client...
Thomas Jaeckle
@thjaeckle
the "replyTarget" in a connection's target defines on which address responses are consumed for outgoing messages Ditto sends (in this case published to a MQTT topic)previously that was purely defined by the "reply-to" header (which should also be the default for the "replyTarget" "address", isn't it?)the "replyTarget" lets you additionally defined header mappings and expected response types (e.g. in order to only receive "errors", but no successful "responses") for consumed responses (and is therefore similar to a "source", defined in the "target" but only for responses)so does you HTTP live message request define a "reply-to" header? if not, the "replyTarget.address" may also be filled with a static reply address where the MQTT device sends its replies todid you previously define a separate "source" for the replies?
Alexander Wellbrock
@lionax_gitlab
Currently there is a mqtt target where ditto writes the request from the HTTP client. The app then writes it's response to another topic where ditto has a mqtt-source configured for. The app uses the same ditto mqtt-source for answering messages as well as sending commands / signals / messages itself
I just noticed that I did not mention, that the replyTarget is set in my mqtt-source configuration, not the target configuration
Thomas Jaeckle
@thjaeckle
aah, yes - sorry, I mixed that up as wellit should still work that way you configured itdid you maybe configure an explicit header mapping in the target or in the source which now doesn't contain a mapping of the "correlation-id" header?
Thomas Jaeckle
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
1.1.3
1.1.2
1.1.1
1.1.0
1.0.0
0.9.0
0.8.0
Milestone releases
1.0.0-M2
1.0.0-M1a
0.9.0-M2
0.9.0-M1
0.8.0-M3
0.8.0-M2
0.8.0-M1
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Authentication and Authorization
Messages
Signals
Signal types
Command
Command response
Error response
Event
APIs
Connections
Placeholders
Change notifications
RQL expressions
Signal enrichment
Search
Acknowledgements / QoS
Architecture
Dashboard [Jenkins]
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
@thjaeckle
the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some pointsome "fake headers" may now be used in a headerMapping for MQTT 3, see: https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mappingbut to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs
_
Alexander Wellbrock
@lionax_gitlab
The connectivity service logs a lot of [WARN] No publish flow registered for MqttStatefulPublish... Might that be related?
It seems that while the targets are working finde the sources cause some problem right now. It seems that I'm also only sometimes able to get a working creation command executed in ditto if it's received by ditto via mqtt-source.I'm not using any header mapping right now. The app just sets the header object in the response payload before handing it over to mqtt->ditto-source
Thomas Jaeckle
@thjaeckle
the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
robmontalvojr
@robmontalvojr
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
eclipse/ditto - Gitter
robmontalvojr
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
0.3.0-M2
0.3.0-M1
0.2.0-M1
0.1.0-M3
0.1.0-M1
Installation
Building Ditto
Running Ditto
Operating Ditto
Basic concepts
Overview
Model entities
Thing
Access Control List (ACL)
Feature
Policy
Namespaces and Names
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Overview
Services
Policies
Things
Things-Search
Connectivity
Concierge
Gateway
HTTP API
Overview
Concepts
Skip to contentJenkinslog inJenkinsENABLE AUTO REFRESH People Build History Project Relationship Check File FingerprintBuild QueueNo builds in the queue.Build Executor StatusAll S WNameLast SuccessLast FailureLast Duration WDescription%Test Result: 0 tests failing out of a total of 9,770 tests.100Build stability: No recent builds failed.100ditto-ci
7 hr 13 min
- #721
15 days
- #70428 min WDescription%Test Result: 0 tests failing out of a total of 1,296 tests.100Build stability: No recent builds failed.100ditto-client-java-ci
2 days 8 hr
- #104
1 mo 3 days
- #962 min 24 sec WDescription%Build stability: 4 out of the last 5 builds failed.20ditto-client-java-license-check
19 days
- #13
19 days
- #121 min 49 sec WDescription%Test Result: 0 tests failing out of a total of 1,296 tests.100Build stability: No recent builds failed.100ditto-client-java-release
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
Julian
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
robmontalvojr
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
eclipse/ditto - Gitter
eclipse/ditto - Gitter
eclipse/ditto - Gitter
Thing Metadata
Errors
Authentication and Authorization
Messages
Signals
Signal types
Command
Command response
Error response
Event
APIs
Connections
Placeholders
Change notifications
RQL expressions
Signal enrichment
Search
eclipse/ditto - Gitter
eclipse/ditto - Gitter
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
eclipse/ditto - Gitter
Search
Messages
WebSocket protocol binding
Server sent events
Connectivity API
Overview
Manage connections
AMQP 0.9.1 protocol binding
AMQP 1.0 protocol binding
MQTT 3.1.1 protocol binding
MQTT 5 protocol binding
HTTP 1.1 protocol binding
Kafka 2.x protocol binding
Payload mapping
Header mapping
TLS certificates
Client SDK
Overview
13 days
- 1.4.0
6 mo 4 days
- #226 min 13 sec WDescription%Build stability: No recent builds failed.100ditto-client-javascript-ci
1 day 13 hr
- #920
6 mo 3 days
- #8972 min 42 sec WDescription%Build stability: 3 out of the last 5 builds failed.40ditto-client-javascript-release
6 mo 2 days
- #25
6 mo 3 days
- #234 min 8 sec WDescription%Build stability: 4 out of the last 5 builds failed.20ditto-license-check
7 days 7 hr
- #25
8 days 9 hr
- #244 min 14 sec WDescription%Build stability: 1 out of the last 5 builds failed.80Test Result: 0 tests failing out of a total of 9,323 tests.100ditto-release
14 days
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Eclipse Ditto | projects.eclipse.org
eclipse/ditto - Gitter
eclipse/ditto - Gitter
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
oscarfh
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
Acknowledgements / QoS
Architecture
Overview
Services
Policies
Things
Things-Search
Connectivity
Concierge
Gateway
HTTP API
Overview
Concepts
Search
Messages
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
Thomas Jaeckle
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
Java
JavaScript
Ditto Protocol
Overview
Twin/live channel
Specification
Protocol topic
Things group
→ commands/events
Create/Modify
- 1.4.0
14 days
- #841 hr 33 min WDescription%Build stability: No recent builds failed.100ditto-website-build-and-deploy
9 days 3 hr
- #80
4 mo 6 days
- #5310 min Icon:
S M LLegend Atom feed for all Atom feed for failures Atom feed for just latest buildsPage generated: Nov 11, 2020 1:02:03 PM ESTREST APIJenkins ver. 2.222.4
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Google Tag Manager Skip to main content
Log in
Manage Cookies
projects.eclipse.org
Download
ProjectsWorking GroupsMembersCommunity MarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipate Report a BugForumsMailing ListsWikiIRCResearchEclipse IDE DownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
More
CommunityMarketplaceEventsPlanet EclipseNewsletterVideosBlogsParticipateReport a BugForumsMailing ListsWikiIRCResearchEclipse IDEDownloadLearn MoreDocumentationGetting Started / SupportHow to ContributeIDE and ToolsNewcomer Forum
Toggle navigation
Home
Projects
Eclipse IoT
Eclipse Ditto
Eclipse Ditto
Authentication and authorization • Eclipse Ditto • a digital twin framework
eclipse/ditto - Gitter
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
Thomas Jaeckle
@thjaeckle
by default, ditto-cluster is used as DNS name to use for discovery .. also have a look at the Akka reference configuration for the details on those options:https://github.com/akka/akka-management/blob/master/cluster-bootstrap/src/main/resources/reference.conf#L30
to use ditto-test.com as DNS address I would overwrite the effective-name .. that one should be the "total" overwrite for DNS discovery
Alexander Wellbrock
@lionax_gitlab
Did something change with the mqtt / connectivity system regarding responses for ditto live messages? I'm using a HTTP client to issue a live message which is then forwarded via mqtt to some application doing stuff and returning a response via mqtt back to ditto. To get request and response correlated I used to have a correlation-id header with the response using the id from the request. That used to work a while ago but now doesn't. I've verified that ditto writes the message to mqtt broker, the broker transmits it to the app and the app sends a response with correlation-id header. Then nothing except for a timeout at the HTTP client...
Thomas Jaeckle
@thjaeckle
the "replyTarget" in a connection's target defines on which address responses are consumed for outgoing messages Ditto sends (in this case published to a MQTT topic)previously that was purely defined by the "reply-to" header (which should also be the default for the "replyTarget" "address", isn't it?)the "replyTarget" lets you additionally defined header mappings and expected response types (e.g. in order to only receive "errors", but no successful "responses") for consumed responses (and is therefore similar to a "source", defined in the "target" but only for responses)so does you HTTP live message request define a "reply-to" header? if not, the "replyTarget.address" may also be filled with a static reply address where the MQTT device sends its replies todid you previously define a separate "source" for the replies?
Alexander Wellbrock
@lionax_gitlab
Currently there is a mqtt target where ditto writes the request from the HTTP client. The app then writes it's response to another topic where ditto has a mqtt-source configured for. The app uses the same ditto mqtt-source for answering messages as well as sending commands / signals / messages itself
I just noticed that I did not mention, that the replyTarget is set in my mqtt-source configuration, not the target configuration
@oscarfh
Thanks @JulianFeinauer and @thjaeckle for the information. I will take a further look into it.A small question about Policies: I want to use the openID token integration to allow a group of users to access something (just like in the example in https://www.eclipse.org/ditto/basic-policy.html#example . But I also read OpenID Connect compliant providers - supported providers are listed at OpenID Connect - Certified OpenID Provider Servers and Services The sub claim and configured provider name are used in the form <provider>:<sub-claim>., which seems somehow contradicting.Is the group support something only supported by the nginx integration?
oscarfh
@oscarfh
Just found eclipse/ditto#512 , which is exactly what we need. thanks!
sheldonTest
@sheldonTest
Hello all. After executing the building process then running the docker-compose up -d command I am now getting the following error: ERROR: manifest for eclipse/ditto-policies:0-SNAPSHOT not found: manifest unknown: manifest unknown
Pulling policies (docker.io/eclipse/ditto-policies:0-SNAPSHOT)...ERROR: manifest for eclipse/ditto-policies:0-SNAPSHOT not found: manifest unknown: manifest unknown
How should I fix or proceed?
Stefan Maute
@stmaute
Hi @sheldonTest. After the build process has finished you need to build the docker images with the following script ./ditto/services/build-images.sh. Then you can run the docker-compose up -d.
sheldonTest
@sheldonTest
@stmaute thank you i will try this. I'm not sure if I skipped this step or I missed it in the helloworld example. Is there a link with this instruction?
Thomas Jaeckle
@thjaeckle
the "replyTarget" in a connection's target defines on which address responses are consumed for outgoing messages Ditto sends (in this case published to a MQTT topic)previously that was purely defined by the "reply-to" header (which should also be the default for the "replyTarget" "address", isn't it?)the "replyTarget" lets you additionally defined header mappings and expected response types (e.g. in order to only receive "errors", but no successful "responses") for consumed responses (and is therefore similar to a "source", defined in the "target" but only for responses)so does you HTTP live message request define a "reply-to" header? if not, the "replyTarget.address" may also be filled with a static reply address where the MQTT device sends its replies todid you previously define a separate "source" for the replies?
Alexander Wellbrock
@lionax_gitlab
Currently there is a mqtt target where ditto writes the request from the HTTP client. The app then writes it's response to another topic where ditto has a mqtt-source configured for. The app uses the same ditto mqtt-source for answering messages as well as sending commands / signals / messages itself
I just noticed that I did not mention, that the replyTarget is set in my mqtt-source configuration, not the target configuration
Thomas Jaeckle
@thjaeckle
aah, yes - sorry, I mixed that up as wellit should still work that way you configured itdid you maybe configure an explicit header mapping in the target or in the source which now doesn't contain a mapping of the "correlation-id" header?
Thomas Jaeckle
@thjaeckle
the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some pointsome "fake headers" may now be used in a headerMapping for MQTT 3, see: https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mappingbut to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs
Alexander Wellbrock
@lionax_gitlab
WebSocket protocol binding
Server sent events
Connectivity API
Overview
Manage connections
AMQP 0.9.1 protocol binding
AMQP 1.0 protocol binding
MQTT 3.1.1 protocol binding
MQTT 5 protocol binding
HTTP 1.1 protocol binding
Kafka 2.x protocol binding
Payload mapping
Header mapping
TLS certificates
Client SDK
Overview
@thjaeckle
@mangexl that should be controllable via this configuration section: https://github.com/eclipse/ditto/blob/master/services/utils/config/src/main/resources/ditto-akka-config.conf#L62
by default, ditto-cluster is used as DNS name to use for discovery .. also have a look at the Akka reference configuration for the details on those options:https://github.com/akka/akka-management/blob/master/cluster-bootstrap/src/main/resources/reference.conf#L30
to use ditto-test.com as DNS address I would overwrite the effective-name .. that one should be the "total" overwrite for DNS discovery
Alexander Wellbrock
@lionax_gitlab
Did something change with the mqtt / connectivity system regarding responses for ditto live messages? I'm using a HTTP client to issue a live message which is then forwarded via mqtt to some application doing stuff and returning a response via mqtt back to ditto. To get request and response correlated I used to have a correlation-id header with the response using the id from the request. That used to work a while ago but now doesn't. I've verified that ditto writes the message to mqtt broker, the broker transmits it to the app and the app sends a response with correlation-id header. Then nothing except for a timeout at the HTTP client...
Thomas Jaeckle
@thjaeckle
the "replyTarget" in a connection's target defines on which address responses are consumed for outgoing messages Ditto sends (in this case published to a MQTT topic)previously that was purely defined by the "reply-to" header (which should also be the default for the "replyTarget" "address", isn't it?)the "replyTarget" lets you additionally defined header mappings and expected response types (e.g. in order to only receive "errors", but no successful "responses") for consumed responses (and is therefore similar to a "source", defined in the "target" but only for responses)so does you HTTP live message request define a "reply-to" header? if not, the "replyTarget.address" may also be filled with a static reply address where the MQTT device sends its replies todid you previously define a separate "source" for the replies?
Alexander Wellbrock
@lionax_gitlab
Currently there is a mqtt target where ditto writes the request from the HTTP client. The app then writes it's response to another topic where ditto has a mqtt-source configured for. The app uses the same ditto mqtt-source for answering messages as well as sending commands / signals / messages itself
I just noticed that I did not mention, that the replyTarget is set in my mqtt-source configuration, not the target configuration
Activity
Alexander Wellbrock
@lionax_gitlab
Thomas Jaeckle
@thjaeckle
the "replyTarget" in a connection's target defines on which address responses are consumed for outgoing messages Ditto sends (in this case published to a MQTT topic)previously that was purely defined by the "reply-to" header (which should also be the default for the "replyTarget" "address", isn't it?)the "replyTarget" lets you additionally defined header mappings and expected response types (e.g. in order to only receive "errors", but no successful "responses") for consumed responses (and is therefore similar to a "source", defined in the "target" but only for responses)so does you HTTP live message request define a "reply-to" header? if not, the "replyTarget.address" may also be filled with a static reply address where the MQTT device sends its replies todid you previously define a separate "source" for the replies?
Alexander Wellbrock
@lionax_gitlab
Currently there is a mqtt target where ditto writes the request from the HTTP client. The app then writes it's response to another topic where ditto has a mqtt-source configured for. The app uses the same ditto mqtt-source for answering messages as well as sending commands / signals / messages itself
I just noticed that I did not mention, that the replyTarget is set in my mqtt-source configuration, not the target configuration
Thomas Jaeckle
@thjaeckle
aah, yes - sorry, I mixed that up as wellit should still work that way you configured itdid you maybe configure an explicit header mapping in the target or in the source which now doesn't contain a mapping of the "correlation-id" header?
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
_
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
People
Repo info
Activity
mangexl
@mangexl
@thjaeckle Thanks! I am trying to find which/how to provide the adress to use for the service discovery in ditto. If i have an address for example ditto-test.com that shall be used for discovery, do you know how I could provide it?
Thomas Jaeckle
@thjaeckle
@mangexl that should be controllable via this configuration section: https://github.com/eclipse/ditto/blob/master/services/utils/config/src/main/resources/ditto-akka-config.conf#L62
by default, ditto-cluster is used as DNS name to use for discovery .. also have a look at the Akka reference configuration for the details on those options:https://github.com/akka/akka-management/blob/master/cluster-bootstrap/src/main/resources/reference.conf#L30
to use ditto-test.com as DNS address I would overwrite the effective-name .. that one should be the "total" overwrite for DNS discovery
Alexander Wellbrock
@lionax_gitlab
Retrieve
Delete
Acknowledgements
Errors
→ search/messages
Search
Messages
Policies group
→ commands/events
Create/Modify
Retrieve
Delete
Bindings
Examples
→ Things examples
Create a Thing
Delete a Thing
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@lionax_gitlab
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
Sign in to start talking
Primary tabsOverview(active tab)
Downloads
Who's Involved
Developer Resources
Governance
Contact Us
Eclipse Ditto is a framework for providing the "Digital Twin" pattern for IoT applications in order to interact with IoT devices.
That means that Ditto mirrors physical devices as digital representations in the cloud.
As a web or mobile app developer you can interact with those digital twins as if they were any other web service, that's why Ditto enables a "device as a service" paradigm.
A few of the main features are access control, a search over all twin data and push notifications.
There are various APIs in order to interact with the devices: an HTTP and WebSocket API, additionally the capability to integrate with other systems via AMQP, MQTT and Apache Kafka.
Ditto scales horizontally, so managing millions of twins is what it is designed for.
The benefit when developing IoT applications or solutions is that no own backend must be implemented, the focus can be set on the use case: for example device integration and app or web UI implementation.
Device-as-a-Service
IoT solutions have to interact with a heterogeneous set of device types, device protocols and communication patterns.
As devices are equipped with a public API (potentially public on the Internet), it is crucial to define on a device level which individuals are allowed interact with the devices. Ditto ensures that access to the device API is only granted for authorized individuals. Authentication is not scope of Ditto and delegated to existing identity providers.
Toggle navigation
Blog
Documentation
HTTP API
Sandbox
GitHub
GitHub examples
Links
Eclipse Ditto Project
Forum
Jenkins
Mailing list archives
Gitter.im chat
Eclipse Ditto version:
development
1.0
1.1
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
Jens Reimann
Julian
@JulianFeinauer
Its harcoded in Ditto to use https, I think
66 replies
mangexl
@mangexl
@thjaeckle Thanks! I am trying to find which/how to provide the adress to use for the service discovery in ditto. If i have an address for example ditto-test.com that shall be used for discovery, do you know how I could provide it?
Thomas Jaeckle
@thjaeckle
@mangexl that should be controllable via this configuration section: https://github.com/eclipse/ditto/blob/master/services/utils/config/src/main/resources/ditto-akka-config.conf#L62
by default, ditto-cluster is used as DNS name to use for discovery .. also have a look at the Akka reference configuration for the details on those options:https://github.com/akka/akka-management/blob/master/cluster-bootstrap/src/main/resources/reference.conf#L30
to use ditto-test.com as DNS address I would overwrite the effective-name .. that one should be the "total" overwrite for DNS discovery
Alexander Wellbrock
@lionax_gitlab
Jens Reimann
@ctron
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
Thomas Jaeckle
@thjaeckle
aah, yes - sorry, I mixed that up as wellit should still work that way you configured itdid you maybe configure an explicit header mapping in the target or in the source which now doesn't contain a mapping of the "correlation-id" header?
Thomas Jaeckle
@thjaeckle
the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some pointsome "fake headers" may now be used in a headerMapping for MQTT 3, see: https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mappingbut to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs
Alexander Wellbrock
@lionax_gitlab
The connectivity service logs a lot of [WARN] No publish flow registered for MqttStatefulPublish... Might that be related?
It seems that while the targets are working finde the sources cause some problem right now. It seems that I'm also only sometimes able to get a working creation command executed in ditto if it's received by ditto via mqtt-source.I'm not using any header mapping right now. The app just sets the header object in the response payload before handing it over to mqtt->ditto-source
Thomas Jaeckle
@thjaeckle
the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
robmontalvojr
Stefan Maute
@stmaute
@sheldonTest No problem. Here is the link to our documentation: https://www.eclipse.org/ditto/installation-building.html
Thomas Jaeckle
@thjaeckle
@sheldonTest are you sure that you want/need to build Ditto - or do you just want to try out the helloworld example?in that case you don't need to build Ditto, just use the official Docker images and go ahead starting it, e.g. with docker compose:https://www.eclipse.org/ditto/installation-running.htmlOr in a Kubernetes cluster: https://github.com/eclipse/ditto/tree/master/deployment/kubernetesOr using the Helm chart: https://github.com/eclipse/ditto/tree/master/deployment/helm
mangexl
@mangexl
Hello, I am looking at setting up a ditto cluster using akka-dns service discovery (running AWS/ECS). Do you know if this is possible with current implementation? I see that default discovery method is akka-dns in ditto-akka-config.conf. But I do not find any maven dependency for akka-discovery-dns.
Thomas Jaeckle
@thjaeckle
@mangexl for using akka-dns, no additional dependency is required and this is the default, yessee the Akka doc: https://doc.akka.io/docs/akka/current/discovery/index.html#discovery-method-dnsso that should be possible on AWS/ECSadditionally, there is another possibility for ECS as well: https://doc.akka.io/docs/akka-management/current/discovery/aws.html#discovery-method-aws-api-ecs-discoveryfor that however we would need another depedency: com.lightbend.akka.discovery:akka-discovery-aws-api_2.13 or com.lightbend.akka.discovery:akka-discovery-aws-api-async_2.13
Patrick Sernetz
The connectivity service logs a lot of [WARN] No publish flow registered for MqttStatefulPublish... Might that be related?
It seems that while the targets are working finde the sources cause some problem right now. It seems that I'm also only sometimes able to get a working creation command executed in ditto if it's received by ditto via mqtt-source.I'm not using any header mapping right now. The app just sets the header object in the response payload before handing it over to mqtt->ditto-source
Thomas Jaeckle
@thjaeckle
the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
robmontalvojr
@robmontalvojr
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
Julian
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
GitHub - eclipse/ditto-examples: Ditto Examples
Java
JavaScript
Ditto Protocol
Overview
Twin/live channel
Specification
Protocol topic
Things group
→ commands/events
Create/Modify
Retrieve
Delete
Acknowledgements
Errors
→ search/messages
Search
Messages
Thomas Jaeckle
@thjaeckle
aah, yes - sorry, I mixed that up as wellit should still work that way you configured itdid you maybe configure an explicit header mapping in the target or in the source which now doesn't contain a mapping of the "correlation-id" header?
Thomas Jaeckle
@thjaeckle
the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some pointsome "fake headers" may now be used in a headerMapping for MQTT 3, see: https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mappingbut to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs
Alexander Wellbrock
@lionax_gitlab
The connectivity service logs a lot of [WARN] No publish flow registered for MqttStatefulPublish... Might that be related?
It seems that while the targets are working finde the sources cause some problem right now. It seems that I'm also only sometimes able to get a working creation command executed in ditto if it's received by ditto via mqtt-source.I'm not using any header mapping right now. The app just sets the header object in the response payload before handing it over to mqtt->ditto-source
Thomas Jaeckle
@thjaeckle
the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
Thomas Jaeckle
@thjaeckle
the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some pointsome "fake headers" may now be used in a headerMapping for MQTT 3, see: https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mappingbut to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs
Alexander Wellbrock
@lionax_gitlab
The connectivity service logs a lot of [WARN] No publish flow registered for MqttStatefulPublish... Might that be related?
It seems that while the targets are working finde the sources cause some problem right now. It seems that I'm also only sometimes able to get a working creation command executed in ditto if it's received by ditto via mqtt-source.I'm not using any header mapping right now. The app just sets the header object in the response payload before handing it over to mqtt->ditto-source
Thomas Jaeckle
@thjaeckle
the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
robmontalvojr
@robmontalvojr
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
Julian
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
Did something change with the mqtt / connectivity system regarding responses for ditto live messages? I'm using a HTTP client to issue a live message which is then forwarded via mqtt to some application doing stuff and returning a response via mqtt back to ditto. To get request and response correlated I used to have a correlation-id header with the response using the id from the request. That used to work a while ago but now doesn't. I've verified that ditto writes the message to mqtt broker, the broker transmits it to the app and the app sends a response with correlation-id header. Then nothing except for a timeout at the HTTP client...
Thomas Jaeckle
@thjaeckle
the "replyTarget" in a connection's target defines on which address responses are consumed for outgoing messages Ditto sends (in this case published to a MQTT topic)previously that was purely defined by the "reply-to" header (which should also be the default for the "replyTarget" "address", isn't it?)the "replyTarget" lets you additionally defined header mappings and expected response types (e.g. in order to only receive "errors", but no successful "responses") for consumed responses (and is therefore similar to a "source", defined in the "target" but only for responses)so does you HTTP live message request define a "reply-to" header? if not, the "replyTarget.address" may also be filled with a static reply address where the MQTT device sends its replies todid you previously define a separate "source" for the replies?
Alexander Wellbrock
@lionax_gitlab
Currently there is a mqtt target where ditto writes the request from the HTTP client. The app then writes it's response to another topic where ditto has a mqtt-source configured for. The app uses the same ditto mqtt-source for answering messages as well as sending commands / signals / messages itself
I just noticed that I did not mention, that the replyTarget is set in my mqtt-source configuration, not the target configuration
Thomas Jaeckle
@thjaeckle
aah, yes - sorry, I mixed that up as wellit should still work that way you configured itdid you maybe configure an explicit header mapping in the target or in the source which now doesn't contain a mapping of the "correlation-id" header?
Thomas Jaeckle
@thjaeckle
the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some pointsome "fake headers" may now be used in a headerMapping for MQTT 3, see: https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mappingbut to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs
Alexander Wellbrock
Modify a Thing
Retrieve a Thing
Retrieve multiple Things
Modify the Policy ID of a Thing
Create Attributes
Delete Attributes
Modify Attributes
Retrieve Attributes
Create a single Attribute
Delete a single Attribute
Modify a single Attribute
Retrieve a single Attribute
Create a Definition
Delete a Definition
Modify a Definition
Retrieve a Definition
Create Features
Delete Features
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
@thjaeckle
post:
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
With this approach your devices are turned into services with a hosted, always accessible and available API.
Devices managed by Ditto are usable as easy as any of the other services (like weather, maps, ...) within your application.
State management for Digital Twins
A digital representation of physical devices consists at its heart of the state these devices.
For IoT solutions the following information regarding state is most relevant:
Device and sensor properties like temperature, location, level, fault information, etc.
Configuration properties of sensors and actors like thresholds, intervals, ranges, toggles and limits, etc.
A good representation of this state in a Digital Twin should support different perspectives for these properties:
Reported property values based on the last transmission to the back end
Desired target property value for configuration properties
Live perspective reflecting the properties values at the current point of time
The state management provides access to all three different perspectives and helps in synchronizing between them.
Organize your set of Digital Twins
When interacting with huge amounts of devices, it can get difficult to keep track of which devices and devices types are there and how they are related (e.g. spatially).
It is wise to add meta data like e.g. manufacturer, model information, static geographic location, serial number or software version to devices in order to find them again later.
That meta data as well as the state data is automatically indexed by Ditto which leads to fast search responses provided by the search API, even when there are millions of devices to search in.
1.2
1.3
1.4
Important: This documentation reflects the latest 'development'. You might want to choose a released version.
Introduction
Overview
Digital twins
Hello world
Release Notes
1.4.0
1.3.0
1.2.1
1.2.0
1.1.5
1.1.3
1.1.2
1.1.1
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
Did something change with the mqtt / connectivity system regarding responses for ditto live messages? I'm using a HTTP client to issue a live message which is then forwarded via mqtt to some application doing stuff and returning a response via mqtt back to ditto. To get request and response correlated I used to have a correlation-id header with the response using the id from the request. That used to work a while ago but now doesn't. I've verified that ditto writes the message to mqtt broker, the broker transmits it to the app and the app sends a response with correlation-id header. Then nothing except for a timeout at the HTTP client...
Thomas Jaeckle
@thjaeckle
the "replyTarget" in a connection's target defines on which address responses are consumed for outgoing messages Ditto sends (in this case published to a MQTT topic)previously that was purely defined by the "reply-to" header (which should also be the default for the "replyTarget" "address", isn't it?)the "replyTarget" lets you additionally defined header mappings and expected response types (e.g. in order to only receive "errors", but no successful "responses") for consumed responses (and is therefore similar to a "source", defined in the "target" but only for responses)so does you HTTP live message request define a "reply-to" header? if not, the "replyTarget.address" may also be filled with a static reply address where the MQTT device sends its replies todid you previously define a separate "source" for the replies?
Alexander Wellbrock
@lionax_gitlab
Currently there is a mqtt target where ditto writes the request from the HTTP client. The app then writes it's response to another topic where ditto has a mqtt-source configured for. The app uses the same ditto mqtt-source for answering messages as well as sending commands / signals / messages itself
I just noticed that I did not mention, that the replyTarget is set in my mqtt-source configuration, not the target configuration
Thomas Jaeckle
@thjaeckle
aah, yes - sorry, I mixed that up as wellit should still work that way you configured itdid you maybe configure an explicit header mapping in the target or in the source which now doesn't contain a mapping of the "correlation-id" header?
Thomas Jaeckle
@thjaeckle
the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some pointsome "fake headers" may now be used in a headerMapping for MQTT 3, see: https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mappingbut to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs
Alexander Wellbrock
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
_
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@robmontalvojr
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
Julian
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
Is it possible to use ditto with keycloak without using https. I am creating a rather simple environment for a little workshop. The workshop will be onsite and cloud-less so no chance to use proper certificates and I really would like to skip the part of installing self-signed certs to the different machines.
Julian
@JulianFeinauer
AFAIR as I remember it is not
Its harcoded in Ditto to use https, I think
66 replies
mangexl
@mangexl
@thjaeckle Thanks! I am trying to find which/how to provide the adress to use for the service discovery in ditto. If i have an address for example ditto-test.com that shall be used for discovery, do you know how I could provide it?
Thomas Jaeckle
@thjaeckle
@mangexl that should be controllable via this configuration section: https://github.com/eclipse/ditto/blob/master/services/utils/config/src/main/resources/ditto-akka-config.conf#L62
by default, ditto-cluster is used as DNS name to use for discovery .. also have a look at the Akka reference configuration for the details on those options:https://github.com/akka/akka-management/blob/master/cluster-bootstrap/src/main/resources/reference.conf#L30
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Policies group
→ commands/events
Create/Modify
Retrieve
Delete
Bindings
Examples
→ Things examples
Create a Thing
Delete a Thing
Modify a Thing
Retrieve a Thing
Retrieve multiple Things
Modify the Policy ID of a Thing
Create Attributes
Delete Attributes
Modify Attributes
Retrieve Attributes
robmontalvojr
@robmontalvojr
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
Julian
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
similar to kafka, AMQP or MQTT notifying you of a new message
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
@lionax_gitlab
The connectivity service logs a lot of [WARN] No publish flow registered for MqttStatefulPublish... Might that be related?
It seems that while the targets are working finde the sources cause some problem right now. It seems that I'm also only sometimes able to get a working creation command executed in ditto if it's received by ditto via mqtt-source.I'm not using any header mapping right now. The app just sets the header object in the response payload before handing it over to mqtt->ditto-source
Thomas Jaeckle
@thjaeckle
the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
robmontalvojr
@robmontalvojr
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
Julian
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
@robmontalvojr
Modify Features
Retrieve Features
Create a single Feature
Delete a single Feature
Modify a single Feature
Retrieve a single Feature
Create Feature Definition
Delete Feature Definition
Modify Feature Definition
Retrieve Feature Definition
Create Feature Properties
Delete Feature Properties
Modify Feature Properties
Retrieve Feature Properties
Create a single Property
Delete a single Property
Modify a single Property
Retrieve a single Property
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
parameters:
When working with sets of devices authorization information is used to determine the visibility of devices to individuals and control who can change device data.
Features at a glance
Unified resource-based HTTP JSON API representing devices
Definition of a simple "Digital Twin State Management Protocol" using JSON for command- and events-based interaction with devices
Websocket API based on this protocol in addition to the resource-based HTTP API
Establishing and maintaining connections to AMQP 0.9.1, AMQP 1.0, MQTT and Apache Kafka endpoints
Managing device meta data via APIs
Optionally configure and enforce a schema for device state (via Eclipse Vorto)
Schema evolution support for schema based device state
Accessing and setting different state perspectives
Live
Reported
Desired
Notification about changes of device resources via HTTP Server-sent events (SSE)
1.1.0
1.0.0
0.9.0
0.8.0
Milestone releases
1.0.0-M2
1.0.0-M1a
0.9.0-M2
0.9.0-M1
0.8.0-M3
0.8.0-M2
0.8.0-M1
0.3.0-M2
0.3.0-M1
0.2.0-M1
0.1.0-M3
0.1.0-M1
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@lionax_gitlab
The connectivity service logs a lot of [WARN] No publish flow registered for MqttStatefulPublish... Might that be related?
It seems that while the targets are working finde the sources cause some problem right now. It seems that I'm also only sometimes able to get a working creation command executed in ditto if it's received by ditto via mqtt-source.I'm not using any header mapping right now. The app just sets the header object in the response payload before handing it over to mqtt->ditto-source
Thomas Jaeckle
@thjaeckle
the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
robmontalvojr
@robmontalvojr
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
to use ditto-test.com as DNS address I would overwrite the effective-name .. that one should be the "total" overwrite for DNS discovery
Alexander Wellbrock
@lionax_gitlab
Did something change with the mqtt / connectivity system regarding responses for ditto live messages? I'm using a HTTP client to issue a live message which is then forwarded via mqtt to some application doing stuff and returning a response via mqtt back to ditto. To get request and response correlated I used to have a correlation-id header with the response using the id from the request. That used to work a while ago but now doesn't. I've verified that ditto writes the message to mqtt broker, the broker transmits it to the app and the app sends a response with correlation-id header. Then nothing except for a timeout at the HTTP client...
Thomas Jaeckle
@thjaeckle
the "replyTarget" in a connection's target defines on which address responses are consumed for outgoing messages Ditto sends (in this case published to a MQTT topic)previously that was purely defined by the "reply-to" header (which should also be the default for the "replyTarget" "address", isn't it?)the "replyTarget" lets you additionally defined header mappings and expected response types (e.g. in order to only receive "errors", but no successful "responses") for consumed responses (and is therefore similar to a "source", defined in the "target" but only for responses)so does you HTTP live message request define a "reply-to" header? if not, the "replyTarget.address" may also be filled with a static reply address where the MQTT device sends its replies todid you previously define a separate "source" for the replies?
Alexander Wellbrock
@lionax_gitlab
Currently there is a mqtt target where ditto writes the request from the HTTP client. The app then writes it's response to another topic where ditto has a mqtt-source configured for. The app uses the same ditto mqtt-source for answering messages as well as sending commands / signals / messages itself
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Create a single Attribute
Delete a single Attribute
Modify a single Attribute
Retrieve a single Attribute
Create a Definition
Delete a Definition
Modify a Definition
Retrieve a Definition
Create Features
Delete Features
Modify Features
Retrieve Features
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
@thjaeckle
post:
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
Error responses
→ Policies examples
Create a Policy
Delete a Policy
Modify a Policy
Retrieve a Policy
Modify entries
Retrieve entries
Create a single entry
Delete a single entry
Modify a single entry
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
description: |-
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
description: |-
Authorization/Access control at device API enforcing that only allowed individuals may read/write
Search HTTP API accepting predicate-based query language
Emit events resulting from state changes of devices which can be used
for building up a "transaction log" (e.g. using Apache Kafka)
as source for stream processing (e.g. via Apache Spark Streaming)
for building up additional persistence representations (e.g. into an InfluxDB providing optimized access to the history of a device's state properties)
for transmitting data into data analytic tools (e.g. into an Apache Hadoop HDFS)
Out-of-box integration with Eclipse Hono for communication with devices using standard or custom device protocols
Integrate Ditto in a IoT landscape
Ditto is especially useful in the context of a larger IoT landscape. In this landscape the other important aspects of a IoT solution like device communication or data analytics are covered by distinct components.
Installation
Building Ditto
Running Ditto
Operating Ditto
Basic concepts
Overview
Model entities
Thing
Access Control List (ACL)
Feature
Policy
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
Julian
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
@thjaeckle
post:
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
_
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
I just noticed that I did not mention, that the replyTarget is set in my mqtt-source configuration, not the target configuration
Thomas Jaeckle
@thjaeckle
aah, yes - sorry, I mixed that up as wellit should still work that way you configured itdid you maybe configure an explicit header mapping in the target or in the source which now doesn't contain a mapping of the "correlation-id" header?
_
Thomas Jaeckle
@thjaeckle
the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some pointsome "fake headers" may now be used in a headerMapping for MQTT 3, see: https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mappingbut to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs
Alexander Wellbrock
@lionax_gitlab
The connectivity service logs a lot of [WARN] No publish flow registered for MqttStatefulPublish... Might that be related?
It seems that while the targets are working finde the sources cause some problem right now. It seems that I'm also only sometimes able to get a working creation command executed in ditto if it's received by ditto via mqtt-source.I'm not using any header mapping right now. The app just sets the header object in the response payload before handing it over to mqtt->ditto-source
Thomas Jaeckle
@thjaeckle
@robmontalvojr
Thank you for your patience.
_
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Add InfluxDB example by damian-gallo · Pull Request #39 · eclipse/ditto-examples · GitHub
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
Create a single Feature
Delete a single Feature
Modify a single Feature
Retrieve a single Feature
Create Feature Definition
Delete Feature Definition
Modify Feature Definition
Retrieve Feature Definition
Create Feature Properties
Delete Feature Properties
Modify Feature Properties
Retrieve Feature Properties
Create a single Property
Delete a single Property
Modify a single Property
Retrieve a single Property
_
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
_
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
_
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
Retrieve a single entry
Modify subjects
Retrieve subjects
Create a single subject
Delete a single subject
Modify a single subject
Retrieve a single subject
Modify resources
Retrieve resources
Create a single resource
Delete a single resource
Modify a single resource
Retrieve a single resource
Error responses
→ Search examples
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
description: The request could not be completed due to missing authentication.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
description: |-
The request could not be completed. Possible reasons:
The most important integration aspect is the device communication. This is essential for the Digital Twins to really be twins of real-world physical devices.
In addition to provide a custom device communication layer Ditto will provide an out-of-the-box integration with Eclipse Hono to support device communication.
In this scenario Ditto uses Eclipse Hono in order to receive messages (e.g. state changes) from devices and to send messages (e.g. configuration changes) to devices.
Licenses: Eclipse Public License 2.0Latest Releases: From December 12th, 2019 to October 28th, 2020
NameDateReview
1.4.02020-10-28
1.3.02020-09-30
1.2.12020-09-08
1.2.02020-08-31
1.1.52020-08-25
1.1.32020-07-20
1.1.22020-07-01
1.1.12020-05-11
1.1.02020-04-29
Namespaces and Names
Thing Metadata
Errors
Authentication and Authorization
Messages
Signals
Signal types
Command
Command response
Error response
Event
APIs
Connections
Placeholders
Change notifications
RQL expressions
Signal enrichment
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
_
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
description: |-
The message was sent but not necessarily received by the Feature
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
@thjaeckle
post:
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
robmontalvojr
@robmontalvojr
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
Julian
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
Index of ditto-dev for October 2020
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
ditto-examples
Error responses
→ Policies examples
Create a Policy
Delete a Policy
Modify a Policy
Retrieve a Policy
Modify entries
Retrieve entries
Create a single entry
Delete a single entry
Modify a single entry
Retrieve a single entry
Modify subjects
Retrieve subjects
Create a single subject
Delete a single subject
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
description: |-
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
Sandbox
Presentations
Glossary
Feedback
Collapse All | Expand All
MQTT 3.1.1 protocol binding
Consume messages from MQTT brokers via sources and send messages to MQTT brokers via
targets.
Content-type
When MQTT messages are sent in Ditto Protocol,
the payload should be UTF-8 encoded strings.
If messages, which are not in Ditto Protocol, should be processed, a payload mapping must
be configured for the connection in order to transform the messages.
MQTT 3.1.1 properties
MQTT 3.1.1 messages have no application headers. Transmission-relevant properties are set in the
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
@lionax_gitlab
1.0.02019-12-12
Active Member Companies: Member companies supporting this project over the last three months.
Contribution Activity: Commits on this project (last 12 months).
Project Links
Website
Documentation
Related Projects
Related Projects:Eclipse IoTEclipse Hono
Eclipse Vorto
Eclipse TechnologyEclipse OpenJ9
Project Hierarchy:Eclipse IoT
Eclipse Ditto
Search
Acknowledgements / QoS
Architecture
Overview
Services
Policies
Things
Things-Search
Connectivity
Concierge
Gateway
HTTP API
Overview
Concepts
Search
Messages
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
Thomas Jaeckle
@thjaeckle
post:
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
description: The request could not be completed due to missing authentication.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
description: |-
The message was sent but not necessarily received by the Feature
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Skip to main content
Edit my account
Manage Cookies
Donate
Members
Working Groups
Projects
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Watch
16
Star
35
Fork
20
Ditto Examples
EPL-2.0 License
35
stars
20
forks
Star
Watch
Code
Modify a single subject
Retrieve a single subject
Modify resources
Retrieve resources
Create a single resource
Delete a single resource
Modify a single resource
Retrieve a single resource
Error responses
→ Search examples
Sandbox
Presentations
Glossary
Feedback
Collapse All | Expand All
WebSocket protocol binding
Ditto Protocol messages can be sent as is as WebSocket message.
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
description: The request could not be completed due to missing authentication.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"headers" field as a part of Ditto protocol messages in the
payload.
This property is supported:
correlation-id: For correlating request messages and events. Twin events have the correlation IDs of
Twin commands that produced them.
Specific connection configuration
The common configuration for connections in Connections > Sources and
Connections > Targets applies here as well.
Following are some specifics for MQTT connections:
Source format
For an MQTT connection:
Source "addresses" are MQTT topics to subscribe to. Wildcards + and # are allowed.
has no application headers.
The optional field "qos" sets the maximum Quality of Service to request when subscribing for messages. Its value
can be 0 for at-most-once delivery, 1 for at-least-once delivery and 2 for exactly-once delivery.
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Alexander Wellbrock
@lionax_gitlab
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
Alexander Wellbrock
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
_
Sign in to start talking
Tags
Technology TypesInternet of Things
Other Tagstwin
iot
Eclipse Foundation
About UsContact UsDonateMembersGovernanceCode of ConductLogo and ArtworkBoard of Directors
Legal
Privacy PolicyTerms of UseCopyright AgentEclipse Public LicenseLegal Resources
Useful Links
Report a BugDocumentationHow to ContributeMailing ListsForumsMarketplace
Other
IDE and ToolsProjectsWorking GroupsResearch@EclipseReport a VulnerabilityService Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
WebSocket protocol binding
Server sent events
Connectivity API
Overview
Manage connections
AMQP 0.9.1 protocol binding
AMQP 1.0 protocol binding
MQTT 3.1.1 protocol binding
MQTT 5 protocol binding
HTTP 1.1 protocol binding
Kafka 2.x protocol binding
Payload mapping
Header mapping
TLS certificates
Client SDK
Overview
@thjaeckle
post:
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
GitHub - eclipse/ditto: Eclipse Ditto Project
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
description: |-
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
_
Alexander Wellbrock
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
description: The request could not be completed due to missing authentication.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
More
Community
Marketplace
Events
Planet Eclipse
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Issues
2
Pull requests
5
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
The Ditto Protocol JSON must be sent as UTF-8 encoded String payload.
WebSocket features
The WebSocket provides an alternative to the HTTP API in order to manage your digital twins.
The benefits of the WebSocket compared to HTTP are multiple ones:
a single connection (socket like) is established and for commands to digital twins no further HTTP overhead
(e.g. HTTP headers, HTTP connection establishment) is produced which means you can get more commands/seconds
through the WebSocket compared to the HTTP endpoint
as the WebSocket is a duplex connection, change notifications can be sent via the
WebSocket for changes to entities done in Ditto
additionally, messages and live commands/events can be exchanged
(sending and receiving) via multiple connected WebSocket sessions
Please keep in mind that every web WebSocket connection will receive all events and messages it is allowed to receive
depending on the provided authentication.
There is no round-robin dispatching for WebSockets using the same authentication.
Warning: This means that WebSockets are not meant to be used for scenarios where horizontal
scaling should be applied.
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Alexander Wellbrock
@lionax_gitlab
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
Alexander Wellbrock
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
The default value is 2 (exactly-once).
Support of any Quality of Service depends on the external MQTT broker; AWS IoT for example does not
acknowledge subscriptions with qos=2.
{
"addresses": [
"<mqtt_topic>",
"..."
],
"authorizationContext": ["ditto:inbound-auth-subject", "..."],
"qos": 2
}
Note: This example assumes that there is a valid user named ditto:inbound-auth-subject in Ditto.
If you want to use a user for the basic auth (from the HTTP API) use the prefix nginx:, e.g. nginx:ditto.
See Basic Authentication for more information.
Source header mapping
MQTT 3.1.1 does not support headers in its protocol, however Ditto extracts the following headers from each consumed message:
mqtt.topic: contains the MQTT topic on which a message was received
Java
JavaScript
Ditto Protocol
Overview
Twin/live channel
Specification
Protocol topic
Things group
→ commands/events
Create/Modify
Retrieve
Delete
Acknowledgements
Errors
→ search/messages
Search
Messages
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
description: |-
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
description: The request could not be completed due to missing authentication.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Alexander Wellbrock
@lionax_gitlab
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
Alexander Wellbrock
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
Sign in to start talking
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Sign in to start talking
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
ditto-examples
Watch
16
Star
35
Fork
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
master
5
branches
0
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
For those scenarios we suggest using the Connectivity API.
Send commands and get responses
When sending a command via WebSocket you will receive a corresponding response (the response can be related to the
request by the correlation-id header).
The response indicates the success or the failure of the command and, depending on the command type, contains the result
payload.
Please find examples of commands and their response pattern at Protocol examples.
Request receiving events/change notifications
In addition to the response, which Ditto addresses directly to the instance which was sending the command, an event
is generated.
This will be delivered to all other clients with read permissions for the respective thing, feature change, etc.
See request events for subscribing/unsubscribing for receiving change notifications.
Request receiving messages
Messages can be sent both via the HTTP API and the WebSocket. Receiving
messages and answering to them however can only be done via the WebSocket.
See request messages for subscribing/unsubscribing for receiving messages.
Request receiving live commands + events
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
Sign in to start talking
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
mqtt.qos: contains the MQTT QoS value of a received message
mqtt.retain: contains the MQTT retain flag of a received message
These headers may be used in a source header mapping, e.g.:
{
"headerMapping": {
}
}
Source acknowledgement handling
For MQTT 3.1.1 sources, when configuring
acknowledgement requests, consumed messages from the MQTT 3.1.1
broker are treated in the following way:
For Ditto acknowledgements with successful status:
Acknowledges the received MQTT 3.1.1 message
For Ditto acknowledgements with mixed successful/failed status:
If some of the aggregated acknowledgements require redelivery (e.g. based on a timeout):
based on the specificConfig reconnectForDelivery either
closes and reconnects the MQTT connection in order to receive unACKed QoS 1/2 messages again
Policies group
→ commands/events
Create/Modify
Retrieve
Delete
Bindings
Examples
→ Things examples
Create a Thing
Delete a Thing
Modify a Thing
Retrieve a Thing
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
description: The request could not be completed due to missing authentication.
content:
application/json:
schema:
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Alexander Wellbrock
@lionax_gitlab
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
Alexander Wellbrock
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
Sign in to start talking
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Sign in to start talking
Alexander Wellbrock
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
@thjaeckle
post:
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Newcomer Forum
Search
Toggle navigation
Breadcrumbs
Home
Contribute
Source code
Index of ditto-dev for October 2020
Index by Thread Index by Year [First Page] [Prev Page][Next Page] [Last Page]October 25, 2020[ditto-dev] Seeking guidance re: Ditto, Hono, and Cloud2edge package Posted 06:39 by Robinson Montalvo
Mail converted by MHonArc
Back to the top
Eclipse Foundation
About Us
Contact Us
Donate
20
Code
Issues
2
Pull requests
5
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
In order to receive live commands and events, the WebSocket API can be used. The Ditto Protocol
messages are the same as for the “twin” channel, only with live as channel in the
topic.
See request live commands and request live events for
subscribing/unsubscribing for receiving live commands and events.
WebSocket endpoint
The WebSocket endpoint is accessible at these URLs (depending on which API version to use):
ws://localhost:8080/ws/1
ws://localhost:8080/ws/2
Authentication
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
Sign in to start talking
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
Sign in to start talking
or simply acknowledges the received MQTT 3.1.1 message
If none of the aggregated acknowledgements require redelivery:
acknowledges the received MQTT 3.1.1 message as redelivery does not make sense
Target format
For an MQTT connection, the target address is the MQTT topic to publish events and messages to.
The target address may contain placeholders; see
placeholders section for more information.
Further, "topics" is a list of strings, each list entry representing a subscription of
Ditto protocol topics.
Outbound messages are published to the configured target address if one of the subjects in "authorizationContext"
has READ permission on the thing, which is associated with a message.
The additional field "qos" sets the Quality of Service with which messages are published.
Its value can be 0 for at-most-once delivery, 1 for at-least-once delivery and 2 for exactly-once delivery.
Support of any Quality of Service depends on the external MQTT broker.
The default value is 0 (at-most-once).
{
"topics": [
Retrieve multiple Things
Modify the Policy ID of a Thing
Create Attributes
Delete Attributes
Modify Attributes
Retrieve Attributes
Create a single Attribute
Delete a single Attribute
Modify a single Attribute
Retrieve a single Attribute
Create a Definition
Delete a Definition
Modify a Definition
Retrieve a Definition
Create Features
Delete Features
$ref: '#/components/schemas/AdvancedError'
'403':
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Sign in to start talking
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
Alexander Wellbrock
@lionax_gitlab
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
_
Alexander Wellbrock
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
Sign in to start talking
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
Governance
Logo and Artwork
Board of Directors
Legal
Privacy Policy
Terms of Use
Copyright Agent
Eclipse Public License
Legal Resources
Useful Links
Report a Bug
Documentation
How to Contribute
Mailing Lists
Forums
Marketplace
Other
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
Have a question about this project? Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our terms of service and
privacy statement. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
thjaeckle
Merge pull request #39 from damian-gallo/add_influxdb_example
…
40a4a92
Aug 3, 2020
Merge pull request #39 from damian-gallo/add_influxdb_example
Add InfluxDB example
40a4a92
Git stats
116
commits
Files
Permalink
A user who connects to the WebSocket endpoint can be authenticated by using
HTTP BASIC Authentication by providing a username and the password of a user managed within nginx or
a JSON Web Token (JWT) issued by an OpenID connect provider.
See Authenticate for more details.
WebSocket protocol format
As defined in the Protocol specification a Ditto Protocol message consists of different
information. This information is combined into a single JSON message for the WebSocket endpoint:
topic: JSON string with key topic
headers: JSON object with key headers
path: JSON string with key path
value: JSON value (e.g. JSON object, string, array, …) with key value
status (for responses): JSON number with key status
The schema for Ditto Protocol message via WebSocket:
{
"topic": "<the topic>",
"headers": {
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Sign in to start talking
"_/_/things/twin/events",
"_/_/things/live/messages"
],
"authorizationContext": ["ditto:outbound-auth-subject", "..."],
"qos": 0
}
Target header mapping
As MQTT 3.1.1 does not support headers in its protocol, a header mapping is not possible to configure here.
Target acknowledgement handling
For MQTT 3.1.1 targets, when configuring
automatically issued acknowledgement labels, requested
acknowledgements are produced in the following way:
Once the MQTT 3.1.1 client signals that the message was acknowledged by the MQTT 3.1.1 broker, the following information
is mapped to the automatically created acknowledgement:
Acknowledgement.status:
will be 200, if the message was successfully ACKed by the MQTT 3.1.1 broker or when the target has QoS 0
Modify Features
Retrieve Features
Create a single Feature
Delete a single Feature
Modify a single Feature
Retrieve a single Feature
Create Feature Definition
Delete Feature Definition
Modify Feature Definition
Retrieve Feature Definition
Create Feature Properties
Delete Feature Properties
Modify Feature Properties
Retrieve Feature Properties
Create a single Property
Delete a single Property
Modify a single Property
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
_
Alexander Wellbrock
@lionax_gitlab
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
Alexander Wellbrock
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
Sign in to start talking
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
ditto
Watch
36
Star
213
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
description: |-
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
IDE and Tools
Community of Projects
Working Groups
Research@Eclipse
Report a Vulnerability
Service Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
to your account
Jump to bottom
Add InfluxDB example
#39
Merged
thjaeckle
merged 1 commit into
eclipse:master
from
damian-gallo:add_influxdb_example
Aug 3, 2020
Merged
Add InfluxDB example
#39
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
azure
grove-ctrl
influxdb
java-client
kata
legal
mqtt-bidirectional
octopus-via-hono
payload-mapping-testing
plc4x
rest-to-websocket
"correlation-id": "<a correlation-id>",
"a-header": "<header value>"
},
"path": "<the path>",
"value": {
}
}
WebSocket binding specific messages
The WebSocket binding defines several specific messages which are not defined in the Ditto Protocol specification.
Those are also not defined as JSON messages, but as plain text messages. All of those declare a demand for some kind
of information from the backend to be pushed into the WebSocket session.
Request events
In order to subscribe for events/change notifications for entities (e.g. Things),
following text message has to be sent to the backend: START-SEND-EVENTS
From then on the WebSocket session will receive all change notifications it is entitled to see.
Request messages
will be 503, if the MQTT 3.1.1 broker ran into an error before an acknowledgement message was received
Acknowledgement.value:
will be missing, for status 200
will contain more information, in case that an error status was set
Specific Configuration
The MQTT 3.1.1 binding offers additional specific configurations
to apply for the used MQTT client.
Overall example JSON of the MQTT "specificConfig":
{
"id": "mqtt-example-connection-123",
"connectionType": "mqtt",
"connectionStatus": "open",
"failoverEnabled": true,
"uri": "tcp://test.mosquitto.org:1883",
"specificConfig": {
"clientId": "my-awesome-mqtt-client-id",
"reconnectForRedelivery": true,
Retrieve a single Property
Error responses
→ Policies examples
Create a Policy
Delete a Policy
Modify a Policy
Retrieve a Policy
Modify entries
Retrieve entries
Create a single entry
Delete a single entry
Modify a single entry
Retrieve a single entry
Modify subjects
Retrieve subjects
Create a single subject
Delete a single subject
Fork
72
Eclipse Ditto Project
eclipse.org/ditto/
EPL-2.0 License
213
stars
72
forks
Star
Watch
Code
Issues
52
Pull requests
1
'401':
description: The request could not be completed due to missing authentication.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
thjaeckle
merged 1 commit into
eclipse:master
from
damian-gallo:add_influxdb_example
Aug 3, 2020
Conversation
1
Commits
1
Checks
0
Files changed
Conversation
Copy link
Quote reply
Contributor
.gitignore
CONTRIBUTING.md
LICENSE
README.md
View code
README.md
Eclipse Ditto :: Examples
This repository contains examples and demonstrations of how to use Eclipse Ditto.
Projects
grove control
The grove control project shows the different communication possibilities
using Eclipse Ditto on your local machine and a Rasperry Pi with GrovePi+ board
as IoT device. This project uses Python for the Raspberry Pi code and jQuery for the Web UI.
Rest to WebSocket demo
This example shows how to combine the REST and WebSocket API of Eclipse Ditto.
This is demonstrated using a Frontend that sends REST requests and
In order to subscribe for messages which can be sent from a WebSocket session to another
WebSocket session or from the HTTP API to a WebSocket session, the following text message has
to be sent to the backend: START-SEND-MESSAGES
From then on the WebSocket session will receive all messages it is entitled to see.
Request live commands
In order to subscribe for live commands which can be sent from a WebSocket session to another
WebSocket session, the following text message has to be sent to the backend: START-SEND-LIVE-COMMANDS
From then on the WebSocket session will receive all live commands it is entitled to see.
Request live events
In order to subscribe for live events which can be sent from a WebSocket session to another
WebSocket session, the following text message has to be sent to the backend: START-SEND-LIVE-EVENTS
From then on the WebSocket session will receive all live events it is entitled to see.
Overview
The following table shows which WebSocket protocol message are supported:
Description
Request message
Response message
"cleanSession": false,
"separatePublisherClient": true,
"publisherId": "my-awesome-mqtt-publisher-client-id",
"reconnectForRedeliveryDelay": "5s"
},
"sources": ["..."],
"targets": ["..."]
}
clientId
Overwrites the default MQTT client id.
Default: not set - the ID of the Ditto connection is used as MQTT client ID.
reconnectForRedelivery
Configures that the MQTT connection re-connects whenever a consumed message (via a connection source) with QoS 1
(“at least once”) or 2 (“exactly once”)
is processed but cannot be acknowledged successfully.
That causes that the MQTT broker will re-publish the message once the connection reconnected.
If configured to false, the MQTT message is simply acknowledged (PUBACK or PUBREC, PUBREL).
Modify a single subject
Retrieve a single subject
Modify resources
Retrieve resources
Create a single resource
Delete a single resource
Modify a single resource
Retrieve a single resource
Error responses
→ Search examples
Sandbox
Presentations
Glossary
Feedback
Collapse All | Expand All
Authentication and authorization
You can integrate your solutions with Ditto
Actions
Projects
1
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Sign in to start talking
damian-gallo
commented
Aug 1, 2020
Signed-off-by: gallodamian93 gallodamian93@gmail.com
🎉
1
Add InfluxDB example
…
Loading status checks…
0bab7f4
Signed-off-by: gallodamian93 <gallodamian93@gmail.com>
thjaeckle
approved these changes
Aug 3, 2020
View changes
a Thing that has a WebSocket connection to Ditto and uses it to receive
and respond to Messages. This project requires a running Eclipse Ditto
instance and a modern web browser.
Octopus via Hono to Ditto
Arduino based example on a ESP8266 board publishing read out sensor values in Ditto Protocol via
the MQTT endpoint of Eclipse Hono to a digital twin in Ditto:
BME680 sensor
temperature
humidity
barometer
BNO055 sensor
temperature
linear acceleration
angular velocity
gravity
absolute orientation
Subscribe for events/change notifications
START-SEND-EVENTS
START-SEND-EVENTS:ACK
Stop receiving change notifications
STOP-SEND-EVENTS
STOP-SEND-EVENTS:ACK
Subscribe for messages
START-SEND-MESSAGES
START-SEND-MESSAGES:ACK
Stop receiving messages
STOP-SEND-MESSAGES
STOP-SEND-MESSAGES:ACK
Subscribe for live commands
START-SEND-LIVE-COMMANDS
START-SEND-LIVE-COMMANDS:ACK
Stop receiving live commands
STOP-SEND-LIVE-COMMANDS
Default: true
Handle with care:
when set to true, incoming QoS 0 messages are lost during the reconnection phase
when set to true and there is also an MQTT target configured to publish messages,
the messages to be published during the reconnection phase are lost
to fix that, configure "separatePublisherClient" also to true in order to publish via another MQTT connection
when set to false, MQTT messages with QoS 1 and 2 could get lost (e.g. during downtime or connection issues)
cleanSession
Configure the MQTT client’s cleanSession flag.
Default: the negation of "reconnectForRedelivery"
separatePublisherClient
Configures whether to create a separate physical client and connection to the MQTT broker for publishing messages, or not.
By default (configured true), a single Ditto connection would open 2 MQTT connections/sessions: one for subscribing and one for publishing.
via the HTTP API or
via WebSocket.
Authentication to make sure the requester is the one she claims to be,
Authorization to make sure the requester is allowed to see, use or change the information he wants to access.
Authentication
User authentication at the HTTP API
A user who calls the HTTP API can be authenticated using two mechanisms:
Pre-authentication by an HTTP reverse proxy in front of Ditto, e.g. doing HTTP BASIC Authentication by providing
username and password as documented in the installation/operation guide.
A JWT issued by Google or other
OpenID Connect providers as documented in the installation/operation guide.
Single sign-on (SSO)
By configuring an arbitrary OpenID Connect provider (as mentioned above) it is possible for Ditto to participate in SSO
for the following browser based requests:
HTTP API invocations
sending along a JWT token as Authorization header with Bearer value
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
master
6
branches
124
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Copy link
Quote reply
Contributor
thjaeckle
left a comment
LGTM 👍
Thank you very much for this contribution.
Highly appreciated.
👍
1
Hide details
View details
thjaeckle
merged commit 40a4a92
into
accelerometer
magnetometer
power voltage
IoT-Device connected directly to Ditto via MQTT - controlled by a custom solution
This example demonstrates how to connect an Arduino based device to Eclipse Ditto and how
payload mapping can be utilized to transform its telemetry data into a valid digital twin representation.
Furthermore a simple front-end allows manipulating the digital twin and receives twin updates
via SSE (Server Sent Events).
Parts of this example
Arduino
How to establish a network connection
How to establish a MQTT connection
How to receive and publish valid JSON data
Front-end
How to use Ditto's HTTP API for
Create policy and things
STOP-SEND-LIVE-COMMANDS:ACK
Subscribe for live events
START-SEND-LIVE-EVENTS
START-SEND-LIVE-EVENTS:ACK
Stop receiving live commands
STOP-SEND-LIVE-EVENTS
STOP-SEND-LIVE-EVENTS:ACK
Enrichment
When extra fields should be added to outgoing messages on the WebSocket channel, an extraFields parameter can be added
to the request message. This is supported for all request messages:
Description
Request message
Enrich by extra fields
Subscribe for events/change notifications
START-SEND-EVENTS
✔
If configured to false, the same MQTT connection/session is used both: for subscribing to messages, and for
publishing messages.
Default: true
publisherId
Configures a specific MQTT client ID for the case that "separatePublisherClient" is enabled.
Default:
if client ID is configured, clientId + "p"
if no client ID is configured, connectionId + "p"
reconnectForRedeliveryDelay
Configures how long to wait before reconnecting a consumer client for redelivery when "reconnectForRedelivery"
and separatePublisherClient are both enabled. The minimum value is 1s.
Default: 2s
Establishing a connection to an MQTT 3.1.1 endpoint
Establishing a WebSocket connection for bidirectional communication with
Ditto via Ditto Protocol JSON messages
open: sending along the Authorization header containing the Bearer JWT token is not possible in the plain
WebSocket API in the browser - Watch issue #661 for fixing that
Opening a Server sent event connection in order to receive change notifications of twins in the
browser
passing the withCredentials: true option when creating the SSE in the browser
Authorization
Authorization is implemented with an ACL
(in API version 1) or a Policy
(in API version 2).
Please find details at ACL and Policies.
Authorization Context in DevOps Commands
An authorizationContext which is passed to DevOps Commands needs
that is configured for basic auth in the included nginx’s nginx.htpasswd file (where the nginx: prefix comes from).
If you are using the provided docker quickstart example from Getting Started you
ditto-dev Archive (Thread View - Most Recent First)
ditto-dev Archive (Date View)
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio
If nothing happens, download the GitHub extension for Visual Studio and try again.
Go back
Latest commit
eclipse:master
Aug 3, 2020
1 check passed
1 check passed
eclipsefdn/eca
The author(s) of the pull request is covered by necessary legal agreements in order to proceed!
Details
damian-gallo
deleted the
damian-gallo:add_influxdb_example
branch
Aug 3, 2020
Sign up for free
to join this conversation on GitHub.
Already have an account?
Create a connection (MQTT)
Send live messages to device
Listen to server sent events
Eclipse Ditto
How to set up Eclipse Ditto with Docker (alternatively use Ditto's Sandbox)
How to apply payload mapping on incoming messages from a connection
Samples for Microsoft Azure users
Samples to leverage Eclipse Ditto capabilities with Microsoft Azure services.
kata
A code kata is a way of learning new things and consolidating what has been learned. The presented katas serve to
understand specific features of ditto better.
About
Ditto Examples
Resources
Readme
License
EPL-2.0 License
Subscribe for messages
START-SEND-MESSAGES
✔
Subscribe for live commands
START-SEND-LIVE-COMMANDS
✔
Subscribe for live events
START-SEND-LIVE-EVENTS
✔
Analog to the filtering the parameter is defined like an HTTP query parameter, e.g.:
START-SEND-EVENTS?extraFields=attributes/counter,features/ConnectionStatus
START-SEND-MESSAGES?extraFields=attributes
Filtering
In order to only consume specific events like described in change notifications, the
following parameters can additionally be provided when sending the WebSocket protocol messages:
Description
Index of ditto-dev for April 2017
Index of ditto-dev for April 2020
Ditto’s Connectivity service is responsible for creating new and managing
existing connections.
This can be done dynamically at runtime without the need to restart any microservice using a
Ditto DevOps command.
Example:
Connection configuration to create a new MQTT connection:
{
"id": "mqtt-example-connection-123",
"connectionType": "mqtt",
"connectionStatus": "open",
"failoverEnabled": true,
"uri": "tcp://test.mosquitto.org:1883",
"sources": [
{
"addresses": [
"eclipse-ditto-sandbox/#"
],
[ditto-dev] Seeking guidance re: Ditto, Hono, and Cloud2edge package
can simply use nginx:ditto, then the commands that are passed from the connection are executed as if they
were issued via HTTP from the user ditto.
Tags:
model
©2020 Eclipse Ditto.
Site last generated: Nov 2, 2020
> Privacy Policy
> Terms of Use
> Copyright Agent
> Legal
> License
> Report a Vulnerability
Skip to main content
Edit my account
Manage Cookies
Donate
Members
Working Groups
Projects
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Skip to main content
Edit my account
Manage Cookies
Donate
Members
Working Groups
Projects
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
stmaute
Merge pull request #879 from bosch-io/bugfix/amqp-publisher-queue-exc…
…
5fa6a82
Nov 11, 2020
Merge pull request #879 from bosch-io/bugfix/amqp-publisher-queue-exc…
…eption-handling
fix regression about (expected) exceptions thrown in AmqpPublisherActor CompletionStage
5fa6a82
Git stats
6,243
commits
Files
Permalink
Failed to load latest commit information.
Sign in to comment
Reviewers
thjaeckle
Assignees
No one assigned
Labels
None yet
Projects
None yet
Milestone
No milestone
Linked issues
Successfully merging this pull request may close these issues.
None yet
2 participants
Add this suggestion to a batch that can be applied as a single commit.
Releases
No releases published
Packages 0
No packages published
Contributors 14
+ 3 contributors
Languages
Java
61.0%
JavaScript
16.3%
C++
6.9%
HTML
6.8%
Vue
Request message
Filter by namespaces
Filter by RQL expression
Subscribe for events/change notifications
START-SEND-EVENTS
✔
✔
Subscribe for messages
START-SEND-MESSAGES
✔
❌
Subscribe for live commands
START-SEND-LIVE-COMMANDS
✔
❌
Subscribe for live events
START-SEND-LIVE-EVENTS
Skip to main content
Edit my account
Manage Cookies
Donate
Members
Working Groups
Projects
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Skip to main content
Edit my account
Manage Cookies
Donate
Members
Working Groups
Projects
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
"authorizationContext": ["ditto:inbound-auth-subject"],
"qos": 0,
"filters": []
}
],
"targets": [
{
"topics": [
"_/_/things/twin/events"
],
"authorizationContext": ["ditto:outbound-auth-subject"],
"qos": 0
}
Skip to main content
Edit my account
Manage Cookies
Donate
Members
Working Groups
Projects
Community
Marketplace
Events
Planet Eclipse
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
Type
Name
Latest commit message
Commit time
.github/workflows
removed publishing test reports in GH actions
Aug 26, 2020
bom
updated JUnit to 4.13.1
Nov 3, 2020
deployment
reconfigured nginx-cors.conf like docker-compose one: set the "origin…
Sep 29, 2020
documentation
This suggestion is invalid because no changes were made to the code.
Suggestions cannot be applied while the pull request is closed.
Suggestions cannot be applied while viewing a subset of changes.
Only one suggestion per line can be applied in a batch.
Add this suggestion to a batch that can be applied as a single commit.
Applying suggestions on deleted lines is not supported.
You must change the existing code in this line in order to create a valid suggestion.
Outdated suggestions cannot be applied.
This suggestion has been applied or marked resolved.
Suggestions cannot be applied from pending reviews.
Suggestions cannot be applied on multi-line comments.
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
4.0%
Python
3.8%
Other
1.2%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
✔
✔
The parameters are specified similar to HTTP query parameters, the first one separated with a ? and all following ones
with &. You have to URL encode the filter values before using them in a configuration.
For example this way the WebSocket session would register for all events in the namespace org.eclipse.ditto and which
would match an attribute “counter” to be greater than 42:
START-SEND-EVENTS?namespaces=org.eclipse.ditto&filter=gt(attributes/counter,42)
The filtering may be also used in combination with an enrichment, e.g.:
START-SEND-EVENTS?extraFields=attributes&filter=gt(attributes/counter,42)
Tags:
protocol
http
rql
©2020 Eclipse Ditto.
Site last generated: Nov 2, 2020
> Privacy Policy
Blogs
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
More
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
More
Community
Marketplace
]
}
Client-certificate authentication
Ditto supports certificate-based authentication for MQTT connections. Consult
Certificates for Transport Layer Security
for how to set it up.
Here is an example MQTT connection, which checks the broker certificate and authenticates by a client certificate.
{
"id": "mqtt-example-connection-124",
"connectionType": "mqtt",
"connectionStatus": "open",
"failoverEnabled": true,
"uri": "ssl://test.mosquitto.org:8884",
"validateCertificates": true,
"ca": "-----BEGIN CERTIFICATE-----\n<test.mosquitto.org certificate>\n-----END CERTIFICATE-----",
"credentials": {
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
IDE and Tools
Newcomer Forum
More
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Research
IDE and Tools
Newcomer Forum
More
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Merge pull request #865 from bosch-io/feature/desired-properties
Nov 9, 2020
json-cbor
increased binary-compatibility-check version to released 1.3.0
Sep 30, 2020
json
Issue #790 split up ditto-json and ditto-json-cbor
Sep 7, 2020
legal
updated CQs
Oct 21, 2020
model
Merge pull request #865 from bosch-io/feature/desired-properties
Nov 9, 2020
protocol-adapter
Review: Add desired properties in protocol-adapter
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
> Terms of Use
> Copyright Agent
> Legal
> License
> Report a Vulnerability
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
Mailing Lists
Wiki
"type": "client-cert",
"cert": "-----BEGIN CERTIFICATE-----\n<signed client certificate>\n-----END CERTIFICATE-----",
"key": "-----BEGIN PRIVATE KEY-----\n<client private key>\n-----END PRIVATE KEY-----"
},
"sources": [
{
"addresses": [
"eclipse-ditto-sandbox/#"
],
"authorizationContext": ["ditto:inbound-auth-subject"],
"qos": 0,
"filters": []
}
],
"targets": [
{
The Eclipse Ditto Open Source Project on Open Hub
Newcomer Forum
More
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Actions · eclipse/ditto · GitHub
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
Search
Toggle navigation
Breadcrumbs
Home
Contribute
Source code
ditto-dev Archive (Thread View - Most Recent First)
Main Index
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
Search
Toggle navigation
Breadcrumbs
Home
Nov 4, 2020
services
recover Throwables in AmqpPublisherActor stream by ignoring all of them
Nov 11, 2020
signals
Small fixes in tests.
Nov 4, 2020
src
Issue #561: review: added SignalEnrichmentFacadeByRoundTripConfig and…
Jan 2, 2020
utils
compile ditto-utils with source- and target-level 1.8
Jan 23, 2020
.gitignore
Merged master
Apr 1, 2019
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
Search
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
Search
Toggle navigation
Breadcrumbs
Home
Contribute
Source code
"topics": [
"_/_/things/twin/events"
],
"authorizationContext": ["ditto:outbound-auth-subject"],
"qos": 0
}
]
}
Tags:
protocol
connectivity
©2020 Eclipse Ditto.
Site last generated: Nov 2, 2020
> Privacy Policy
> Terms of Use
> Copyright Agent
openhub.net
Black Duck Software, Inc.
Black Duck Open Hub
Follow @
OH
Sign In
Join Now
Projects
People
Organizations
Tools
Blog
Projects
People
Projects
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
Search
Toggle navigation
Breadcrumbs
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
[First Page] [Prev Page][Next Page] [Last Page]
[ditto-dev] Seeking guidance re: Ditto, Hono, and Cloud2edge package,
Robinson Montalvo
[ditto-dev] Release 1.1.0 of Eclipse Ditto,
Jaeckle Thomas (IOC/PAP-TH)
[ditto-dev] [GERMAN] Webinar about Eclipse Ditto,
Julian Feinauer
[ditto-dev] Support for MQTT in ditto-client,
Julian Feinauer
Re: [ditto-dev] Support for MQTT in ditto-client,
Jaeckle Thomas (INST/ECS1)
<Possible follow-ups>
Re: [ditto-dev] Support for MQTT in ditto-client,
Julian Feinauer
[ditto-dev] Small Example of a digital twin of a Siemens S7 using PLC4X and Ditto,
Julian Feinauer
Contribute
Source code
ditto-dev Archive (Date View)
Index by Thread Index by Year [First Page] [Prev Page][Next Page] [Last Page]
2020
October
April
January
2019
December
November
July
May
April
2018
November
CONTRIBUTING.md
enhanced CONTRIBUTING.md with license header information
Mar 28, 2019
Jenkinsfile_multibranch_pipeline
Merge branch 'master' into feature/e2e-live
Aug 25, 2020
LICENSE
added LICENSE
Sep 26, 2018
NOTICE.md
updated legal stuff:
Mar 19, 2020
README.md
Issue #680: Fixed script for building Docker images locally.
Aug 7, 2020
pom.xml
Toggle navigation
Breadcrumbs
Home
Contribute
Source code
Index of ditto-dev for April 2017
Index by Thread Index by Year [First Page] [Prev Page][Next Page] [Last Page]April 08, 2017Welcome to ditto-dev Posted 00:05 by portal on behalf of emo
Mail converted by MHonArc
Back to the top
Eclipse Foundation
About Us
Contact Us
Donate
Governance
Logo and Artwork
Board of Directors
Legal
Index of ditto-dev for April 2020
Index by Thread Index by Year [First Page] [Prev Page][Next Page] [Last Page]April 29, 2020[ditto-dev] Release 1.1.0 of Eclipse Ditto Posted 05:36 by Jaeckle Thomas (IOC/PAP-TH)
April 08, 2020[ditto-dev] Eclipse Ditto community call Posted 06:57 by Jaeckle Thomas (IOC/PAP-TH)[ditto-dev] Eclipse Ditto community call Posted 06:57 by Jaeckle Thomas (IOC/PAP-TH)[ditto-dev] [GERMAN] Webinar about Eclipse Ditto Posted 05:37 by Julian Feinauer
Mail converted by MHonArc
Back to the top
Eclipse Foundation
About Us
Contact Us
Donate
Governance
Logo and Artwork
Board of Directors
Legal
Privacy Policy
Terms of Use
Copyright Agent
Eclipse Public License
> Legal
> License
> Report a Vulnerability
Organizations
Forums
Eclipse Ditto
Settings
|
Report Duplicate
1
I Use This!
×
Login Required
Log in to Open Hub
Home
Contribute
Source code
[Date Prev][Date Next][Thread Prev][Thread Next][Date Index][Thread Index]
[List Home]
[ditto-dev] Seeking guidance re: Ditto, Hono, and Cloud2edge package
From: Robinson Montalvo <rmontalvo@xxxxxxxxxxxxxxxxx>
Date: Sun, 25 Oct 2020 06:39:19 -0400
Delivered-to: ditto-dev@xxxxxxxxxxx
List-archive: <https://www.eclipse.org/mailman/private/ditto-dev>
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Re: [ditto-dev] Small Example of a digital twin of a Siemens S7 using PLC4X and Ditto,
Jaeckle Thomas (INST/ECS1)
Re: [ditto-dev] Small Example of a digital twin of a Siemens S7 using PLC4X and Ditto,
Julian Feinauer
Re: [ditto-dev] Small Example of a digital twin of a Siemens S7 using PLC4X and Ditto,
Jaeckle Thomas (INST/ECS1)
Re: [ditto-dev] Small Example of a digital twin of a Siemens S7 using PLC4X and Ditto,
Julian Feinauer
[ditto-dev] Graduation and release 1.0.0 of Eclipse Ditto,
Jaeckle Thomas (INST/ECS1)
[ditto-dev] Eclipse Ditto community call,
Jaeckle Thomas (INST/ECS1)
<Possible follow-ups>
[ditto-dev] Eclipse Ditto community call,
Jaeckle Thomas (INST/ECS1)
[ditto-dev] Eclipse Ditto community call,
September
July
May
2017
November
October
April
Mail converted by MHonArc
Back to the top
Eclipse Foundation
About Us
Contact Us
Donate
Governance
Logo and Artwork
Board of Directors
Legal
Privacy Policy
Increment binary compatibility check version.
Oct 30, 2020
View code
README.md
Eclipse Ditto
Documentation
Find the documentation on the project site: https://eclipse.org/ditto/
Getting started
In order to start up Ditto, you'll need
Privacy Policy
Terms of Use
Copyright Agent
Eclipse Public License
Legal Resources
Useful Links
Report a Bug
Documentation
How to Contribute
Mailing Lists
Forums
Marketplace
Other
IDE and Tools
Community of Projects
Working Groups
Legal Resources
Useful Links
Report a Bug
Documentation
How to Contribute
Mailing Lists
Forums
Marketplace
Other
IDE and Tools
Community of Projects
Working Groups
Research@Eclipse
Report a Vulnerability
Service Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Remember Me
Very High Activity
Analyzed
about 2 hours
ago.
based on code collected
about 4 hours
ago.
Project Summary
Tags
akka cloud digitaltwin digital-twin eclipse eclipseiot iot java mongodb
In a Nutshell, Eclipse Ditto...
...
has had
6,637 commits
List-help: <mailto:ditto-dev-request@eclipse.org?subject=help>
List-subscribe: <https://www.eclipse.org/mailman/listinfo/ditto-dev>, <mailto:ditto-dev-request@eclipse.org?subject=subscribe>
List-unsubscribe: <https://www.eclipse.org/mailman/options/ditto-dev>, <mailto:ditto-dev-request@eclipse.org?subject=unsubscribe>
Dear Ditto community,I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?Thank you very much in advance,Rob
Prev by Date:
[ditto-dev] Release 1.1.0 of Eclipse Ditto
Previous by thread:
[ditto-dev] Release 1.1.0 of Eclipse Ditto
Index(es):
Date
Thread
Back to the top
Eclipse Foundation
About Us
Contact Us
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Jaeckle Thomas (IOC/PAP-TH)
[ditto-dev] Eclipse Ditto community call,
Jaeckle Thomas (IOC/PAP-TH)
[ditto-dev] Release announcement of Eclipse Ditto 0.9.0,
Jaeckle Thomas (INST/ECS1)
[ditto-dev] PMC Approval required for Committer Election for Yannic Klem on Eclipse Ditto,
emo
[ditto-dev] Committer Election for Yannic Klem on Eclipse Ditto has started,
emo
[ditto-dev] PMC Approval required for Committer Election for Stefan Maute on Eclipse Ditto,
emo
[ditto-dev] Committer Election for Stefan Maute on Eclipse Ditto has started,
emo
[ditto-dev] Logos of Ditto users on website,
Jaeckle Thomas (INST/ECS1)
[ditto-dev] Release announcement of Eclipse Ditto 0.8.0,
Jaeckle Thomas (INST/ECS1)
Terms of Use
Copyright Agent
Eclipse Public License
Legal Resources
Useful Links
Report a Bug
Documentation
How to Contribute
Mailing Lists
a running Docker daemon (at least version 18.06 CE)
Docker Compose installed (at least version 1.22)
Start Ditto
In order to start the latest built Docker images from Docker Hub, simply execute:
cd deployment/docker/
docker-compose up -d
Check the logs after starting up:
docker-compose logs -f
Open following URL to get started: http://localhost:8080
Or have a look at the "Hello World"
Build and start Ditto locally
In order to build Ditto, you'll need
JDK 11 >= 11.0.5 and
Apache Maven 3.x installed.
In order to first build Ditto and then start the built Docker images.
1. Build Ditto with Maven
mvn clean install
Research@Eclipse
Report a Vulnerability
Service Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
made by
50 contributors
representing
358,251 lines of code
...
is
mostly written in Java
with
an average number of source code comments
...
has
a codebase with a long source history
maintained by
a very large development team
with
stable Y-O-Y commits
...
Donate
Governance
Logo and Artwork
Board of Directors
Legal
Privacy Policy
Terms of Use
Copyright Agent
Eclipse Public License
Legal Resources
Useful Links
Report a Bug
Documentation
How to Contribute
Mailing Lists
Forums
Support for adding arbitrary _metadata for features / properties · Issue #680 · eclipse/ditto · GitHub
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
Ditto JSON is not OSGi compatible due to missing imports · Issue #790 · eclipse/ditto · GitHub
[ditto-dev] Release Review for Ditto 0.8.0,
Jaeckle Thomas (INST/ECS1)
[ditto-dev] CFP Deadline July 16 - All Things IoT @ EclipseCon Europe,
Roxanne Joncas
[ditto-dev] PMC Approval required for Committer Election for Florian Fendt on Eclipse Ditto,
emo
[ditto-dev] Committer Election for Florian Fendt on Eclipse Ditto has started,
emo
[ditto-dev] Eclipse Ditto logo crowdsourcing,
Jaeckle Thomas (INST/ECS1)
Re: [ditto-dev] Eclipse Ditto logo crowdsourcing,
Jaeckle Thomas (INST/ECS1)
Re: [ditto-dev] Eclipse Ditto logo crowdsourcing,
Glocker Gerald (INST/ECS1)
Welcome to ditto-dev,
portal on behalf of emo
Forums
Marketplace
Other
IDE and Tools
Community of Projects
Working Groups
Research@Eclipse
Report a Vulnerability
Service Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
2. Build local Ditto Docker snapshot images
cd services/
./build-images.sh
If your infrastructure requires a proxy, its host and port can be set using the -p option like for example:
./build-images.sh -p 172.17.0.1:3128
Please note that the given host and port automatically applies for HTTP and HTTPS.
3. Start Ditto with local snapshot images
cd ../deployment/docker/
# the "dev.env" file contains the SNAPSHOT number of Ditto, copy it to ".env" so that docker compose uses it:
cp dev.env .env
docker-compose up -d
Check the logs after starting up:
docker-compose logs -f
You have now running:
a MongoDB as backing datastore of Ditto (not part of Ditto but started via Docker)
Ditto microservices:
Policies
took an estimated
96 years of effort
(COCOMO model)
starting with its
first commit in April, 2017
ending with its
most recent commit about 7 hours
ago
Quick Reference
Project Links:
Homepage
Community
Documentation
Forums
Issue Trackers
Mailing Lists
Code Locations:
Marketplace
Other
IDE and Tools
Community of Projects
Working Groups
Research@Eclipse
Report a Vulnerability
Service Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
ditto
Watch
36
Star
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Mail converted by MHonArc
Back to the top
Eclipse Foundation
About Us
Contact Us
Donate
Governance
Logo and Artwork
Board of Directors
Legal
Privacy Policy
Terms of Use
Copyright Agent
Eclipse Public License
Legal Resources
Useful Links
Things
Things-Search
Gateway
Connectivity
Concierge
an nginx acting as a reverse proxy performing a simple "basic authentication" listening on port 8080
including some static HTTP + API documentation on http://localhost:8080
About
Eclipse Ditto Project
eclipse.org/ditto/
Topics
eclipseiot
iot
internet-of-things
digital-twin
Resources
Maven Central Repository Search
Sorry, your browser does not support JavaScript!
(2 Locations)
Similar Projects:
Managers:
Thomas Jäckle
Licenses
Eclipse Public License 2.0
Permitted
Forbidden
Required
These details are provided for information only. No information here is legal advice and should not be used as such.
All Licenses
Project Security
Vulnerabilities per Version
( last 10 releases )
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
213
Fork
72
Code
Issues
52
Pull requests
1
Actions
Projects
1
Security
Insights
More
Code
Issues
Pull requests
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Report a Bug
Documentation
How to Contribute
Mailing Lists
Forums
Marketplace
Other
IDE and Tools
Community of Projects
Working Groups
Research@Eclipse
Report a Vulnerability
Service Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Readme
License
EPL-2.0 License
Releases
124
1.4.0
Latest
Oct 30, 2020
+ 123 releases
Packages 0
There are no reported vulnerabilities
Project Vulnerability Report
Security Confidence Index
Poor security track-record
Favorable security track-record
Vulnerability Exposure Index
Many reported vulnerabilities
Few reported vulnerabilities
About Project Vulnerability Report
Did You Know...
...
use of OSS increased in 65% of companies in 2016
...
learn about Open Hub updates and features on the
Open Hub blog
...
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
Actions
Projects
Security
Insights
Workflows
All workflows
push-dockerhub
build
All workflows
push-dockerhub
build
build
Narrow your search
will be ignored since log searching is not yet available
Create status badge
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
Back to the top
No packages published
Contributors 28
+ 17 contributors
Languages
Java
99.4%
Scala
0.2%
CSS
0.2%
HTML
0.1%
JavaScript
0.1%
Shell
0.0%
nearly 1 in 3 companies have no process for identifying, tracking,
or remediating known open source vulnerabilities
...
search using multiple tags to find exactly what you need
About Project Security
Code
Lines of Code
Activity
Commits per Month
Community
Contributors per Month
Languages
Java
94%
7 Other
6%
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
ditto
Watch
Create status badge
Branch
Default branch
Find a branch
Event
Default
check_run
check_suite
create
delete
deployment_status
deployment
fork
gollum
issue_comment
issues
label
milestone
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
ditto
Watch
36
Star
213
Fork
72
Code
Issues
fix regression about (expected) exceptions thrown in AmqpPublisherActor CompletionStage by thjaeckle · Pull Request #879 · eclipse/ditto · GitHub
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
30 Day Summary
Oct 12 2020
—
Nov 11 2020
215
Commits
14
Contributors
including
3 new contributors
12 Month Summary
Nov 11 2019
—
Nov 11 2020
2346
Commits
Up
36
Star
213
Fork
72
Code
Issues
52
Pull requests
1
Actions
Projects
1
Security
Insights
More
page_build
project_card
project_column
project
public
pull_request_review_comment
pull_request_review
pull_request
push
registry_package
release
repository_dispatch
status
watch
workflow_dispatch
workflow_run
schedule
pull_request_target
52
Pull requests
1
Actions
Projects
1
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Skip to content
Sign up
Why GitHub?
Features →
Code review
Hello world • Eclipse Ditto • a digital twin framework
eclipse/ditto - Gitter
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
+
371
(18%)
from previous 12 months
33
Contributors
Up
+
12
(57%)
from previous 12 months
Most Recent Contributors
Thomas Jäckle
Dominik Guggemos
Stefan Maute
Yufei Cai
Yannic Klem
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
![build](https://github.com/eclipse/ditto/workflows/build/badge.svg)
Copy status badge Markdown
785 results
785 results
Event
Filter by event
Status
Filter by status
Branch
Filter by branch
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
Have a question about this project? Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our terms of service and
privacy statement. We’ll occasionally send you account related emails.
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
Toggle navigation
Blog
Documentation
HTTP API
Sandbox
GitHub
GitHub examples
Links
Eclipse Ditto Project
Forum
Jenkins
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
Save preferences
David Schwilk
Ratings
1 user rates this project:
5.0
5.0/5.0
Click to add your rating
Review this Project!
Project Summary
News
Settings
Sharing Widgets
Related Projects
Code Data
Languages
Cost Estimates
New issue
Have a question about this project? Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our terms of service and
privacy statement. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
Support for adding arbitrary _metadata for features / properties
#680
Closed
JulianFeinauer opened this issue
May 13, 2020
Actor
Filter by actor
Allow sending empty "Messages" via the OpenAPI documentation
build
#785:
Pull request #875
synchronize
by
ffendt
Nov 11, 2020
21m 23s
bosch-io:feature/openapi_empty_messages
bosch-io:feature/openapi_empty_messages
Nov 11, 2020
21m 23s
View #875
View workflow file
Already on GitHub?
Sign in
to your account
Jump to bottom
Ditto JSON is not OSGi compatible due to missing imports
#790
Closed
kaloyanrradev opened this issue
Sep 4, 2020
· 9 comments
Closed
Ditto JSON is not OSGi compatible due to missing imports
#790
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Enrich outgoing events/messages with additional fields from Thing · Issue #561 · eclipse/ditto · GitHub
Mailing list archives
Gitter.im chat
Eclipse Ditto version:
development
1.0
1.1
1.2
1.3
1.4
Important: This documentation reflects the latest 'development'. You might want to choose a released version.
Introduction
Overview
Digital twins
Hello world
Release Notes
1.4.0
1.3.0
People
Repo info
Activity
Thomas Jaeckle
@thjaeckle
the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some pointsome "fake headers" may now be used in a headerMapping for MQTT 3, see: https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mappingbut to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs
Alexander Wellbrock
@lionax_gitlab
The connectivity service logs a lot of [WARN] No publish flow registered for MqttStatefulPublish... Might that be related?
It seems that while the targets are working finde the sources cause some problem right now. It seems that I'm also only sometimes able to get a working creation command executed in ditto if it's received by ditto via mqtt-source.I'm not using any header mapping right now. The app just sets the header object in the response payload before handing it over to mqtt->ditto-source
Thomas Jaeckle
@thjaeckle
the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
Security
SCM Data
Commits
Contributors
Community Data
Users
Ratings & Reviews
User & Contributor Locations
ABOUT SYNOPSYS
Application Security Testing
Software Security Services
Program Development
Training
ABOUT OPEN HUB
Forums
· 20 comments
Closed
Support for adding arbitrary _metadata for features / properties
#680
JulianFeinauer opened this issue
May 13, 2020
· 20 comments
Labels
community-interest
enhancement
Milestone
1.2.0
Comments
Merge pull request #879 from bosch-io/bugfix/amqp-publisher-queue-exception-handling
fix regression about (expected) exceptions thrown in AmqpPublisherActor CompletionStage
build
#784:
Commit 5fa6a82
pushed
by
stmaute
Nov 11, 2020
23m 42s
master
kaloyanrradev opened this issue
Sep 4, 2020
· 9 comments
Labels
bug
Milestone
1.2.1
Comments
Copy link
Quote reply
kaloyanrradev
commented
Sep 4, 2020
Please check this line in the maven-bundle-plugin config of the Ditto JSON client bundle:
ditto/json/pom.xml
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
1.2.1
1.2.0
1.1.5
1.1.3
1.1.2
1.1.1
1.1.0
1.0.0
0.9.0
0.8.0
Milestone releases
1.0.0-M2
1.0.0-M1a
0.9.0-M2
0.9.0-M1
0.8.0-M3
0.8.0-M2
robmontalvojr
@robmontalvojr
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
Julian
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
Terms
Privacy
Open Hub UI Source Code
Contact Us
©
2020
Synopsys, Inc.
All Rights Reserved.
This site uses cookies to give you the best possible experience.
By using the site, you consent to our use of cookies.
For more information, please see our
Privacy Policy
Agree
Copy link
Quote reply
Contributor
JulianFeinauer
commented
May 13, 2020
Hi all,
if considering using some kind of History API (see #545 ) it gets more and more relevant to know the timestamp of a specific value from a thing. Also in scenarios where you have no direct connection like HTTP / WS but have messaging involved like MQTT or generally Hono you can not rely that the timestamp when you receive an update message is roughly equivalent to the timestamp when it was measured.
I thus suggest to enable explicit support for "last_modified" timestamp which could be either set explicitly in the message or implicitly with the "ingestion time" and which is then available for a possible history service and for users to see how "valid" their datasets are.
👍
1
Copy link
Contributor
thjaeckle
commented
master
Nov 11, 2020
23m 42s
View workflow file
fix regression about (expected) exceptions thrown in AmqpPublisherActor CompletionStage
build
#783:
Pull request #879
synchronize
by
thjaeckle
Nov 11, 2020
22m 59s
bosch-io:bugfix/amqp-publisher-queue-exception-handling
bosch-io:bugfix/amqp-publisher-queue-exception-handling
Line 176
in
1ba630b
<Import-Package>com.eclipsesource.json</Import-Package>
It needs to be cleared or extended with a star in the end, otherwise it will hide (not import) the Jackson packages used:
<Import-Package>com.eclipsesource.json,*</Import-Package>
This comment has been hidden.
Sign in to view
Copy link
Contributor
thjaeckle
commented
Sep 7, 2020
Probably we did something wrong here.
ditto-json in fact has imports to com.fasterxml.jackson.core and com.fasterxml.jackson.dataformat.cbor - however catches a NoClassDefFoundError when they can't be loaded during runtime.
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
ditto
Watch
36
Star
213
Fork
72
Code
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
0.8.0-M1
0.3.0-M2
0.3.0-M1
0.2.0-M1
0.1.0-M3
0.1.0-M1
Installation
Building Ditto
Running Ditto
Operating Ditto
Basic concepts
Overview
Model entities
Thing
Access Control List (ACL)
Feature
Policy
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
Jun 9, 2020
•
edited
Indeed that would be useful to have as metainformation for each property.
As we can't simply store the timestamp or any additional meta data it in the "target JSON" without modifying the user/device provided JSON structure, that would have to be stored besides the "target JSON" structure.
E.g. under a _metadata field:
{
"thingId": "org.eclipse.ditto:thing-1",
"policyId": "...",
"features": {
"lamp": {
"properties": {
"on": true,
"color": {
"r": 0,
"g": 255,
"b": 255,
Nov 11, 2020
22m 59s
View #879
View workflow file
fix regression about (expected) exceptions thrown in AmqpPublisherActor CompletionStage
build
#782:
Pull request #879
opened
by
thjaeckle
Nov 11, 2020
21m 56s
bosch-io:bugfix/amqp-publisher-queue-exception-handling
bosch-io:bugfix/amqp-publisher-queue-exception-handling
Nov 11, 2020
See https://github.com/eclipse/ditto/blob/master/json/src/main/java/org/eclipse/ditto/json/CborAvailabilityChecker.java#L38-L48
This CborAvailabilityChecker is used in both JsonObject and JsonArray implementations.
We somehow need to dynamically determine and load the CBOR classes - but in OSGi environments that could get tricky. Will have to investigate ...
thjaeckle
added
bug
in progress
labels
Sep 7, 2020
Copy link
Contributor
thjaeckle
commented
Sep 7, 2020
We're working on it.
Goal is to ship "ditto-json" with no dependency to any Jackson library, also not in scope of OSGi "imports".
thjaeckle
Issues
52
Pull requests
1
Actions
Projects
1
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
Namespaces and Names
Thing Metadata
Errors
Authentication and Authorization
Messages
Signals
Signal types
Command
Command response
Error response
Event
APIs
Connections
Placeholders
Change notifications
RQL expressions
Signal enrichment
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
Enhanced model and APIs with "desiredProperties" for Features by joosdavid · Pull Request #865 · eclipse/ditto · GitHub
}
}
}
},
"_modified": "2020-06-09T14:30:00Z",
"_revision": 42,
"_metadata": {
"policyId": {
"_modified": "2020-06-09T14:00:00Z",
"_revision": 1
},
"features": {
"lamp": {
"properties": {
"on": {
"_modified": "2020-06-09T14:30:00Z",
"_revision": 42
21m 56s
View #879
View workflow file
Merge pull request #877 from bosch-io/bugfix/fix-implicit-mapper-error-mapping
Fix error mapping in ImplicitThingCreationMessageMapper
build
#781:
Commit 40398c2
pushed
by
Yannic92
Nov 9, 2020
24m 38s
master
master
Nov 9, 2020
24m 38s
added this to the 1.2.1 milestone
Sep 7, 2020
thjaeckle
added a commit
to bosch-io/ditto
that referenced
this issue
Sep 8, 2020
Issue eclipse#790 split up ditto-json and ditto-json-cbor
…
edfdba3
* abstraction is done via a java.util.ServiceLoader
* application of the ServiceLoader in OSGi is not ensured or tested as we don't assume that someone wants to use CBOR backed serialization when e.g. using the Java Ditto-Client
* some "breaking" changes to ditto-json can be tolerated as the affected APIs can be treated as "Ditto backend internal" APIs required to apply CBOR serialization
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch.io>
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
Have a question about this project? Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our terms of service and
privacy statement. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
↵
Jump to
↵
Sign in
Sign up
eclipse
/
ditto
Watch
36
Star
213
Fork
72
Code
Issues
52
Search
Acknowledgements / QoS
Architecture
Overview
Services
Policies
Things
Things-Search
Connectivity
Concierge
Gateway
HTTP API
Overview
Concepts
Search
Messages
WebSocket protocol binding
Server sent events
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories →
Security →
Team
},
"color": {
"r": {
"_modified": "2020-06-09T14:15:00Z",
"_revision": 23
},
"g": {
"_modified": "2020-06-09T14:15:00Z",
"_revision": 23
},
"b": {
"_modified": "2020-06-09T14:15:00Z",
"_revision": 23
}
}
}
}
View workflow file
Fix error mapping in ImplicitThingCreationMessageMapper
build
#780:
Pull request #877
synchronize
by
Yannic92
Nov 9, 2020
21m 12s
bosch-io:bugfix/fix-implicit-mapper-error-mapping
bosch-io:bugfix/fix-implicit-mapper-error-mapping
Nov 9, 2020
21m 12s
View #877
View workflow file
Fix error mapping in ImplicitThingCreationMessageMapper
thjaeckle
mentioned this issue
Sep 8, 2020
Issue #790 split up ditto-json and ditto-json-cbor
#793
Merged
thjaeckle
closed this
in
#793
Sep 8, 2020
thjaeckle
added a commit
that referenced
this issue
Sep 8, 2020
Merge pull request #793 from bosch-io/bugfix/ditto-json-cbor-dependen…
fix regression about (expected) exceptions thrown in AmqpPublisherActor CompletionStage
#879
Merged
stmaute
merged 2 commits into
eclipse:master
from
bosch-io:bugfix/amqp-publisher-queue-exception-handling
Nov 11, 2020
Merged
fix regression about (expected) exceptions thrown in AmqpPublisherActor CompletionStage
#879
stmaute
Pull requests
1
Actions
Projects
1
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Connectivity API
Overview
Manage connections
AMQP 0.9.1 protocol binding
AMQP 1.0 protocol binding
MQTT 3.1.1 protocol binding
MQTT 5 protocol binding
HTTP 1.1 protocol binding
Kafka 2.x protocol binding
Payload mapping
Header mapping
TLS certificates
Client SDK
Overview
Java
JavaScript
Ditto Protocol
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
}
}
}
Basically each "leaf" in the JSON gets an JsonObject containing additional meta information.
That could also be aggregated upwards, so in the provided example above you would know that the "lamp" feature is also of revision 42 last modified at the timestamp 14:30.
I would also want to see the "revision" as meta information at a property level, so that you can e.g. see (like in Subversion) which revision a part of the subtree of a Thing or even a single property has.
But that may be a topic for another issue. :)
Copy link
Contributor
Author
JulianFeinauer
commented
Jun 9, 2020
Hey @thjaeckle welcome back : )
build
#779:
Pull request #877
opened
by
dguggemos
Nov 9, 2020
22m 35s
bosch-io:bugfix/fix-implicit-mapper-error-mapping
bosch-io:bugfix/fix-implicit-mapper-error-mapping
Nov 9, 2020
22m 35s
View #877
View workflow file
build
build
#778:
…
Verified
This commit was created on GitHub.com and signed with a verified signature using GitHub’s key.
GPG key ID: 4AEE18F83AFDEB23
Learn about signing commits
Loading status checks…
1733deb
…cies
Issue #790 split up ditto-json and ditto-json-cbor
thjaeckle
removed
the
in progress
label
Sep 8, 2020
Copy link
merged 2 commits into
eclipse:master
from
bosch-io:bugfix/amqp-publisher-queue-exception-handling
Nov 11, 2020
+8
−1
Conversation
1
Commits
2
Checks
1
Files changed
2
Conversation
Copy link
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
Have a question about this project? Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our terms of service and
privacy statement. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
Overview
Twin/live channel
Specification
Protocol topic
Things group
→ commands/events
Create/Modify
Retrieve
Delete
Acknowledgements
Errors
→ search/messages
Search
Messages
Policies group
→ commands/events
Create/Modify
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
I would try to take care of the implementation if you generally agree. Do you have a pointer for me where to look at as start?
And I think we should also try to differentiate two things: date of last modification and timestamp of the value (which may be the same but maybe totally different also)
👍
1
Copy link
Contributor
thjaeckle
commented
Jun 9, 2020
I would try to take care of the implementation if you generally agree. Do you have a pointer for me where to look at as start?
The best way I can think of is to enhance the AbstractThingEventStrategy to - in addition to the already set "setRevision(long)" and "setModified(Instant)" also invoke something like setMetadata(JsonPointer, Metadata).
At the mentioned spot you have the ThingEvent containing which JsonPointer getResourcePath() was affected (which you need in order to set the Metadata information on the right JSON "level"), containing the Optional<JsonValue> getEntity() and also containing DittoHeaders getDittoHeaders() (which might e.g. include the "actual device modification timestamp" - propsal: "_issuedAt" - which could be a different one).
Having found that place, additional things are needed to be implemented:
by
yufei-cai
Nov 9, 2020
24m 28s
master
master
Nov 9, 2020
24m 28s
View workflow file
Enhanced model and APIs with "desiredProperties" for Features
build
#777:
Pull request #865
synchronize
by
DerSchwilk
Contributor
thjaeckle
commented
Sep 8, 2020
@kaloyanrradev how exactly did you produce this error?
We're wondering as this change is already in ditto-json since Ditto 1.1.0 which was released in April this year.
And we just tried out using the ditto-client 1.1.0 and 1.2.0 (which uses ditto-json as well) in a Felix container which worked.
thjaeckle
added a commit
that referenced
this issue
Sep 8, 2020
Issue #790 split up ditto-json and ditto-json-cbor
…
Loading status checks…
Quote reply
Contributor
thjaeckle
commented
Nov 11, 2020
backing the SourceQueue of AmqpPublisherActor
regression was introduced in #870 by not handling the "exceptionally" part which caused the queue to break
thjaeckle
added 2 commits
Nov 11, 2020
fix regression about (expected) exceptions thrown in CompletionStage …
…
Loading status checks…
1d6e21d
…backing the SourceQueue of AmqpPublisherActor
regression was introduced in #870 by not handling the "exceptionally" part which caused the queue to break
Enrich outgoing events/messages with additional fields from Thing
#561
Closed
thjaeckle opened this issue
Dec 3, 2019
· 4 comments
Closed
Enrich outgoing events/messages with additional fields from Thing
#561
thjaeckle opened this issue
Dec 3, 2019
· 4 comments
Assignees
Labels
enhancement
Milestone
Retrieve
Delete
Bindings
Examples
→ Things examples
Create a Thing
Delete a Thing
Modify a Thing
Retrieve a Thing
Retrieve multiple Things
Modify the Policy ID of a Thing
Create Attributes
Delete Attributes
Modify Attributes
Retrieve Attributes
Create a single Attribute
Delete a single Attribute
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
ditto
Watch
36
Star
213
Fork
72
the ThingBuilders (ThingBuilder.FromCopy and ThingBuilder.FromScratch) need to be enhanced by setting the new additional "meta" information
we would need a new type (Interface + immutable implementation) e.g. Metadata in package org.eclipse.ditto.model.base.entity
** the Metadata interface would define (with an inner subclass for the JsonFields) which metadata information can be expected and which Json+Java type this metadata has - for example please have a look at Thing.JsonFields
the org.eclipse.ditto.model.base.entity.Entity needs to be enhanced by a getter and setter for this "Metadata" instance (I would add that on Entity rather than on Thing so that the Policy also being an Entity might also benefit from that)
the Thing.JsonFields needs to be enhanced by a new constant for the "_metadata" JSON field
the ImmutableThing's JsonObject toJson(JsonSchemaVersion, Predicate<JsonField>) needs to write the new "_meta" field when serializing a Thing Java object to JSON
the ImmutableThingFromCopyBuilder of(JsonObject) needs to read the "_meta" field when deserializing to a Thing Java object again from JSON
I also think we need to enhance the DittoHeaderDefinition with a special header specifying the modification timestamp coming from a device
** then, also DittoHeaders, DittoHeadersBuilder and the implementations need to be adjusted accordingly (incl. JSON serialization)
Do you need that new meta information also in each Event emitted via Ditto (I guess so)?
Then the org.eclipse.ditto.signals.events.base.Event would need to be enhanced with that "Metadata" information as well, as well as serialization to JSON and deserialization back to Java objects in the implementations responsible for JSON serialization (e.g. in AbstractThingEvent).
Those are the first things popping into my mind.
That might seem a lot but I think this is a rather low hanging fruit - the main effort is in enhancing the Ditto "model" around Entity/Thing by adding the Metadata type and to enhance the "Event" as well.
Making the "_metadata" field in the Thing.JsonFields a FieldType.SPECIAL, FieldType.HIDDEN field (like e.g. also "_modified", the field will not by default be returned when retrieving a Thing via the HTTP API - it should work automatically then to provide a "fields" query in order to retrieve that information, e.g.:
GET /api/2/things/org.eclipse.ditto:thing-1?fields=policyId,features,_revision,_metadata
And I think we should also try to differentiate two things: date of last modification and timestamp of the value (which may be the same but maybe totally different also)
Nov 6, 2020
23m 35s
bosch-io:feature/desired-properties
bosch-io:feature/desired-properties
Nov 6, 2020
23m 35s
View #865
View workflow file
Enhanced model and APIs with "desiredProperties" for Features
build
#776:
Pull request #865
synchronize
by
DerSchwilk
Ditto documentation overview • Eclipse Ditto • a digital twin framework
9945a56
* abstraction is done via a java.util.ServiceLoader
* application of the ServiceLoader in OSGi is not ensured or tested as we don't assume that someone wants to use CBOR backed serialization when e.g. using the Java Ditto-Client
* some "breaking" changes to ditto-json can be tolerated as the affected APIs can be treated as "Ditto backend internal" APIs required to apply CBOR serialization
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch.io>
(cherry picked from commit edfdba3)
Copy link
desislava-marinova
commented
Sep 8, 2020
@thjaeckle, as we used ditto 1.0.0 and we had no such issues, in ditto 1.1.5 the problem is also experienced.
Is the following stack trace helpful?
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch.io>
recover Throwables in AmqpPublisherActor stream by ignoring all of them
…
Loading status checks…
7430433
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch.io>
dguggemos
approved these changes
Nov 11, 2020
View changes
Copy link
Quote reply
Contributor
dguggemos
left a comment
1.1.0
Comments
Copy link
Quote reply
Contributor
thjaeckle
commented
Dec 3, 2019
•
edited
Currently, whenever a change notification / event is published (e.g. via WebSocket or the connectivity - AMQP, MQTT, Kafka, HTTP), only the actually changed values are contained in that published event.
So e.g. when only a temperature is updated (this is the Ditto Protocol message):
{
"topic": "org.eclipse.ditto/my-fancy-car/things/twin/commands/modify",
"path": "/features/temperature/properties/status/value",
"value": 23.5
}
Modify a single Attribute
Retrieve a single Attribute
Create a Definition
Delete a Definition
Modify a Definition
Retrieve a Definition
Create Features
Delete Features
Modify Features
Retrieve Features
Create a single Feature
Delete a single Feature
Modify a single Feature
Retrieve a single Feature
Create Feature Definition
Delete Feature Definition
Modify Feature Definition
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Code
Issues
52
Pull requests
1
Actions
Projects
1
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Yes, maybe we can provide a "_modified" field and in addition an optional "_issuedAt" field.
If both are the same, it is sufficient to only set the "_modified" - if they differ, both values are set in the created instance of Metadata.
The Optional<Instant> getIssuedAt() in Metadata interface would indicate that by using an Optional return type.
What do you think?
thjaeckle
added
community-interest
enhancement
labels
Jun 9, 2020
This was referenced Jun 18, 2020
Distinguish between "desired" and "twin" Feature properties
#125
Closed
Provide information about desired property changes which could not be applied
Nov 6, 2020
23m 9s
bosch-io:feature/desired-properties
bosch-io:feature/desired-properties
Nov 6, 2020
23m 9s
View #865
View workflow file
Merge pull request #869 from bosch-io/feature/devops-sso
Adds OAuth2 authentication mechanism for devops and status resources
build
#775:
Commit 61818ea
pushed
by
Yannic92
Nov 6, 2020
Toggle navigation
Blog
Documentation
HTTP API
Sandbox
GitHub
GitHub examples
Links
Eclipse Ditto Project
Forum
Jenkins
Mailing list archives
Gitter.im chat
Eclipse Ditto version:
development
Caused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.core.JsonFactory, from bundle org.eclipse.ditto.json at com.prosyst.mbs.impl.framework.DefaultClassProvider.loadClass_(DefaultClassProvider.java:603) ~[?:?] at com.prosyst.mbs.impl.framework.DefaultClassProvider.loadClass(DefaultClassProvider.java:453) ~[?:?] at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_171] at org.eclipse.ditto.json.ImmutableJsonArray$SoftReferencedValueList.parseToList(ImmutableJsonArray.java:409) ~[?:?] at org.eclipse.ditto.json.ImmutableJsonArray$SoftReferencedValueList.recoverValues(ImmutableJsonArray.java:394) ~[?:?] at org.eclipse.ditto.json.ImmutableJsonArray$SoftReferencedValueList.values(ImmutableJsonArray.java:386) ~[?:?] at org.eclipse.ditto.json.ImmutableJsonArray$SoftReferencedValueList.getStream(ImmutableJsonArray.java:422) ~[?:?] at org.eclipse.ditto.json.ImmutableJsonArray.stream(ImmutableJsonArray.java:249) ~[?:?] at org.eclipse.ditto.model.base.headers.AbstractDittoHeaders.getAcknowledgementRequests(AbstractDittoHeaders.java:308) ~[?:?] at org.eclipse.ditto.client.internal.AbstractHandle.validateAckRequests(AbstractHandle.java:263) ~[?:?] at org.eclipse.ditto.client.internal.AbstractHandle.askThingCommand(AbstractHandle.java:167) ~[?:?] at org.eclipse.ditto.client.management.internal.FeatureHandleImpl.retrieve(FeatureHandleImpl.java:130) ~[?:?] at com.bosch.iot.dm.devices.remote.impl.DeviceInventoryRemoteImpl.lambda$null$16(DeviceInventoryRemoteImpl.java:387) ~[?:?] at com.bosch.iot.dm.async.CompletableFuture.lambda$null$24(CompletableFuture.java:973) ~[?:?] at com.bosch.iot.dm.auth.AuthCtx.callWithMDCSubscrId(AuthCtx.java:300) ~[?:?] at com.bosch.iot.dm.auth.AuthCtx.callWithMDCAuthCtx(AuthCtx.java:280) ~[?:?] at com.bosch.iot.dm.auth.AuthCtx.callAs(AuthCtx.java:239) ~[?:?] at com.bosch.iot.dm.auth.AuthCtx.callAs(AuthCtx.java:216) ~[?:?] at com.bosch.iot.dm.async.CompletableFuture.lambda$authCtxAware$25(CompletableFuture.java:973) ~[?:?] at java.util.concurrent.CompletableFuture.uniCompose(CompletableFuture.java:952) ~[?:1.8.0_171] at java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:926) ~[?:1.8.0_171] ... 51 more
Copy link
Contributor
thjaeckle
commented
Sep 8, 2020
@desislava-marinova yes, this helps - thanks 👍
Copy link
Contributor
thjaeckle
LGTM 👍
Hide details
View details
stmaute
merged commit 5fa6a82
into
eclipse:master
Nov 11, 2020
2 checks passed
2 checks passed
build
Details
eclipsefdn/eca
The author(s) of the pull request is covered by necessary legal agreements in order to proceed!
Details
stmaute
Then a change event will only include exactly that information, as Ditto Protocol message:
{
"topic": "org.eclipse.ditto/my-fancy-car/things/twin/events/modified",
"path": "/features/temperature/properties/status/value",
"value": 23.5
}
There are however cases when there should be more information added to that event, e.g. when some additional metadata is needed when the event is processed.
In such cases it would of course work to do a HTTP GET on the Ditto HTTP API in order to fetch that additional information, but that causes additional roundtrips and additional latency which could be avoided.
So we would like to add the possibility to specify a further field selector of additional thing data to select for all channels we send change notifications on:
WebSocket
Server Sent Events (SSEs)
all connectivity types (AMQP, MQTT, ...)
For WebSocket that could e.g. look like:
START-SEND-EVENTS?extraFields=attributes,features/location
The actual change should/could be "merged" with the additionally selected fields, so the resulting Ditto Protocol events could look like:
{
"topic": "org.eclipse.ditto/my-fancy-car/things/twin/events/modified",
Retrieve Feature Definition
Create Feature Properties
Delete Feature Properties
Modify Feature Properties
Retrieve Feature Properties
Create a single Property
Delete a single Property
Modify a single Property
Retrieve a single Property
Error responses
→ Policies examples
Create a Policy
Delete a Policy
Modify a Policy
Retrieve a Policy
Modify entries
Retrieve entries
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
@thjaeckle
post:
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
Have a question about this project? Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
#704
Open
Don't apply desired property if "applied" property was changed by device more recently
#706
Open
Copy link
Contributor
Author
JulianFeinauer
commented
Jul 6, 2020
Hi all, I had a discussion with @thjaeckle about whether we should send the information "issuedAt" in a Ditto Header or allow the user to write it through the Thing object himself. Currently there is the convention that "_xxx" fields are write protected and read only for the user. I move this discussion here that everybody can participate.
Copy link
21m 49s
master
master
Nov 6, 2020
21m 49s
View workflow file
Enhanced model and APIs with "desiredProperties" for Features
build
#774:
Pull request #865
synchronize
by
DerSchwilk
Nov 6, 2020
21m 34s
bosch-io:feature/desired-properties
1.0
1.1
1.2
1.3
1.4
Important: This documentation reflects the latest 'development'. You might want to choose a released version.
Introduction
Overview
Digital twins
commented
Sep 8, 2020
Ok, our fix in PR #793 will fix that, of that I'm certain.
👍
2
thjaeckle
changed the title
Import package configuration line breaks OSGi compatibility of Ditto JSON
Ditto JSON is not OSGi compatible due to missing imports
Sep 8, 2020
Copy link
Contributor
thjaeckle
commented
Sep 8, 2020
Released as part of Ditto 1.2.1: https://www.eclipse.org/ditto/release_notes_121.html
deleted the
bosch-io:bugfix/amqp-publisher-queue-exception-handling
branch
Nov 11, 2020
Sign up for free
to join this conversation on GitHub.
Already have an account?
Sign in to comment
Reviewers
dguggemos
Assignees
No one assigned
Labels
None yet
"path": "/features/temperature/properties/status/value",
"value": 23.5,
"extra": {
"attributes": {
"manufacturer": "ACME corp"
},
"features": {
"location": {
"longitude": 42.123,
"latitude": 3.54
}
}
}
}
Messages and live commands/events should also be able to be enriched.
👍
Create a single entry
Delete a single entry
Modify a single entry
Retrieve a single entry
Modify subjects
Retrieve subjects
Create a single subject
Delete a single subject
Modify a single subject
Retrieve a single subject
Modify resources
Retrieve resources
Create a single resource
Delete a single resource
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
description: |-
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our terms of service and
privacy statement. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
Enhanced model and APIs with "desiredProperties" for Features
#865
Merged
yufei-cai
merged 58 commits into
eclipse:master
from
bosch-io:feature/desired-properties
Nov 9, 2020
Merged
Contributor
thjaeckle
commented
Jul 6, 2020
I would like to keep the pattern that all JSON fields starting with _ are
hidden by default (e.g. when doing a GET request)
and are read only by default (and always set by Ditto only)
Having thought about it a while I see this variant which might ease things up:
keep _metadata and as a result make everything in it read only
have specific metadata fields which Ditto automatically sets (currently: _revision and _modified)
define a prefix for header fields which should be added by Ditto into the _metadata section, e.g.: ditto-metadata:
by default, a set metadata value is applied to all JSON leaves affected by a modifying command, e.g.: ditto-metadata:issuedAt
similar to policy resources, the ditto-metadata could contain an optional JsonPointer of which property to address the metadata value to if a metadata value should not be applied to all affected JSON fields of a processed command
Example headers when modifying a complete thing (ModifyThing command - example):
{
"topic": "org.eclipse.ditto/thing-1/things/twin/commands/modify",
bosch-io:feature/desired-properties
Nov 6, 2020
21m 34s
View #865
View workflow file
Allow sending empty "Messages" via the OpenAPI documentation
build
#773:
Pull request #875
opened
by
ffendt
Nov 6, 2020
23m 14s
bosch-io:feature/openapi_empty_messages
Hello world
Release Notes
1.4.0
1.3.0
1.2.1
1.2.0
1.1.5
1.1.3
1.1.2
1.1.1
1.1.0
1.0.0
Artifacts were published to Maven central which should have them available very soon.
Copy link
Author
kaloyanrradev
commented
Sep 9, 2020
Hi @thjaeckle, applogies for the late response - I was on a vacation last few days and many thanks for the quick reaction and fix!
DerSchwilk
pushed a commit
to bosch-io/ditto
that referenced
Projects
None yet
Milestone
No milestone
Linked issues
Successfully merging this pull request may close these issues.
None yet
3 participants
Add this suggestion to a batch that can be applied as a single commit.
This suggestion is invalid because no changes were made to the code.
Suggestions cannot be applied while the pull request is closed.
Suggestions cannot be applied while viewing a subset of changes.
Only one suggestion per line can be applied in a batch.
Add this suggestion to a batch that can be applied as a single commit.
3
Copy link
Contributor
Author
thjaeckle
commented
Dec 5, 2019
•
edited
One additional idea in order to prevent many remoting roundtrips in the Ditto cluster:
We could cache Things at the Ditto "edges" (gateway, connectivity services).
Apply a similar approach to the policy cache in concierge:
use the Caffeine cache + cache loader in order to load non resolved Things
the Caffeine cache has to be scoped to a single connection or session
scoped to an "auth subject" and configured extraFields
Modify a single resource
Retrieve a single resource
Error responses
→ Search examples
Sandbox
Presentations
Glossary
Feedback
Collapse All | Expand All
Hello world
After starting Ditto, we have a HTTP and WebSocket API for your digital twins at our hands.
Example
Assume we want to create a digital twin for a car. The twin should hold static metadata and dynamic state data. The state data should change as often as its real world counterpart does.
Those static and dynamic types of data are mapped in the Ditto model to “attributes” (for static metadata), “features”
(for dynamic state data) and “definition” (to link a model the thing follows,
e.g. an Eclipse Vorto “information model”).
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
description: The request could not be completed due to missing authentication.
content:
application/json:
Enhanced model and APIs with "desiredProperties" for Features
#865
yufei-cai
merged 58 commits into
eclipse:master
from
bosch-io:feature/desired-properties
Nov 9, 2020
+31,060
−2,610
Conversation
9
Commits
58
Checks
1
"headers": {
"ditto-metadata:issuedAt": "2020-06-09T14:29:00Z",
"ditto-metadata:/features/lamp/properties/color/r/issuedAt": "2020-06-09T14:14:00Z",
"ditto-metadata:/features/lamp/properties/color/g/issuedAt": "2020-06-09T14:14:00Z",
"ditto-metadata:/features/lamp/properties/color/b/issuedAt": "2020-06-09T14:14:00Z"
},
"path": "/",
"value": {
"features": {
"lamp": {
bosch-io:feature/openapi_empty_messages
Nov 6, 2020
23m 14s
View #875
View workflow file
Merge pull request #873 from bosch-io/bugfix/concierge-metrics-timeouts
fixed exception handling in AbstractEnforcement
build
#772:
Commit a7609ec
pushed
0.9.0
0.8.0
Milestone releases
1.0.0-M2
1.0.0-M1a
0.9.0-M2
0.9.0-M1
0.8.0-M3
0.8.0-M2
0.8.0-M1
0.3.0-M2
0.3.0-M1
0.2.0-M1
0.1.0-M3
0.1.0-M1
Installation
Building Ditto
this issue
Sep 10, 2020
Issue eclipse#790 split up ditto-json and ditto-json-cbor
…
e4e745d
* abstraction is done via a java.util.ServiceLoader
* application of the ServiceLoader in OSGi is not ensured or tested as we don't assume that someone wants to use CBOR backed serialization when e.g. using the Java Ditto-Client
* some "breaking" changes to ditto-json can be tolerated as the affected APIs can be treated as "Ditto backend internal" APIs required to apply CBOR serialization
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch.io>
DerSchwilk
pushed a commit
to bosch-io/ditto
that referenced
this issue
Applying suggestions on deleted lines is not supported.
You must change the existing code in this line in order to create a valid suggestion.
Outdated suggestions cannot be applied.
This suggestion has been applied or marked resolved.
Suggestions cannot be applied from pending reviews.
Suggestions cannot be applied on multi-line comments.
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
for the first event, when the "enhanced Thing" is not yet in the cache:
load the Thing with extraFields via concierge
save the result in the cache
enhance the data from the event
the cache entry needs to be aware of the Thing revision
for all following events:
check if the revision number of the event is the expected "next one" compared to the cached Thing
if yes:
all data is available, no further "retrieve" required --> enhance the fields from the cache
do also update the cached Thing with the data from the event
increse revision number by 1
if no:
apparently the connection/session missed an event
remove the cache entry and load it again via cache loader
For the "happy path" case (which should happen >99% of the time), only very few additional roundtrips are required.
Ditto needs some more memory consumption at the edges which should however be much better than additional cluster roundtrips.
Only problem with that approach:
A JSON representation of some metadata and state data could for example look like this:
{
"definition": "digitaltwin:DigitaltwinExample:1.0.0",
"attributes": {
"manufacturer": "ACME",
"VIN": "0815666337"
},
"features": {
"transmission": {
"properties": {
"automatic": true,
"mode": "eco",
"cur_speed": 90,
"gear": 5
}
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
Files changed
340
Conversation
Copy link
Quote reply
Contributor
joosdavid
commented
Oct 30, 2020
•
edited by thjaeckle
Fixes #697
Desired properties were added to the Thing Model and APIs.
DerSchwilk
force-pushed the
"properties": {
"on": false,
"color": {
"r": 255,
"g": 255,
"b": 0
}
}
}
}
}
}
Another example for modifying the feature properties of a thing (ModifyFeatureProperties command - example:
{
"topic": "org.eclipse.ditto/thing-1/things/twin/commands/modify",
"headers": {
by
Yannic92
Nov 6, 2020
21m 57s
master
master
Nov 6, 2020
21m 57s
View workflow file
Enhanced model and APIs with "desiredProperties" for Features
build
#771:
Pull request #865
synchronize
by
DerSchwilk
Nov 6, 2020
Running Ditto
Operating Ditto
Basic concepts
Overview
Model entities
Thing
Access Control List (ACL)
Feature
Policy
Namespaces and Names
Thing Metadata
Errors
Authentication and Authorization
Messages
Signals
Sep 10, 2020
Merge pull request eclipse#793 from bosch-io/bugfix/ditto-json-cbor-d…
…
357882c
…ependencies
Issue eclipse#790 split up ditto-json and ditto-json-cbor
DerSchwilk
pushed a commit
to bosch-io/ditto
that referenced
this issue
Sep 10, 2020
Issue eclipse#790 split up ditto-json and ditto-json-cbor
…
59f319b
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Policy changes might cause that the enriched Thing is not seen the way it should be
that could be fixed by subscribing also for Policy of the Thing's Policy
additionally the cache entry could be evicted after a fix amount of time
thjaeckle
pinned this issue
Dec 9, 2019
thjaeckle
unpinned this issue
Dec 9, 2019
jufickel-b
added
the
enhancement
label
Dec 10, 2019
thjaeckle
},
"environment-scanner": {
"properties": {
"temperature": 20.8,
"humidity": 73,
"barometricPressure": 970.7,
"location": {
"longitude": 47.682170,
"latitude": 9.386372
},
"altitude": 399
}
}
}
}
Background: Ditto only knows about “attributes”, “features” and the “definition”.
Inside “attributes” (the metadata) we can add as much JSON keys as we like with any JSON value we need.
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Alexander Wellbrock
@lionax_gitlab
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
Alexander Wellbrock
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
_
Sign in to start talking
bosch-io:feature/desired-properties
branch
2 times, most recently
from
5a5f6b9
to
9339a26
Oct 30, 2020
DerSchwilk
mentioned this pull request
Oct 30, 2020
Add events for desired properties to ThingChange
eclipse/ditto-clients#99
"ditto-metadata:issuedAt": "2020-06-09T14:29:00Z",
"ditto-metadata:/color/r/issuedAt": "2020-06-09T14:14:00Z",
"ditto-metadata:/color/g/issuedAt": "2020-06-09T14:14:00Z",
"ditto-metadata:/color/b/issuedAt": "2020-06-09T14:14:00Z"
},
"path": "/features/lamp/properties",
"value": {
"on": false,
"color": {
"r": 255,
"g": 255,
"b": 0
}
}
}
20m 50s
bosch-io:feature/desired-properties
bosch-io:feature/desired-properties
Nov 6, 2020
20m 50s
View #865
View workflow file
fixed exception handling in AbstractEnforcement
build
#770:
Pull request #873
synchronize
by
Yannic92
Nov 6, 2020
24m 47s
Signal types
Command
Command response
Error response
Event
APIs
Connections
Placeholders
Change notifications
RQL expressions
Signal enrichment
Search
Acknowledgements / QoS
Architecture
Overview
Services
* abstraction is done via a java.util.ServiceLoader
* application of the ServiceLoader in OSGi is not ensured or tested as we don't assume that someone wants to use CBOR backed serialization when e.g. using the Java Ditto-Client
* some "breaking" changes to ditto-json can be tolerated as the affected APIs can be treated as "Ditto backend internal" APIs required to apply CBOR serialization
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch.io>
DerSchwilk
pushed a commit
to bosch-io/ditto
that referenced
this issue
Sep 10, 2020
Merge pull request eclipse#793 from bosch-io/bugfix/ditto-json-cbor-d…
…
6ae7bc3
…ependencies
Issue eclipse#790 split up ditto-json and ditto-json-cbor
Sign up for free
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
added
the
in progress
label
Dec 11, 2019
thjaeckle
added this to the 1.1.0 milestone
Dec 13, 2019
Copy link
Contributor
w4tsn
commented
Dec 18, 2019
This is a wonderful new feature - I'm currently caching things on the micro-service level to get meta information such as the definition field when processing incoming messages based on information from the model. This would make it much more easier!
👍
Inside “features” (the state data) we can add as much features as we like - but each feature needs to have a “properties” JSON object.
Inside that JSON object we can add as much JSON keys as we like with any JSON value we need.
Inside “definition” we can add one JSON string value.
Creating your first Thing
We create a Thing for the example from above by using cURL. Basic authentication will use the credentials of a user “ditto”.
Those credentials have been created by default in the nginx started via “docker”.
(See ditto/deployment/docker/README.md)
curl -u ditto:ditto -X PUT -d '{
"definition": "digitaltwin:DigitaltwinExample:1.0.0",
"attributes": {
"manufacturer": "ACME",
"VIN": "0815666337"
},
Merged
thjaeckle
reviewed
Nov 2, 2020
View changes
...ources/pages/ditto/protocol/examples/things/generated/commands/modify/createthingresponse.md
Outdated
@@ -22,7 +22,8 @@
"y": 2.718,
"z": 1,
"unit": "g"
}
},
"desiredProperties": {}
This comment has been minimized.
Sign in to view
The resulting JSON for both of the above commands would e.g. look like:
{
"thingId": "org.eclipse.ditto:thing-1",
"policyId": "...",
"features": {
"lamp": {
"properties": {
"on": true,
"color": {
"r": 0,
"g": 255,
"b": 255,
}
}
}
},
bosch-io:bugfix/concierge-metrics-timeouts
bosch-io:bugfix/concierge-metrics-timeouts
Nov 6, 2020
24m 47s
View #873
View workflow file
Enhanced model and APIs with "desiredProperties" for Features
build
#769:
Pull request #865
synchronize
by
DerSchwilk
Nov 5, 2020
21m 32s
Policies
Things
Things-Search
Connectivity
Concierge
Gateway
HTTP API
Overview
Concepts
Search
Messages
WebSocket protocol binding
Server sent events
Connectivity API
to join this conversation on GitHub.
Already have an account?
Sign in to comment
Assignees
No one assigned
Labels
bug
Projects
None yet
Milestone
1.2.1
Linked pull requests
Successfully merging a pull request may close this issue.
Issue #790 split up ditto-json and ditto-json-cbor
3 participants
3
Copy link
Contributor
Author
thjaeckle
commented
Dec 18, 2019
Cool, nice to hear that :)
thjaeckle
mentioned this issue
Jan 2, 2020
Support for GraphQL
#585
Closed
"features": {
"transmission": {
"properties": {
"automatic": true,
"mode": "eco",
"cur_speed": 90,
"gear": 5
}
},
"environment-scanner": {
"properties": {
"temperature": 20.8,
"humidity": 73,
"barometricPressure": 970.7,
"location": {
"longitude": 47.682170,
"latitude": 9.386372
thjaeckle
Nov 2, 2020
Contributor
That looks wrong - in the related creatething.md, there was a desiredProperty "x" set to "4".
That must also be in the response of the created Thing.
This comment has been minimized.
Sign in to view
thjaeckle
Nov 4, 2020
Contributor
still missing as far as I see
This comment has been minimized.
Sign in to view
DerSchwilk
Nov 5, 2020
"_modified": "2020-06-09T14:30:00Z",
"_revision": 42,
"_metadata": {
"policyId": {
"_modified": "2020-06-09T14:00:00Z",
"_revision": 1
},
"features": {
"lamp": {
"properties": {
"on": {
"_modified": "2020-06-09T14:30:00Z",
"_revision": 42,
"issuedAt": "2020-06-09T14:29:00Z"
},
"color": {
bosch-io:feature/desired-properties
bosch-io:feature/desired-properties
Nov 5, 2020
21m 32s
View #865
View workflow file
Merge pull request #871 from bosch-io/feature/header-mapping-feature-id
Header mapping for Feature ID
build
#768:
Commit 66c88e6
pushed
by
thjaeckle
Nov 5, 2020
23m 5s
master
Overview
Manage connections
AMQP 0.9.1 protocol binding
AMQP 1.0 protocol binding
MQTT 3.1.1 protocol binding
MQTT 5 protocol binding
HTTP 1.1 protocol binding
Kafka 2.x protocol binding
Payload mapping
Header mapping
TLS certificates
Client SDK
Overview
Java
JavaScript
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
Copy link
Contributor
BobClaerhout
commented
Jan 13, 2020
Nice feature! We are looking forward to this as well!
👍
1
thjaeckle
self-assigned this
Jan 31, 2020
thjaeckle
pushed a commit
to bosch-io/ditto
},
"altitude": 399
}
}
}
}' 'http://localhost:8080/api/1/things/org.eclipse.ditto:fancy-car'
The result is a digital twin in Thing notation. The Thing ID is org.eclipse.ditto:fancy-car. An ID must always contain a
namespace before the :. That way Things are easier to organize.
Querying an existing Thing
By creating the digital twin as a Thing with the specified JSON format, Ditto implicitly provides an API for
our Thing.
For Things we know the ID of, we can simply query them by their ID:
curl -u ditto:ditto -X GET 'http://localhost:8080/api/1/things/org.eclipse.ditto:fancy-car'
# if you have python installed, that's how to get a prettier response:
curl -u ditto:ditto -X GET 'http://localhost:8080/api/1/things/org.eclipse.ditto:fancy-car' | python -m json.tool
Querying one specific state value
•
edited
Contributor
Yes you're right... Thought this was already fixed.
a33bb2b
thjaeckle
reviewed
Nov 2, 2020
View changes
...itto/protocol/examples/things/generated/commands/modify/modifyfeature.md
Show resolved
Hide resolved
Copy link
Quote reply
Contributor
"r": {
"_modified": "2020-06-09T14:30:00Z",
"_revision": 42,
"issuedAt": "2020-06-09T14:14:00Z"
},
"g": {
"_modified": "2020-06-09T14:30:00Z",
"_revision": 42,
"issuedAt": "2020-06-09T14:14:00Z"
},
"b": {
"_modified": "2020-06-09T14:30:00Z",
"_revision": 42,
"issuedAt": "2020-06-09T14:14:00Z"
}
}
}
master
Nov 5, 2020
23m 5s
View workflow file
Header mapping for Feature ID
build
#767:
Pull request #871
synchronize
by
thjaeckle
Nov 5, 2020
21m 49s
bosch-io:feature/header-mapping-feature-id
bosch-io:feature/header-mapping-feature-id
Nov 5, 2020
Ditto Protocol
Overview
Twin/live channel
Specification
Protocol topic
Things group
→ commands/events
Create/Modify
Retrieve
Delete
Acknowledgements
Errors
→ search/messages
Search
Messages
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
that referenced
this issue
Feb 3, 2020
Issue eclipse#561: Enhanced Ditto Protocol messages by "extra" field.
…
a1a008d
Signed-off-by: Juergen Fickel <juergen.fickel@bosch-si.com>
thjaeckle
pushed a commit
to bosch-io/ditto
that referenced
this issue
Feb 3, 2020
Issue eclipse#561: Add Payload.toBuilder() and test it.
…
7a5ccf2
The created API for our Thing also provides HTTP endpoints for each attribute and feature property.
That way we can for example just retrieve the cur_speed of our fancy car:
curl -u ditto:ditto -X GET 'http://localhost:8080/api/1/things/org.eclipse.ditto:fancy-car/features/transmission/properties/cur_speed'
Updating one specific state value
We can just as easy use the HTTP API to update one attribute or feature property, e.g. update the cur_speed to 77:
curl -u ditto:ditto -X PUT -d '77' 'http://localhost:8080/api/1/things/org.eclipse.ditto:fancy-car/features/transmission/properties/cur_speed'
Searching for all Things
When we lost the overview which Things we have already created, we can use the search HTTP endpoint,
e.g. searching all Things with the same manufacturer named "ACME":
curl -u ditto:ditto -X GET 'http://localhost:8080/api/1/search/things?filter=eq(attributes/manufacturer,"ACME")'
Tags:
getting_started
©2020 Eclipse Ditto.
Site last generated: Nov 2, 2020
> Privacy Policy
> Terms of Use
thjaeckle
commented
Nov 2, 2020
@joosdavid and @DerSchwilk: please ensure that by splitting the OpenAPI doc in several files that all places which use the API doc still work:
the Ditto website at https://www.eclipse.org/ditto/http-api-doc.html
the kubernetes deployment
the Docker (compose) deployment
can it be still used to import it into Postman?
thjaeckle
added this to the 1.5.0 milestone
Nov 2, 2020
jufickel-b
reviewed
Nov 3, 2020
View changes
model/things/src/main/java/org/eclipse/ditto/model/things/ThingBuilder.java
eclipse/ditto - Gitter
eclipse/ditto - Gitter
eclipse/ditto - Gitter
}
}
}
}
I think that would support the principle: "Make simple things simple, make complex things possible.
the "simple things": by adding a single header, e.g. "ditto-metadata:issuedAt": "2020-06-09T14:29:00Z" all affected JSON keys in the command will get that same metadata information
the "complex things": if that is not sufficient, a header for each differing metadata field can be added
Copy link
Contributor
Author
JulianFeinauer
commented
Jul 6, 2020
Hey @thjaeckle I really like your idea as it makes it easy to add other metadata values and is not fixed add "add timestamps". So I will try to go on like that. Thanks!
👍
eclipse/ditto - Gitter
21m 49s
View #871
View workflow file
Header mapping for Feature ID
build
#766:
Pull request #871
synchronize
by
jokraehe
Nov 5, 2020
25m 5s
bosch-io:feature/header-mapping-feature-id
bosch-io:feature/header-mapping-feature-id
Nov 5, 2020
Policies group
→ commands/events
Create/Modify
Retrieve
Delete
Bindings
Examples
→ Things examples
Create a Thing
Delete a Thing
Modify a Thing
Retrieve a Thing
Retrieve multiple Things
Modify the Policy ID of a Thing
Create Attributes
Delete Attributes
Modify Attributes
Save preferences
eclipse/ditto - Gitter
Signed-off-by: Yufei Cai <yufei.cai@bosch-si.com>
thjaeckle
added a commit
to bosch-io/ditto
that referenced
this issue
Feb 3, 2020
Issue eclipse#561: fixed ImmutablePayloadTest by fixing ImmutablePayl…
…
cfcde5c
…oadBuilder MessagePath copying
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch-si.com>
thjaeckle
added a commit
to bosch-io/ditto
that referenced
> Copyright Agent
> Legal
> License
> Report a Vulnerability
Outdated
@@ -992,7 +1054,7 @@ default FromCopy setFeature(final Feature feature) {
/**
* Sets the given Feature to this builder. A previously set Feature with the same ID is replaced.
*
* @param existingFeaturesPredicate a predicate to decide whether the given features are set. The predicate
* @param existingFeaturesPredicate a predicate to decide whether the given features exist. The predicate
This comment has been minimized.
Sign in to view
jufickel-b
Nov 3, 2020
Contributor
Descriptions of predicates are not yet correct (in other classes, too).
The given predicate determines whether the provided arguments are set to the builder (depending on the Features in this case).
eclipse/ditto - Gitter
eclipse/ditto - Gitter
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
eclipse/ditto - Gitter
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
Thomas Jaeckle
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
1
JulianFeinauer
mentioned this issue
Jul 23, 2020
Time to live (TTL) for Ditto Properties with auto removal
#746
Open
thjaeckle
mentioned this issue
Jul 23, 2020
Feature/680 add metadata
#745
Merged
jufickel-b
added
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
25m 5s
View #871
View workflow file
Header mapping for Feature ID
build
#765:
Pull request #871
synchronize
by
jokraehe
Nov 5, 2020
23m 41s
bosch-io:feature/header-mapping-feature-id
bosch-io:feature/header-mapping-feature-id
Nov 5, 2020
23m 41s
Retrieve Attributes
Create a single Attribute
Delete a single Attribute
Modify a single Attribute
Retrieve a single Attribute
Create a Definition
Delete a Definition
Modify a Definition
Retrieve a Definition
Create Features
Delete Features
Modify Features
Retrieve Features
Create a single Feature
Delete a single Feature
Modify a single Feature
eclipse/ditto - Gitter
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
this issue
Feb 3, 2020
Issue eclipse#561: fixed that DittoTestSystem was not included in tes…
…
d263048
…t-jar of ditto-signals-base
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch-si.com>
thjaeckle
added a commit
to bosch-io/ditto
that referenced
this issue
Feb 3, 2020
Issue eclipse#561: reviewed facade - renamed, moved out of separate p…
…
410cbad
eclipse/ditto - Gitter
HTTP API • Eclipse Ditto • a digital twin framework
This should be transported by the Javadoc comment.
This comment has been minimized.
Sign in to view
DerSchwilk
Nov 4, 2020
Contributor
Changed in commit: 41a3a6d
Can you have a check?
DerSchwilk
and others
added 22 commits
Oct 19, 2020
Add desired properties to the Feature/Things model
…
40f2314
Implements desired properties as new element of a Feature on pair with the existing properties.
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
Add custom HTTP REST API facades wrapping Ditto message commands · Issue #682 · eclipse/ditto · GitHub
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
@thjaeckle
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
eclipse/ditto - Gitter
eclipse/ditto - Gitter
the
in progress
label
Jul 28, 2020
Copy link
Contributor
jufickel-b
commented
eclipse/ditto - Gitter
eclipse/ditto - Gitter
eclipse/ditto - Gitter
eclipse/ditto - Gitter
Payload mapping in connectivity service • Eclipse Ditto • a digital twin framework
Connections • Eclipse Ditto • a digital twin framework
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
View #871
View workflow file
Enhanced model and APIs with "desiredProperties" for Features
build
#764:
Pull request #865
synchronize
by
DerSchwilk
Nov 5, 2020
23m 25s
bosch-io:feature/desired-properties
bosch-io:feature/desired-properties
Nov 5, 2020
23m 25s
View #865
Retrieve a single Feature
Create Feature Definition
Delete Feature Definition
Modify Feature Definition
Retrieve Feature Definition
Create Feature Properties
Delete Feature Properties
Modify Feature Properties
Retrieve Feature Properties
Create a single Property
Delete a single Property
Modify a single Property
Retrieve a single Property
Error responses
→ Policies examples
Create a Policy
Delete a Policy
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
robmontalvojr
robmontalvojr
@robmontalvojr
We are now coming to speed with respect to cybersecurity in IoT...
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
…ackage, removed initialization of roundtrip facade in interface
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch-si.com>
thjaeckle
pushed a commit
to bosch-io/ditto
that referenced
this issue
Feb 3, 2020
Issue eclipse#561: Add configurable dynamic loading of thing-enrichin…
…
a550c9d
…g facade providers.
Signed-off-by: Yufei Cai <yufei.cai@bosch-si.com>
thjaeckle
pushed a commit
to bosch-io/ditto
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
Toggle navigation
Blog
Documentation
HTTP API
Sandbox
GitHub
GitHub examples
Links
Eclipse Ditto Project
Forum
Jenkins
Mailing list archives
Gitter.im chat
©2020 Eclipse Ditto.
Site last generated: Nov 2, 2020
> Privacy Policy
Part of issue #697
Signed-off-by: David Schwilk <david.schwilk@bosch.io>
Add twin commands/commandResponses for desired FeatureProperties CRUD…
…
408afea
… opreations
Adds commands/commandsResponses for the CRUD operations via twin channel on desired FeatureProperties.
Also adds exceptions for failing CRUD operations.
Live commands/commandResponse to be implemented.
Part of issue #697
Signed-off-by: David Schwilk <david.schwilk@bosch.io>
Added desiredProperty
…
3d4f9bc
Signed-off-by: Joos David (IOC/PAP-TH) <david.joos@bosch.io>
Added desiredProperty to response mapping strategies.
People
Repo info
Activity
robmontalvojr
@robmontalvojr
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
Skip to content
Sign up
Why GitHub?
Features →
Code review
Project management
Integrations
Actions
Packages
Security
Team management
People
Repo info
Activity
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
Thomas Jaeckle
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
Julian
Jul 30, 2020
The suggested header syntax has one major drawback.
Assuming a command modifies a complete thing (ModifyThing command) like the following:
{
"topic": "org.eclipse.ditto/thing-1/things/twin/commands/modify",
"headers": {
"ditto-metadata:issuedAt": "2020-06-09T14:29:00Z",
...
},
"path": "/",
"value": {
"features": {
"lamp": {
"properties": {
"on": false,
"color": {
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Toggle navigation
Blog
Documentation
HTTP API
Sandbox
GitHub
GitHub examples
Links
Eclipse Ditto Project
Forum
Jenkins
Mailing list archives
Gitter.im chat
Eclipse Ditto version:
Toggle navigation
Blog
Documentation
HTTP API
Sandbox
GitHub
GitHub examples
Links
Eclipse Ditto Project
Forum
Jenkins
Mailing list archives
Gitter.im chat
Eclipse Ditto version:
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
View workflow file
Enhanced model and APIs with "desiredProperties" for Features
build
#763:
Pull request #865
synchronize
by
DerSchwilk
Nov 5, 2020
24m 22s
bosch-io:feature/desired-properties
bosch-io:feature/desired-properties
Nov 5, 2020
24m 22s
View #865
Modify a Policy
Retrieve a Policy
Modify entries
Retrieve entries
Create a single entry
Delete a single entry
Modify a single entry
Retrieve a single entry
Modify subjects
Retrieve subjects
Create a single subject
Delete a single subject
Modify a single subject
Retrieve a single subject
Modify resources
eclipse/ditto - Gitter
eclipse/ditto - Gitter
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
that referenced
this issue
Feb 3, 2020
Issue eclipse#561: add actorsystem parameter to enrichment facade pro…
…
aa522f2
…viders.
Signed-off-by: Yufei Cai <yufei.cai@bosch-si.com>
thjaeckle
pushed a commit
to bosch-io/ditto
that referenced
Thomas Jaeckle
@thjaeckle
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
> Terms of Use
> Copyright Agent
> Legal
> License
> Report a Vulnerability
…
b57d61e
Signed-off-by: Joos David (IOC/PAP-TH) <david.joos@bosch.io>
Added desiredProperty to query command/commandResponse. Fixed failing…
…
34462fd
… tests due to deprecated jsonschema v1.
Signed-off-by: Joos David (IOC/PAP-TH) <david.joos@bosch.io>
Added GET/PUT/DELETE routes for desiredProperties and desiredProperty
…
aae3afb
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
Hosting
Mobile
Customer stories →
Security →
Team
Enterprise
Explore
Explore GitHub →
Learn & contribute
Topics
Collections
Trending
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
"r": 255,
"g": 255,
"b": 0
}
}
}
}
}
}
Then the value of "issuedAt" would be applied to all feature properties, i. e. on, r, g, b.
This way it is impossible to set a metadata value exclusively at the root level (/), i. e. the thing itself.
How about a syntax which allows to determine the level more specifically?
Example one:
{
"topic": "org.eclipse.ditto/thing-1/things/twin/commands/modify",
eclipse/ditto - Gitter
eclipse/ditto - Gitter
eclipse/ditto - Gitter
eclipse/ditto - Gitter
eclipse/ditto - Gitter
eclipse/ditto - Gitter
Thomas Jaeckle
@thjaeckle
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
robmontalvojr
@robmontalvojr
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
Julian
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
@tobias-zeptio
Alexander Wellbrock
@lionax_gitlab
It seems that while the targets are working finde the sources cause some problem right now. It seems that I'm also only sometimes able to get a working creation command executed in ditto if it's received by ditto via mqtt-source.I'm not using any header mapping right now. The app just sets the header object in the response payload before handing it over to mqtt->ditto-source
Thomas Jaeckle
@thjaeckle
the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
robmontalvojr
@robmontalvojr
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
Julian
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
Thomas Jaeckle
@thjaeckle
the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some pointsome "fake headers" may now be used in a headerMapping for MQTT 3, see: https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mappingbut to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs
Alexander Wellbrock
@lionax_gitlab
The connectivity service logs a lot of [WARN] No publish flow registered for MqttStatefulPublish... Might that be related?
It seems that while the targets are working finde the sources cause some problem right now. It seems that I'm also only sometimes able to get a working creation command executed in ditto if it's received by ditto via mqtt-source.I'm not using any header mapping right now. The app just sets the header object in the response payload before handing it over to mqtt->ditto-source
Thomas Jaeckle
@thjaeckle
the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
robmontalvojr
@robmontalvojr
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
Julian
Activity
Thomas Jaeckle
@thjaeckle
aah, yes - sorry, I mixed that up as wellit should still work that way you configured itdid you maybe configure an explicit header mapping in the target or in the source which now doesn't contain a mapping of the "correlation-id" header?
Thomas Jaeckle
@thjaeckle
the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some pointsome "fake headers" may now be used in a headerMapping for MQTT 3, see: https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mappingbut to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs
Alexander Wellbrock
@lionax_gitlab
The connectivity service logs a lot of [WARN] No publish flow registered for MqttStatefulPublish... Might that be related?
It seems that while the targets are working finde the sources cause some problem right now. It seems that I'm also only sometimes able to get a working creation command executed in ditto if it's received by ditto via mqtt-source.I'm not using any header mapping right now. The app just sets the header object in the response payload before handing it over to mqtt->ditto-source
Thomas Jaeckle
development
1.0
1.1
1.2
1.3
1.4
Important: This documentation reflects the latest 'development'. You might want to choose a released version.
Introduction
Overview
Digital twins
Hello world
Release Notes
1.4.0
1.3.0
1.2.1
1.2.0
1.1.5
1.1.3
development
1.0
1.1
1.2
1.3
1.4
Important: This documentation reflects the latest 'development'. You might want to choose a released version.
Introduction
Overview
Digital twins
Hello world
Release Notes
1.4.0
1.3.0
1.2.1
1.2.0
1.1.5
1.1.3
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
View workflow file
Enhanced model and APIs with "desiredProperties" for Features
build
#762:
Pull request #865
synchronize
by
DerSchwilk
Nov 5, 2020
24m 55s
bosch-io:feature/desired-properties
bosch-io:feature/desired-properties
Nov 5, 2020
24m 55s
View #865
Retrieve resources
Create a single resource
Delete a single resource
Modify a single resource
Retrieve a single resource
Error responses
→ Search examples
Sandbox
Presentations
Glossary
Feedback
Collapse All | Expand All
Ditto documentation overview
What is it?
Eclipse Ditto is a technology in the IoT
implementing a software pattern called “digital twins”.
A digital twin is a virtual, cloud based, representation of his real world counterpart
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this issue
Feb 3, 2020
Issue eclipse#561: Add configurable dynamic loading for message-enric…
…
616dc0e
…hment in connectivity.
Signed-off-by: Yufei Cai <yufei.cai@bosch-si.com>
thjaeckle
added a commit
to bosch-io/ditto
that referenced
this issue
Feb 3, 2020
Issue eclipse#561: use AbstractGraphActor as baseclass for MessageMap…
…
bdf5e9a
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Signed-off-by: David Joos <david.joos@bosch.io>
Build desiredProperty/ies routes.
…
ff2326f
Signed-off-by: David Joos <david.joos@bosch.io>
Added unit tests for desiredProperties on FeatureRoute
…
01bac5f
Signed-off-by: David Joos <david.joos@bosch.io>
Add events for desired properties CRUD
…
5d5b3da
Adds the events for CRUD on Feature's desired properties.
Part of issue #697
Signed-off-by: David Schwilk <david.schwilk@bosch.io>
Added EventMappingStrategies for desiredProperty/ies
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans →
Compare plans
Contact Sales
Nonprofit →
Education →
In this repository
All GitHub
↵
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
"headers": {
"ditto-metadata:issuedAt": "2020-06-09T14:29:00Z",
...
},
"path": "/",
"value": {
"features": {
"lamp": {
"properties": {
"on": false,
"color": {
"r": 255,
"g": 255,
"b": 0
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community Explore more communities
eclipse/ditto
Eclipse Ditto - Digital Twins for Eclipse IoT
People
Repo info
Activity
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@thjaeckle
the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
robmontalvojr
@robmontalvojr
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
Julian
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
1.1.2
1.1.1
1.1.0
1.0.0
0.9.0
0.8.0
Milestone releases
1.0.0-M2
1.0.0-M1a
0.9.0-M2
0.9.0-M1
0.8.0-M3
0.8.0-M2
0.8.0-M1
0.3.0-M2
0.3.0-M1
1.1.2
1.1.1
1.1.0
1.0.0
0.9.0
0.8.0
Milestone releases
1.0.0-M2
1.0.0-M1a
0.9.0-M2
0.9.0-M1
0.8.0-M3
0.8.0-M2
0.8.0-M1
0.3.0-M2
0.3.0-M1
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
View workflow file
Merge pull request #872 from bosch-io/feature/silent-implicit-thing-creation
Don't send error response for exceptions during implicit thing creation
build
#761:
Commit 9504fbb
pushed
by
thjaeckle
Nov 5, 2020
24m 20s
master
master
Nov 5, 2020
24m 20s
View workflow file
(real world “Things”, e.g. devices like sensors, smart heating, connected cars, smart grids, EV charging stations, …).
The technology mirrors potentially millions and billions of digital twins residing in the digital world with physical “Things”.
This simplifies developing IoT solutions for software developers as they do not need to know how or where
exactly the physical “Things” are connected.
With Ditto a thing can just be used as any other web service via its digital twin.
What is it not?
Ditto is not another fully-fledged IoT platform. It does not provide software running on IoT gateways and it does not
define or implement an IoT protocol in order to communicate with devices.
Its focus lies on back end scenarios by providing web APIs in order to simplify working with already connected (e.g.
via Eclipse Hono) devices and “Things” from customer apps or other back end software.
It also does not specify which data or which structure a “Thing” in the IoT has to provide.
When to use it?
TL;DRUse it in order to get a fully-fledged, authorization aware API
(HTTP, WebSocket and other messaging protocols) for interacting with your digital twins and all aspects around them.
Imagine you are building an IoT solution. And let’s assume that you use both hardware (e.g. sensors or actuators) and
software (e.g. a mobile or web app) in order to solve your customer’s problem.
Alexander Wellbrock
@lionax_gitlab
I just noticed that I did not mention, that the replyTarget is set in my mqtt-source configuration, not the target configuration
Thomas Jaeckle
@thjaeckle
aah, yes - sorry, I mixed that up as wellit should still work that way you configured itdid you maybe configure an explicit header mapping in the target or in the source which now doesn't contain a mapping of the "correlation-id" header?
Thomas Jaeckle
@thjaeckle
the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some pointsome "fake headers" may now be used in a headerMapping for MQTT 3, see: https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mappingbut to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs
Alexander Wellbrock
@lionax_gitlab
The connectivity service logs a lot of [WARN] No publish flow registered for MqttStatefulPublish... Might that be related?
It seems that while the targets are working finde the sources cause some problem right now. It seems that I'm also only sometimes able to get a working creation command executed in ditto if it's received by ditto via mqtt-source.I'm not using any header mapping right now. The app just sets the header object in the response payload before handing it over to mqtt->ditto-source
Thomas Jaeckle
Patrick Sernetz
@patrickse
Is it possible to use ditto with keycloak without using https. I am creating a rather simple environment for a little workshop. The workshop will be onsite and cloud-less so no chance to use proper certificates and I really would like to skip the part of installing self-signed certs to the different machines.
Julian
@JulianFeinauer
AFAIR as I remember it is not
Its harcoded in Ditto to use https, I think
66 replies
mangexl
@mangexl
@thjaeckle Thanks! I am trying to find which/how to provide the adress to use for the service discovery in ditto. If i have an address for example ditto-test.com that shall be used for discovery, do you know how I could provide it?
Thomas Jaeckle
@thjaeckle
@mangexl that should be controllable via this configuration section: https://github.com/eclipse/ditto/blob/master/services/utils/config/src/main/resources/ditto-akka-config.conf#L62
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
…pingProcessorActor in order to process OutboundSignal messages in a streamed way; enhanced AbstractGraphActor by generifying the message classes it handles
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch-si.com>
thjaeckle
added a commit
to bosch-io/ditto
that referenced
this issue
Feb 3, 2020
Issue eclipse#561: fixed javadoc errors
…
3c369e1
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch-si.com>
thjaeckle
pushed a commit
to bosch-io/ditto
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
…
1c3084e
Signed-off-by: David Joos <david.joos@bosch.io>
Added unit tests for events regarding desiredProperties.
…
e126e32
Part of issue #697
Signed-off-by: David Joos <david.joos@bosch.io>
Added unit test for events regarding desiredProperties.
…
130b3fb
Part of issue #697
Signed-off-by: David Joos <david.joos@bosch.io>
Added desiredProperty to existsBy.
…
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@lionax_gitlab
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
similar to kafka, AMQP or MQTT notifying you of a new message
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
Thomas Jaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
}
}
}
}
}
}
Example one is interpreted in a way to set the value of "issuedAt" only at the root level (path /).
Example two:
{
Thomas Jaeckle
@thjaeckle
@mangexl for using akka-dns, no additional dependency is required and this is the default, yessee the Akka doc: https://doc.akka.io/docs/akka/current/discovery/index.html#discovery-method-dnsso that should be possible on AWS/ECSadditionally, there is another possibility for ECS as well: https://doc.akka.io/docs/akka-management/current/discovery/aws.html#discovery-method-aws-api-ecs-discoveryfor that however we would need another depedency: com.lightbend.akka.discovery:akka-discovery-aws-api_2.13 or com.lightbend.akka.discovery:akka-discovery-aws-api-async_2.13
Patrick Sernetz
@patrickse
Is it possible to use ditto with keycloak without using https. I am creating a rather simple environment for a little workshop. The workshop will be onsite and cloud-less so no chance to use proper certificates and I really would like to skip the part of installing self-signed certs to the different machines.
Julian
@JulianFeinauer
AFAIR as I remember it is not
Its harcoded in Ditto to use https, I think
66 replies
Thomas Jaeckle
@thjaeckle
@sheldonTest are you sure that you want/need to build Ditto - or do you just want to try out the helloworld example?in that case you don't need to build Ditto, just use the official Docker images and go ahead starting it, e.g. with docker compose:https://www.eclipse.org/ditto/installation-running.htmlOr in a Kubernetes cluster: https://github.com/eclipse/ditto/tree/master/deployment/kubernetesOr using the Helm chart: https://github.com/eclipse/ditto/tree/master/deployment/helm
mangexl
@mangexl
Hello, I am looking at setting up a ditto cluster using akka-dns service discovery (running AWS/ECS). Do you know if this is possible with current implementation? I see that default discovery method is akka-dns in ditto-akka-config.conf. But I do not find any maven dependency for akka-discovery-dns.
Thomas Jaeckle
@thjaeckle
@mangexl for using akka-dns, no additional dependency is required and this is the default, yessee the Akka doc: https://doc.akka.io/docs/akka/current/discovery/index.html#discovery-method-dnsso that should be possible on AWS/ECSadditionally, there is another possibility for ECS as well: https://doc.akka.io/docs/akka-management/current/discovery/aws.html#discovery-method-aws-api-ecs-discoveryfor that however we would need another depedency: com.lightbend.akka.discovery:akka-discovery-aws-api_2.13 or com.lightbend.akka.discovery:akka-discovery-aws-api-async_2.13
Patrick Sernetz
@patrickse
Is it possible to use ditto with keycloak without using https. I am creating a rather simple environment for a little workshop. The workshop will be onsite and cloud-less so no chance to use proper certificates and I really would like to skip the part of installing self-signed certs to the different machines.
Julian
Stefan Maute
@stmaute
@sheldonTest No problem. Here is the link to our documentation: https://www.eclipse.org/ditto/installation-building.html
Thomas Jaeckle
@thjaeckle
@sheldonTest are you sure that you want/need to build Ditto - or do you just want to try out the helloworld example?in that case you don't need to build Ditto, just use the official Docker images and go ahead starting it, e.g. with docker compose:https://www.eclipse.org/ditto/installation-running.htmlOr in a Kubernetes cluster: https://github.com/eclipse/ditto/tree/master/deployment/kubernetesOr using the Helm chart: https://github.com/eclipse/ditto/tree/master/deployment/helm
mangexl
@mangexl
Hello, I am looking at setting up a ditto cluster using akka-dns service discovery (running AWS/ECS). Do you know if this is possible with current implementation? I see that default discovery method is akka-dns in ditto-akka-config.conf. But I do not find any maven dependency for akka-discovery-dns.
Thomas Jaeckle
@thjaeckle
@mangexl for using akka-dns, no additional dependency is required and this is the default, yessee the Akka doc: https://doc.akka.io/docs/akka/current/discovery/index.html#discovery-method-dnsso that should be possible on AWS/ECSadditionally, there is another possibility for ECS as well: https://doc.akka.io/docs/akka-management/current/discovery/aws.html#discovery-method-aws-api-ecs-discoveryfor that however we would need another depedency: com.lightbend.akka.discovery:akka-discovery-aws-api_2.13 or com.lightbend.akka.discovery:akka-discovery-aws-api-async_2.13
Patrick Sernetz
@patrickse
Activity
sheldonTest
@sheldonTest
@stmaute thank you i will try this. I'm not sure if I skipped this step or I missed it in the helloworld example. Is there a link with this instruction?
Stefan Maute
@stmaute
@sheldonTest No problem. Here is the link to our documentation: https://www.eclipse.org/ditto/installation-building.html
Thomas Jaeckle
@thjaeckle
@sheldonTest are you sure that you want/need to build Ditto - or do you just want to try out the helloworld example?in that case you don't need to build Ditto, just use the official Docker images and go ahead starting it, e.g. with docker compose:https://www.eclipse.org/ditto/installation-running.htmlOr in a Kubernetes cluster: https://github.com/eclipse/ditto/tree/master/deployment/kubernetesOr using the Helm chart: https://github.com/eclipse/ditto/tree/master/deployment/helm
mangexl
@mangexl
Hello, I am looking at setting up a ditto cluster using akka-dns service discovery (running AWS/ECS). Do you know if this is possible with current implementation? I see that default discovery method is akka-dns in ditto-akka-config.conf. But I do not find any maven dependency for akka-discovery-dns.
Stefan Maute
@stmaute
Hi @sheldonTest. After the build process has finished you need to build the docker images with the following script ./ditto/services/build-images.sh. Then you can run the docker-compose up -d.
sheldonTest
@sheldonTest
@stmaute thank you i will try this. I'm not sure if I skipped this step or I missed it in the helloworld example. Is there a link with this instruction?
Stefan Maute
@stmaute
@sheldonTest No problem. Here is the link to our documentation: https://www.eclipse.org/ditto/installation-building.html
Thomas Jaeckle
@thjaeckle
@sheldonTest are you sure that you want/need to build Ditto - or do you just want to try out the helloworld example?in that case you don't need to build Ditto, just use the official Docker images and go ahead starting it, e.g. with docker compose:https://www.eclipse.org/ditto/installation-running.htmlOr in a Kubernetes cluster: https://github.com/eclipse/ditto/tree/master/deployment/kubernetesOr using the Helm chart: https://github.com/eclipse/ditto/tree/master/deployment/helm
mangexl
@mangexl
Hello, I am looking at setting up a ditto cluster using akka-dns service discovery (running AWS/ECS). Do you know if this is possible with current implementation? I see that default discovery method is akka-dns in ditto-akka-config.conf. But I do not find any maven dependency for akka-discovery-dns.
sheldonTest
@sheldonTest
Pulling policies (docker.io/eclipse/ditto-policies:0-SNAPSHOT)...ERROR: manifest for eclipse/ditto-policies:0-SNAPSHOT not found: manifest unknown: manifest unknown
How should I fix or proceed?
Stefan Maute
@stmaute
Hi @sheldonTest. After the build process has finished you need to build the docker images with the following script ./ditto/services/build-images.sh. Then you can run the docker-compose up -d.
sheldonTest
@sheldonTest
@stmaute thank you i will try this. I'm not sure if I skipped this step or I missed it in the helloworld example. Is there a link with this instruction?
Stefan Maute
@stmaute
@sheldonTest No problem. Here is the link to our documentation: https://www.eclipse.org/ditto/installation-building.html
Thomas Jaeckle
@thjaeckle
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
0.2.0-M1
0.1.0-M3
0.1.0-M1
Installation
Building Ditto
Running Ditto
Operating Ditto
Basic concepts
Overview
Model entities
Thing
Access Control List (ACL)
Feature
Policy
Namespaces and Names
0.2.0-M1
0.1.0-M3
0.1.0-M1
Installation
Building Ditto
Running Ditto
Operating Ditto
Basic concepts
Overview
Model entities
Thing
Access Control List (ACL)
Feature
Policy
Namespaces and Names
Thing Metadata
Errors
Authentication and Authorization
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
Thomas Jaeckle
@thjaeckle
Previous Next
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
In such a scenario you have several places where to implement software:
on or near the hardware, e.g. on an Arduino using C/C++ or on an Raspberry PI using Python,
optionally on a gateway establishing the Internet connectivity (e.g. based on Eclipse Kura),
in the mobile or web app using Java, Javascript, Swift etc.,
in the “back end” fulfilling several responsibilities like
providing an API abstracting from the hardware,
routing requests between hardware and customer apps,
ensuring only authorized access,
persisting last reported state of hardware as cache and for providing the data when hardware is currently not connected,
notifying interested parties (e.g. other back end services) about changes,
…
Ditto focuses on solving the responsibilities a typical “back end” has in such scenarios.
Its goal is to free IoT solutions from the need of implementing and operating a
custom back end. Instead by using Eclipse Ditto they can focus on business requirements, on connecting devices to
the cloud/back end and on implementing business applications.
Tags:
@thjaeckle
the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
robmontalvojr
@robmontalvojr
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
Julian
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
by default, ditto-cluster is used as DNS name to use for discovery .. also have a look at the Akka reference configuration for the details on those options:https://github.com/akka/akka-management/blob/master/cluster-bootstrap/src/main/resources/reference.conf#L30
to use ditto-test.com as DNS address I would overwrite the effective-name .. that one should be the "total" overwrite for DNS discovery
Alexander Wellbrock
@lionax_gitlab
Did something change with the mqtt / connectivity system regarding responses for ditto live messages? I'm using a HTTP client to issue a live message which is then forwarded via mqtt to some application doing stuff and returning a response via mqtt back to ditto. To get request and response correlated I used to have a correlation-id header with the response using the id from the request. That used to work a while ago but now doesn't. I've verified that ditto writes the message to mqtt broker, the broker transmits it to the app and the app sends a response with correlation-id header. Then nothing except for a timeout at the HTTP client...
Thomas Jaeckle
@thjaeckle
the "replyTarget" in a connection's target defines on which address responses are consumed for outgoing messages Ditto sends (in this case published to a MQTT topic)previously that was purely defined by the "reply-to" header (which should also be the default for the "replyTarget" "address", isn't it?)the "replyTarget" lets you additionally defined header mappings and expected response types (e.g. in order to only receive "errors", but no successful "responses") for consumed responses (and is therefore similar to a "source", defined in the "target" but only for responses)so does you HTTP live message request define a "reply-to" header? if not, the "replyTarget.address" may also be filled with a static reply address where the MQTT device sends its replies todid you previously define a separate "source" for the replies?
Alexander Wellbrock
@lionax_gitlab
Currently there is a mqtt target where ditto writes the request from the HTTP client. The app then writes it's response to another topic where ditto has a mqtt-source configured for. The app uses the same ditto mqtt-source for answering messages as well as sending commands / signals / messages itself
I just noticed that I did not mention, that the replyTarget is set in my mqtt-source configuration, not the target configuration
Thomas Jaeckle
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
_
Jens Reimann
that referenced
this issue
Feb 3, 2020
Issue eclipse#561: Ensure that extra fields are available to WebSocke…
…
710cb04
…t and SSE subscriptions and connections.
Signed-off-by: Juergen Fickel <juergen.fickel@bosch-si.com>
thjaeckle
pushed a commit
to bosch-io/ditto
that referenced
this issue
Feb 3, 2020
Issue eclipse#561: Fixed bug in `ThingsSseRouteBuilder` where "fields…
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
d634384
Part of issue #697
Signed-off-by: David Joos <david.joos@bosch.io>
Add live commands/command-answer-builders for desired properties
…
9e43d6e
Adds live commands and command-answer-builders for desired properties of features.
Part of issue #697
Signed-off-by: David Schwilk <david.schwilk@bosch.io>
Add CommandStrategies for desired properties
…
bc141f2
Part of issue #697
Signed-off-by: David Schwilk <david.schwilk@bosch.io>
Add EventStrategies for desired properties
…
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
Sign up
eclipse
/
ditto
Watch
36
Star
213
Fork
72
Code
Issues
52
Pull requests
1
Actions
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
@thjaeckle
post:
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
_
Thomas Jaeckle
@thjaeckle
post:
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"topic": "org.eclipse.ditto/thing-1/things/twin/commands/modify",
"headers": {
"ditto-metadata:*/issuedAt": "2020-06-09T14:29:00Z",
...
},
"path": "/",
"value": {
"features": {
"lamp": {
"properties": {
"on": false,
mangexl
@mangexl
@thjaeckle Thanks! I am trying to find which/how to provide the adress to use for the service discovery in ditto. If i have an address for example ditto-test.com that shall be used for discovery, do you know how I could provide it?
Thomas Jaeckle
@thjaeckle
@mangexl that should be controllable via this configuration section: https://github.com/eclipse/ditto/blob/master/services/utils/config/src/main/resources/ditto-akka-config.conf#L62
by default, ditto-cluster is used as DNS name to use for discovery .. also have a look at the Akka reference configuration for the details on those options:https://github.com/akka/akka-management/blob/master/cluster-bootstrap/src/main/resources/reference.conf#L30
to use ditto-test.com as DNS address I would overwrite the effective-name .. that one should be the "total" overwrite for DNS discovery
Alexander Wellbrock
@JulianFeinauer
AFAIR as I remember it is not
Its harcoded in Ditto to use https, I think
66 replies
mangexl
@mangexl
@thjaeckle Thanks! I am trying to find which/how to provide the adress to use for the service discovery in ditto. If i have an address for example ditto-test.com that shall be used for discovery, do you know how I could provide it?
Thomas Jaeckle
@thjaeckle
@mangexl that should be controllable via this configuration section: https://github.com/eclipse/ditto/blob/master/services/utils/config/src/main/resources/ditto-akka-config.conf#L62
by default, ditto-cluster is used as DNS name to use for discovery .. also have a look at the Akka reference configuration for the details on those options:https://github.com/akka/akka-management/blob/master/cluster-bootstrap/src/main/resources/reference.conf#L30
to use ditto-test.com as DNS address I would overwrite the effective-name .. that one should be the "total" overwrite for DNS discovery
Alexander Wellbrock
@lionax_gitlab
Is it possible to use ditto with keycloak without using https. I am creating a rather simple environment for a little workshop. The workshop will be onsite and cloud-less so no chance to use proper certificates and I really would like to skip the part of installing self-signed certs to the different machines.
Julian
@JulianFeinauer
AFAIR as I remember it is not
Its harcoded in Ditto to use https, I think
66 replies
mangexl
@mangexl
@thjaeckle Thanks! I am trying to find which/how to provide the adress to use for the service discovery in ditto. If i have an address for example ditto-test.com that shall be used for discovery, do you know how I could provide it?
Thomas Jaeckle
@thjaeckle
@mangexl that should be controllable via this configuration section: https://github.com/eclipse/ditto/blob/master/services/utils/config/src/main/resources/ditto-akka-config.conf#L62
by default, ditto-cluster is used as DNS name to use for discovery .. also have a look at the Akka reference configuration for the details on those options:https://github.com/akka/akka-management/blob/master/cluster-bootstrap/src/main/resources/reference.conf#L30
to use ditto-test.com as DNS address I would overwrite the effective-name .. that one should be the "total" overwrite for DNS discovery
Alexander Wellbrock
Thomas Jaeckle
@thjaeckle
@mangexl for using akka-dns, no additional dependency is required and this is the default, yessee the Akka doc: https://doc.akka.io/docs/akka/current/discovery/index.html#discovery-method-dnsso that should be possible on AWS/ECSadditionally, there is another possibility for ECS as well: https://doc.akka.io/docs/akka-management/current/discovery/aws.html#discovery-method-aws-api-ecs-discoveryfor that however we would need another depedency: com.lightbend.akka.discovery:akka-discovery-aws-api_2.13 or com.lightbend.akka.discovery:akka-discovery-aws-api-async_2.13
Patrick Sernetz
@patrickse
Is it possible to use ditto with keycloak without using https. I am creating a rather simple environment for a little workshop. The workshop will be onsite and cloud-less so no chance to use proper certificates and I really would like to skip the part of installing self-signed certs to the different machines.
Julian
@JulianFeinauer
AFAIR as I remember it is not
Its harcoded in Ditto to use https, I think
66 replies
mangexl
@mangexl
@thjaeckle Thanks! I am trying to find which/how to provide the adress to use for the service discovery in ditto. If i have an address for example ditto-test.com that shall be used for discovery, do you know how I could provide it?
Thomas Jaeckle
Thomas Jaeckle
@thjaeckle
@mangexl for using akka-dns, no additional dependency is required and this is the default, yessee the Akka doc: https://doc.akka.io/docs/akka/current/discovery/index.html#discovery-method-dnsso that should be possible on AWS/ECSadditionally, there is another possibility for ECS as well: https://doc.akka.io/docs/akka-management/current/discovery/aws.html#discovery-method-aws-api-ecs-discoveryfor that however we would need another depedency: com.lightbend.akka.discovery:akka-discovery-aws-api_2.13 or com.lightbend.akka.discovery:akka-discovery-aws-api-async_2.13
Patrick Sernetz
@patrickse
Is it possible to use ditto with keycloak without using https. I am creating a rather simple environment for a little workshop. The workshop will be onsite and cloud-less so no chance to use proper certificates and I really would like to skip the part of installing self-signed certs to the different machines.
Julian
@JulianFeinauer
AFAIR as I remember it is not
Its harcoded in Ditto to use https, I think
66 replies
mangexl
@mangexl
@thjaeckle Thanks! I am trying to find which/how to provide the adress to use for the service discovery in ditto. If i have an address for example ditto-test.com that shall be used for discovery, do you know how I could provide it?
Thomas Jaeckle
@sheldonTest are you sure that you want/need to build Ditto - or do you just want to try out the helloworld example?in that case you don't need to build Ditto, just use the official Docker images and go ahead starting it, e.g. with docker compose:https://www.eclipse.org/ditto/installation-running.htmlOr in a Kubernetes cluster: https://github.com/eclipse/ditto/tree/master/deployment/kubernetesOr using the Helm chart: https://github.com/eclipse/ditto/tree/master/deployment/helm
mangexl
@mangexl
Hello, I am looking at setting up a ditto cluster using akka-dns service discovery (running AWS/ECS). Do you know if this is possible with current implementation? I see that default discovery method is akka-dns in ditto-akka-config.conf. But I do not find any maven dependency for akka-discovery-dns.
Thomas Jaeckle
@thjaeckle
@mangexl for using akka-dns, no additional dependency is required and this is the default, yessee the Akka doc: https://doc.akka.io/docs/akka/current/discovery/index.html#discovery-method-dnsso that should be possible on AWS/ECSadditionally, there is another possibility for ECS as well: https://doc.akka.io/docs/akka-management/current/discovery/aws.html#discovery-method-aws-api-ecs-discoveryfor that however we would need another depedency: com.lightbend.akka.discovery:akka-discovery-aws-api_2.13 or com.lightbend.akka.discovery:akka-discovery-aws-api-async_2.13
Patrick Sernetz
@patrickse
Is it possible to use ditto with keycloak without using https. I am creating a rather simple environment for a little workshop. The workshop will be onsite and cloud-less so no chance to use proper certificates and I really would like to skip the part of installing self-signed certs to the different machines.
Julian
@JulianFeinauer
AFAIR as I remember it is not
Its harcoded in Ditto to use https, I think
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
_
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
_
Jens Reimann
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Thing Metadata
Errors
Authentication and Authorization
Messages
Signals
Signal types
Command
Command response
Error response
Event
APIs
Connections
Placeholders
Change notifications
RQL expressions
Signal enrichment
Search
Messages
Signals
Signal types
Command
Command response
Error response
Event
APIs
Connections
Placeholders
Change notifications
RQL expressions
Signal enrichment
Search
Acknowledgements / QoS
Architecture
Overview
Services
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
_
Alexander Wellbrock
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
getting_started
©2020 Eclipse Ditto.
Site last generated: Nov 2, 2020
> Privacy Policy
> Terms of Use
> Copyright Agent
> Legal
> License
> Report a Vulnerability
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
@thjaeckle
aah, yes - sorry, I mixed that up as wellit should still work that way you configured itdid you maybe configure an explicit header mapping in the target or in the source which now doesn't contain a mapping of the "correlation-id" header?
Thomas Jaeckle
@thjaeckle
the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some pointsome "fake headers" may now be used in a headerMapping for MQTT 3, see: https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mappingbut to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs
Alexander Wellbrock
@lionax_gitlab
The connectivity service logs a lot of [WARN] No publish flow registered for MqttStatefulPublish... Might that be related?
It seems that while the targets are working finde the sources cause some problem right now. It seems that I'm also only sometimes able to get a working creation command executed in ditto if it's received by ditto via mqtt-source.I'm not using any header mapping right now. The app just sets the header object in the response payload before handing it over to mqtt->ditto-source
Thomas Jaeckle
@thjaeckle
the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
robmontalvojr
@robmontalvojr
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
_
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
@thjaeckle
post:
summary: Executes the switchOnFor on the device
description: |-
…
32e469a
…" query parameter was not evaluated.
Signed-off-by: Juergen Fickel <juergen.fickel@bosch-si.com>
thjaeckle
pushed a commit
to bosch-io/ditto
that referenced
this issue
Feb 3, 2020
Issue eclipse#561: Some refactoring around `AbstractGraphActor`:
…
c72cadf
* Use DittoDiagnosticLoggingAdapter for logging.
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
546b843
Adds EventStrategies for the desired properties of a feature.
Fixes a setDesiredProperties which accidentally set the normal properties.
Part of issue #697
Signed-off-by: David Schwilk <david.schwilk@bosch.io>
Added desiredProperty to SortBy.
…
c28f22b
Part of issue #697
Signed-off-by: David Joos <david.joos@bosch.io>
Added desiredProperty to filterBy.
…
06db7fc
Part of issue #697
Signed-off-by: David Joos <david.joos@bosch.io>
Added desiredProperty to filterBy. Additional unit test.
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
_
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@lionax_gitlab
Projects
1
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
_
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
Thomas Jaeckle
@thjaeckle
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
_
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@lionax_gitlab
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
_
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
@thjaeckle
post:
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
"color": {
"r": 255,
"g": 255,
"b": 0
}
}
}
}
}
}
In example two the asterisk implies that the value of "issuedAt" should be applied to all the affected JSON leaves, in this case on, r, g and b.
Copy link
Contributor
thjaeckle
commented
@lionax_gitlab
Did something change with the mqtt / connectivity system regarding responses for ditto live messages? I'm using a HTTP client to issue a live message which is then forwarded via mqtt to some application doing stuff and returning a response via mqtt back to ditto. To get request and response correlated I used to have a correlation-id header with the response using the id from the request. That used to work a while ago but now doesn't. I've verified that ditto writes the message to mqtt broker, the broker transmits it to the app and the app sends a response with correlation-id header. Then nothing except for a timeout at the HTTP client...
Thomas Jaeckle
@thjaeckle
the "replyTarget" in a connection's target defines on which address responses are consumed for outgoing messages Ditto sends (in this case published to a MQTT topic)previously that was purely defined by the "reply-to" header (which should also be the default for the "replyTarget" "address", isn't it?)the "replyTarget" lets you additionally defined header mappings and expected response types (e.g. in order to only receive "errors", but no successful "responses") for consumed responses (and is therefore similar to a "source", defined in the "target" but only for responses)so does you HTTP live message request define a "reply-to" header? if not, the "replyTarget.address" may also be filled with a static reply address where the MQTT device sends its replies todid you previously define a separate "source" for the replies?
Alexander Wellbrock
@lionax_gitlab
Currently there is a mqtt target where ditto writes the request from the HTTP client. The app then writes it's response to another topic where ditto has a mqtt-source configured for. The app uses the same ditto mqtt-source for answering messages as well as sending commands / signals / messages itself
I just noticed that I did not mention, that the replyTarget is set in my mqtt-source configuration, not the target configuration
Thomas Jaeckle
@thjaeckle
aah, yes - sorry, I mixed that up as wellit should still work that way you configured itdid you maybe configure an explicit header mapping in the target or in the source which now doesn't contain a mapping of the "correlation-id" header?
Thomas Jaeckle
@thjaeckle
Did something change with the mqtt / connectivity system regarding responses for ditto live messages? I'm using a HTTP client to issue a live message which is then forwarded via mqtt to some application doing stuff and returning a response via mqtt back to ditto. To get request and response correlated I used to have a correlation-id header with the response using the id from the request. That used to work a while ago but now doesn't. I've verified that ditto writes the message to mqtt broker, the broker transmits it to the app and the app sends a response with correlation-id header. Then nothing except for a timeout at the HTTP client...
Thomas Jaeckle
@thjaeckle
the "replyTarget" in a connection's target defines on which address responses are consumed for outgoing messages Ditto sends (in this case published to a MQTT topic)previously that was purely defined by the "reply-to" header (which should also be the default for the "replyTarget" "address", isn't it?)the "replyTarget" lets you additionally defined header mappings and expected response types (e.g. in order to only receive "errors", but no successful "responses") for consumed responses (and is therefore similar to a "source", defined in the "target" but only for responses)so does you HTTP live message request define a "reply-to" header? if not, the "replyTarget.address" may also be filled with a static reply address where the MQTT device sends its replies todid you previously define a separate "source" for the replies?
Alexander Wellbrock
@lionax_gitlab
Currently there is a mqtt target where ditto writes the request from the HTTP client. The app then writes it's response to another topic where ditto has a mqtt-source configured for. The app uses the same ditto mqtt-source for answering messages as well as sending commands / signals / messages itself
I just noticed that I did not mention, that the replyTarget is set in my mqtt-source configuration, not the target configuration
Thomas Jaeckle
@thjaeckle
aah, yes - sorry, I mixed that up as wellit should still work that way you configured itdid you maybe configure an explicit header mapping in the target or in the source which now doesn't contain a mapping of the "correlation-id" header?
Thomas Jaeckle
@thjaeckle
the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some pointsome "fake headers" may now be used in a headerMapping for MQTT 3, see: https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mappingbut to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs
@lionax_gitlab
Did something change with the mqtt / connectivity system regarding responses for ditto live messages? I'm using a HTTP client to issue a live message which is then forwarded via mqtt to some application doing stuff and returning a response via mqtt back to ditto. To get request and response correlated I used to have a correlation-id header with the response using the id from the request. That used to work a while ago but now doesn't. I've verified that ditto writes the message to mqtt broker, the broker transmits it to the app and the app sends a response with correlation-id header. Then nothing except for a timeout at the HTTP client...
Thomas Jaeckle
@thjaeckle
the "replyTarget" in a connection's target defines on which address responses are consumed for outgoing messages Ditto sends (in this case published to a MQTT topic)previously that was purely defined by the "reply-to" header (which should also be the default for the "replyTarget" "address", isn't it?)the "replyTarget" lets you additionally defined header mappings and expected response types (e.g. in order to only receive "errors", but no successful "responses") for consumed responses (and is therefore similar to a "source", defined in the "target" but only for responses)so does you HTTP live message request define a "reply-to" header? if not, the "replyTarget.address" may also be filled with a static reply address where the MQTT device sends its replies todid you previously define a separate "source" for the replies?
Alexander Wellbrock
@lionax_gitlab
Currently there is a mqtt target where ditto writes the request from the HTTP client. The app then writes it's response to another topic where ditto has a mqtt-source configured for. The app uses the same ditto mqtt-source for answering messages as well as sending commands / signals / messages itself
I just noticed that I did not mention, that the replyTarget is set in my mqtt-source configuration, not the target configuration
Thomas Jaeckle
@thjaeckle
aah, yes - sorry, I mixed that up as wellit should still work that way you configured itdid you maybe configure an explicit header mapping in the target or in the source which now doesn't contain a mapping of the "correlation-id" header?
Thomas Jaeckle
@thjaeckle
the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some pointsome "fake headers" may now be used in a headerMapping for MQTT 3, see: https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mappingbut to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs
@thjaeckle
@mangexl that should be controllable via this configuration section: https://github.com/eclipse/ditto/blob/master/services/utils/config/src/main/resources/ditto-akka-config.conf#L62
by default, ditto-cluster is used as DNS name to use for discovery .. also have a look at the Akka reference configuration for the details on those options:https://github.com/akka/akka-management/blob/master/cluster-bootstrap/src/main/resources/reference.conf#L30
to use ditto-test.com as DNS address I would overwrite the effective-name .. that one should be the "total" overwrite for DNS discovery
Alexander Wellbrock
@lionax_gitlab
Did something change with the mqtt / connectivity system regarding responses for ditto live messages? I'm using a HTTP client to issue a live message which is then forwarded via mqtt to some application doing stuff and returning a response via mqtt back to ditto. To get request and response correlated I used to have a correlation-id header with the response using the id from the request. That used to work a while ago but now doesn't. I've verified that ditto writes the message to mqtt broker, the broker transmits it to the app and the app sends a response with correlation-id header. Then nothing except for a timeout at the HTTP client...
Thomas Jaeckle
@thjaeckle
the "replyTarget" in a connection's target defines on which address responses are consumed for outgoing messages Ditto sends (in this case published to a MQTT topic)previously that was purely defined by the "reply-to" header (which should also be the default for the "replyTarget" "address", isn't it?)the "replyTarget" lets you additionally defined header mappings and expected response types (e.g. in order to only receive "errors", but no successful "responses") for consumed responses (and is therefore similar to a "source", defined in the "target" but only for responses)so does you HTTP live message request define a "reply-to" header? if not, the "replyTarget.address" may also be filled with a static reply address where the MQTT device sends its replies todid you previously define a separate "source" for the replies?
Alexander Wellbrock
@lionax_gitlab
@thjaeckle
@mangexl that should be controllable via this configuration section: https://github.com/eclipse/ditto/blob/master/services/utils/config/src/main/resources/ditto-akka-config.conf#L62
by default, ditto-cluster is used as DNS name to use for discovery .. also have a look at the Akka reference configuration for the details on those options:https://github.com/akka/akka-management/blob/master/cluster-bootstrap/src/main/resources/reference.conf#L30
to use ditto-test.com as DNS address I would overwrite the effective-name .. that one should be the "total" overwrite for DNS discovery
Alexander Wellbrock
@lionax_gitlab
Did something change with the mqtt / connectivity system regarding responses for ditto live messages? I'm using a HTTP client to issue a live message which is then forwarded via mqtt to some application doing stuff and returning a response via mqtt back to ditto. To get request and response correlated I used to have a correlation-id header with the response using the id from the request. That used to work a while ago but now doesn't. I've verified that ditto writes the message to mqtt broker, the broker transmits it to the app and the app sends a response with correlation-id header. Then nothing except for a timeout at the HTTP client...
Thomas Jaeckle
@thjaeckle
the "replyTarget" in a connection's target defines on which address responses are consumed for outgoing messages Ditto sends (in this case published to a MQTT topic)previously that was purely defined by the "reply-to" header (which should also be the default for the "replyTarget" "address", isn't it?)the "replyTarget" lets you additionally defined header mappings and expected response types (e.g. in order to only receive "errors", but no successful "responses") for consumed responses (and is therefore similar to a "source", defined in the "target" but only for responses)so does you HTTP live message request define a "reply-to" header? if not, the "replyTarget.address" may also be filled with a static reply address where the MQTT device sends its replies todid you previously define a separate "source" for the replies?
Alexander Wellbrock
@lionax_gitlab
Currently there is a mqtt target where ditto writes the request from the HTTP client. The app then writes it's response to another topic where ditto has a mqtt-source configured for. The app uses the same ditto mqtt-source for answering messages as well as sending commands / signals / messages itself
66 replies
mangexl
@mangexl
@thjaeckle Thanks! I am trying to find which/how to provide the adress to use for the service discovery in ditto. If i have an address for example ditto-test.com that shall be used for discovery, do you know how I could provide it?
Thomas Jaeckle
@thjaeckle
@mangexl that should be controllable via this configuration section: https://github.com/eclipse/ditto/blob/master/services/utils/config/src/main/resources/ditto-akka-config.conf#L62
by default, ditto-cluster is used as DNS name to use for discovery .. also have a look at the Akka reference configuration for the details on those options:https://github.com/akka/akka-management/blob/master/cluster-bootstrap/src/main/resources/reference.conf#L30
to use ditto-test.com as DNS address I would overwrite the effective-name .. that one should be the "total" overwrite for DNS discovery
Alexander Wellbrock
@lionax_gitlab
Did something change with the mqtt / connectivity system regarding responses for ditto live messages? I'm using a HTTP client to issue a live message which is then forwarded via mqtt to some application doing stuff and returning a response via mqtt back to ditto. To get request and response correlated I used to have a correlation-id header with the response using the id from the request. That used to work a while ago but now doesn't. I've verified that ditto writes the message to mqtt broker, the broker transmits it to the app and the app sends a response with correlation-id header. Then nothing except for a timeout at the HTTP client...
Thomas Jaeckle
@thjaeckle
the "replyTarget" in a connection's target defines on which address responses are consumed for outgoing messages Ditto sends (in this case published to a MQTT topic)previously that was purely defined by the "reply-to" header (which should also be the default for the "replyTarget" "address", isn't it?)the "replyTarget" lets you additionally defined header mappings and expected response types (e.g. in order to only receive "errors", but no successful "responses") for consumed responses (and is therefore similar to a "source", defined in the "target" but only for responses)so does you HTTP live message request define a "reply-to" header? if not, the "replyTarget.address" may also be filled with a static reply address where the MQTT device sends its replies todid you previously define a separate "source" for the replies?
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
_
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
_
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
Acknowledgements / QoS
Architecture
Overview
Services
Policies
Things
Things-Search
Connectivity
Concierge
Gateway
HTTP API
Overview
Concepts
Search
Messages
WebSocket protocol binding
Policies
Things
Things-Search
Connectivity
Concierge
Gateway
HTTP API
Overview
Concepts
Search
Messages
WebSocket protocol binding
Server sent events
Connectivity API
Overview
Manage connections
AMQP 0.9.1 protocol binding
@thjaeckle
post:
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
Julian
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
* Extended static factory method for getting counter in `DittoMetrics` to be able to set tags directly to avoid superfluous object creation. Extended `KamonCounter` accordingly.
Signed-off-by: Juergen Fickel <juergen.fickel@bosch-si.com>
thjaeckle
pushed a commit
to bosch-io/ditto
that referenced
this issue
Feb 3, 2020
Issue eclipse#561 Replace 'thing enrich...' by 'signal enrichment' ev…
…
571d2e1
…erywhere; add null checks and tests in GatewyByRoundtripProvider; remove unused imports.
Signed-off-by: Yufei Cai <yufei.cai@bosch-si.com>
thjaeckle
pushed a commit
_
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
…
0efa80c
Part of issue #697
Signed-off-by: David Joos <david.joos@bosch.io>
Added unit tests for desiredProperty.
…
bdd5471
Part of issue #697
Signed-off-by: David Joos <david.joos@bosch.io>
Fixed missing overwrite.
…
b2ab24c
Part of issue #697
Signed-off-by: David Joos <david.joos@bosch.io>
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
@thjaeckle
post:
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
Sign up
New issue
Have a question about this project? Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our terms of service and
privacy statement. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
Add custom HTTP REST API facades wrapping Ditto message commands
#682
Open
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
@thjaeckle
description: |-
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
description: The request could not be completed due to missing authentication.
content:
application/json:
schema:
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
@thjaeckle
post:
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
tags:
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
description: |-
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
content:
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
description: |-
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
_
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
}Not sure which format this is.
_
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
Jul 30, 2020
How about a syntax which allows to determine the level more specifically?
I like that concept 👍
jufickel-b
added a commit
to JulianFeinauer/ditto
that referenced
the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some pointsome "fake headers" may now be used in a headerMapping for MQTT 3, see: https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mappingbut to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs
Alexander Wellbrock
@lionax_gitlab
The connectivity service logs a lot of [WARN] No publish flow registered for MqttStatefulPublish... Might that be related?
It seems that while the targets are working finde the sources cause some problem right now. It seems that I'm also only sometimes able to get a working creation command executed in ditto if it's received by ditto via mqtt-source.I'm not using any header mapping right now. The app just sets the header object in the response payload before handing it over to mqtt->ditto-source
Thomas Jaeckle
@thjaeckle
the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before
Alexander Wellbrock
@lionax_gitlab
The connectivity service logs a lot of [WARN] No publish flow registered for MqttStatefulPublish... Might that be related?
It seems that while the targets are working finde the sources cause some problem right now. It seems that I'm also only sometimes able to get a working creation command executed in ditto if it's received by ditto via mqtt-source.I'm not using any header mapping right now. The app just sets the header object in the response payload before handing it over to mqtt->ditto-source
Thomas Jaeckle
@thjaeckle
the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
robmontalvojr
@robmontalvojr
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
Julian
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
Alexander Wellbrock
@lionax_gitlab
The connectivity service logs a lot of [WARN] No publish flow registered for MqttStatefulPublish... Might that be related?
It seems that while the targets are working finde the sources cause some problem right now. It seems that I'm also only sometimes able to get a working creation command executed in ditto if it's received by ditto via mqtt-source.I'm not using any header mapping right now. The app just sets the header object in the response payload before handing it over to mqtt->ditto-source
Thomas Jaeckle
@thjaeckle
the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
robmontalvojr
@robmontalvojr
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
Julian
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
_
Currently there is a mqtt target where ditto writes the request from the HTTP client. The app then writes it's response to another topic where ditto has a mqtt-source configured for. The app uses the same ditto mqtt-source for answering messages as well as sending commands / signals / messages itself
I just noticed that I did not mention, that the replyTarget is set in my mqtt-source configuration, not the target configuration
Thomas Jaeckle
@thjaeckle
aah, yes - sorry, I mixed that up as wellit should still work that way you configured itdid you maybe configure an explicit header mapping in the target or in the source which now doesn't contain a mapping of the "correlation-id" header?
Thomas Jaeckle
@thjaeckle
the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some pointsome "fake headers" may now be used in a headerMapping for MQTT 3, see: https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mappingbut to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs
Alexander Wellbrock
@lionax_gitlab
The connectivity service logs a lot of [WARN] No publish flow registered for MqttStatefulPublish... Might that be related?
It seems that while the targets are working finde the sources cause some problem right now. It seems that I'm also only sometimes able to get a working creation command executed in ditto if it's received by ditto via mqtt-source.I'm not using any header mapping right now. The app just sets the header object in the response payload before handing it over to mqtt->ditto-source
Thomas Jaeckle
@thjaeckle
the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before
I just noticed that I did not mention, that the replyTarget is set in my mqtt-source configuration, not the target configuration
Thomas Jaeckle
@thjaeckle
aah, yes - sorry, I mixed that up as wellit should still work that way you configured itdid you maybe configure an explicit header mapping in the target or in the source which now doesn't contain a mapping of the "correlation-id" header?
Thomas Jaeckle
@thjaeckle
the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some pointsome "fake headers" may now be used in a headerMapping for MQTT 3, see: https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mappingbut to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs
Alexander Wellbrock
@lionax_gitlab
The connectivity service logs a lot of [WARN] No publish flow registered for MqttStatefulPublish... Might that be related?
It seems that while the targets are working finde the sources cause some problem right now. It seems that I'm also only sometimes able to get a working creation command executed in ditto if it's received by ditto via mqtt-source.I'm not using any header mapping right now. The app just sets the header object in the response payload before handing it over to mqtt->ditto-source
Thomas Jaeckle
@thjaeckle
the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before
Alexander Wellbrock
@lionax_gitlab
Currently there is a mqtt target where ditto writes the request from the HTTP client. The app then writes it's response to another topic where ditto has a mqtt-source configured for. The app uses the same ditto mqtt-source for answering messages as well as sending commands / signals / messages itself
I just noticed that I did not mention, that the replyTarget is set in my mqtt-source configuration, not the target configuration
Thomas Jaeckle
@thjaeckle
aah, yes - sorry, I mixed that up as wellit should still work that way you configured itdid you maybe configure an explicit header mapping in the target or in the source which now doesn't contain a mapping of the "correlation-id" header?
Thomas Jaeckle
@thjaeckle
the added header mapping to MQTT 3 could maybe cause a problem with discarding the correlation-id at some pointsome "fake headers" may now be used in a headerMapping for MQTT 3, see: https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html#source-header-mappingbut to be honest, we don't have many MQTT 3 connections in our productive systems, as we have mainly Hono as device connectivity layer, so there could be bugs
Alexander Wellbrock
@lionax_gitlab
The connectivity service logs a lot of [WARN] No publish flow registered for MqttStatefulPublish... Might that be related?
It seems that while the targets are working finde the sources cause some problem right now. It seems that I'm also only sometimes able to get a working creation command executed in ditto if it's received by ditto via mqtt-source.I'm not using any header mapping right now. The app just sets the header object in the response payload before handing it over to mqtt->ditto-source
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
Server sent events
Connectivity API
Overview
Manage connections
AMQP 0.9.1 protocol binding
AMQP 1.0 protocol binding
MQTT 3.1.1 protocol binding
MQTT 5 protocol binding
HTTP 1.1 protocol binding
Kafka 2.x protocol binding
Payload mapping
Header mapping
TLS certificates
Client SDK
Overview
Java
JavaScript
Ditto Protocol
AMQP 1.0 protocol binding
MQTT 3.1.1 protocol binding
MQTT 5 protocol binding
HTTP 1.1 protocol binding
Kafka 2.x protocol binding
Payload mapping
Header mapping
TLS certificates
Client SDK
Overview
Java
JavaScript
Ditto Protocol
Overview
Twin/live channel
Specification
Protocol topic
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
description: |-
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
_
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
Would be possible to create a nightly or dev docker image on docker hub?
_
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
@thjaeckle
post:
summary: Executes the switchOnFor on the device
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
description: |-
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
to bosch-io/ditto
that referenced
this issue
Feb 3, 2020
Issue eclipse#561: Reuse SignalEnrichmentConfig in connectivity; move…
…
0aa2709
… mapping stream settings to MappingConfig.
Signed-off-by: Yufei Cai <yufei.cai@bosch-si.com>
thjaeckle
pushed a commit
to bosch-io/ditto
that referenced
this issue
Feb 3, 2020
Issue eclipse#561: implement signal enrichment for connectivity.
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Review: Add desired properties in protocol-adapter
…
3d8bbab
Minor fixes as part of review for desired properties in protocol-adapter
Part of issue #697
Signed-off-by: David Schwilk <david.schwilk@bosch.io>
22 hidden items
Load more…
DerSchwilk
force-pushed the
bosch-io:feature/desired-properties
branch
from
2d77fef
to
637e79d
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
w4tsn opened this issue
May 13, 2020
· 2 comments
Open
Add custom HTTP REST API facades wrapping Ditto message commands
#682
w4tsn opened this issue
May 13, 2020
· 2 comments
Comments
Copy link
Quote reply
Contributor
w4tsn
commented
May 13, 2020
Use-Case
post:
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
$ref: '#/components/schemas/AdvancedError'
'403':
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
@lionax_gitlab
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
description: The request could not be completed due to missing authentication.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
description: The request could not be completed due to missing authentication.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
this issue
Jul 31, 2020
Issue eclipse#680: Some refactoring to make adding metadata via Ditto…
…
79c7da6
…Headers more generic (WIP).
* Moved Metadata and its related types to base model as metadata affects all entities and not only things.
* Adjusted some Javadoc comments.
Signed-off-by: Juergen Fickel <juergen.fickel@bosch.io>
Copy link
Contributor
Author
JulianFeinauer
commented
Jul 31, 2020
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
robmontalvojr
@robmontalvojr
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
Julian
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
_
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
_
Tobias Månsson
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
robmontalvojr
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
robmontalvojr
@robmontalvojr
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
_
Julian
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
_
robmontalvojr
@robmontalvojr
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
Julian
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
_
Thomas Jaeckle
@thjaeckle
the [WARN] No publish flow registered come directly from the HiveMQ MQTT client - I'm not sure what those mean, never seen those before
in order to analyze, it would be best to activate DEBUG logging and look at the logs for a "roundtrip" - maybe we can spot something strange there
robmontalvojr
@robmontalvojr
I attempted to follow the instructions for installing the Cloud2edge package (@ https://www.eclipse.org/packages/packages/cloud2edge/installation/) on a minikube cluster.Unfortunately, I ran into an issue while attempting said installation...I issued the following command:$ helm install -n $NS --wait --timeout 10m $RELEASE eclipse-iot/cloud2edgeAnd, after a few minutes, I got this:Error: rpc error: code = Unavailable desc = transport is closingAny recommendations with regards to how I should troubleshoot this?Better yet, any ideas why this is happening?
Julian
@JulianFeinauer
@robmontalvojr there is also a channel called 'eclipse/paackages‘ here in gitter. Mabye there you might get beter help?
robmontalvojr
@robmontalvojr
@JulianFeinauer Thank you very much for alerting me about this. I was not aware.
Tobias Månsson
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
Overview
Twin/live channel
Specification
Protocol topic
Things group
→ commands/events
Create/Modify
Retrieve
Delete
Acknowledgements
Errors
→ search/messages
Search
Messages
Policies group
→ commands/events
Things group
→ commands/events
Create/Modify
Retrieve
Delete
Acknowledgements
Errors
→ search/messages
Search
Messages
Policies group
→ commands/events
Create/Modify
Retrieve
Delete
Bindings
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
description: The request could not be completed due to missing authentication.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
tags:
description: The request could not be completed due to missing authentication.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
…
267411d
Signed-off-by: Yufei Cai <yufei.cai@bosch-si.com>
thjaeckle
pushed a commit
to bosch-io/ditto
that referenced
this issue
Feb 3, 2020
Issue eclipse#561: Add exception for signal enrichment failure.
…
208ae35
Signed-off-by: Yufei Cai <yufei.cai@bosch-si.com>
thjaeckle
pushed a commit
to bosch-io/ditto
that referenced
Thomas Jaeckle
@thjaeckle
post:
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
Nov 4, 2020
joosdavid
force-pushed the
bosch-io:feature/desired-properties
branch
from
637e79d
to
2d77fef
Nov 4, 2020
DerSchwilk
force-pushed the
bosch-io:feature/desired-properties
branch
from
2d77fef
to
description: |-
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
description: The request could not be completed due to missing authentication.
content:
application/json:
Currently this knowledge has to be managed outside the ecosystem with a third-party application / channel.
Basic Idea
A micro-service may use a descriptive interface to ditto to share it's capabilities in a way that ditto may serve dynamic REST endpoints according to the specification of the service.
Further Thoughts
Ditto should cache this registered API and also provide means to integrate this into health check requests.
Discussion
Let's discuss!
👍
1
w4tsn
mentioned this issue
May 13, 2020
Historical data from Ditto
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
description: |-
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
content:
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
_
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Alexander Wellbrock
@lionax_gitlab
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
Alexander Wellbrock
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
responses:
'202':
description: |-
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
'403':
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
@thjaeckle
post:
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@jufickel-b thanks, this is a neat idea. From an application perspective I would always prefer the second example as it saves some algorithmic complexity. But just to assure.. in both cases the algorithm would hold and stay consistend
check if there is an issuedAt at your node
if not, go to parent and repeat until you found one
Or can there be a sequence of messages that leads to a situation where aboves algorithm would yield a wrong response? I'm not sure ATM.
jufickel-b
added a commit
to JulianFeinauer/ditto
that referenced
this issue
Aug 3, 2020
Issue eclipse#680: Added unhandled case to `MetadataFromEvent` to mak…
…
7c2b235
…e unit tests work again.
Signed-off-by: Juergen Fickel <juergen.fickel@bosch.io>
Patrick Sernetz
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Patrick Sernetz
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
Patrick Sernetz
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
@tobias-zeptio
Hi all. Have anyone tried running ditto against AWS DocumentDB?
In the example deloyment mongodb 3.6 is used, and that's the version documentdb implement. So I guess it "should work"...
Patrick Sernetz
@patrickse
Would be possible to create a nightly or dev docker image on docker hub?
Thomas Jaeckle
@thjaeckle
@patrickse sorry, no - we don't plan to provide nightlies on docker hub ..however, we released Ditto 1.4.0 last week which includes the feature you are looking for (configuring the openID connect prefix to "http://") :)So you can use the release right away
@tobias-zeptio I am not aware that someone tried runnig Ditto against AWS DocumentDBwe once evaluated running it against Azure CosmosDB, see: #376that only partially was a success - the search index Ditto builds up in the "things-search" service did not work with CosmosDB as Cosmos had some other interpretation of e.g. regex searchesI guess that this could be the same for AWS DocumentDB - it's just not the "real deal" MongoDB replacement
robmontalvojr
@robmontalvojr
Hello all. How is security taken care of in Ditto?
Tobias Månsson
@tobias-zeptio
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
Thomas Jaeckle
@thjaeckle
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Create/Modify
Retrieve
Delete
Bindings
Examples
→ Things examples
Create a Thing
Delete a Thing
Modify a Thing
Retrieve a Thing
Retrieve multiple Things
Modify the Policy ID of a Thing
Create Attributes
Delete Attributes
Modify Attributes
Retrieve Attributes
Create a single Attribute
Examples
→ Things examples
Create a Thing
Delete a Thing
Modify a Thing
Retrieve a Thing
Retrieve multiple Things
Modify the Policy ID of a Thing
Create Attributes
Delete Attributes
Modify Attributes
Retrieve Attributes
Create a single Attribute
Delete a single Attribute
Modify a single Attribute
Retrieve a single Attribute
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Alexander Wellbrock
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
description: |-
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
content:
application/json:
schema:
$ref: '#/components/responses/messageTooLarge'
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Alexander Wellbrock
@lionax_gitlab
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
Alexander Wellbrock
this issue
Feb 3, 2020
Issue eclipse#561: Move SignalEnrichmentConfig under ConnectivityConfig.
…
5ca6feb
Signed-off-by: Yufei Cai <yufei.cai@bosch-si.com>
thjaeckle
pushed a commit
to bosch-io/ditto
that referenced
this issue
Feb 3, 2020
Issue eclipse#561: Enrich signals for websocket.
…
8dbde2e
Signed-off-by: Yufei Cai <yufei.cai@bosch-si.com>
349 hidden items
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
description: |-
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
1b54bbe
Nov 4, 2020
joosdavid
and others
added 2 commits
Nov 3, 2020
Added build step for swagger.
…
12b3811
Part of issue #697
Signed-off-by: David Joos <david.joos@bosch.io>
Review: document desired properties
…
Loading status checks…
21aa4fc
reviewed documentation for desired properties and swagger refactoring by @joosdavid
Part of issue #697
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
#545
Open
Copy link
Contributor
JulianFeinauer
commented
May 13, 2020
Thanks for the initiative @w4tsn!
So you suggest to have another service beneath e.g. search that is "history" and that exposes its own Ditto API? I highly +1 that!
For the format it would be interesting to discuss typical use cases (I can share some of ours here, and you may also have some), or what do you suggest for next steps?
👍
1
Copy link
Contributor
Author
w4tsn
commented
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
description: The request could not be completed due to missing authentication.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
Sign in to start talking
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
description: The request could not be completed due to missing authentication.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Alexander Wellbrock
@lionax_gitlab
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
Alexander Wellbrock
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
Sign in to start talking
Alexander Wellbrock
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Alexander Wellbrock
@lionax_gitlab
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
Alexander Wellbrock
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
Sign in to start talking
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
parameters:
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
@thjaeckle
post:
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
thjaeckle
added this to the 1.2.0 milestone
Aug 3, 2020
jufickel-b
added a commit
to JulianFeinauer/ditto
that referenced
this issue
Aug 7, 2020
Issue eclipse#680: Removed unused parameter 'resourcePath' from metho…
…
2afc143
…d for setting metadata to ThingBuilder.
Signed-off-by: Juergen Fickel <juergen.fickel@bosch.io>
jufickel-b
added a commit
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
@thjaeckle Thank you, I saw that issue regarding CosmosDB, and without testing it we assumed that DocumentDB could very well run into similar issue now or in the future.
Thomas Jaeckle
@thjaeckle
@robmontalvojr what exactly do you mean with "security taken care of"?Ditto itself does not provide authentication (relies e.g. on OpenID Connect providers to authenticate users), but it has a strong focus on authorization, see also the docs: https://www.eclipse.org/ditto/basic-auth.html
robmontalvojr
@robmontalvojr
Thank you for the clarification and the pointer, @thjaeckle. This helps.
What about support for "securing IoT data over the network"? What prompted me to ask the question was this article: https://developer.ibm.com/articles/iot-trs-secure-iot-solutions2/
We are now coming to speed with respect to cybersecurity in IoT...
robmontalvojr
@robmontalvojr
Thank you for your patience.
Thomas Jaeckle
@thjaeckle
Ditto's concept of getting "IoT daata over the network" is to rely on a device connetivity layer (like e.g. Eclipse Hono or an MQTT broker) - security from device side is handled in those layers (e.g. Eclipse Hono supports authentication via client certificates and does also support TLS on the supported device connectivity protocols, please have a look at Hono for more information about that: https://www.eclipse.org/hono/docs/admin-guide/secure_communication/ )So relying on the device connectivity layer, Ditto consumes the IoT data via its managed connections conceptOf course all our supported connection types (e.g. connecting to an AMQP 1.0 endpoint or an MQTT broker) support connecting via TLS - in the connection uri you define whether to connect via plain TCP or SSL to another system, you also define the credentials to connect to the device connectivity layer (which could be username/password, but also client certificate)There is also the possibility to provide a custom certificate when connecting to endpoints which have a self signed certificate.I hope that answers your question :)
message payloads could also be decrypted by Ditto's connectivity layer - by using a custom payload mapper or using the built-in JavaScript based payload mapper
Alexander Wellbrock
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
@thjaeckle
post:
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
@thjaeckle
post:
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
@thjaeckle
post:
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Delete a single Attribute
Modify a single Attribute
Retrieve a single Attribute
Create a Definition
Delete a Definition
Modify a Definition
Retrieve a Definition
Create Features
Delete Features
Modify Features
Retrieve Features
Create a single Feature
Delete a single Feature
Modify a single Feature
Create a Definition
Delete a Definition
Modify a Definition
Retrieve a Definition
Create Features
Delete Features
Modify Features
Retrieve Features
Create a single Feature
Delete a single Feature
Modify a single Feature
Retrieve a single Feature
Create Feature Definition
Delete Feature Definition
Modify Feature Definition
Retrieve Feature Definition
Create Feature Properties
@lionax_gitlab
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
Alexander Wellbrock
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
Sign in to start talking
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Jens Reimann
@ctron
but that would mean that it shouldn't be too difficult to create an HTTP endpoint which would do the same.
Thomas Jaeckle
@thjaeckle
true .. however FMPOV that is the domain of Hono - Ditto would not want to "connect" devices directly to its HTTP APIs - that's not what Ditto is build for (handling millions of devices sending data via HTTP)its APIs are build for backend or mobile applications which use several factors less of connections
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
$ref: '#/components/schemas/AdvancedError'
'401':
description: The request could not be completed due to missing authentication.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
Sign in to start talking
Load more…
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: Fixed unit test by adding missing mocks.
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
97d346a
Signed-off-by: Juergen Fickel <juergen.fickel@bosch-si.com>
w4tsn
pushed a commit
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
description: The request could not be completed due to missing authentication.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
Signed-off-by: David Schwilk <david.schwilk@bosch.io>
DerSchwilk
force-pushed the
bosch-io:feature/desired-properties
branch
6 times, most recently
from
15250f0
to
ea7a82e
Nov 4, 2020
Change FeaturePredicate description.
…
Loading status checks…
a7aea75
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Alexander Wellbrock
@lionax_gitlab
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
Alexander Wellbrock
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
Sign in to start talking
May 15, 2020
@JulianFeinauer
For the format it would be interesting to discuss typical use cases (I can share some of ours here, and you may also have some)
Great idea! I will prepare something next week.
Let me add some more thoughts / bit of rephrasing what I have in mind. Basically this is about the possibility to provide our own "custom" services in a transparent way which would also allow us to provide them in other languages and runtimes.
In our specific use-case we added a micro-service providing our custom history API. We want to have this API simply be available through ditto messages and secured by the policy framework of ditto. Our frontend developers however want to have a typical REST API with Swagger docs. Of course they can use the generic REST API for ditto messages, but this is not really an expressive way of exposing our API.
Right now we communicate the API capabilities in a separate document in our own "swagger-ish" language which is a bit of a pain in the *** for both sides - especially because API spec is an already solved problem so to speak. The micro-service expects certain ditto message topics, fields in the messages payload etc.
thjaeckle
changed the title
Add HTTP REST API facade
Add custom HTTP REST API facades wrapping Ditto message commands
Nov 2, 2020
Sign up for free
to join this conversation on GitHub.
Already have an account?
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Alexander Wellbrock
@lionax_gitlab
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Alexander Wellbrock
@lionax_gitlab
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
description: |-
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
description: |-
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
description: |-
to JulianFeinauer/ditto
that referenced
this issue
Aug 7, 2020
Issue eclipse#680: Deleted `MetadataHandler` as it is not required an…
…
7a03690
…ymore.
Signed-off-by: Juergen Fickel <juergen.fickel@bosch.io>
jufickel-b
added a commit
to JulianFeinauer/ditto
that referenced
this issue
Aug 7, 2020
Issue eclipse#680: Made `DittoHeaders` and `DittoHeadersBuilder` awar…
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
The result I get from Vorto looks like:{
"headers": {
robmontalvojr
@robmontalvojr
@thjaeckle Thank you for the prompt reply.
Thomas Jaeckle
@thjaeckle
when it comes to securing the HTTP and WebSocket APIs of Ditto with transport security, we recommend the SSL termination being done by a loadbalancer of the cloud Ditto is running in (sitting in front of Ditto)
Jens Reimann
@ctron
Hi … I got a question on getting data into Ditto. Reading in the documentation, I saw that it is possible to let ditto subscribe to Kafka, and have Ditto send HTTP requests (as output). However I would like to push new data to Ditto using HTTP, as I am using Cloud Events.
As a first step, I have pushed the data through a Vorto model conversion, having "Ditto" as the output format. However, this looks different from what I see in the Ditto HTTP API
Thomas Jaeckle
@thjaeckle
Hi @ctronDitto cannot yet subscribe to Kafka topics, but only publish into Kafka topics .. we have an open issue for adding consumption from Kafka as wellPushing Data to Ditto using HTTP is supported via our "normal" HTTP API (HTTP noun+verb based), eg. by targeting single features to update: https://www.eclipse.org/ditto/http-api-doc.html#/FeaturesDitto however doesn't provide a "catchall POST HTTP endpoint" which would consume DittoProtocol JSON (this is what should be generated by the Vorto generator) - as we think this is more of a device facing API and is provided by Hono instead
but when you send the "Ditto Protocol JSON" via a Hono telemetry/event, this works when the Connection was setup between Ditto and Hono
Jens Reimann
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
tags:
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
@thjaeckle
post:
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
Retrieve a single Feature
Create Feature Definition
Delete Feature Definition
Modify Feature Definition
Retrieve Feature Definition
Create Feature Properties
Delete Feature Properties
Modify Feature Properties
Retrieve Feature Properties
Create a single Property
Delete a single Property
Modify a single Property
Retrieve a single Property
Error responses
→ Policies examples
Create a Policy
Delete a Policy
Delete Feature Properties
Modify Feature Properties
Retrieve Feature Properties
Create a single Property
Delete a single Property
Modify a single Property
Retrieve a single Property
Error responses
→ Policies examples
Create a Policy
Delete a Policy
Modify a Policy
Retrieve a Policy
Modify entries
Retrieve entries
Create a single entry
Delete a single entry
Jens Reimann
@ctron
No it would connect to millions of devices, but would be a Knative event sink … which effectively is an HTTP endpoint, that gets called when a new message arrives
similar to kafka, AMQP or MQTT notifying you of a new message
Thomas Jaeckle
@thjaeckle
hm, ok .. it's the first time I hear about Knative event sink .. let me google that :D
Jens Reimann
@ctron
take your time :) … I will try out the WS approach … thx for your quick help
Alexander Wellbrock
@lionax_gitlab
Hey there, I want to discuss the topic around eclipse/ditto#682 - Add custom HTTP REST API facades wrapping Ditto message commandsI've spent a couple more hours on thinking about a vorto-ditto eco-system and what role the operations in vorto play. I've come to this: if I've a fairly simple request for simply altering properties but I want the device to handle it, before it's updated in ditto I'll make use of the ditto commands API and it's specification. If it's something more complex than that, like turning machines on or off or changing state of a machinary I'll want to use messages. Messages will be specified in vorto as operations. That way I get a nice API documentation out of vorto. As a follow up on #682 I was wondering if it wouldn't make big sense to be able to do several things in ditto with this:
Provide / Query (Swagger) API Documentation for a Thing (or Micro-Service in that regard) based on the Vorto Model (Operations at least)
Provide HTTP REST API Facade for those Operations
Basically I'd operations (and maybe events while we are at it) to seemingly integrate with ditto's protocol as an addon such that it becomes transparent to the user and more streamlined how to work with things in (and micro-services attached to) ditto.What do you think?
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Alexander Wellbrock
@lionax_gitlab
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
Alexander Wellbrock
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: Remove unused config ditto.connectivity.mapping.si…
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
579ec22
…gnal-enrichment-provider-path.
Signed-off-by: Yufei Cai <yufei.cai@bosch-si.com>
w4tsn
pushed a commit
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Alexander Wellbrock
@lionax_gitlab
Adjust to request by @jufickel-b
Part of issue #697
Signed-off-by: David Schwilk <david.schwilk@bosch.io>
DerSchwilk
force-pushed the
bosch-io:feature/desired-properties
branch
2 times, most recently
from
1af9fc6
to
29900a1
Nov 4, 2020
Issue #697 fix minor apidocs incorrectness
…
Loading status checks…
Sign in to comment
Assignees
No one assigned
Labels
None yet
Projects
None yet
Milestone
No milestone
Linked pull requests
Successfully merging a pull request may close this issue.
None yet
2 participants
Alexander Wellbrock
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
Sign in to start talking
Alexander Wellbrock
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
Sign in to start talking
description: The request could not be completed due to missing authentication.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
description: The request could not be completed due to missing authentication.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
description: |-
…
74af61f
…e of metadata.
Signed-off-by: Juergen Fickel <juergen.fickel@bosch.io>
jufickel-b
added a commit
to JulianFeinauer/ditto
that referenced
this issue
Aug 7, 2020
Issue eclipse#680: Fixed script for building Docker images locally.
…
7ead8b3
Additionally made it possible to set proxy.
Adjusted Ditto main README accordingly.
Signed-off-by: Juergen Fickel <juergen.fickel@bosch.io>
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
The result I get from Vorto looks like:{
"headers": {
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
"response-required": false
},
"path": "/features",
"topic": "foo/dev1/things/twin/commands/modify",
"value": {
"blockOne": {
"definition": [
"vorto.private.ctron:BlockOne:1.0.0"
],
"properties": {
"status": {
"temperature": "123"
}
}
}
}
@ctron
True, that is a device facing API. However I don't have Hono in the picture. What I have is an HTTP endpoint, which gets called once a new message arrives. My goal is forward this message to Ditto in the simplest way possible. Thus HTTP came into my mind.
Sign in to start talking
responses:
'202':
description: |-
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
description: The request could not be completed due to missing authentication.
content:
application/json:
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
description: |-
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
description: |-
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
'202':
description: |-
The message was sent but not necessarily received by the Feature
Modify a Policy
Retrieve a Policy
Modify entries
Retrieve entries
Create a single entry
Delete a single entry
Modify a single entry
Retrieve a single entry
Modify subjects
Retrieve subjects
Create a single subject
Delete a single subject
Modify a single subject
Retrieve a single subject
Modify resources
Retrieve resources
Create a single resource
Delete a single resource
Modify a single entry
Retrieve a single entry
Modify subjects
Retrieve subjects
Create a single subject
Delete a single subject
Modify a single subject
Retrieve a single subject
Modify resources
Retrieve resources
Create a single resource
Delete a single resource
Modify a single resource
Retrieve a single resource
Error responses
Alexander Wellbrock
@lionax_gitlab
Btw. the "quickest" work-around so far would be to have a docs-service which listens to the messages/docs topic and returns a swagger document parsed from vorto models. A developer authenticated through a valid SSO could then just open any things messages/docs in the browser to take a look at a minimal API doc.
Thomas Jaeckle
@thjaeckle
post:
summary: Executes the switchOnFor on the device
description: |-
Switches the switchable on for a passed in duration, afterwards applying the previous 'on' configuration again
Thomas Jaeckle
@thjaeckle
yes, you would just send this JSON into the established WS session
Sign in to start talking
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
Sign in to start talking
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: DADR-0004: fix typo & describe smart update.
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
e7bdd34
Signed-off-by: Yufei Cai <yufei.cai@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
Alexander Wellbrock
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
Sign in to start talking
a33bb2b
Signed-off-by: David Schwilk <david.schwilk@bosch.io>
DerSchwilk
force-pushed the
bosch-io:feature/desired-properties
branch
from
29900a1
to
a33bb2b
Nov 5, 2020
DerSchwilk
and others
added 10 commits
Nov 5, 2020
Assure exists query is working for properties and desired properties
…
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Alexander Wellbrock
@lionax_gitlab
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
Alexander Wellbrock
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
Sign in to start talking
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
Copy link
Contributor
jufickel-b
commented
Aug 11, 2020
@JulianFeinauer I think so, too. I cannot think of a message sequence which disturbs the algorithm.
Copy link
Contributor
jufickel-b
commented
Aug 11, 2020
With commit 74af61f an implementation of my suggestion dated 2020-07-30 exists.
Tests showed however, that there is a problem: HTTP headers are not allowed to contain slashes or colons. Thus the syntax of the metadata header should be changed.
I already had a discussion with @thjaeckle regarding this issue. We think that it would be best to change the syntax of metadata header as follows:
Header name: metadata as the prefix ditto- implies that it cannot be set externally but only internally by Ditto itself.
Header value: PATH=VALUE where PATH is either a regular JSON Pointer or a "wildcard path" like for example /*/issuedAt. VALUE is a valid JSON value. Multiple metadata key-value pairs are separated by a comma ,.
A HTTP header for setting metadata could look as follows – the leading slash (/) of the paths is optional:
}
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
yes, it would .. (when authorization was also successful as prerequisite)
Ditto is able to process those message either via WebSocket or AMQP 1.0, AMQP 0.9.1, MQTT 3.1.1 or MQTT 5
Jens Reimann
@ctron
ok … so if I would use WS, then it would work the same way?
Sign in to start talking
yes, it would .. (when authorization was also successful as prerequisite)
Sign in to start talking
Thomas Jaeckle
@thjaeckle
Ditto doesn't provide an HTTP endpoint which is able to consume thisIt however provides a WebSocket API which would be able to consume such messages:https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html
Sign in to start talking
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Jens Reimann
@ctron
So if I would send this via AMQP, then Ditto would accept it as is?
Sign in to start talking
}Not sure which format this is.
Thomas Jaeckle
@thjaeckle
this is a Ditto Protocol JSON
Sign in to start talking
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
'401':
description: The request could not be completed due to missing authentication.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
description: The request could not be completed due to missing authentication.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
description: The request could not be completed due to missing authentication.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
Modify a single resource
Retrieve a single resource
Error responses
→ Search examples
Sandbox
Presentations
Glossary
Feedback
Collapse All | Expand All
Payload mapping in connectivity service
TL;DRThe payload mapping feature in Ditto’s connectivity APIs can be used to
transform arbitrary payload consumed via the different supported protocols
to Ditto Protocol messages and vice versa.
Motivation
Eclipse Ditto is about providing access to IoT devices via the digital twin pattern. In order to
provide structured APIs for different heterogeneous devices Ditto defines a lightweight JSON based model.
A Thing might look like in the following example:
→ Search examples
Sandbox
Presentations
Glossary
Feedback
Collapse All | Expand All
Connections
Connection model
Note: To get started with connections right away, consult the
Manage connections
page.
You can integrate your Ditto instance with external messaging services such as
Eclipse Hono, a RabbitMQ broker or an
Apache Kafka broker via custom “connections”.
Additionally, you may invoke foreign HTTP endpoints by using the
HTTP connection type.
A connection represents a communication channel for the exchange of messages between any service and Ditto. It
requires a transport protocol, which is used to transmit Ditto Protocol messages. Ditto supports one-way and two-way
Send a message with the messageSubject `switchOnFor` **to** the feature specified by the featureId `Colored`
and thingId path parameter. The request body contains the message payload and the Content-Type header defines its type.
The API does not provide any kind of acknowledgement that the message was received by the feature.
The HTTP request blocks until a response to the message is available
or until the `timeout` is expired. If many clients respond to
the issued message, the first response will complete the HTTP request.
In order to handle the message in a fire and forget manner, add
a query-parameter `timeout=0` to the request.
### Who
You will need `WRITE` permission on the root "message:/" resource, or at least
the resource `message:/outbox/messages/messageSubject`.
Such permission is managed within the policy which controls the access on the thing.
tags:
- Messages
parameters:
- $ref: '#/components/parameters/thingIdPathParam'
- $ref: '#/components/parameters/messageTimeoutParam'
responses:
Mar 14, 2020
Issue eclipse#561: Swap target address enrichment and filtering secti…
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
669823e
…ons.
Signed-off-by: Yufei Cai <yufei.cai@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Loading status checks…
a92af56
This enables to query by exists on Feature's properties and desired properties by adding FiledExpressions for the properties without it's subpath.
Part of issue #697
Signed-off-by: David Schwilk <david.schwilk@bosch.io>
…
3f37cd9
Signed-off-by: Marianne Klein <marianne.klein@bosch.io>
CR-9409 - add properties to glossary
…
78ae5a2
Signed-off-by: Marianne Klein <marianne.klein@bosch.io>
CR-9409 - add desiredProperties as keyword in features main page
…
09e101b
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Alexander Wellbrock
@lionax_gitlab
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
Alexander Wellbrock
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
Sign in to start talking
metadata: /*/issuedAt="2020-06-09T14:29:00Z",/color/r/someCounter=23
This approach has the advantage that metadata could become a well-known DittoHeaderDefinition as it is no longer just a prefix.
@JulianFeinauer what do you think about this topic?
Copy link
Contributor
Author
JulianFeinauer
commented
Aug 11, 2020
Thanks for all the effort you put into the topic @jufickel-b and @thjaeckle !
The suggestion is fine for me although we could probably look for a well known format to transport the list of metadata like JSON to make it easier (from an application perspective) to parse and serialize the information.
WDYT?
Copy link
Contributor
jufickel-b
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Alexander Wellbrock
@lionax_gitlab
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
Alexander Wellbrock
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
Sign in to start talking
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Alexander Wellbrock
@lionax_gitlab
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Alexander Wellbrock
@lionax_gitlab
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
Alexander Wellbrock
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
{
"thingId": "the.namespace:the-thing-id",
"policyId": "the.namespace:the-policy-id",
"attributes": {
"location": "kitchen"
},
"features": {
"transmission": {
"properties": {
"cur_speed": 90
}
}
}
}
Devices in the IoT, may they be brownfield devices or newly produced devices, will probably not send their data to the
cloud in the structure and protocol Ditto requires.
communication over connections. This enables consumer/producer scenarios as well as fully-fledged command and response
use cases. Nevertheless, those options might be limited by the transport protocol or the other endpoint’s
capabilities.
All connections are configured and supervised via Ditto’s
Connectivity service. The following model defines the connection itself:
Connection types
The top design priority of this model is to be as generic as possible, while still allowing protocol specific
customizations and tweaks. This enables the implementations of different customizable connection types, and support
for custom payload formats. Currently the following connection types are supported:
AMQP 0.9.1
AMQP 1.0
MQTT 3.1.1
MQTT 5
HTTP 1.1
Kafka 2.x
The sources and targets address formats depends on the connectionType and has therefore connectionType
specific limitations. Those are documented with the corresponding protocol bindings.
'202':
description: |-
The message was sent but not necessarily received by the Feature
(fire and forget).
'400':
description: |-
The request could not be completed. Possible reasons:
* the `thingId` does not conform to the namespaced entity ID notation (see [Ditto documentation on namespaced entity IDs](https://www.eclipse.org/ditto/basic-namespaces-and-names.html#namespaced-id)).
* at least one of the defined path parameters is invalid.
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'401':
description: The request could not be completed due to missing authentication.
content:
application/json:
Issue eclipse#561: Emulated self type in `AbstractBuilder` and furthe…
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
8dd34cd
…r minor improvements.
Signed-off-by: Juergen Fickel <juergen.fickel@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: Fix a Sonar finding.
…
Signed-off-by: Marianne Klein <marianne.klein@bosch.io>
CR-9409 - add policy path for desiredProperties
…
08449e4
Signed-off-by: Marianne Klein <marianne.klein@bosch.io>
…
b2d97a5
Signed-off-by: Marianne Klein <marianne.klein@bosch.io>
Issue #697 add blogpost for desired properties
…
Loading status checks…
66d4a4c
Signed-off-by: David Schwilk <david.schwilk@bosch.io>
Issue #697: Some minor changes:
…
commented
Aug 11, 2020
We discussed this, too and this is also fine. If the header value was a JSON object the example would look like
The advantage, like you already mentioned, is a well-known format (JSON) which makes it easier for applications to handle.
A possible drawback could be that the header value could be confused with the effective Metadata object of the thing (_metadata).
Should we go with JSON?
Copy link
Contributor
Author
JulianFeinauer
commented
Aug 11, 2020
From a users perspective definetly JSON but I get your point.
But I think there are few alternatives if we have multiple informations in one header fields payload, or?
Copy link
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
Alexander Wellbrock
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
Sign in to start talking
@lionax_gitlab
In terms of security as mentioned before some of the vorto models are IP and can't be exposed publicly. So in order to retrieve the spec for a things definition it has to be protected by dittos policy enforcement. So the most basic case is if I'm allowed to read a features definition I'm permitted to open it's API spec.If it should be more fine-grained, than the API doc would have to be stripped by the features and operations I'm not allowed to READ or WRITE to. As an example if a user is allowed to use the messaging API their are able to use the operations defined in the model anyway, so they should be able to see operations in the spec. Not so important, but wanted to mention it anyway.
Sign in to start talking
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Alexander Wellbrock
@lionax_gitlab
That's a really good point. If it is not implemented plain via ditto messages it might be more sensible and even more useful to have a model based approach here. The thingIds would only be required if there really are specific operations which are not bound to models, but then again this could be modelled differently so I don't see any benefit in having the IDs included.
Sign in to start talking
They should not need to be aware of something like Ditto running in the cloud mirroring them as digital twins.
So for example device payload could look like this:
{
"val": "23.42 °C",
"ts": 1523946112727
}
In case of constrained devices or IoT protocols, even binary payload might be common.
0x08BD (hex representation)
Builtin mappers
The following message mappers are included in the Ditto codebase:
Mapper Alias
Description
Inbound
Outbound
Ditto
Assumes that inbound/outbound messages are already in Ditto Protocol (JSON) format.
✓
✓
Sources
Sources are used to connect to message brokers / external systems in order to consume messages from them.
Source messages can be of the following type:
commands
messages
live commands/responses/events
acknowledgements
Sources contain:
several addresses (depending on the connection type those are interpreted differently, e.g. as queues, topics, etc.),
a consumer count defining how many consumers should be attached to each source address,
an authorization context (see authorization) specifying which authorization subject is used to authorize messages from the source,
enforcement information that allows filtering the messages that are consumed in this source,
acknowledgement requests this source requires in order to ensure QoS 1 (“at least once”) processing of consumed messages before technically acknowledging them to the channel,
declared labels of acknowledgements the source is allowed to send,
header mapping for mapping headers of source messages to internal headers, and
a reply-target to configure publication of any responses of incoming commands.
Source enforcement
schema:
$ref: '#/components/schemas/AdvancedError'
'403':
description: |-
The request could not be completed. Possible reasons:
* the API Token is missing or invalid
* the caller has insufficient permissions
content:
application/json:
schema:
$ref: '#/components/schemas/AdvancedError'
'413':
$ref: '#/components/responses/messageTooLarge'
requestBody:
$ref: '#/components/requestBodies/ColorableLampSwitchOnForPayload'
...I don't see much benefit in Ditto providing this API when it is already available at the Vorto Repository.You can simply:a) retrieve a Thing's definitionb) build the Vorto Repo URL from itc) download the generated OpenAPI doc
Alexander Wellbrock
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
7b9e624
Signed-off-by: Yufei Cai <yufei.cai@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: fixed NPE
…
Unverified
109b618
* Fixed typos in Javadoc comments.
* Removed superfluous `final` keywords from interfaces.
* Removed superfluous method overwrites from interfaces.
* Widened interfaces by using `CharSequence` instead of `String` as parameter type.
* Adjusted some code formatting.
Signed-off-by: Juergen Fickel <juergen.fickel@bosch.io>
Issue #697: Fix ApiDocs
…
Loading status checks…
f6db4ad
Signed-off-by: David Schwilk <david.schwilk@bosch.io>
Issue #697 Minor review changes to blog post
…
Contributor
jufickel-b
commented
Aug 11, 2020
Yes, indeed. So JSON it is :-)
Copy link
Contributor
Yannic92
commented
Aug 12, 2020
I think we could run into problems with the single JSON-Object as Metadata value.
Our JSON parsing will parse this meta data :
To the following JSON Object. After this parsing we can't get the initial path /features/lamp/properties/color/r anymore
{
JavaScript
Converts arbitrary messages from and to the Ditto Protocol format using custom JavaScript code executed by Ditto.
✓
✓
Normalized
Transforms the payload of events to a normalized view.
✓
ConnectionStatus
This mapper handles messages containing creation-time and ttd headers by updating a feature of the targeted thing with definition ConnectionStatus.
✓
RawMessage
For outgoing message commands and responses, this mapper extracts the payload for publishing directly into the channel. For incoming messages, this mapper wraps them in a configured message command or response envelope.
✓
✓
ImplicitThingCreation
Messages received from external systems are mapped to Ditto internal format, either by applying some custom mapping or
the default mapping for Ditto Protocol messages.
During this mapping the digital twin of the device is determined i.e.
which thing is accessed or modified as a result of the message. By default, no sanity check is done if this target thing
corresponds to the device that originally sent the message. In some use cases this might be valid, but in other scenarios
you might want to enforce that a device only sends data to its digital twin. Note that this could also be achieved by
assigning a specific policy to each device and use placeholders in the
authorization subject, but this can get cumbersome to maintain for a large number of devices.
With an enforcement, you can use a single policy for all devices
and still make sure that a device only modifies its associated digital twin. Enforcement is only feasible if the message
contains the verified identity of the sending device (e.g. in a message header). This verification has to be done by the
external system e.g. by properly authenticating the devices and providing the identity in the messages sent to Ditto.
The enforcement configuration consists of two fields:
input: Defines where device identity is extracted.
filters: Defines the filters that are matched against the input. At least one filter must match the input value,
otherwise the message is rejected.
The following placeholders are available for the input field:
@lionax_gitlab
What I'd like to do, is to make vorto transparent here. My use-case also involves a private vorto repository with internal, customer related models. I'd like those models be retrievable through feature messages so the model access is restricted through ditto policies with ditto as a proxy. I'll probably write a micro-service for this purpose.The next thing is, that I'd like to call a /docs endpoint (via ditto messages) to retrieve a fully working Swagger Document (html which will directly render in the browser) and a /caps endpoint which will return a more machine-friendly interface specification like the swagger yml from above, which clients will use to generate stubs for implementation.Besides the operations and events defined in a vorto model for a feature there are additional infrastructure wide messaging-endpoints all things support which is realized by plugging in additional services via websockets and let them handle those operations. I'm not sure if I want to implement those in base-models via inheritance in vorto because that would require updates for alle inheriting models if something changes, I'd rather go with composite-pattern here. Which brings me to the though, wouldn't it be neat to have my micro-services be able to register at ditto for providing certain operations and events and then ultimately be able to retrieve a full API spec on a thing by doing a simple call to a thing? The API spec would then contain operations and events from vorto and from additional services. One endpoint would serve a developer doc for the browser, one a machine format for clients etc.I was thinking if it'd be a good addition for ditto to support such a thing in general, although it's somewhat a big topic and maybe just a little bit over-engineered :D
Thomas Jaeckle
@thjaeckle
agreed, that would add value to Ditto - I struggle a bit with the "api doc" per Thing as the YAML could get quite big and for Things with the same (root) definition the OpenAPI doc is always the same ... not very ideal (browser-)caching wisemaybe there could be a Ditto API e.g. /api/2/models/<definition> to which the model lookup of a single thing could redirector would you need/expect to have the resolved thingIds in the retruned OpenAPI doc for a concrete Thing?
Sign in to start talking
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
d228947
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: enhanced Message and MessageBuilder in model with …
…
Unverified
This user has not uploaded their public key yet.
Loading status checks…
ed7de81
Signed-off-by: David Schwilk <david.schwilk@bosch.io>
DerSchwilk
force-pushed the
bosch-io:feature/desired-properties
branch
from
65e6fe3
to
ed7de81
Nov 6, 2020
Hide details
View details
yufei-cai
merged commit d342a2e
into
"features": {
"lamp": {
"properties": {
"color": {
"r": {
"issuedAt": "someTimeStamp",
"issuedBy": {
"name": "me",
"mail": "me@mail.com"
}
}
}
}
}
}
}
Therefore I suggest a format like this:
meta-data: [{
This mapper handles messages for which a Thing should be created automatically based on a defined template
✓
Ditto mapper
This is the default Ditto Protocol mapper. If you do not specify any payload mapping this
mapper is used to map inbound and outbound messages. The mapper requires has no mandatory options, so its alias can
be directly used as a mapper reference.
It assumes that received messages are in Ditto Protocol JSON and emits outgoing messages
also in that format.
JavaScript mapper
This mapper may be used whenever any inbound messages are not yet in Ditto Protocol. By using
the built in JavaScript mapping engine (based on Rhino) custom defined JavaScript scripts
can be executed which are responsible for creating Ditto Protocol JSON message from
arbitrary consumed payload.
The same is possible for outbound messages in order to transform Ditto Protocol JSON
messages (e.g. events or responses) to arbitrary other formats.
Configuration options
incomingScript (required): the mapping script for incoming messages
outgoingScript (required): the mapping script for outgoing messages
Placeholder
Description
Example
Any header from the message received via the source.
The address on which the message was received.
devices/sensors/temperature1
The following placeholders are available for the filters field:
Placeholder
Description
Example
Full ID composed of ‘‘namespace’’ + ‘’:’’ as a separator + ‘‘name’’
eclipse.ditto:thing-42
Namespace (i.e. first part of an ID)
eclipse.ditto
Name (i.e. second part of an ID )
thing-42
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
b6bd41f
…"extra" fields
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: Fix review findings.
…
Unverified
This user has not uploaded their public key yet.
eclipse:master
Nov 9, 2020
2 checks passed
2 checks passed
build
Details
eclipsefdn/eca
The author(s) of the pull request is covered by necessary legal agreements in order to proceed!
Details
yufei-cai
deleted the
bosch-io:feature/desired-properties
branch
Nov 9, 2020
Sign up for free
to join this conversation on GitHub.
Already have an account?
"path" : "/features/lamp/properties/color/r":
}]
👍
2
Copy link
Contributor
jufickel-b
commented
Aug 12, 2020
@Yannic92 this is exactly the behaviour I experienced while playing around.
Your suggestion seems to be a reasonable solution.
jufickel-b
added a commit
to JulianFeinauer/ditto
that referenced
this issue
Aug 13, 2020
loadBytebufferJS (optional, default: "false"): whether to load ByteBufferJS library
loadLongJS (optional, default: "false"): whether to load LongJS library
Normalized mapper
This mapper transforms created and modified events (other type of messages are dropped) to a normalized view.
Events are mapped to a nested sparse JSON.
{
"topic": "thing/id/things/twin/events/modified",
"path": "/features/sensors/properties/temperature/indoor/value",
"value": 42
}
would result in the following normalized JSON representation:
{
"thingId": "thing:id",
"features": {
"sensors": {
"properties": {
"temperature": {
Assuming a device sensor:temperature1 pushes its telemetry data to Ditto which is stored in a thing named
sensor:temperature1. The device identity is provided in a header field device_id. To enforce that the device can
only send data to the Thing sensor:temperature1 the following enforcement configuration can be used:
{
"addresses": [ "telemetry/hono_tenant" ],
"authorizationContext": ["ditto:inbound-auth-subject"],
"enforcement": {
}
}
Note: This example assumes that there is a valid user named ditto:inbound-auth-subject in Ditto.
If you want to use a user for the basic auth (from the HTTP API) use the prefix nginx:, e.g. nginx:ditto.
See Basic Authentication for more information.
Source acknowledgement requests
A source can configure, that for each incoming message additional
acknowledgement requests are added.
That is desirable whenever incoming messages should be processed with a higher “quality of service” than the default,
which is “at most once” (or QoS 0).
In order to process messages from sources with an “at least once” (or QoS 1) semantic, configure the source’s
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
cefac72
- *SignalEnrichmentProvider are now abstract classes and their
ExtensionId private static inner classes.
- Inlined MessageMappingProcessorActor.getSignalEnrichmentFacade.
- Made MockConciergeForwarderActor package-private.
- Stop loading enrichment provider in connectivity root actor.
Signed-off-by: Yufei Cai <yufei.cai@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: fixed enrichment error reporting via Websocket - h…
Sign in to comment
Reviewers
thjaeckle
jufickel-b
DerSchwilk
Assignees
No one assigned
Labels
None yet
Projects
None yet
Milestone
1.5.0
Linked issues
Successfully merging this pull request may close these issues.
Enhance model and APIs with "desiredProperties" for Features
6 participants
Issue eclipse#680: Refactored syntax of metadata for DittoHeaders acc…
…
0dc0920
…ording to [discussion on Github](eclipse#680 (comment)).
Metadata is now a well-known Ditto header and not just a prefix of a header name.
The metadata header name does not have the prefix 'ditto-' anymore because setting those externally is forbidden by Ditto.
Signed-off-by: Juergen Fickel <juergen.fickel@bosch.io>
jufickel-b
added a commit
to JulianFeinauer/ditto
that referenced
this issue
Aug 18, 2020
Issue eclipse#680: Fixed bug in `AbstractDittoHeadersBuilder` where a…
…
97229c2
"indoor": {
"value": 42
}
}
}
}
},
"_context": {
"topic": "thing/id/things/twin/events/modified",
"path": "/features/sensors/properties/temperature/indoor/value",
"headers": {
"content-type": "application/vnd.eclipse.ditto+json"
}
}
}
The _context field contains the original message content excluding the value.
Configuration options
fields (optional, default: all fields): comma separated list of fields that are contained in the result (see also
"acknowledgementRequests/includes" to add the
“twin-persisted” acknowledgement request, which will cause
that a consumed message over this source will technically be acknowledged, it the twin was
successfully updated/persisted by Ditto.
How the technical acknowledgment is done is specific for the used connection type and documented
in scope of that connection type.
In addition to the "includes" defining which acknowledgements to request for each incoming message, the optional
acknowledgements at all for an incoming message. This filter is applied on both acknowledgements: those
requested in the message and the ones requested
via the configured "includes" array.
The JSON for a source with acknowledgement requests could look like this. The "filter" in the example causes that
acknowledgements are only requested if the “qos” header was either not present or does not equal 0:
{
"addresses": [
"<source>"
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
2e8af86
…ad to be wrapped in a DittoProtocol message
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: fixed CriteriaVisitor and its implementations by s…
…
Unverified
Add this suggestion to a batch that can be applied as a single commit.
This suggestion is invalid because no changes were made to the code.
Suggestions cannot be applied while the pull request is closed.
Suggestions cannot be applied while viewing a subset of changes.
Only one suggestion per line can be applied in a batch.
Add this suggestion to a batch that can be applied as a single commit.
Applying suggestions on deleted lines is not supported.
You must change the existing code in this line in order to create a valid suggestion.
Outdated suggestions cannot be applied.
This suggestion has been applied or marked resolved.
Suggestions cannot be applied from pending reviews.
Suggestions cannot be applied on multi-line comments.
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
… call to `putHeaders` might have discarded already set metadata.
Signed-off-by: Juergen Fickel <juergen.fickel@bosch.io>
Copy link
Contributor
jufickel-b
commented
Aug 18, 2020
With commit JulianFeinauer@97229c2 we have a working state for setting metadata via headers.
A valid HTTP header of this implementation looks like for example (formatted for better readability)
metadata: [
{
"key":"/features/lamp/properties/color/r",
},
{
"key":"*/",
"value":"bar"
}
chapter about field selectors)
ConnectionStatus mapper
This mapper transforms the information from the ttd and creation-time message headers (see Eclipse Hono device
notifications) into a ModifyFeature
The connectivity state of the device is then represented in a Feature.
It is mostly used in conjunction with another mapper that transforms the payload e.g.:
"payloadMapping": [ "Ditto" , "connectionStatus" ]
Example of a resulting ConnectionStatus feature:
{
"thingId": "eclipse:ditto",
"features": {
"ConnectionStatus": {
"definition": [ "org.eclipse.ditto:ConnectionStatus:1.0.0" ],
"properties": {
"status": {
"readySince": "2019-10-29T14:16:18Z",
"readyUntil": "2019-10-29T14:21:18Z"
],
"authorizationContext": ["ditto:inbound-auth-subject"],
"headerMapping": {
},
"acknowledgementRequests": {
"includes": [
"twin-persisted",
"receiver-connection-id:my-custom-ack"
],
"filter": "fn:filter(header:qos,'ne',0)"
}
}
Source declared acknowledgement labels
The acknowledgements sent via a source must have their labels declared in the field declardAcks as a JSON array.
If the label of an acknowledgement is not in the declaredAcks array, then the acknowledgement is rejected with
an error. The declared labels must be prefixed by the connection ID followed by a colon or the
{
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
10bf3fd
…witching to List in the signature and deprecating old Stream based APIs
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: Added revoked subjects to DittoHeaders.
…
Unverified
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
]
I wonder how one could get rid of unused metadata, as headers only allow to set metadata. An already working solution could be to set the value to the null literal at an appropriate level. What do you think?
Still missing is proper documentation of the feature in ditto-documentation. @JulianFeinauer do you want to add some?
Copy link
Contributor
Author
JulianFeinauer
commented
Aug 18, 2020
First, thanks for your strong support @jufickel-b and @thjaeckle . I will add documentation and I would be fine with deleting them via "setting" them to null.
👍
1
thjaeckle
changed the title
Support for last-updated timestamp in features / properties
}
}
}
}
}
Configuration options
thingId (required): The ID of the Thing that is updated with the connectivity state. It can either be a fixed value
featureId (optional, default: ConnectionStatus): The ID of the Feature that is updated. It can either be a
RawMessage mapper
This mapper relates the payload in the "value" field of message commands and message responses to the payload
of AMQP, MQTT and Kafka messages and the body of HTTP requests. The encoding of the payload is chosen according to
the configured content type. The subject, direction, thing ID and feature ID of the envelope for incoming message
commands and responses need to be configured.
Messages with the Ditto protocol content type application/vnd.eclipse.ditto+json or signals that are not message
commands or responses are mapped by the Ditto mapper instead.
For example, the mapper maps between the feature message command response
{
"addresses": [
"<source>"
],
"authorizationContext": ["ditto:inbound-auth-subject"],
"declaredAcks": [
]
}
Source header mapping
For incoming messages, an optional header mapping may be applied.
Mapped headers are added to the headers of the Ditto protocol message obtained by payload mapping.
The default Ditto payload mapper does not retain any external header;
in this case all Ditto protocol headers come from the header mapping.
The JSON for a source with header mapping could look like this:
{
"addresses": [
"<source>"
],
"authorizationContext": ["ditto:inbound-auth-subject"],
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
11a44b6
Signed-off-by: Juergen Fickel <juergen.fickel@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: Add DADR-0005-semantic-versioning.md.
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Support for adding arbitrary _metadata for features / properties
Aug 24, 2020
Copy link
Contributor
thjaeckle
commented
Aug 24, 2020
I adjusted the title of the issue as this turned out to be a more generic approach (which I highly appreciate 👍)
thjaeckle
added a commit
to JulianFeinauer/ditto
that referenced
this issue
Aug 25, 2020
eclipse#680 review: renamed DittoHeaderDefinition key from "metadata"…
"topic": "org.eclipse.ditto/smartcoffee/things/live/messages/heatUp",
"path": "/features/water-tank/inbox/messages/heatUp",
"value": "AQIDBAUG",
"status": 200
}
and an AMQP, MQTT 5, Kafka message with payload or an HTTP request with body of 6 bytes
0x01 02 03 04 05 06
and headers
content-type: application/octet-stream
status: 200
subject: heatUp
ditto-message-direction: TO
ditto-message-thing-id: org.eclipse.ditto:smartcoffee
ditto-message-feature-id: water-tank
The headers are lost for connection protocols without application headers such as MQTT 3.
Configuration options
"headerMapping": {
}
}
Source reply target
A source may define a reply target to publish the responses of incoming commands.
For a reply target, the address and header mapping are defined in itself, whereas its payload mapping is inherited
from the parent source, because a payload mapping definition specifies the transformation for both: incoming and outgoing
messages.
For example, to publish responses at the target address equal to the reply-to header of incoming commands,
define source header mapping and reply target as follows. If an incoming command does not have the reply-to header,
then its response is dropped.
{
"headerMapping": {
},
"replyTarget": {
Learn about signing commits
7008fe9
Signed-off-by: Yufei Cai <yufei.cai@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: fixed IllegalArgumentException in CachingSignalEnr…
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
4a6ac94
…ichmentFacade for ThingEvent with empty resource path
…
cb7475d
… to "put-metadata" to make more explicit was is done with this header's content
* added some missing and adjusted other javadocs
* added some missing @SInCE annotations
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch.io>
thjaeckle
added a commit
to JulianFeinauer/ditto
that referenced
this issue
Aug 25, 2020
eclipse#680: fixed open issues mentioned in PR
…
b2c8b78
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch.io>
Example configuration:
{
"outgoingContentType": "application/octet-stream",
"incomingMessageHeaders": {
"ditto-message-direction": "TO",
}
}
outgoingContentType (optional): The fallback content-type for outgoing message commands and responses without
the content-type header. Default to text/plain; charset=UTF-8.
incomingMessageHeaders (optional): A JSON object containing the following headers needed to construct a message
command or response envelope containing the incoming message as payload in the field "value". Placeholder expressions
reading from the protocol headers of incoming messages may be used.
content-type (optional): The content type with which to encode the incoming message as payload.
If resolved to the Ditto protocol content type application/vnd.eclipse.ditto+json, then the entire payload
is interpreted as a Ditto protocol message instead.
status (optional): Include for message responses. Exclude for message commands. Default to
Mapping will fail if not resolvable.
"enabled": true,
}
}
The reply target may contain its own header mapping ("headerMapping") in order to map response headers.
In addition, the reply target contains the expected response types ("expectedResponseTypes") which should be
published to the reply target.
The following reply targets are available to choose from:
response: Send back successful responses (e.g. responses after a Thing was successfully modified,
but also responses for query commands). Includes positive acknowledgements.
error: Send back error responses (e.g. thing not modifiable due to lacking permissions)
nack: If negative acknowledgement responses should be delivered.
This is an example "replyTarget" containing both header mapping and expected response types:
{
"replyTarget": {
"enabled": true,
"headerMapping": {
},
"expectedResponseTypes": [
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: don't handle "twin" ThingDeleted events - don't en…
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
8a41e89
thjaeckle
added a commit
to JulianFeinauer/ditto
that referenced
this issue
Aug 25, 2020
eclipse#680: fixed Javadoc error
…
3a53e36
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch.io>
This was referenced Aug 25, 2020
Retrieve thing metadata when not retrieving complete thing
#772
Open
Implicit metadata creation on JSON leaves
ditto-message-direction (optional): The message direction. Default to TO, which corresponds to inbox in
message commands and responses.
ditto-message-thing-id (mandatory for MQTT 3): ID of the thing to send the message command or response to.
ditto-message-feature-id (optional): Include to send the message or message response to a feature of the thing.
ImplicitThingCreation Mapper
This mapper implicitly creates a new thing for an incoming message.
The created thing contains the values defined in the template, configured in the mappingDefinitions options.
Configuration options
thing (required): The values of the thing that is created implicitly. It can either contain fixed values
Example of a template defined in options:
{
"thing": {
"attributes": {
"CreatedBy": "ImplicitThingCreation"
}
}
}
"response",
"error",
"nack"
]
}
}
Targets
Targets are used to connect to messages brokers / external systems in order to publish messages to them.
Target messages can be of the following type:
messages
events
live commands/responses/events
Targets contain:
one address (that is interpreted differently depending on the connection type, e.g. as queue, topic, etc.),
topics that will be sent to the target,
an authorization context (see authorization) specifying which authorization subject is used to authorize messages to the target, and
header mapping to compute external headers from Ditto protocol headers.
…rich them
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: added test for not enrichting "twin" ThingDeleted …
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
b2258c1
…events
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch-si.com>
#778
Open
Make is possible to delete metadata from a thing
#779
Open
thjaeckle
closed this
in
#745
Aug 28, 2020
thjaeckle
removed
the
in progress
label
Aug 31, 2020
thjaeckle
mentioned this issue
Example connection with multiple mappers
The following example connection defines a ConnectionStatus mapping with the ID status and references it in a
source.
Messages received via this source will be mapped by the Ditto mapping and the ConnectionStatus mapping.
The Ditto mapping requires no options to be configured, so you can directly use its alias Ditto.
{
"name": "exampleConnection",
"sources": [{
"addresses": ["<source>"],
"authorizationContext": ["ditto:inbound"],
"payloadMapping": ["Ditto", "status"]
}
],
"mappingDefinitions": {
"status": {
Target topics and filtering
Which types of messages should be published to the target address, can be defined via configuration.
In order to only consume specific events like described in change notifications, the
following parameters can additionally be provided when specifying the topics of a target:
Description
Topic
Filter by namespaces
Filter by RQL expression
Subscribe for events/change notifications
_/_/things/twin/events
✔
✔
Subscribe for messages
_/_/things/live/messages
✔
❌
Subscribe for live commands
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: Renamed setter and getter for read revoked subject…
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
aa8cf50
…s to include "read".
Signed-off-by: Juergen Fickel <juergen.fickel@bosch-si.com>
w4tsn
Sep 3, 2020
Provide documentation for _metadata feature
#785
Closed
JulianFeinauer
added a commit
to JulianFeinauer/ditto
that referenced
this issue
Sep 5, 2020
Issue eclipse#785 add documentation for the Ditto metadata feature (e…
…
74f36b7
…clipse#680).
DerSchwilk
pushed a commit
to bosch-io/ditto
"mappingEngine": "ConnectionStatus",
"options": {
}
}
}
}
Note: Starting aliases with an uppercase character and IDs with a lowercase character is
encouraged to avoid confusion but this is not enforced.
Example connection with mapping conditions
The following example connection defines incomingConditions and outgoingConditionsfor the ConnectionStatus mapping engine.
Optional incomingConditions are validated before the mapping of inbound messages.
Optional outgoingConditions are validated before the mapping of outbound messages.
When multiple incoming or outgoing conditions are set for one mappingEngine, all have to equal true for the mapping to be executed.
{
"name": "exampleConnection",
_/_/things/live/commands
✔
❌
Subscribe for live events
_/_/things/live/events
✔
✔
The parameters are specified similar to HTTP query parameters, the first one separated with a ? and all following ones
with &. You need to URL-encode the filter values before using them in a configuration.
For example, this way the connection session would register for all events in the namespace org.eclipse.ditto and which
would match an attribute “counter” to be greater than 42. Additionally it would subscribe to messages in the namespace
org.eclipse.ditto:
{
"address": "<target-address>",
"topics": [
"_/_/things/twin/events?namespaces=org.eclipse.ditto&filter=gt(attributes/counter,42)",
"_/_/things/twin/events?extraFields=attributes/placement&filter=gt(attributes/placement,'Kitchen')",
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: Use domain model `AuthorizationSubject` for read g…
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
83f8701
…ranted and revoked subjects in `DittoHeaders`.
* Use consistent naming for read authorization subjects.
* Deprecated String based `readSubject` methods in favor of new method.
Signed-off-by: Juergen Fickel <juergen.fickel@bosch-si.com>
that referenced
this issue
Sep 10, 2020
eclipse#680: fixed open issues mentioned in PR
…
4c17e1c
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch.io>
DerSchwilk
pushed a commit
to bosch-io/ditto
that referenced
this issue
Sep 10, 2020
eclipse#680: fixed Javadoc error
…
"sources": [{
"addresses": ["<source>"],
"authorizationContext": ["ditto:inbound"],
"payloadMapping": ["status"]
}
],
"mappingDefinitions": {
"status": {
"mappingEngine": "ConnectionStatus",
"incomingConditions": {
"sampleCondition": "fn:filter(header:incoming-mapping-required,'eq','true')"
},
"outgoingConditions": {
"sampleCondition": "fn:filter(header:outgoing-mapping-required,'eq','true')"
},
"_/_/things/live/messages?namespaces=org.eclipse.ditto"
],
"authorizationContext": ["ditto:outbound-auth-subject", "..."]
}
Target topics and enrichment
When extra fields should be added to outgoing messages on a connection, an extraFields parameter can be added
to the topic. This is supported for all topics:
Description
Topic
Enrich by extra fields
Subscribe for events/change notifications
_/_/things/twin/events
✔
Subscribe for messages
_/_/things/live/messages
✔
Subscribe for live commands
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: Fix double-publishing of events generated by comma…
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
e67ac84
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch.io>
DerSchwilk
pushed a commit
to bosch-io/ditto
that referenced
this issue
Sep 10, 2020
eclipse#680: fixed open issues mentioned in PR
…
"options": {
}
}
}
}
JavaScript mapping engine
Ditto utilizes the Rhino JavaScript engine for Java for evaluating the JavaScript
to apply for mapping payloads.
Using Rhino instead of Nashorn, the newer JavaScript engine shipped with Java, has the benefit that sandboxing can be
applied in a better way.
Sandboxing of different payload scripts is required as Ditto is intended to be run as cloud service where multiple
connections to different endpoints are managed for different tenants at the same time. This requires the isolation of
each single script to avoid interference with other scripts and to protect the JVM executing the script against harmful
_/_/things/live/commands
✔
Subscribe for live events
_/_/things/live/events
✔
Example:
{
"address": "<target-address>",
"topics": [
"_/_/things/twin/events?extraFields=attributes/placement",
"_/_/things/live/messages?extraFields=features/ConnectionStatus"
],
"authorizationContext": ["ditto:outbound-auth-subject", "..."]
}
Target issued acknowledgement label
Learn about signing commits
0efa9db
…nds from connectivity.
Signed-off-by: Yufei Cai <yufei.cai@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: Use new method for getting read granted authorizat…
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
72edc57
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch.io>
DerSchwilk
pushed a commit
to bosch-io/ditto
that referenced
this issue
Sep 10, 2020
eclipse#680: fixed Javadoc error
…
f90a89c
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch.io>
JulianFeinauer
added a commit
to JulianFeinauer/ditto
code execution.
Constraints
Rhino does not fully support EcmaScript 6. Check which language constructs are supported before using
Ditto currently includes Rhino version 1.7.11 and has the VERSION_ES6 flag enabled.
Sandboxing
For sandboxing/security reasons following restrictions apply:
access to Java packages and classes is not possible
using exit, quit, print, etc. is not possible
file access is not possible
doing remote calls (e.g. to foreign web-servers) is not possible
programming an endless-loop will terminate the script
programming a recursion will terminate the script
the file size of the script is limited
no foreign JS libraries can be loaded (unless they fit in the file size limit and are included into the mapping script)
Helper libraries
In order to work more conveniently with binary payloads, the following libraries may be loaded for payload transformations:
bytebuffer.js a ByteBuffer implementation using ArrayBuffers
A target can be configured to automatically issue acknowledgements
for each published/emitted message, once the underlying channel confirmed
that the message was successfully received.
That is desirable whenever outgoing messages (e.g. events) are handled in scope of a command
sent with an “at least once” (QoS 1) semantic in order to only acknowledge that command, if the event was successfully
forwarded into another system.
For more details on that topic, please refer to the acknowledgements section.
Whether an outgoing message is treated as successfully sent or not is specific for the used
connection type and documented in scope of that connection type.
The issued acknowledgement label must be prefixed by the connection ID followed by a colon or the
The JSON for a target with issued acknowledgement labels could look like this:
{
"address": "<target>",
"topics": [
"_/_/things/twin/events"
],
"authorizationContext": ["ditto:inbound-auth-subject"],
168acdf
…ion subjects from DittoHeaders.
Signed-off-by: Juergen Fickel <juergen.fickel@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: Extended `AuthorizationContext` by method for chec…
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
b3d588a
…king authorization based on granted on revoked AuthorizationSubjects.
that referenced
this issue
Sep 16, 2020
Issue eclipse#785 add documentation for the Ditto metadata feature (e…
…
5548ffa
…clipse#680).
Corrections in basic-metadata.md and added changes to ditto-api-2.yml-Swagger Doc.
Signed-off-by: julian <j.feinauer@pragmaticminds.de>
JulianFeinauer
mentioned this issue
Sep 17, 2020
Feature/785 documentation metadata
#806
Merged
thjaeckle
long.js for representing a 64-bit two’s-complement integer value
Ditto scope:
/**
* Builds a Ditto Protocol message from the passed parameters.
* the mapped Ditto Protocol message or
* <code>null</code> if the message could/should not be mapped
*/
let dittoProtocolMsg = {};
dittoProtocolMsg.topic = namespace + "/" + id + "/" + group + "/" + channel + "/" + criterion + "/" + action;
dittoProtocolMsg.path = path;
dittoProtocolMsg.headers = dittoHeaders;
dittoProtocolMsg.value = value;
dittoProtocolMsg.status = status;
dittoProtocolMsg.extra = extra;
}
Target header mapping
For outgoing messages, an optional header mapping may be applied.
Mapped headers are added to the external headers.
The default Ditto payload mapper does not define any external header;
in this case, all external headers come from the header mapping.
The JSON for a target with header mapping could like this:
{
"address": "<target>",
"topics": [
"_/_/things/twin/events",
"_/_/things/live/messages?namespaces=org.eclipse.ditto"
],
"authorizationContext": ["ditto:inbound-auth-subject"],
"headerMapping": {
"reply-to": "all-replies"
Added further tests to `ImmutableAuthorizationContextTest`.
Signed-off-by: Juergen Fickel <juergen.fickel@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: Changed unit tests to use `DittoHeaders.readGrante…
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
6797bbe
…dSubjects` instead of deprecated `readSubjects`.
added a commit
that referenced
this issue
Sep 23, 2020
Issue #785 add documentation for the Ditto metadata feature (#680).
…
dab6e4b
Corrections in basic-metadata.md and added changes to ditto-api-2.yml-Swagger Doc.
Signed-off-by: julian <j.feinauer@pragmaticminds.de>
yufei-cai
mentioned this issue
Sep 30, 2020
Metadata is not deleted when thing parts are deleted
#829
Open
Sign up for free
to join this conversation on GitHub.
return dittoProtocolMsg;
}
/**
* Builds an external message from the passed parameters.
* the mapped external message
* or <code>null</code> if the message could/should not be mapped
*/
let externalMsg = {};
externalMsg.headers = headers;
externalMsg.textPayload = textPayload;
externalMsg.bytePayload = bytePayload;
externalMsg.contentType = contentType;
return externalMsg;
}
/**
* Transforms the passed ArrayBuffer to a String interpreting the content of the passed arrayBuffer as unsigned 8
* bit integers.
}
}
Authorization
A connection is initiated by the connectivity service. This obviates the need for client authorization, because
Ditto becomes the client in this case. Nevertheless, to access resources within Ditto, the connection must know on
whose behalf it is acting. This is controlled via the configured authorizationContext, which holds a list of
self-assigned authorization subjects. Before a connection can access a Ditto resource, one of its
authorizationSubjects must be granted the access rights by an authorization mechanism such as
ACLs or Policies.
A connection target can only send data for things to which it has READ rights, as data flows from a thing to a target.
A connection source can only receive data for things to which it has WRITE rights, as data flows from a source to a thing.
Specific configuration
Some connection types require specific configuration, which is not supported for other connection types.
Those are put into the specificConfig field.
Payload Mapping
For more information on mapping message payloads see the corresponding Payload Mapping Documentation.
Placeholders
The configuration of a connection allows to use placeholders at certain places. This allows more fine-grained control
Signed-off-by: Juergen Fickel <juergen.fickel@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: Add revoked read subjects to headers of events and…
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
0643e59
… messages at the outbound service boundaries. Deprecated `EffectedSubjectIds` in favour of `EffectedSubjects`.
Signed-off-by: Juergen Fickel <juergen.fickel@bosch-si.com>
w4tsn
Already have an account?
Sign in to comment
Assignees
No one assigned
Labels
community-interest
enhancement
Projects
None yet
Milestone
1.2.0
Linked pull requests
Successfully merging a pull request may close this issue.
Feature/680 add metadata
4 participants
© 2020 GitHub, Inc.
*
*/
return String.fromCharCode.apply(null, new Uint8Array(arrayBuffer));
}
/**
* Transforms the passed String to an ArrayBuffer using unsigned 8 bit integers.
*
*/
let buf = new ArrayBuffer(string.length);
let bufView = new Uint8Array(buf);
for (let i=0, strLen=string.length; i<strLen; i++) {
bufView[i] = string.charCodeAt(i);
}
return buf;
}
over how messages are consumed or where they are published to. The general syntax of a placeholder is
Placeholder for source authorization subjects
Processing the messages received via a source using the same fixed authorization subject may not be
suitable for every scenario. For example, if you want to declare fine-grained write permissions per device, this would not
be possible with a fixed global subject. For this use case, we have introduced placeholder substitution for authorization subjects of
source addresses that are resolved when processing messages from a source. Of course, this requires the sender of the
message to provide necessary information about the original issuer of the message.
Important: Only use this kind of placeholder if you trust the source of the message. The value from the header is used as the authorized subject.
Example:
Assuming the messages received from the source telemetry contain a device_id header (e.g. sensor-123),
you may configure your source’s authorization subject as follows:
{
"id": "auth-subject-placeholder-example",
"sources": [
{
"addresses": [ "telemetry" ],
}
]
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: Fixed compilation errors.
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
1dd5404
Signed-off-by: Juergen Fickel <juergen.fickel@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
/**
*
*/
let byteBuffer = new ArrayBuffer(arrayBuffer.byteLength);
new Uint8Array(byteBuffer).set(new Uint8Array(arrayBuffer));
return dcodeIO.ByteBuffer.wrap(byteBuffer);
}
Mapping incoming messages
/**
* Maps the passed parameters to a Ditto Protocol message.
* the mapped Ditto Protocol message,
* an array of Ditto Protocol messages or
* <code>null</code> if the message could/should not be mapped
*/
}
The placeholder is then replaced by the value from the message headers and the message is forwarded and processed under the
subject device:sensor-123.
In case the header cannot be resolved or the header contains unexpected characters, an exception is thrown, which is sent
back to the sender as an error message, if a valid reply-to header was provided, otherwise the message is dropped.
Placeholder for target addresses
Another use case for placeholders may be to publish twin events or live commands and events to a target address
containing thing-specific information e.g. you can distribute things from different namespaces to different target addresses.
For a thing with the ID org.eclipse.ditto:device-123 these placeholders would be resolved as follows:
Placeholder
Description
Resolved value
thing:id
Full ID composed of namespace : (as a separator), and name
org.eclipse.ditto:device-123
thing:namespace
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: Fixed unit test errors regarding item orders in JS…
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
376ce4d
…ON arrays.
Signed-off-by: Juergen Fickel <juergen.fickel@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
headers,
textPayload,
bytePayload,
contentType
) {
// ###
// Insert your mapping logic here:
// ###
return Ditto.buildDittoProtocolMsg(
namespace,
id,
group,
channel,
criterion,
action,
path,
dittoHeaders,
Namespace (i.e. first part of an ID)
org.eclipse.ditto
thing:name
Name (i.e. second part of an ID )
device-123
Additionally to the placeholders mentioned above, all documented
connection placeholders may be
used in target addresses. However, if any placeholder in the target address fails to resolve, then the message will be
dropped.
Example:
Sending live commands and events to a target address that contains the thing’s namespace.
{
"id": "target-placeholder-example",
"targets": [
{
"authorizationContext": ["ditto:auth-subject"],
"topics": [ "_/_/things/live/events", "_/_/things/live/commands" ]
}
this issue
Mar 14, 2020
Issue eclipse#561: Fixed further unit test errors.
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
458c7d9
Signed-off-by: Juergen Fickel <juergen.fickel@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
value,
status
);
}
such JavaScript objects. That’s where the helper method Ditto.buildDittoProtocolMsg is useful: it explicitly
defines which parameters are required for the Ditto Protocol message.
Mapping outgoing messages
Outgoing Ditto Protocol messages (e.g. responses or events)
/**
* Maps the passed parameters which originated from a Ditto Protocol message to an external message.
* The mapped external message,
* an array of external messages or
* <code>null</code> if the message could/should not be mapped
*/
]
}
Tags:
connectivity
©2020 Eclipse Ditto.
Site last generated: Nov 2, 2020
> Privacy Policy
> Terms of Use
> Copyright Agent
> Legal
> License
> Report a Vulnerability
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: Fix a sonar issue. For real this time.
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
9c5fcfe
Signed-off-by: Yufei Cai <yufei.cai@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
namespace,
id,
group,
channel,
criterion,
action,
path,
dittoHeaders,
value,
status,
extra
) {
// ###
// Insert your mapping logic here:
// ###
return Ditto.buildExternalMsg(
headers,
textPayload,
Issue eclipse#561: don't make logger in AbstractGraphActor protected,…
…
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
cb8d348
… this causes javadoc errors
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: disable "doclint" for javadocs in ditto-services-*…
…
bytePayload,
contentType
);
}
textPayload, bytePayload and contentType. That’s where the helper method Ditto.buildExternalMsg is useful: it
explicitly defines which parameters are required for the external message.
JavaScript payload types
Both, text payloads and byte payloads may be mapped.
Text payloads
Working with text payloads is as easy as it gets in JavaScript. For example, for the content-type application/json
structured data may be processed like this:
let value;
if (contentType === 'application/json') {
let parsedJson = JSON.parse(textPayload);
value = parsedJson.number1 + parsedJson['sub-field']; // remember to access JSON keys with dashes in a JS special way
} else {
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
8bb2f5d
… modules
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch-si.com>
w4tsn
pushed a commit
to w4tsn/ditto
that referenced
this issue
Mar 14, 2020
Issue eclipse#561: reverted non-working changes to fix javadoc errors…
…
// a script may decide to not map other content-types than application/json
return null;
}
// proceed ...
Byte payloads
Working with byte payloads is also possible but does require a little bit of knowledge about JavaScipt’s
ArrayBuffer
TypedArrays and
DataView.
What you get in the mapping scripts is a bytePayload of type ArrayBuffer which lets you work on the bytes in different ways:
Typed Arrays
A TypedArray [is] a view into an ArrayBuffer where every item has the same size and type. source
With TypedArrays you can simply wrap the bytePayload ArrayBuffer and work on all the items e.g. as unsigned 8-bit integers:
let bytes = new Uint8Array(bytePayload);
bytes[0]; // access the first byte
bytes[1]; // access the second byte
Unverified
This user has not uploaded their public key yet.
GPG key ID: 39CF2E662793ABCD
Learn about signing commits
debe220
…; excluded "controlflow" package from javadoc being generated for
Signed-off-by: Thomas Jaeckle <thomas.jaeckle@bosch-si.com>
Sign up for free
to join this conversation on GitHub.
Already have an account?
Sign in to comment
Assignees
thjaeckle
Labels
enhancement
Projects
DataViews
The DataView [is] another view into an ArrayBuffer, but one which allows items of different size and type in the ArrayBuffer. source
let view = new DataView(bytePayload);
view.getInt8(0); // access a 8-bit signed integer (byte) on offset=0
view.getUint16(1); // access a 16-bit unsigned integer (usigned short) on offset=1
DataViews also allow to set bytes to an underlying ArrayBuffer conveniently.
ByteBuffer.js
Alternatively, Ditto’s JavaScript transformation may be loaded with the above mentioned libraries, e.g. “bytebuffer.js”.
With ByteBuffer, the content of an ArrayBuffer can be accessed in a buffered way:
let byteBuf = Ditto.asByteBuffer(bytePayload);
let numberFromBytes = parseInt(byteBuf.toHex(), 16);
let base64encoded = byteBuf.toBase64();
let buf = dcodeIO.ByteBuffer.fromBase64(base64encoded);
buf.readInt(); // read a 32bit signed integer + advances the offset in the buffer
buf.readUTF8String(4); // read 4 characters of UTF-8 encoded string + advances the offset in the buffer
buf.remaining(); // gets the number of remaining readable bytes in the buffer
Check the ByteBuffer API documentation to find out what is possible with that helper.
None yet
Milestone
1.1.0
Linked pull requests
Successfully merging a pull request may close this issue.
Signal enrichment when publishing events/messages
4 participants
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
JavaScript Examples
Text payload example
Let’s assume your device sends telemetry data via Eclipse Hono’s MQTT adapter into the cloud.
And that an example payload of your device is:
{
"temp": "23.42 °C",
"hum": 78,
"pres": {
"value": 760,
"unit": "mmHg"
}
}
We want to map a single message of this device containing updates for all 3 values to a Thing in the following structure:
{
"thingId": "the.namespace:the-thing-id",
"policyId": "the.namespace:the-policy-id",
"features": {
"temperature": {
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more.
Accept
Reject
We use optional third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking Cookie Preferences at the bottom of the page.
For more information, see our Privacy Statement.
Essential cookies
Learn more
"properties": {
"value": 23.42
}
},
"pressure": {
"properties": {
"value": 760
}
},
"humidity": {
"properties": {
"value": 78
}
}
}
}
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
headers,
textPayload,
bytePayload,
contentType
) {
if (contentType !== 'application/json') {
return null; // only handle messages with content-type application/json
}
let jsonData = JSON.parse(textPayload);
let value = {
temperature: {
properties: {
value: jsonData.temp.split(" ")[0] // omit the unit
}
},
pressure: {
properties: {
value: jsonData.pres.value
}
},
humidity: {
properties: {
value: jsonData.hum
}
}
};
return Ditto.buildDittoProtocolMsg(
'org.eclipse.ditto', // in this example always the same
headers['device_id'], // Eclipse Hono sets the authenticated device_id as AMQP 1.0 header
'things', // we deal with a Thing
'twin', // we want to update the twin
'commands', // we want to create a command to update a twin
'modify', // modify the twin
'/features', // modify all features at once
headers, // pass through the headers from AMQP 1.0
value
);
}
When your device now sends its payload via the MQTT adapter of Eclipse Hono:
Your digital twin is updated by applying the specified script and extracting the relevant values from the passed textPayload.
Bytes payload example
For this example, let’s assume your device sends telemetry data via Eclipse Hono’s HTTP adapter into the cloud.
An example payload of your device - displayed as hexadecimal - is:
0x09EF03F72A
Let us now also assume that
the first 2 bytes 09 EF represent
the temperature as 16bit signed integer (thus, may also be negative)
this is not a float in oder to save space (as float needs at least 32 bit)
the second 2 bytes 03 F7 represent the pressure as 16bit signed integer
the last byte 2A represents the humidity as 8bit unsigned integer of our device.
We want to map a single message of this device containing updates for all 3 values to a Thing in the following structure:
{
"thingId": "the.namespace:the-thing-id",
"policyId": "the.namespace:the-policy-id",
"features": {
"temperature": {
"properties": {
"value": 25.43
}
},
"pressure": {
"properties": {
"value": 1015
}
},
"humidity": {
"properties": {
"value": 42
}
}
}
}
headers,
textPayload,
bytePayload,
contentType
) {
if (contentType !== 'application/octet-stream') {
return null; // only handle messages with content-type application/octet-stream
}
let view = new DataView(bytePayload);
let value = {
temperature: {
properties: {
// interpret the first 2 bytes (16 bit) as signed int and divide through 100.0:
value: view.getInt16(0) / 100.0
}
},
pressure: {
properties: {
// interpret the next 2 bytes (16 bit) as signed int:
value: view.getInt16(2)
}
},
humidity: {
properties: {
// interpret the next 1 bytes (8 bit) as unsigned int:
value: view.getUint8(4)
}
}
};
return Ditto.buildDittoProtocolMsg(
'org.eclipse.ditto', // in this example always the same
headers['device_id'], // Eclipse Hono sets the authenticated device_id as AMQP 1.0 header
'things', // we deal with a Thing
'twin', // we want to update the twin
'commands', // we want to create a command to update a twin
'modify', // modify the twin
'/features', // modify all features at once
headers, // pass through the headers from AMQP 1.0
value
);
}
When your device now sends its payload via the HTTP adapter of Eclipse Hono:
echo -e $((0x09EF03F72A)) | curl -i -X POST -u sensor1@DEFAULT_TENANT:hono-secret -H 'Content-Type: application/octet-stream' --data-binary @- http://127.0.0.1:8080/telemetry
Your digital twin is updated by applying the specified script and extracting the relevant values from the passed bytePayload.
Custom Java based implementation
Beside the JavaScript based mapping - which can be configured/changed at runtime without the need of restarting the
connectivity service - there is also the possibility to implement a custom Java based mapper.
The interface to be implemented is org.eclipse.ditto.services.connectivity.mapping.MessageMapper (find the source here)
with the following signature to implement (this is only for experts, the sources contain JavaDoc):
public interface MessageMapper {
void configure(MessageMapperConfiguration configuration);
List<Adaptable> map(ExternalMessage message);
List<ExternalMessage> map(Adaptable adaptable);
}
After instantiation of the custom MessageMapper, the configure method is called with all the options which were
provided to the mapper in the configured connection. Use them
in order to pass in configurations, thresholds, etc.
Then, simply implement both of the map methods:
List<Adaptable> map(ExternalMessage message) maps from an incoming external message to
an empty list of Adaptables if the incoming message should be dropped
a list of one or many Ditto Protocol Adaptables
List<ExternalMessage> map(Adaptable adaptable) maps from an outgoing Ditto Protocol Adaptable to
an empty list of ExternalMessages if the outgoing message should be dropped
a list of one or many external messages
In order to use this custom Java based mapper implementation, the following steps are required:
the implementing Class must be annotated with @PayloadMapper(alias="customMapper") and define at least one alias
if the custom mapper requires mandatory options then specify @PayloadMapper(alias="customMapper", requiresMandatoryConfiguration=true)
the Class needs obviously to be on the classpath of the connectivity microservice
in order to be loaded
when creating a new connection you have to specify the alias of your mapper as the mappingEngine in the
connection’s mappingDefinitions and reference the ID of your mapper in a source or a target
Tip: If your mapper does not require any options (requiresMandatoryConfiguration=false), you can
directly reference the alias in a source or a target without first defining it inside mappingDefinitions.
Tags:
connectivity
©2020 Eclipse Ditto.
Site last generated: Nov 2, 2020
> Privacy Policy
> Terms of Use
> Copyright Agent
> Legal
> License
> Report a Vulnerability
