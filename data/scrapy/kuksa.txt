Eclipse KUKSA
eclipseFdnVideos.replace();
Contact us on
kuksa-dev@eclipse.org
Eclipse KUKSA - go to homepage
Toggle Navigation
Home
About
Blog
Forum
Contributing
Resources
PMI Community
Eclipse KUKSA
is based on
Why are we building
Eclipse KUKSA
When Dreams come True
Security
Automotive
Stay in touch!
@Appstacle
About
Because today's software-intensive automotive systems are still developed in silos by each car manufacturer or OEM in-house, long-term challenges in the industry are yet unresolved. Establishing a standard for car-to-cloud scenarios significantly improves comprehensive domain-related development activities and opens the market to external applications, service provider, and the use of open source software wherever possible without compromising security. Connectivity, OTA maintenance, automated driving, electric mobility, and related approaches increasingly demand technical innovations applicable across automotive players.
The open and secure Eclipse Kuksa project will contain a cloud platform that interconnects a wide range of vehicles to the cloud via in-car and internet connections. This platform will be supported by an integrated open source software development environment including technologies to cope especially with software challenges for vehicles designed in the IoT, Cloud, and digital era.
Continue reading
Our latest news
Read more
When Eclipse Kuksa meets Eclipse SUMO [VIDEO]
on May 28, 2019
This video features an approach for connecting the Eclipse SUMO track simulation with the open source connected vehicle ecosystem Eclipse Kuksa. More precisely, Eclipse SUMO is used to simulate traffic scenarios including microscopic properties like the position or emission. The generated data of each vehicle is then be sent to the message gateway of the Kuksa IoT Cloud platform and delegated to an according example service that consumes the data.
Continue reading
Read more
Appstacle Use Case: Remote Driver Authentication with Eclipse Kuksa
on April 18, 2019
The Appstacle Turkish consortium, including Koçsistem, Otokar and Netaş, has created a Remote Driver Authentication demo based on the Eclipse Kuksa platform. Within the project, various companies or groups of companies, have focused on several use cases that support the vision of an ecosystem for purchasing and downloading in-vehicle applications. Otokar, a vehicle manufacturer, is tasked with integrating these scenarios and testing them on real vehicles. Otokar and the rest of the Turkish consortium are focused on the driver and passenger authentication scenarios.
Continue reading
Read more
Otokar Hatti
on February 15, 2019
The Turkish consortium composed an article which is published in the monthly public magazine “Otokar Hattı” (“Otokar Production Line” in English). Check it out page 6-7, of the following pdf file: Otokar Hatti. The article is in Turkish Erdem Ergen KoçSistem
Continue reading
Read more
Hackathon0119
on January 29, 2019
Hackathon 2019 The Eclipse Kuksa team met once again for a Hackathon in January 2019 to address Eclipse Kuksa issues and open tasks of our roadmap. We could demo our progress! Appstacle is a running reality now!@BoschSI demoed the Kuksa car appstore pic.twitter.com/2qWCQCbrBv — Appstacle Project (@Appstacle) January 17, 2019 . @kocsystem demoed the Kuksa authentication use case pic.twitter.com/coerDzrzpj — Appstacle Project (@Appstacle) January 17, 2019 . @eTaskit demoed the appstacle hardware pic.
Continue reading
Our Partners
Legal
Privacy Policy
Terms of Use
Copyright Agent
Eclipse Public License
Legal Resources
Eclipse Security
Eclipse Kuksa
has its origins in the
APPSTACLE project
that is part of the European ITEA3 programme
Copyright © 2019
The Eclipse Foundation
.
All Rights Reserved.
Template by
Bootstrapious
.
Ported to Hugo by
DevCows
About
eclipseFdnVideos.replace();
About - go to homepage
Toggle Navigation
Home
About
Blog
Forum
Contributing
Resources
PMI Community
About
January 30, 2018
Because today's software-intensive automotive systems are still developed in silos by each car manufacturer or OEM in-house, long-term challenges in the industry are yet unresolved. Establishing a standard for car-to-cloud scenarios significantly improves comprehensive domain-related development activities and opens the market to external applications, service provider, and the use of open source software wherever possible without compromising security. Connectivity, OTA maintenance, automated driving, electric mobility, and related approaches increasingly demand technical innovations applicable across automotive players.
The open and secure Eclipse Kuksa project will contain a cloud platform that interconnects a wide range of vehicles to the cloud via in-car and internet connections. This platform will be supported by an integrated open source software development environment including technologies to cope especially with software challenges for vehicles designed in the IoT, Cloud, and digital era.
This ecosystem will provide a comprehensive environment across various frameworks and technologies for # the in-vehicle platform, # the cloud platform, and # an app development IDE - that is, the complete tooling stack for the connected vehicle domain (see Figure 1 below). Essential to this environment will be the capabilities for collecting, storing, and analysing vehicle data in the cloud as well as the transmission of diverse information such as cloud calculation results (e.g. improved routing), software maintenance updates or even complete new applications. While many IoT solutions exist in the Eclipse IoT ecosystem, Eclipse Kuksa combines the necessary existing technologies and fills the gaps for the specific requirements of the connected embedded real-time nature of the automotive domain.
Search
Categories
dissemination (6)
implementation (3)
introduction (1)
rover (1)
use-cases (1)
Tags
appstore
authentication
ece18
ecf18
implementation
iot
koçsistem
magazine
Contributing
eclipseFdnVideos.replace();
Contributing - go to homepage
Toggle Navigation
Home
About
Blog
Forum
Contributing
Resources
PMI Community
Resources
eclipseFdnVideos.replace();
Resources - go to homepage
Toggle Navigation
Home
About
Blog
Forum
Contributing
Resources
PMI Community
Resources
Getting Started
A brief documentation link collection can be found
here
Blogs
eclipseFdnVideos.replace();
Blogs - go to homepage
Toggle Navigation
Home
netaş
otokar
oulanka
rover
sumo
Legal
Privacy Policy
Terms of Use
Copyright Agent
Eclipse Public License
Legal Resources
Eclipse Security
Eclipse Kuksa
has its origins in the
APPSTACLE project
that is part of the European ITEA3 programme
Copyright © 2019
The Eclipse Foundation
.
All Rights Reserved.
Template by
Contributing
HowTo contribute to Eclipse Kuksa
Great that you are interested in contributing to Eclipse Kuksa. We really looking forward to receive your contribution!
Get in touch! There is the
kuksa-dev mailing list
and a weekly
Zoom meeting
, every Thursday 1-2pm (CET/CEST).
In the project we agreed upon the following approach to add contributions to the project.
Meet the Definition of Done (DoD)
A review took place for the code
The new feature was at least once tested manually, deployed to a running test instance
Clearly outline third party dependencies
Definition of Done
First, we have DoD for solved issues. Please check if you met all the items in the following list:
File headers in file OK (see section
License Headers
for details)
.
GitHub Repositories
The code is provided in the following Github repositories. Please note that issues are tracked and discussed in the repository of the respective sub-project.
Eclipse Kuksa IDE:
https://github.com/eclipse/kuksa.ide
Browser-based IDE used by developers to create applications for the Eclipse Kuksa in-vehicle platform.
Eclipse Kuksa Apps:
https://github.com/eclipse/kuksa.apps
Contains applications to showcase use-cases of Eclipse Kuksa
Eclipse Kuksa Cloud:
https://github.com/eclipse/kuksa.cloud
The cloud-backend of Eclipse Kuksa, including the App Store
Eclipse Kuksa In-Vehicle:
https://github.com/eclipse/kuksa.invehicle
The in-vehicle platform of Eclipse Kuksa
Eclipse Kuksa Integration:
https://github.com/eclipse/kuksa.integration
Integration tests for Eclipse Kuksa
Eclipse Kuksa Website:
https://github.com/eclipse/kuksa.website
The sources of the Eclipse Kuksa website
Register for EclipseCon Europe 2019 today!
Register now and save! Early Bird pricing ends October 1.
Register
Unable to connect to the database server at this time(eclipse).
Unable to connect to the database server at this time(eclipse).
SQL Trouble:
Can't create a new thread (errno 11 "Resource temporarily unavailable"); if you are not out of available memory, you can consult the manual for a possible OS-dependent bug
About
Blog
Forum
Contributing
Resources
PMI Community
Blogs
When Eclipse Kuksa meets Eclipse SUMO [VIDEO]
in
implementation
May 28, 2019
This video features an approach for connecting the Eclipse SUMO track simulation with the open source connected vehicle ecosystem Eclipse Kuksa. More precisely, Eclipse SUMO is used to simulate traffic scenarios including microscopic properties like the position or emission. The generated data of each vehicle is then be sent to the message gateway of the Kuksa IoT Cloud platform and delegated to an according example service that consumes the data.
Continue reading
Appstacle Use Case: Remote Driver Authentication with Eclipse Kuksa
in
Use Cases
April 18, 2019
The Appstacle Turkish consortium, including Koçsistem, Otokar and Netaş, has created a Remote Driver Authentication demo based on the Eclipse Kuksa platform. Within the project, various companies or groups of companies, have focused on several use cases that support the vision of an ecosystem for purchasing and downloading in-vehicle applications. Otokar, a vehicle manufacturer, is tasked with integrating these scenarios and testing them on real vehicles. Otokar and the rest of the Turkish consortium are focused on the driver and passenger authentication scenarios.
Continue reading
Otokar Hatti
Bootstrapious
.
Ported to Hugo by
DevCows
Each new feature is developed in a separate branch
Development branches should be named like
<github-nickname>/<issue>/<description>
, e.g. bs-jokri/#2/fix-connection-handling
Coding style
Clean code is encouraged (see ‘Clean Code’ by Robert C. Martin or the
Clean Code Cheatsheet
. Reviewers might refer to specific clean code practices to help improve contributed code.
Avoid (serious) compiler warnings
All tests pass
Unit testing as it is already present
You have more - use them!
Documentation
Provide the necessary technical documentation of your feature in the respective Github repository that you contribute to. Documentation is in markdown and it either included in the top-level README.md file of the Github repository, or linked from there.
Update the high-level overview of Kuksa in the
kuksa.integration Wiki at Github
. From the wiki, provide links to relevant technical documentation in the Github repositories.
Documentation
Eclipse Che Kuksa IDE:
https://gitlab-pages.idial.institute/pedro.cuadrachamorro/kuksa-ide/
Rover Docs:
https://app4mc-rover.github.io/rover-docs/
Rover API:
https://app4mc-rover.github.io/rover-app/
Rover Telemetry UI
https://github.com/app4mc-rover/rover-telemetry-ui
Eclipse Kuksa Wiki:
https://wiki.eclipse.org/Kuksa
Entry in Eclipse Foundation Project List:
https://projects.eclipse.org/projects/iot.kuksa
Mailing list
Contact the project developers via the project’s “dev” list.
https://dev.eclipse.org/mailman/listinfo/kuksa-dev
Builds
Jenkins Website:
https://jenkins.eclipse.org/kuksa/
APPSTACLE Deliverables and more
Eclipse Kuksa was created as part of the APPSTACLE project. More information regarding the project and the deliverables is available at
in
dissemination
February 15, 2019
The Turkish consortium composed an article which is published in the monthly public magazine “Otokar Hattı” (“Otokar Production Line” in English). Check it out page 6-7, of the following pdf file: Otokar Hatti. The article is in Turkish Erdem Ergen KoçSistem
Continue reading
Hackathon0119
January 29, 2019
Hackathon 2019 The Eclipse Kuksa team met once again for a Hackathon in January 2019 to address Eclipse Kuksa issues and open tasks of our roadmap. We could demo our progress! Appstacle is a running reality now!@BoschSI demoed the Kuksa car appstore pic.twitter.com/2qWCQCbrBv — Appstacle Project (@Appstacle) January 17, 2019 . @kocsystem demoed the Kuksa authentication use case pic.twitter.com/coerDzrzpj — Appstacle Project (@Appstacle) January 17, 2019 . @eTaskit demoed the appstacle hardware pic.
Continue reading
ECE2018: Automotive meets IoT: Innovating your Future Vehicle
in
dissemination
October 24, 2018
Sebastian Schildt (Robert Bosch GmbH) made a very interesting and well received presentation of the Kuksa project at EclipseCon Europe 2018. Check it out!
Continue reading
EclipseCon Europe and ESE Kongress events
in
dissemination
October 22, 2018
EclipseCon France 2018 Eclipse Kuksa and its latest development activities will be presented along with the talk Automotive meets IoT: Innovating your Future Vehicle at EclipseCon Europe 2018 in Ludwigsburg, Germany. Embedded Software Engineering Kongress 2018 In addition to the EclipseCon Europe event, you can join us at the ESE Kongress in Sindelfingen, Germany, on December, 6th. The talk Überwindung der Silos – Revolution für vernetzte Fahrzeuge, that means ‘Overcoming the Silos - Revolution for Connected Vehicles’, will be held at 16:45 o’clock (4:45pm) and will cover both a generic as well as detailed descriptions of the three Eclipse Kuksa platforms (a) In-Vehicle, (b) IDE, and ( c) Cloud.
Commit style
Please write brief and useful commit messages: Separate the subject from body with a blank line because the subject line is shown in the git history and should summarize the commit body. Use the body to explain what and why vs. how.
https://chris.beams.io/posts/git-commit/#seven-rules
has more tips and details.
Before you push your commits to a repository, you can squash your commits into one or more logical units of work, e.g. if you want to add a new feature solely in a single commit.
The
Pro Git book
has a great section on
Rewriting History
and a section on
Squashing
.
Rebase during pull (i.e.
git pull --rebase
) instead of merging so all commits can be signed off. You can also
configure git to rebase by default
you IDE will also have according configuration options.
If you are not a committer to the project your commits need to be signed off with a valid Eclipse user account. Check the Eclipse handbook for details (
Eclipse Project Handbook
).
Review
https://itea3.org/project/appstacle.html
.
Videos
Automotive meets IoT: Innovating your future vehicle
Sebastian Schildt, Bosch
Bridging Eclipse SUMO with Eclipse Kuksa
Philipp Heisig, Fachhochschule Dortmund
Legal
Privacy Policy
Terms of Use
Copyright Agent
Eclipse Public License
Legal Resources
Eclipse Security
Eclipse Kuksa
has its origins in the
APPSTACLE project
that is part of the European ITEA3 programme
Copyright © 2019
The Eclipse Foundation
.
All Rights Reserved.
Template by
Continue reading
EclipseCon France 2018 interview
in
dissemination
September 18, 2018
Interview with Robert Höttger (Fachhochschule Dortmund - University of Applied Science and Arts). Robert presented the recent news about the APPSTACLE project.
Continue reading
Eclipse Kuksa Hackathon 08.2018
in
Implementation
August 30, 2018
Hacking 3 Days @ IDiAL, FH-Dortmund, for Eclipse Kuksa Features 13 Hackers met in Dortmund on August, 28th until 30th of August to work on an end-to-end use case scenario along with new Eclipse Kuksa technologies. 20 CQs, 2 major GitHub pull-requests, and 21035 LOCs were the results. Of course, the LOCs also contain content from work prior to the Hackathon. More precisely, the Eclipse Kuksa Appstore was migrated to an Eclipse HawkBit Server, that transmits applications wirelessly to an Eclipse HawkBit client running on a device (Raspberry Pi) that runs the Kuksa adapted AGL (Automotive Grade Linux + Kuksa technologies).
Continue reading
EclipseCon France participation
in
dissemination
June 18, 2018
EclipseCon France 2018 Eclipse Kuksa was presented at EclipseCon France 2018 along with the research booth, the research community’s pitch session, a regular talk hold by Tobias Rawald and Robert Hoettger, and an interview about the motivation, goals, and the current state of Eclipse Kuksa. We really enjoyed hosting @EclipseCon France these neat research projects and their representatives @Appstacle @agile_iot @AMASSproject @crossminer @gemocinitiative @stamp_project. We are looking forward for meeting at @EclipseCon Europe!
Continue reading
Initial Contributions
in
If you conduct a code review, please look at the following issues:
Is code style ok, not really formatting, but issues like style attributes in HTML tags or exception handling useful
Are DoD items reached
Are there any design / architecture issues
Does the new feature fit the overall project goal, is it suitable for the community
Manual Test
If applicable the new feature should at least be deployed and tested by someone before actually merged to master. This could be done by the same person that is doing the review but could be performed by another person.
After review and tests are finished it should be documented who actually did the review and the test. Do this with the following lines in the comments of the PR.
and
Third party dependencies
If you use third party content (import / include …), you are required to list each third party content explicitly with its version number in the documentation or your pull-request comment. Please note that GPL software cannot be approved for Eclipse Kuksa.
Licensing and file header
All files contributed require headers - this will ensure the license and copyright clearing at the end. Also, all contributions must have the same license as the original source.
https://www.eclipse.org/legal/epl-2.0/faq.php#h.q72cnghf29k0
We recommend to use the releng copyright tool at:
https://wiki.eclipse.org/Development_Resources/How_to_Use_Eclipse_Copyright_Tool
(please adapt comment characters usage)
For small files such as property files, configuration files or standard XML files:
Eclipse Contributor Agreement
Before your contribution can be accepted by the project team contributors must electronically sign the Eclipse Contributor Agreement (ECA).
Bootstrapious
.
Ported to Hugo by
DevCows
Implementation
June 5, 2018
Eclipse Kuksa’s initial contribution was successfully submitted to the GitHub repositories. We are working on a roadmap to present planned activities for upcoming contributions. Apart from the three major Kuksa parts, i.e., kuksa.invehicle kuksa.cloud kuksa.ide additional repositories will cover specific use-cases, builds, tests, and other features within: kuksa.apps kuksa.integration
Continue reading
← Newer
Older →
Search
Categories
dissemination (6)
implementation (3)
introduction (1)
rover (1)
use-cases (1)
Tags
appstore
authentication
ece18
ecf18
implementation
iot
http://www.eclipse.org/legal/ECA.php
Commits that are provided by non-committers must have a Signed-off-by field in the footer indicating that the author is aware of the terms by which the contribution has been provided to the project. The non-committer must additionally have an Eclipse Foundation account and must have a signed Eclipse Contributor Agreement (ECA) on file.
For more information, please see the Eclipse Committer Handbook:
https://www.eclipse.org/projects/handbook/#resources-commit
Legal
Privacy Policy
Terms of Use
Copyright Agent
Eclipse Public License
Legal Resources
Eclipse Security
Eclipse Kuksa
has its origins in the
APPSTACLE project
that is part of the European ITEA3 programme
Copyright © 2019
The Eclipse Foundation
.
All Rights Reserved.
Template by
Bootstrapious
koçsistem
magazine
netaş
otokar
oulanka
rover
sumo
Legal
Privacy Policy
Terms of Use
Copyright Agent
Eclipse Public License
Legal Resources
Eclipse Security
Eclipse Kuksa
has its origins in the
APPSTACLE project
that is part of the European ITEA3 programme
Copyright © 2019
The Eclipse Foundation
.
All Rights Reserved.
.
Ported to Hugo by
DevCows
Template by
Bootstrapious
.
Ported to Hugo by
DevCows
