Eclipse Vorto
Eclipse Vorto
Getting started
Release Notes
HTTP API
Case Studies
Testimonials
Contributors
Contact
Language for Digital Twins
Brings a common understanding to your device data.
Device Catalog
Demo
Describe
Vorto provides a simple language to describe IoT device capabilities.
Start today
Share
The Vorto Repository is an open platform to share and manage device descriptions.
Check it out
Integrate
Vorto provides tools and libraries that consume device descriptions to integrate devices with various IoT platforms and solutions.
Learn more
Describe
Vorto DSL
temperature
as
Temperature
location
as
Location
namespace
com.acme
version
2.0.0
displayname
"Raspberry Pi"
description
"Raspberry Pi with onboard sensor and GPS module"
using
org.eclipse.vorto.Location;
1.0.0
using
org.eclipse.vorto.Temperature;
1.0.0
infomodel
RaspberryPi{
{
}
Describe your first device
Share
The Vorto Repository is an open platform where device manufacturers share Information Models of devices with other IoT Stakeholders, allowing them to easily create solutions using the capabilities of these devices.
Open Repository
Integrate
Vorto harmonises device APIs that helps IoT developers to integrate devices using IoT platforms much quicker, in order to build device-agnostic IoT solutions.
Getting Started
Case studies
Take a look at a few interesting Vorto Case Studies, illustrating the usage of Vorto in real-world IoT Projects.
Eclipse Vorto, the next step in IoT device integration
Learn what the Eclipse Vorto Project is all about
Bosch Security Camera Integration
Read how Vorto integrates Bosch Security Cameras with Bosch IoT Suite.
Harmonizing specific device payloads
Read how to harmonize a Digital Twin API for different device payloads
Testimonials
See what our users have to say about Vorto.
“Vorto serves as the intermediary among all the IoT protocols and brings a common understanding to device data. Additionally the code generation infrastructure enables rapid prototyping and easy integration of IoT devices and platforms.”
Oliver Meili,Head of IoT Development - Bosch
“Vorto provides an excellent technology stack to develop platform-agnostic IoT solutions.”
Preston Holmes,Head of IoT Solutions - Google
“Eclipse Vorto provides developers important capabilities for delivering IoT solutions which are platform and language independent.”
Mike Milinkovich,Executive Director - Eclipse
Contributors
The Vorto Project is an open source iniative of the Eclipse Foundation, the following companies have contributed to the codebase.
Robert Bosch GmbH
Contributor
ThingWorx
Contributor
IAS Universität Stuttgart
Contributor
FZI
Contributor
Eclipse Foundation
Open Source Organization
Hahn Schickard
Contributor
Stats
1809
Described devices
17
Vorto Plugins/Add-ons
66154
Lines of Code
135
Github stars
Contact
To reach out to us, just send us an email.
Vorto Dev Team
Vorto Repository
Your name
Your email address
Message
Copyright Agent
Legal
Terms of Use
Privacy
Community
Security
Vorto Dashboard
You need to enable JavaScript to run this app.
vorto/create_webapp_dashboard.md at master · eclipse/vorto · GitHub
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Security
vorto/describe_device-in-5min.md at master · eclipse/vorto · GitHub
vorto/community.md at development · eclipse/vorto · GitHub
document.querySelector('html').classList.remove('no-js')
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Eclipse Vorto: The next step in IoT device integration
var body = document.querySelector('body') body.className += ' js'
Subscribe
Find out first about new and important news
Subscribe
About
Authors
Career
Imprint
Legal Note
Cookies
Privacy Statement
Privacy Settings
About
GitHub Stars program
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
Security
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
Security
Team management
Hosting
Mobile
Customer stories
→
Security
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Authors
Career
Imprint
Legal Note
Cookies
Privacy Statement
Privacy Settings
Share via email
Subscribe to blog alert
Developer
Internet of Things
Eclipse Vorto: The next step in IoT device integration
6 min
Alexander Edelmann
你好(Chinese for “Hello”), I am based in Singapore and have been working as a software engineer for Robert Bosch since 2006. I am passionate about IoT and believe in open standards that determine the successful interplay between devices across various IoT platforms. That is why I actively contribute to the Eclipse IoT Vorto project, which aims to provide cloud-based tools to uniformly describe IoT devices and integrate them into various IoT platforms based on open IoT standards. My IoT geeky side apart, I enjoy Asian cuisines that allow me to practice my chopsticks skills. You can also find me on the court hitting a few tennis balls with my friends.
Looking at examples like smart factories and homes, connected devices are improving not only the cost and resource efficiency of companies but are also increasing the safety and convenience of living. With the sheer number of device and sensor manufacturers,
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto
Watch
23
GitHub Stars program
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
new challenges are surfacing
for the manufacturers, platforms, and integrators.
The main problem is how to ensure connected devices can
seamlessly communicate
with cloud platforms, regardless of the
different manufacturers, technologies, and systems
. In the past, developers have built IoT solutions that were specifically designed for a limited set of devices that had the same API. When changing the device type or switching device manufacturers the device integration required time-consuming refactoring to work with the new device.
Imagine you plan to integrate an IoT solution for asset tracking on a large crop farm. You not only want to keep track of the current location but also temperature and acceleration of the tractors, plows, and other agricultural devices.
Two questions surface when thinking about choosing the right IoT devices:
How can we avoid
tight coupling
between specific devices so it is easier to switch to a similar device without too much refactoring?
This is where the open source
Eclipse Vorto
steps in.
Introducing Eclipse Vorto
Source: Eclipse Vorto
Star
168
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
Security
Insights
More
Code
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto
Watch
23
Vorto Repository - Manages standardized IoT device descriptions
Toggle navigation
Vorto Repository
BETA
Explore
vorto/gettingstarted.md at master · eclipse/vorto · GitHub
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
The Eclipse Vorto project is built on four main components:
Vorto DSL:
The Vorto DSL is a readable and easily understood domain-specific language that was specifically designed to be usable even by non-developers. It is used to create the abstract models of different devices.
Metamodel:
The metamodel is used to define the relationship between the different entities like Information Models, Function Blocks, and Datatypes.
Code Generators:
Based on the DSL and metamodels, the code generators provide a sophisticated but simple way to create source code for a convenient integration of the defined IoT devices with an IoT solution platform.
Vorto Repository:
The repository is used to store, manage, and distribute the created Information Models and Function Blocks for re-use.
Eclipse Vorto is fully open source
and developed within the Eclipse IoT Working Group under the stewardship of Bosch.
Tim Grossmann
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Permalink
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
master
vorto
/
docs
/
tutorials
Star
168
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
Security
Insights
More
Code
Import
Manage
Plugins
HTTP API
What is Vorto?
Getting started
Account settings
Log Out
Login
© 2019 Eclipse Foundation and its contributors.
Made available under the Eclipse Public License v2.0
Repository version: 1.0.1-SNAPSHOT, Revision: 51bd024
Copyright Agent
Legal
Terms of Use
Privacy
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Sign up
eclipse
/
vorto
Watch
23
Star
168
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
As a German computer science student, I have taken on assignments in 3 different departments at Bosch over the last one and a half years. I’m particularly interested in Open Source and EduTech technologies. I believe that the IoT and automation have a huge potential to both change and improve the way people live, work, and enjoy life. A passionate learner and developer, I’m always keen to learn new skills and tooling. In addition to my regular work, I have built and now maintain the world’s largest free open-source automation bot for Instagram. In my free time, I enjoy climbing outings with friends and travel in foreign countries.
Eclipse Vorto in practice
Let’s look at a more specific example to understand this abstraction better. Imagine an agriculture business that wants to keep track of the vehicles and assets used to collect the wheat crops. On larger farms with several harvesters, tractors, and other assets, we want to know the amount of time each vehicle was used and its location history.
When combining this kind of information with temperature and humidity values, we can enable a smart maintenance plan for all the vehicles and assets. The location of each vehicle and asset also provides us with anti-theft capabilities.
Source: Bosch.IO
In order to create a digital model of this specific device, we need to have some basic building blocks which will be used to assemble the TRACI Information Model.
One of the most important components of the tracking device is the battery. To be able to monitor the battery state of each device we can describe the state in what is called, a Function Block.
A Function Block is a generic model that can be reused later on in other device Information Models.
We can define one like this:
Here we describe a
Function Block
that abstractly describes some entity that contains a mandatory numerical value between 0 and 100.
Since our status is a percentage value, we can further abstract this to, again, make the distinct components reusable. Therefore, we will create what is called a
Datatype
. Here we can define an entity (
Percentage
/
create_webapp_dashboard.md
Go to file
Go to file
T
Go to line
L
Copy path
Cannot retrieve contributors at this time
106 lines (72 sloc)
4.78 KB
Raw
Blame
Generate a Node.js Dashboard that reads device data from Bosch IoT Suite and visualizes it in Vorto UI Widgets.
This tutorial teaches you how to use the Vorto Dashboard and quickly display the data of the integrated things. we will use our
RaspberryPi Information Model
that is already released and available for you to use. Once set up, the dashboard displays the latest state of your things in a visually appealing manner.
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Permalink
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
master
vorto
/
docs
/
vorto/release-notes.md at master · eclipse/vorto · GitHub
Security
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
0
Wiki
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Permalink
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
in this case) that has the same restrictions of being a numerical value between 0 and 100.
Once we created this Datatype, it can be imported and used inside our
Battery Function Block
and replaces the concrete implementation.
We can repeat this process for all the sensors integrated into our
TRACI
device like the
temperature sensor
,
GPS
,
acceleration
, and
connectivity modules
. All those Function Blocks can then be assembled in a
Vorto Information Model
document.querySelector('html').classList.remove('no-js')
Prerequisites
NodeJS
and
NPM
installed
Created a
Bosch ID User Account
Created a Thing from an Information Model (refer to
Creating a thing
)
Steps
Download and install the Vorto Dashboard
Create a
config.json
file with the Client ID, Client secret, scope from your OAuth2 Client
Create more Things
Download and install the Vorto Dashboard
tutorials
/
describe_device-in-5min.md
Go to file
Go to file
T
Go to line
L
Copy path
Cannot retrieve contributors at this time
72 lines (46 sloc)
2.67 KB
Raw
Blame
Describing a device with Vorto in 5 minutes
This tutorial explains how to describe a device with Vorto in just a few minutes. The device we are going to create will have the following capabilities:
Measuring the Outdoor temperature
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Security
GitHub Stars program
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
Sign up
development
vorto
/
docs
/
community.md
Go to file
Go to file
T
Go to line
L
Copy path
Cannot retrieve contributors at this time
72 lines (48 sloc)
3.43 KB
Raw
GitHub - eclipse/vorto: Vorto Project
which can then be used as the starting point for the code generators to produce device integration code stubs for you.
Alright, so what do we do all this for?
Let’s say we now want to use devices from other manufacturers with similar features to the TRACI device. We’ve already created an IoT solution that integrated the TRACI device and it would be a huge pain to refactor our system to work with devices from different manufacturers.
Since we already have our Function Blocks and the Datatypes defined, we can define a new
Information Model for our new device
that uses the same Function Blocks as the TRACI model.
NL-AT2VS from NimbeLink
.
We can see that even the connectivity modules are different in this model but are still using the abstract Connectivity Function Block. The abstraction allows us to
Who should use Eclipse Vorto?
Given the diversity of entities involved in manufacturing, integration, and development of IoT solutions, the entities that will benefit most from Eclipse Vorto are:
Device manufacturers
Eclipse Vorto can help device manufacturers enable interoperability with other devices in existing infrastructures. Flexibility is a huge advantage to customers when choosing devices that are to be integrated.
By using technology independent Information Models, device manufacturers avoid the overhead of generating ways of implementations for all kind of target platforms. This saves money and time by publishing Information Models that can be converted into concrete integrations using the code generators.
Harmonizing specific device payloads using Eclipse Vorto
var body = document.querySelector('body') body.className += ' js'
Subscribe
Find out first about new and important news
Subscribe
About
Authors
Career
Imprint
Legal Note
Cookies
Privacy Statement
Privacy Settings
About
1.
Download and install the Vorto Dashboard by using NPM. In your Terminal type
npm install -g vorto-dashboard
. This will install the dashboard as a global dependency which will allow you to call it as
vorto-dashboard
from the Terminal.
Create a
config.json
file with the Client ID, Client secret, scope from your OAuth2 Client
2.
While the dependencies are being installed, create the
config.json
file and insert client_id, secret and scope from your
Already created OAuth2 Client
.
The content of the file has to look like this:
Note:
Measuring the Indoor temperature
Reading the Geo Location of these measurements.
Let's get started.
Prerequisite
BoschID
Account or
GitHub
You are a collaborator/owner of an existing namespace
Steps to follow
Log in to
Vorto Repository
with your BoschID or Github Account
Select
Create model
Choose
Information Model
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto
Watch
23
Blame
Community
Publications
"Harmonizing specific device payloads using Eclipse Vorto"
Author:
Alexander Edelmann
(Bosch Software Innovations)
Tim Grossmann
Click to read
"Eclipse Vorto: The next step in IoT device integration"
Author:
Alexander Edelmann
(Bosch Software Innovations)
Tim Grossmann
Click to read
"Avoid tight-coupling of devices in IoT solutions"
Author:
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
The big advantage of using Eclipse Vorto is that further evolutions of the device protocol layer are decoupled from the device controller logic.
Source: Eclipse Vorto
IoT platforms
IoT platforms have to connect a vast variety of different IoT devices from a wide range of manufacturers and support all the different protocols and formats. By using Eclipse Vorto’s code generators, this effort can be reduced drastically through either partial or full source code generation.
In addition, the Vorto Repository acts as a runtime repository which allows platforms to retrieve device capabilities as JSON schema. These schemas can then be interpreted and validated in the digital twin or used to bootstrap connectors for the communication.
Even though this means increased initial development work, it will pay off over time considering the vast amount of devices and the growth of IoT.
Solution developers
When integrating connected devices and smart sensors into IoT solutions, developers need to cover a wide range of different device APIs which results in a huge coding overhead. Eclipse Vorto can reduce the amount of development work involved by providing code generators that provide generic code stubs that simplify the integration of devices.
Source: Eclipse Vorto
Glancing into the future of the IoT
By guaranteeing interoperability and harmonizing the interface for devices,
Eclipse Vorto
has the potential to change the way device manufacturers, IoT platform operators and application developers work with IoT devices.
It can reduce the development work for manufacturers and ease the device integration for platform providers and integrators while tackling many of the mentioned challenges of IoT development.
If you want to learn more about the project, make sure to check out the
GitHub repository
and give it a star.
Authors
Career
Imprint
Legal Note
Cookies
Privacy Statement
Privacy Settings
Share via email
Subscribe to blog alert
Developer
Internet of Things
Harmonizing specific device payloads using Eclipse Vorto
4 min
Alexander Edelmann
你好(Chinese for “Hello”), I am based in Singapore and have been working as a software engineer for Robert Bosch since 2006. I am passionate about IoT and believe in open standards that determine the successful interplay between devices across various IoT platforms. That is why I actively contribute to the Eclipse IoT Vorto project, which aims to provide cloud-based tools to uniformly describe IoT devices and integrate them into various IoT platforms based on open IoT standards. My IoT geeky side apart, I enjoy Asian cuisines that allow me to practice my chopsticks skills. You can also find me on the court hitting a few tennis balls with my friends.
In a technical environment without a global standard, IoT device manufacturers, integrators, and platform providers are facing difficulties keeping
up with the massive amounts of different payload formats
Make sure to use the
Things
scope in your
config.json
file!
Start the dashboard
3.
Once the dashboard is installed and you've created the
config.json
file, do a simple
vorto-dashboard <PATH_TO_CONFIG.JSON>
like e.g.
vorto-dashboard ./config.json
if it is in your current directory.
4.
If everything is running correctly, you will see something like this in your Terminal:
Open
localhost:8080
and confirm with
Next
Specify the model ID and confirm with
Next
Select the
namespace
from the dropdown
Input the
name
, e.g. MyWeatherStation
Input the
version
, e.g. 1.0.0
Choose
Vorto abstraction
, that provide you with a list of abstracted capabilities.
Select
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
Star
168
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
Security
Insights
More
Alexander Edelmann
(Bosch Software Innovations)
Click to read
"Eclipse Vorto: Interoperability for the Internet of Things"
Author: Jeroen Laverman, Jochen Scheib, Marco Wagner, Olaf Weinmann
Click to read
Presentations
Here you can find links to arbitrary material covering Eclipse Vorto which has been presented at events, conferences and meet-ups.
"Eclipse Vorto: A Smart Approach to Connecting Industrial Products" (OMA Seminar October 2016)
Speaker :
Alexander Edelmann
(Bosch Software Innovations)
Slides
"Eclipse Vorto: Device Payload Mapping" (Singapore Meetup 2018)
Security
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
You can also
give it a try
and use the
sophisticated tutorials
for device creation, integration, and visualization provided in the
Vorto Repository
.
More about Eclipse Vorto
The Bosch IoT Suite voted "best in class" in IoT platforms based on open source.
Read the report
Putting Eclipse Vorto into practice: How to avoid tight coupling of devices in IoT solutions.
Avoid tight coupling of devices
Get the whole picture: Check out Eclipse Vorto's Github page.
Eclipse Vorto on Github
Learn more about Eclipse Vorto.
Visit the official website
Check out device information models in the Vorto Repository.
, APIs, and proprietary protocols.
The open source project Eclipse Vorto addresses this problem by providing cloud-based editors to abstract vendor-specific device payloads as re-usable Vorto Function Blocks. These are then aggregated to describe a whole device in the form of a Vorto Information Model. Information Models and Function Blocks are written in
vortolang
,
a simple grammar to
define interfaces between a physical device and its digital twin counterpart
.
IoT solutions communicate with physical devices only via these abstract Function Blocks and their co-related data schema. In this way, IoT solutions become de-coupled from the plethora of different device data formats, APIs, and encodings. But how to convert the device data to these abstract Function Block interfaces? Simple: with so-called Vorto Mapping Specifications, which contain all the necessary instructions in order to harmonize device-specific payloads.
Payload normalization in general
Normalization of data can be handled on different system nodes, depending on the requirements of the IoT use case. This separation allows entities to keep full control over where they transform their proprietary into normalized data.
Normalization
on a device node
In this scenario, the IoT device is a smart device, providing added services utilizing the onboard sensors. An example is a
this URL in your browser.
5.
You will now be able to see your things inside of the Vorto Dashboard. If your device isn't integrated and sending data already, check out these tutorials on how to start sending device data to the cloud.
Not displaying any data?
Reset the Bridge (Connection of the Asset Communication Package)
Switch back to the tutorial about
integrating a device
and double check that data is being sent.
If you see the sensor data being sent as shown in the
Publish Payload:...
but you still can't see any changes in the Dashboard or SwaggerUI API when retrieving the current state of the Thing, the connection between Hub and Things might have corrupted at some point.
This is simple to solve. This so called "Bridge" is created by default one subscribing to the Asset Communication.
Head over to your
Subscriptions page
and click on the
Go to Dashboard
button of your Asset Communication Subscription.
Temperature
from the drop-down list, specify the property name
indoorTemperature
and confirm with
Add
Select
Temperature
from the drop-down list, specify the property name
outdoorTemperature
and confirm with
Add
Select
Location
from the drop-down list, specify the property name
location
and confirm with
Add
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto
Watch
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Permalink
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
master
vorto
/
docs
Speaker :
Alexander Edelmann
(Bosch Software Innovations)
Slides
"Eclipse Vorto: Rapid Prototyping" (Eclipse Virtual IoT Meetup, July 2017)
Speaker :
Alexander Edelmann
(Bosch Software Innovations)
Video
"Make IoT Childs Play" (Eclipse Conference, Ludwigsburg, Oct 2015)
Speaker:
Alexander Edelmann
(Bosch Software Innovations), Luca Daci (Eurotech, Eclipse Kura)
Slides
Mailing List
A great way to stay up to date with Vorto activity is to subscribe to the Mailing list provided by Eclipse. Sign up for the mailing list
here
2660 fix docker image by kolotu · Pull Request #2663 · eclipse/vorto · GitHub
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
Vorto Repository
Take a look at these Eclipse Vorto tutorials to get started.
Eclipse Vorto tutorials
Recommended for you
Developer
Eclipse Ditto 1.0: A framework for digital twin builders
We are thrilled to introduce Eclipse Ditto 1.0.
Thomas Jäckle
4 min
Bosch IoT Suite
If Bosch can do it, you can do it too
Our journey toward becoming an active open source contributor.
5 min
©Bosch.IO
Developer
Simplifying IoT development with Eclipse IoT
Introducing our pre-integrated Eclipse IoT package.
Bosch smart oven
that provides built-in analytics on normalized data; data that could be aggregated in a cloud data lake.
Normalization
on a gateway node
Normalization
on an IoT platform node
Very much like in a gateway node, a cloud IoT platform normalizes incoming telemetry device data from various protocol adapters (MQTT, CoAP, etc) in order to provide value added services to northbound IoT solutions. Examples are device management or data analytics features.
Normalization
on an application node
An application would normalize data in order to stay agnostic of supported devices and stay more focused on the application-specific business features, rather than implementing technical, device-specific data decoders.
Sometimes a device quite simply is not capable of carrying out payload mapping. But there are also other factors that can play a role. Think about the limitations that come with sending data to the back-end via a mobile connection. Often, you want to keep the amount of data you are transmitting to a minimum. The problem is that after mapping, the device payload is more bloated due to the normalization and conversion from binary data and similar information. To save on bandwidth, it can therefore make more sense to perform payload mapping on a different system node; on the platform for instance.
When payload mapping is not performed on the device, a different entity is needed that can execute this step. You have to use a mapping engine, which enables payloads to be transformed on either an intermediary – such as a gateway – the platform, or directly in the application.
Source: Eclipse Vorto
Normalization of data can be handled either on a device node (1), on a gateway node (2), on an IoT platform node (3) or on an application node (4).
Tim Grossmann
On the newly opened tab, click on the
Connection
tab that will display all the connections you've set up. By default there will be a
Telemetry Bosch IoT Hub
connection.
Note
that if there is a problem, you will see a triangle with an exclamation mark inside that indicates some failed connection.
Click on the connection and hit the
Close connection
button. Wait until the connection is closed.
Once the connection was closed, re-open it by clicking the
Open connection
button.
After the connection has been re-established,
restart your sensor data sending script
and observe.
What's next?
Verify your selected properties and click
Create
. This creates the model and opens its details page:
Your model should look like this:
Congrats
! You have just created an Information Model for a device. Check out the
What's next
section below that explains how you can further use the model to integrate the device with the Bosch IoT Suite.
What's next?
Generate Python Code
that integrates the device with the Bosch IoT Suite.
Visualize device data
in a Node.js web application.
Generate an OpenAPI Spec for your device
Describe a more complex device with Vorto
In case you're having difficulties or facing any issues, feel free to
create a new question on StackOverflow
and we'll answer it as soon as possible!
23
Star
168
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
Security
Insights
More
Code
/
gettingstarted.md
Go to file
Go to file
T
Go to line
L
Copy path
aedelmann
Added tutorial for AWS Kinesis and Vorto integration
Latest commit
749e7e3
Dec 30, 2019
History
3
contributors
Users who have contributed to this file
.
Discussion Forum
A general discussion forum can be found
here
.
Issue Tracker
Issues and bugs related to Vorto are tracked with the Github Issue tracking system. If you find any issues, please report them
here
.
Vorto Wiki
Access Vorto wiki
here
.
Vorto on twitter
Follow our latest tweets
here
.
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Security
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto
Watch
23
Star
4 min
Developer
Eclipse Hono 1.0.0 released: An open IoT connectivity platform
A closer look at some of the key features.
Kai Hudalla
3 min
Developer
Harmonizing specific device payloads using Eclipse Vorto
An approach to keeping up with different payload formats.
4 min
Developer
BCX19: IoT hackathon for the factory of the future
At BCX19, 700 developers competed in a variety of challenges: from Mobility & Manufacturing to Buildings, Utility & Social Impact.
Andrej Dering
3 min
©Bosch.IO
As a German computer science student, I have taken on assignments in 3 different departments at Bosch over the last one and a half years. I’m particularly interested in Open Source and EduTech technologies. I believe that the IoT and automation have a huge potential to both change and improve the way people live, work, and enjoy life. A passionate learner and developer, I’m always keen to learn new skills and tooling. In addition to my regular work, I have built and now maintain the world’s largest free open-source automation bot for Instagram. In my free time, I enjoy climbing outings with friends and travel in foreign countries.
How Eclipse Vorto addresses normalization
Eclipse Vorto
offers a runtime library that can be configured via a Vorto Information Model for the device. It includes a mapping specification that enriches the Information Model with device-specific payload conversion rules. In practice, the runtime library takes the device payload as an input and then outputs the converted and normalized payload, by applying the mapping specification.
The mapping specification is managed and version controlled in the
Vorto Repository
, alongside the Information Model for the device. This makes it possible to re-use the mapping specification for other use cases, regardless of whether the normalization takes place on the device, the gateway, the platform, or the application node. The mapping library is currently supported on the Java and Node.js platform. Read more about the
Vorto Payload Mapping library
.
Example: Normalizing industry data using Eclipse Vorto
In order to clarify the concepts described earlier, we will look at a specific example of how the Vorto Information Model and the mappings are used.
In our case, we send CSV data from a permanent-magnet synchronous motor (PMSM) to an
Eclipse Hono
vorto/Readme.md at master · eclipse/vorto · GitHub
Extend the Dashboard by
creating custom UI widgets
Generate an OpenAPI Spec for your device
Integrate your device with the Bosch IoT Suite using:
Python
Arduino
Java
In case you're having difficulties or facing any issues, feel free to
create a new question on StackOverflow
and we'll answer it as soon as possible!
Please make sure to use
eclipse-vorto
as one of the tags.
Go
© 2020 GitHub, Inc.
Terms
Privacy
Please make sure to use
eclipseiot
as one of the tags.
Go
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Permalink
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
master
vorto
/
docs
/
107 lines (69 sloc)
5.75 KB
Raw
Blame
Getting Started
When working in an
IoT environment
we have to ensure connected devices can
seamlessly communicate with cloud platforms
, regardless of the different manufacturer, technologies, and systems.
In the past
, developers have built IoT solutions that were
specifically designed for a limited set of devices
that had the same API. When changing the device type or switching device manufacturers the device integration required time-consuming refactoring to work with the new device.
So the question is, how can we find out
and how
Contributing
An overview of the contribution process is
here
. The key points are:
Ensure you have signed the Eclipse Foundation Contributor License Agreement (CLA)
Fork the Vorto Repository on
Github
Fix the issue and add suitable tests
Create a pull request for your contribution
Go
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
168
Fork
104
Vorto Project
www.eclipse.org/vorto
View license
168
stars
104
forks
Star
Watch
Code
Issues
149
Pull requests
6
vorto/create_mapping_pipeline.md at development · eclipse/vorto · GitHub
Internet of Things
How to identify the right IoT platform? Ask the users!
The IoT platform market is getting more mature and organizations looking for the right solution can draw on user experiences.
Arnold Vogt
5 min
©Unsplash/ Glenn Carstens-Peters
Developer
X.509 based device authentication in Eclipse Hono
How Eclipse Hono allows to use a private/public key pair.
Kai Hudalla
3 min
Bosch IoT Suite
Cloud and edge computing for IoT: a short history
To understand today's vision of IoT and the complementary characters of cloud and edge computing, we are going back in time.
Ismet Aktaş
3 min
MQTT connector.
The Vorto Payload normalization middleware consumes the data from Eclipse Hono, pipes it through the Vorto Payload Mapping Engine, and exposes the normalized device data as an AMQP topic. Any AMQP 1.0 subscriber can now retrieve harmonized device data and process it regardless of the connected device using a digital twin solution such as Bosch IoT Things.
In our example, we use
Eclipse Ditto
, an open source digital twin service, that receives the normalized Eclipse Vorto data and stores it. The
Vorto Dashboard
then requests the data from the Eclipse Ditto digital twin API and renders the data nicely using pre-defined Eclipse Vorto compliant UI widgets.
Source: Eclipse Vorto
The full conceptual setup of our device payload mapping pipeline.
If you want to see how the whole pipeline of mapping different device payloads with the Vorto Mapping Engine works, feel free to head over to the
Vorto Dashboard Demo
.
This article only gives a brief introduction to Payload Mappings. If you want to go through the whole process of setting up this pipeline for your own use cases, you can
use our detailed tutorial
to do so. It will explain how to map your custom device payloads step by step.
More on Eclipse Vorto
For more information on Eclipse Vorto, read this introduction.
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Security
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
release-notes.md
Go to file
Go to file
T
Go to line
L
Copy path
Cannot retrieve contributors at this time
442 lines (260 sloc)
18.6 KB
can we avoid tight coupling
between a specific device so it is easier to switch to a similar device without too much refactoring?
Vortolang 1.0 Specification
Concepts
Vorto provides an abstraction layer called the
Vorto Information Model
, and a
domain specific language
The Vorto project is built on
four main components
:
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
Actions
Projects
0
Wiki
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
©Bosch.IO
© Bosch.IO GmbH, all rights reserved
We've detected that JavaScript is disabled in your browser. Would you like to proceed to legacy Twitter?
Yes
Something went wrong, but don’t fret — let’s give it another shot.
document.cookie = decodeURIComponent("gt=1320446841360666625; Max-Age=10800; Domain=.twitter.com; Path=/; Secure");
Intro to Eclipse Vorto
Check out this tutorial to get started with data normalization using Eclipse Vorto.
Data normalization tutorial
Take a closer look at the Device Information Models in the Vorto Repository.
Vorto Repository
Learn more about Eclipse Vorto on GitHub.
Eclipse Vorto on GitHub
Recommended for you
Developer
Eclipse Ditto 1.0: A framework for digital twin builders
We are thrilled to introduce Eclipse Ditto 1.0.
Thomas Jäckle
4 min
Bosch IoT Suite
If Bosch can do it, you can do it too
Our journey toward becoming an active open source contributor.
5 min
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Raw
Blame
Release Notes
0.12.6
Improvements
Payload Mapping Editor lacks performance for bigger models
#2193
0.12.5
Bugfixes
Missing models for attributes in Repository OpenAPI/Swagger
#2116
Web Editor creates duplicate fields
#2058
Array types, defined in DSL, are not properly serialized to JSON
#2057
Improvements
Proper error handling and reporting
Vorto Language (DSL)
: The Vorto language is a readable and easily understood domain-specific language that was specifically designed to be usable even by non-developers. It is used to create the abstract models of different devices.
Read more
Metamodel
: The metamodel is used to define the relationship between the different entities like Information Models, Function Blocks, and Datatypes.
Code Generators
: Based on the DSL and metamodels, the
code generators
provide a sophisticated but simple way to create source code for a convenient integration of the defined IoT devices with an IoT solution platform.
Vorto Repository
: The repository is used to store, manage, and distribute the created Information Models and Function Blocks for re-use.
For a more in depth introduction into the concepts, feel free to
read the blog post about Eclipse Vorto
.
Learning Path
Understanding the Vorto Language
Create and Manage your namespaces
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
development
8
branches
31
tags
Go to file
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more
vorto-examples/locatePage.png at master · eclipse/vorto-examples · GitHub
Security
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
©Bosch.IO
Developer
Simplifying IoT development with Eclipse IoT
Introducing our pre-integrated Eclipse IoT package.
4 min
Developer
Eclipse Hono 1.0.0 released: An open IoT connectivity platform
A closer look at some of the key features.
Kai Hudalla
3 min
Developer
BCX19: IoT hackathon for the factory of the future
At BCX19, 700 developers competed in a variety of challenges: from Mobility & Manufacturing to Buildings, Utility & Social Impact.
Andrej Dering
3 min
©Bosch.IO
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Save preferences
#2062
0.12.4
Bugfixes
Code Generator performance due to unneeded mapping resolvings
#2049
0.12.3
Bugfixes
#2029
Fixes bug in Mapping Editor UI for displaying rules for nested entities
#2036
0.12.2
Bugfixes
Fixes security vulnerability in an embedded tomcat core
#2026
Fixes bug, that keyword 'multiple' was ignored for generators
to get ready for describing devices.
Describe your first device
in 5 minutes using the Vorto Web Editor
You can also describe new devices using the
Vorto Eclipse IDE
Provision your device
to
create a new digital twin
inside Bosch IoT Things -
(9min video)
Integrate your device
using
Python
/
Java
/
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
/
vorto
Watch
23
Star
168
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
Security
.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens,
download GitHub Desktop
and try again.
Go back
Launching GitHub Desktop
If nothing happens,
download GitHub Desktop
and try again.
Go back
Launching Xcode
If nothing happens,
download Xcode
and try again.
Go back
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
Developer
Eclipse Vorto: The next step in IoT device integration
What the open source project is all about.
6 min
Internet of Things
How to identify the right IoT platform? Ask the users!
The IoT platform market is getting more mature and organizations looking for the right solution can draw on user experiences.
Arnold Vogt
5 min
©Unsplash/ Glenn Carstens-Peters
Developer
X.509 based device authentication in Eclipse Hono
How Eclipse Hono allows to use a private/public key pair.
Kai Hudalla
3 min
Bosch IoT Suite
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
#2004
Fixes bug, that OpenAPI was missing a few Bosch IoT Things resources
#1964
Fixes bug that ProvisioningScript Generator returned a zip archive instead of single script file
#2010
0.12.1
Bugfixes
Import very slow for zip archives containing 50+ models
#1997
Creator and ModifiedBy user ID not anonymized correctly, when user account is deleted
#1976
Inheritance not resolved completely during Code Generation
#1954
0.12
This version primarily focuses on stability, performance as well as UX.
New Features
Arduino
-
(10min video)
Visualize your sensor data
using the
Vorto Dashboard
-
(7min video)
You can also use the
Bosch IoT Things SwaggerUI
to validate your data if you're using the Bosch IoT Suite.
If you want to see the full process of creating, integrating and visualizing sensor data for a new device, feel free to watch the webcast
IoT Demo Day Part I: Vorto for Asset Communication Package
. (33min)
Guides
Vorto DSL
Vortolang 1.0
Insights
More
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
Have a question about this project?
Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
vorto-examples/deviceDashboard.png at master · eclipse/vorto-examples · GitHub
Launching Visual Studio
If nothing happens,
download the GitHub extension for Visual Studio
and try again.
Go back
Latest commit
kolotu
Merge pull request
#2663
from bosch-io/2660_fix_docker_image
…
285b7b7
Oct 23, 2020
Merge pull request
#2663
from bosch-io/2660_fix_docker_image
GitHub - eclipse/vorto-examples: Contains example code leveraging Vorto information models
vorto/vortolang-1.0.md at master · eclipse/vorto · GitHub
Security
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto
Watch
23
Star
Cloud and edge computing for IoT: a short history
To understand today's vision of IoT and the complementary characters of cloud and edge computing, we are going back in time.
Ismet Aktaş
3 min
©Bosch.IO
© Bosch.IO GmbH, all rights reserved
/
vorto
Watch
23
Star
168
Fork
104
Code
Issues
Vorto Repository Features
Content - Assist / Auto-completion in Web Editors when writing vortolang models
Backup & Restore of all models per namespace
REST API Endpoint to allow the import of Vorto Models (or 3rd party models) in the Repository
Device Integration Features
Support for nested entities inside Function Blocks in the Payload Mapping Engine (Java only). Please take note of the compatibility section.
Supported Payload Mapping Target Platform format: AWS IoT Shadow and Eclipse Ditto Protocol
Support of operation return types in OpenAPI Generator
Compatibility
With this release, the Vorto Payload Mapping Engine now supports the mapping to nested entities, declared in Function Blocks. This change required us to completely modify the Mapping Specification JSON runtime model, which is required by the Mapping Engine at configuration time. The old mapping specification runtime-model is no longer supported. Therefore, make sure to download the new Mapping Specification from the Vorto Repository and deploy it in your system, if you upgrade to this new version! This change
does not break
Describe a TI SensorTag
Describe a device in 5 minutes
Reference Vorto Models files from your custom DSL
with
Eclipse Xtext
Vorto Repository
Create and Manage your Namespaces
Manage Collaborators
Importing your models
Releasing your models
Creating a new version of your model
Publishing Models
Release States
Official Generators/Plugins
Bosch IoT Suite Generator
Pick a username
Email Address
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our
terms of service
and
privacy statement
. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
2660 fix docker image
#2663
Merged
kolotu
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
285b7b7
Git stats
2,756
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
build-scripts
core-bundles
device-adapter
docker
docs
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
GitHub Stars program
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
168
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
Security
Insights
More
Code
149
Pull requests
6
Actions
Projects
0
Wiki
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
any previous design time mapping models!
0.11.3
Bugfixes
Arduino/C Generator generates invalid code for getters and setters in pojos
#1882
0.11.2
Bugfixes
Repository session error when saving or importing models
#1876
0.11.1
Bugfixes
OpenAPI Generator, creating invalid spec for FB with only operations
Arduino Generator creating invalid code for properties with name "value"
CORS problem when using the Vorto Repository Swagger API documentation
Repository UI Layout for browsers with lower resolution
Fixed security vulnerabilities during file upload
Eclipse Ditto
Eclipse Hono
OpenAPI
Operators Guide
Getting started with running the Repository with docker
Developer Guide
Integrate Vorto with AWS Kinesis for anomaly detection
Developing Vorto Generator Plugins
for a Code Generation toolchain
Parse Vorto DSL files with Java
Map arbitrary device payload to Vorto compliant data structures
Mapping Engine for Java
Decouple IoT solution from connected sensors
In case you're having difficulties or facing any issues, feel free to
create a new question on StackOverflow
and we'll answer it as soon as possible!
Please make sure to use
merged 4 commits into
eclipse
:
development
from
bosch-io
:
2660_fix_docker_image
Oct 23, 2020
Merged
2660 fix docker image
#2663
kolotu
merged 4 commits into
eclipse
:
development
from
Security
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
generators
jacoco-coverage
mapping-engine-nodejs
mapping-engine
model-conversion
model-refactoring
model-runtime
model
plugin-sdk
repository
utilities
.gitignore
.remark_ignore
.travis.yml
CHANGELOG.md
Mobile
Customer stories
→
Security
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
→
Security
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto-examples
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Permalink
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
development
vorto
/
docs
/
tutorials
Insights
Permalink
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
master
vorto
/
mapping-engine
/
Readme.md
Go to file
Go to file
T
Go to line
L
Minor Improvements
Generators generating a single file return file instead of ZIP archive
UX improvements in all modal dialogs of repository
0.11
With the release of
Eclipse Vorto 0.11
, we are introducing
essential improvements
that guarantee you full control over your models and their release process.
Fine-grained
Role Management
allows your team to restrict access to certain features like the creation of models, releasing it to the public, and deprecating them.
Models, by default, are created in
private
namespaces
for which the access can be controlled in detail using the newly introduced roles.
In addition to the new, state-of-the-art, Eclipse Vorto Repository, we released the
eclipse-vorto
as one of the tags.
Go
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
bosch-io
:
2660_fix_docker_image
Oct 23, 2020
Conversation
1
Commits
4
Checks
1
Files changed
Conversation
Copy link
Quote reply
Member
kolotu
commented
Oct 23, 2020
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
CONTRIBUTING
Jenkinsfile
LICENSE
Readme.md
docker-compose-build.yml
docker-compose.yml
eclipse-java-vorto-style.xml
google_checks.xml
license-header.txt
pom.xml
sonar-project.properties
View code
Readme.md
Eclipse Vorto
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
↵
Watch
9
Star
15
Fork
8
Code
Issues
5
Pull requests
1
Actions
Projects
0
Security
Insights
More
/
create_mapping_pipeline.md
Go to file
Go to file
T
Go to line
L
Copy path
Ineskouka
added change
…
Latest commit
5d4aab4
Jan 23, 2020
History
5
contributors
Copy path
Cannot retrieve contributors at this time
255 lines (157 sloc)
8.55 KB
Raw
Blame
Getting started with Vorto Mappings
Vorto abstracts device data
using Function Blocks, thus helping to reduce tight-coupling of devices in IoT solutions.
But how does Vorto help to map the actual device data to these abstract Function Blocks?
Payloads sent in different formats from the devices can be piped through the
Vorto Payload Mapping Engine
which will use the
Mapping Specification
and the
provided Converters
official
1.0 version of the Vortolang
, the DSL powering the Vorto Ecosystem.
Due to these substantial changes, we've decided that automatically migrating all existing models to the new system is the improper approach and therefore provided
straight-forward exporters and importers
that will allow you to effortlessly migrate your
models of choice
from the old system.
Enhancements in all areas are complemented with
new and extensive
documentation
for not only new features and improvements but also convenient plugins that have easily been missed in the past.
All in all,
this release addresses, tackles, and simplifies
many key pain points for people working with and in IoT and delivers some of the most important improvements to Eclipse Vorto ever.
Follow our comprehensive guide on how to
migrate your models
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
No description provided.
kolotu
added
4
commits
Oct 23, 2020
#2660
. Fix docker images
…
Loading status checks…
8aaceb6
Re-added docker-compose.yml
…
Loading status checks…
299c883
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto-examples
Watch
9
Star
15
provides a language for describing models and interfaces for IoT Digital Twins. Digital twins are models of entities in the physical world such as a (multi) sensor device, smart power plant, and other entities that participate in IoT solutions. Modeling enables IoT solutions and IoT platforms to provision, use, and configure IoT devices and logical entities from multiple sources in a single solution. Using the vortolang and describing the entities's capabilities, IoT platforms and IoT solutions can leverage the semantics of these IoT entities.
Vortolang 1.0 Specification
Getting Started with Vorto
Read here
Vorto Examples
Vorto comes with tons of examples, that demonstrate you the use of Vorto in IoT Solution Development.
One of these examples, is the Vorto Dashboard, that visualizes sensor data in Vorto Function Block compliant UI widgets:
Click here for demo
Check out more cool
Vorto Examples
.
Developer Guide
Plugin SDK
that lets you extend Vorto with different plugin types
Contact us
You want to chat with us?
You found a bug in Vorto? Open a
Education
→
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Permalink
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
master
vorto-examples
/
vorto-dashboard
/
Users who have contributed to this file
320 lines (217 sloc)
17.8 KB
Raw
Blame
Decouple IoT solutions from connected device data
In a technical environment without a global standard, IoT device manufacturers, integrators, and platform providers are facing difficulties keeping up with the massive amounts of different payload formats, APIs, and proprietary protocols.
The open source project Eclipse Vorto addresses this problem by providing cloud-based editors to abstract vendor-specific device payloads as re-usable Vorto Function Blocks. These are then aggregated to describe a whole device in the form of a Vorto Information Model. Information Models and Function Blocks are written in
vortolang
, a simple grammar to define interfaces between a physical device and its digital twin counterpart. IoT solutions communicate with physical devices only via these abstract Function Blocks and their co-related data schema. In this way, IoT solutions become de-coupled from the plethora of different device data formats, APIs, and encodings. But how to convert the device data to these abstract Function Block interfaces? Simple: with so-called Vorto Mapping Specifications, which contain all the necessary instructions in order to harmonize device-specific payloads.
In this tutorial, we are going to work ourselves throught the process of connecting various geolocation sensors to the cloud and consume their data in a simple cloud application. One of the challenges faced in IoT is that vendors use their own payload formats. JSON and CSV are two examples of payload formats. Vorto Mapping Specifications together with Normalisation Middleware is a mechanism we will use to normalise the various payload formats. Once this has been done, our application will be able to consume data originating from any geolocation sensor vendor. To achieve this, a Vorto Mapping specification must first be written for each expected payload format.
Steps to take
Create a small IoT application that receives geolocation data and prints it out in the console
Test the app by sending data via MQTT in different payload representations
Applying Vorto, to normalize the geolocation data. This would reduce the complexity in our app and only deal with a single geolocation representation, regardless of the connected sensors.
Pre-requisites
. The advantage of using this approach is that target platforms do not have to care about the different payloads of the devices but only need to handle the normalized Vorto compliant payloads.
This
normalized format
can then be used as a harmonized starting point for more specific, target platform compliant formats. In addition to that, custom Converters can be easily plugged into the
Payload Mapping Engine
in order to allow for more complex conversion of proprietary payloads.
In this tutorial, we are going to walk you through the process of creating a Vorto mapping specification for an Information Model and execute it with the Vorto Payload Mapping Engine.
Prerequisite
To work through this tutorial, you will need:
BoschID
or
GitHub
account to log in to the Vorto Repository
You have described a device as a
Vorto Information Model
and it is managed in the Vorto Repository
to the new system.
New Features
Please refer to our
Getting started guide
for details.
Vorto Repository Features
Vortolang 1.0, the IoT language for Digital Twins
Multi - Tenancy, which lets users manage their own namespace(s) and collaborators via a self-service UI
Model visibility of Vorto Models to change models access from private to public
Log-in with Github and Bosch ID OAuth Provider
Many stabilization and performance fixes
Click here
and start using the new official Eclipse Vorto Repository.
Device Integration Features
Payload Mapping Engine (Java and node.js), that lets you convert arbitrary (device) data to normalized Vorto-compliant data structure, fast and reliably.
Bosch IoT Suite Generator add-on: Generates a script to provision devices in the Bosch IoT Suite from Vorto models
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
#2660
. Disable schema validation
…
Loading status checks…
8d776d0
Undo renaming
…
Loading status checks…
2a428c9
Copy link
Quote reply
Member
Author
kolotu
commented
Oct 23, 2020
This prevents the repository from failing to start. SuiteAuth login is not configurable, but it is arguable how configurable the Bosch ID option is in there anyway. Github authentication should work fine.
Fork
8
Code
Issues
5
Pull requests
1
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
GitHub issue
Find out more about the project on our
Vorto Homepage
You have a problem? Reach out to our developers through
StackOverflow
Follow us
follow us
@EclipseVorto
Channel
Releases
Features
Tutorials
Twitter
✔️
✔️
✔️
Email
↵
Sign in
Sign up
eclipse
/
vorto-examples
Watch
9
Star
15
Fork
8
Contains example code leveraging Vorto information models
EPL-2.0 License
15
stars
Watch
23
Star
168
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
Security
assets
/
locatePage.png
Go to file
Go to file
T
Go to line
L
Copy path
Cannot retrieve contributors at this time
479 KB
Download
Go
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
The Eclipse IoT stack offers a very nice device connectivity service, called
Eclipse Hono
, comprising many different protocol adapters. One of them is MQTT, exactly what we need in our solution to connect our sensors. To save us some time of setting up the service on our own, we use a free plan of an cloud operated Eclipse Hono service, provided by Bosch.
Here is a list of things that you need to work through this tutorial:
Bosch ID Account
Subscribe to Bosch IoT Hub
(Free plan) for MQTT connectivity based on Eclipse Hono
Amazon MQ
cloud service for AMQP messaging
Java 8 or higher
Maven
Docker Runtime
Mosquitto_pub
Client tool
Some IDE (e.g. Eclipse)
Step 1: Creating a simple IoT application for printing Geolocation data
In this step, we create a tiny IoT solution that receives the sensor data and simply prints the data out to the console. But how do we get the data from Eclipse Hono? It's easy. Hono provides an AMQP endpoint that makes it possible for applications to receive telemetry data. Hono does not make any assumption how the payload looks like and merely forwards the data "as is" to the AMQP endpoint. Our application receives the data and does something useful with it. Well, in this case just prints it out to the console.
To save us some time at this point, we have already created the application for you.
You are a collaborator/owner of a namespace
Step 1: Create Mapping Specification
A mapping adds platform specific information to an Information Model. Since the representation of data can vary from platform to platform.
To create a mapping go to your newly created model and press the
Create Mapping Spec.
Button
Now the web editor opens and allows you to add mapping expression for the Function Blocks you added. You can write XPath 2.0 like notation. Behind the scenes the engine uses
JXPath
Once you have written your xpath expressions, press Save.
Step 2: Test the Mapping Specification
On the right handside, select "JSON' as content type and paste the device raw data in the JSON editor. Test your mapping rule by clicking
Test Mapping
:
The test result will give you the mapped data for different IoT platforms.
The Vorto (canonical) format looks like:
The AWS IoT Shadow update command format looks like:
OpenAPI / Swagger Generator, which generates a device-specific REST - API specification for Digital Twin services, such as Bosch IoT Things.
JSON - Schema Generator, which creates JSON-Schema files from Vorto models
Developer SDK Features
Plugin SDK Version 2, to build and run serverless Vorto generator- and importer plugins. The SDK provides utilities and many
source code examples
Deprecation
Plugin SDK Version 1 is marked as deprecated in this release. However it is still supported to implement and run generator plugins based on Version 1.0. However we are recommending to migrate them to Plugin Version 2, as it is much easier and faster.
0.10.1
Bugfixes
Enum Datatypes are not properly returned in Java Repository Client
Eclipse Hono Generator for Arduino creates invalid json for referenced entities
Bosch IoT Suite Generator creates invalid Eclipse Ditto protocol payload
Measurement Unit in DSL not working
OMA/LwM2M to Vorto Models Resolver is broken
Minor Improvements
Repository Search UX
Bosch IoT Suite Generator for Web Dashboard and Device Provisioning Scripts
kolotu
requested a review from
mena-bosch
Oct 23, 2020
mena-bosch
approved these changes
Oct 23, 2020
View changes
Hide details
View details
kolotu
merged commit
285b7b7
into
eclipse
:
development
Security
Insights
Permalink
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
master
vorto-examples
/
vorto-dashboard
/
assets
/
deviceDashboard.png
Go to file
Go to file
T
✔️
✖️
✖️
We favor Twitter for feature and tutorial news, because the nature of twitter allows for shorter and faster news. Also such a flood of information via Email would be considered spam. If you have suggestions on how and what news we should provide let us know in the issues.
Contribute to the Project
When you create a Pull Request, make sure:
You have a valid CLA signed with Eclipse
All your commits are signed off (git commit -s)
Your commit message contains "Fixes #
<Github issue no>
Target to merge your fix is development branch
Your code fits the code style guidelines
Attribution
The code style guidlines are taken from
https://github.com/google/styleguide
.
About
Vorto Project
8
forks
Star
Watch
Code
Issues
5
Pull requests
1
Actions
Projects
0
Security
Insights
More
Code
Issues
Insights
More
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Permalink
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
master
vorto
eclipse/vorto - Gitter
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
Download
and then import it into your IDE
Open the
src/main/resources/application.yml
and configure the tenantId, username and password.
Where to find these values ? Login to
Bosch IoT Suite Portal
with your Bosch ID and click on
Credentials
.
Run the app with
mvn spring-boot:run
. You should not see any data coming in just yet. But we can change that quickly by sending some geolocation data to the MQTT endpoint.
Step 2: Sending geolocation data to Bosch IoT Hub using MQTT protocol
First let's register a device in the device registry under a specific device-id. Only then we can send data for that device-id to the Bosch IoT Hub.
Register devices
We can easily register our sample devices via the
The Eclipse Ditto update command format looks like:
Step 3: Download & Execute Mapping Specification
Download and save the Mapping Specification to start integrating it with the engine:
1.
Add Maven dependency
2.
Initialize the mapping engine with the downloaded specification
3.
Pass the arbitrary device payload to the engine to get it converted to Vorto compliant data
4.
Optionally validate the mapped data to check if it complies to the Vorto model
5.
Convert mapped data to Digital Twin IoT compliant data
Convert the normalized Vorto compliant data to a target IoT platform format.
Currently supported target IoT Platform formats
vorto-dashboard - npm
0.10
New Features
Vorto Repository Features
Model Permission Management, that allows users to grant 'READ' permissions of their models to other users.
Cloud-based Vorto DSL Editors to create Vorto Models directly in the Repository
Release & Review Workflows for Vorto Models
Model Attachments, that allows users to add/remove attachments for models, like additional documentation
Various UX Improvements
Many stabilization and performance fixes
Click here
to try out the Eclipse Vorto Repository with all its new features.
Device Integration Features
Payload Mapping Engine (Java-based) that executes Vorto Mapping Models in order to map device telemetry data to abstract Vorto Function Blocks.
Mapping Engine support for
Eclipse Ditto
protocol, to automatically convert Vorto compliant data to Eclipse Ditto data structures.
Payload Mapping Specification Editor UI, that allows device manufacturers to create mapping specifications for mapping arbitrary device payload to abstract, semantic Vorto Models
Oct 23, 2020
2 checks passed
2 checks passed
Travis CI - Pull Request
Build Passed
Details
eclipsefdn/eca
The author(s) of the pull request is covered by necessary legal agreements in order to proceed!
Details
kolotu
deleted the
bosch-io:2660_fix_docker_image
branch
Oct 23, 2020
Sign up for free
to join this conversation on GitHub
. Already have an account?
Go to line
L
Copy path
Cannot retrieve contributors at this time
237 KB
Download
Go
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
www.eclipse.org/vorto
Topics
eclipse
toolset
iot
dsl
internet-of-things
eclipseiot
Resources
Readme
License
View license
Releases
31
tags
Packages
0
Pull requests
Actions
Projects
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
master
4
branches
11
tags
Go to file
Code
Clone
/
docs
/
vortolang-1.0.md
Go to file
Go to file
T
Go to line
L
Copy path
aedelmann
Fixed minor bug that images not displayed in search page
Latest commit
60a0d70
Jul 15, 2019
Where communities thrive
Join over
1.5M+ people
Join over
100K+ communities
Free
without limits
Create
your own community
Explore more communities
eclipse/vorto
Vorto Project
People
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Device Registry Swagger UI
In order to use the API, you need to login via username and password. Therefore click on
Authorize
, and use the
Bosch IoT Suite Portal
again, to find the
username
and
password
values at the bottom of the
Credentials
page.
Register 2 devices
4711
and
4712
AWS IoT Shadow Service
Eclipse Ditto Service
The following example shows how to convert the normalized data to
AWS IoT Shadow Update Command
:
The following example shows how to convert the normalized data to
Eclipse Ditto Update Command
:
Advanced Usage
As a native Java Function
As a Javascript Function
Java Converter Functions
npm
is now a part of
GitHub
❤
Neverending Pile of Messages
Products
Pro
Teams
Pricing
Documentation
Community
npm
Search
Sign Up
Sign In
Miss any of our Open RFC calls?
Watch the recordings here!
Code Generators supporting Arduino, Python and Java - based devices, generating code to send telemetry data to
Eclipse Hono
and
Eclipse Ditto
based platforms via
Eclipse Paho MQTT
Developer SDK Features
Generator Plugin SDK, which allows to build and deploy Vorto Generator-plugins as standalone (micro)services and hook them into the Vorto repository.
Deprecation
The Eclipse Vorto IoT Toolset Plugins are no longer supported. Instead you can simply use the Cloud-based Editors in the Vorto Repository.
Changes in the Java Repository Client: The client has a new simplified
org.eclipse.vorto.repository.client.IRepositoryClient
in order to read Vorto Models.
0.10.0 milestone 11
Fixes and Enhancements
Model Confidentiality & Permission Enhancement: By default, all models are private and only visible & modifiable by the respective model owner. However, model owners can grant READ permissions to other users, so that they can review give feedback.
Simplified Java Repository Client, deprecating the old Java Client.
Sign in to comment
Reviewers
mena-bosch
Assignees
No one assigned
Labels
None yet
Projects
None yet
Milestone
No milestone
Linked issues
Successfully merging this pull request may close these issues.
None yet
2 participants
Add this suggestion to a batch that can be applied as a single commit.
This suggestion is invalid because no changes were made to the code.
Suggestions cannot be applied while the pull request is closed.
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
No packages published
Contributors
35
+ 24 contributors
Languages
Java
82.5%
Xtend
15.1%
HTML
0.7%
JavaScript
0.5%
Python
0.4%
C++
0.4%
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more
.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens,
download GitHub Desktop
and try again.
Go back
Launching GitHub Desktop
If nothing happens,
download GitHub Desktop
and try again.
Go back
History
1
contributor
Users who have contributed to this file
885 lines (742 sloc)
21.1 KB
Raw
Blame
Vorto Language for Digital Twins
Version 1.0
Contents
Information Model
Function Block
Properties
Event
Operation
Primitive Types
Enum
Repo info
Activity
Menahem Julien Raccah Lisei
@mena-bosch
Announcement: a maintenance window is necessary for the Vorto dev application (vorto-dev.eclipse.org), starting in a few minutes.
The dev application will be unavailable for aproximately 3 hours this afternoon, starting in 15 minutes.
Will update this thread once the maintenance window is closed.
If you have urgent need of the environment this afternoon, please drop me a message.
Menahem Julien Raccah Lisei
@mena-bosch
The maintenance window is concluded for today. However, due to some outages related to GitHub, there may be another maintenance window tomorrow - still impacting the development system only. Apologies in advance for the inconvenience.
demetz
@demetz
Hey,
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
using the
Device Registry Swagger UI
. The following example shows the device registration for device with ID
4711
:
Repeat the step for the second device.
Add device credentials for these 2 devices using the
Credentials Swagger UI
. The following example shows the credentials registration for a device with the ID
4711
:
Repeat this step for the second device.
Publish data via MQTT
Download the Hub Server certificate
curl -o iothub.crt https://docs.bosch-iot-hub.com/cert/iothub.crt
Use the
mosquitto_pub
client to send some geolocation data:
The Vorto Mapping engine uses
Nashorn
Security
For security reasons, the following restrictions apply when processing these converters:
access to Java packages and classes is not possible
using exit, quit, is not possible
file access is not possible
using loops are not allowed
no JS libraries can be loaded
Example
In the following example, a custom (Javascript) converter is defined in a Function Block mapping, that converts a click amount as a
String
to an
Integer
»
vorto-dashboard
0.7.2
•
Public
• Published
10 months ago
Readme
Explore
BETA
22
Dependencies
0
Dependents
12
Simplified Eclipse Vorto Plugins, allowing to create Vorto Models using the Eclipse IDE.
Various Bug-fixes
0.10.0 milestone 10
Fixes and Enhancements
Various Bug-fixes
Various Stabilization fixes
0.10.0 milestone 9
Fixes and Enhancements
Support for model inheritance during Code Generation
Model Details and Mapping Editor now gives immediate feedback to developer if model is invalid
Boost of performance upon model search and retrieval
Various UI fixes, e.g Pagination in search etc.
Various Stabilization fixes
0.10.0 milestone 8
Fixes and Enhancements
Email Notifications for Workflow actions, e.g. Pending Reviews, as well as comments
Suggestions cannot be applied while viewing a subset of changes.
Only one suggestion per line can be applied in a batch.
Add this suggestion to a batch that can be applied as a single commit.
Applying suggestions on deleted lines is not supported.
You must change the existing code in this line in order to create a valid suggestion.
Outdated suggestions cannot be applied.
This suggestion has been applied or marked resolved.
Suggestions cannot be applied from pending reviews.
Suggestions cannot be applied on multi-line comments.
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Other
0.4%
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Launching Xcode
If nothing happens,
download Xcode
and try again.
Go back
Launching Visual Studio
If nothing happens,
download the GitHub extension for Visual Studio
and try again.
Go back
Latest commit
Git stats
338
commits
Files
Permalink
Failed to load latest commit information.
Type
Dictionary
Entity
Model Property
Introduction
This document specifies the Vorto Language (vortolang 1.0), a language for describing models and interfaces for IoT Digital Twins. Digital twins are models of entities in the physical world such as a (multi) sensor device, smart power plant, and other entities that participate in IoT solutions. Modeling enables IoT solutions and IoT platforms to provision, use, and configure IoT devices and logical entities from multiple sources in a single solution. Using the vortolang and describing the entities's capabilities, IoT platforms and IoT solutions can leverage the semantics of these IoT entities.
Digital Twin Vorto Language
Digital twins are described using the vortolang, which is domain-specific language (DSL). This DSL underlies a very simple grammar, making it very easy to describe digital twin models. In order to be used in IoT Platforms and solutions, the vortolang can easily be converted into well adopted languages, such as JSON-LD, where additional context-specific attributes can be added. Many (free) libraries are available to process these language files. At definition time, developers can use the vortolang without any knowledge about JSON-LD or others, and fully focus on describing the device capabilities in a very expressive way.
The vortolang is made up of a set of metamodel classes (described later in more detail) that define the capabilities of digital twins. There are two top-level classes,
Information Model
and
Function Block
, that describe a digital twin and the capabilities of digital twins, respectively. There are three metamodel classes that describe capabilities:
Properties
,
LoraWAN
. My problem is, that a signal can be picked up by multiple LoRa Gateways simultaneously. In that case, we want to save the signal strength from each gateway.
Is the usage of
multiple
with
Thanks!
this would translate to the following ditto model:
Kevin Olotu
@kolotu
Hey
@demetz
Yes the usage of
multiple
within a Functionblock with a Datatype is valid. The translation into Ditto would be a bit different however - instead of Gateway_id1, Gateway_id2, ... the proper translation would be using an array, but the logic you applied is indeed valid. It should look like this:
demetz
@demetz
Verify the incoming data in our IoT application from step 1.
You should now see the data being printed out to the console in something like:
Send some data for our second device
4712
. This time change the payload message representation to CSV style. Example:
You should now also see the data of our second device in the console of our application.
You can already see from here, that our application would now need to be made aware of handling these two different ways of payload representations. This means writing additional custom code. No worries, let Eclipse Vorto take care of this.
Let us walk you through the process in the next step.
Step 3: De-coupling application from connected sensors
In this step, we are going to use
Eclipse Vorto
in order to de-couple our application from the connected sensors. This has the following benefits:
Reduced
complexity
and
therefore
value:
Mapping Conditions
If you want to specify a condition, when mapping rules for a Function Block should be applied, you can do this easily with mapping conditions.
Here is an example of using conditions to map to either temperature or illuminance Function Block based on the device payload header.
In this example, only the Temperature Function Block will be mapped, if the type field of header matches the 'T' value.
Function Block Temperature Mapping
Function Block Illuminance Mapping
What's next ?
Vorto Mapping Engine in action
. Tutorial that uses Vorto Mappings to convert Geolocation sensor data.
Understand the
Mapping Specification Syntax
Go
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Versions
Vorto Dashboard
Installation
Eclipse Vorto Device Dashboard
React and NodeJS based Dashboard that helps quickly prototype IoT Device integrations with the Bosch IoT Suite. Integrated IoT devices can be displayed and data visualized.
The Dashboard uses the
Eclipse Vorto
project to unify the definition of device capabilities and provides out-of-the-box visualization widgets that display sensor data in a visually appealing way.
Installation
Installing the dashboard is as easy as doing
Note
that we are installing it as a global dependency which will allow you to call
vorto-dashboard
from your command line
You can provide your OAuth2 credentials through environment variables.
The three environment variables you have to provide are:
The
REACT_APP_DEVICE_REFRESH_MS
Added more advanced Vorto DSL Validator Checks when importing Vorto Models or when creating/editing models via the Vorto Web Editor
Various Bugfixes
Generator Plugin SDK, which allows to build and deploy Vorto Generator plugins as standalone (micro)services and hook them into the Vorto repository.
0.10.0 milestone 7
Fixes and Enhancements
Anonymous read-access to Vorto Models
Payload Mapping Specification Editor, which allows to simply create & test device payload mapping specifications
0.10.0 milestone 6
Fixes and Enhancements
Support for Vorto DSL Configuration properties in Bosch IoT Suite Generators (incl. Eclipse Hono)
Security Fixes, such as XXE when uploading malicious LwM2M XMLs
UX related Improvements
0.10.0 milestone 5
Fixes
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
Name
Latest commit message
Commit time
vorto-connector
vorto-dashboard
vorto-dsl-integration
vorto-generators
vorto-importers/
lwm2m
vorto-middleware
.gitignore
.travis.yml
LICENSE
Readme.md
View code
Readme.md
Events
, and
Operations
. When writing a digital twin definition, it's necessary to specify the version of the vortolang being used (currently
1.0
)
Information Models and Function Blocks
There are two top-level metamodel classes:
Information Model
and
Function Block
. Information Models describe a complete digital twin, such as a physical device. Often, Information Models are associated with a specific device product, such as a "Bosch Dinion IP Starlight 8000MP" security camera, while Function Blocks describe the related capabilities of an digital twin (its status- and configuration properties, events, and operations). Function Blocks can be reused across different Information Models. Information Models are often made up of multiple Function Blocks (interfaces).
Information Model
An
Information Model
describes a complete digital twin, such as a physical device and defines the set of interfaces as Function Blocks, implemented by the digital twin.
Information Model properties
Keyword
ok, thanks. the downside with using an array is that it is very hard to query / write the data:
somethimes, I might have 3 gateways picking up the signal from a sensor. at other times the signal from the same device is being picked up by only 1 gateway.
demetz
@demetz
is something like this possible in vorto:
Thomas Jaeckle
@thjaeckle
@demetz
maybe you could use a
dictionary
(
https://github.com/eclipse/vorto/blob/master/docs/vortolang-1.0.md#dictionary
) instead
dictionary[string, Gateway]
the Ditto JSON Schema Generator however doesn't support dicitionaries yet, if I remember correctly
but mapping to JSON of a Vorto
When user account is deleted, models that were modified by the user are not anonymised · Issue #1976 · eclipse/vorto · GitHub
Arduino C Generator does not compile correctly · Issue #1882 · eclipse/vorto · GitHub
development
efforts
in our IoT application. Our app can fully focus on processing one single data format, rather than many formats of different devices types.
It becomes very
easy to extend
1. Specifying the Geolocation interface with Vorto
As in traditional Software Design, we need to first think about the interfaces of the system as well as the data structures that are exchanged between devices and the IoT solution. Vorto provides a web-based tooling, that let's you easily define interfaces, so called Function Blocks. In our case, we are going to create a Geolocation Function Block:
Login to the
Vorto Repository
with your Bosch ID or Github ID account.
In order to start creating models, you need to first
create your own namespace
. Skip this step, if you already own a namespace
Click
Explore
Bosch IoT Suite Provisioning script changes · Issue #2010 · eclipse/vorto · GitHub
Import very slow for zip containing many models > 50 · Issue #1997 · eclipse/vorto · GitHub
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
variable defines the interval in which the dashboard is updating the state of the listed devices
Alternatively you can provide a configuration file to the vorto-dashboard call.
This has to be in the format of:
In addition to that you can set the port the dashboard should run on by using the
PORT
environment variable.
The
LOG_LEVEL
env var can be used to change the logging level. By default this is
error
.
The Simulator has two additional env variables.
TIME_TO_LIVE
defines the amount of seconds the simulator should run in total.
TIME_INTERVAL_TELEMETRY
defines the amount of seconds between the sending of data points.
Setup Things
When integrating devices, pleace consult the following resources:
Fixes bug when generating Eclipse Hono Java Code for a single Function Block
Fixes bug when requesting image attachments from Repository via REST
Fixes bug in Payload Mapping Library for retrieving Mapping Specifications from Repository
Minor Repository UI/UX Improvements
0.10.0 milestone 4
Fixes and Enhancements
Simple Web Editor to create and edit Vorto Models directly from the Vorto Repository
LwM2M/IPSO Importer that imports
LwM2M Smart Objects
Model Attachment Management
Model State Management
multiple
extension
keyword in Function Block DSL to overwrite properties from an inherited Function Block
Possibility to declare Function Blocks as either
mandatory
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Vorto Examples
This repository contains example code that have been implemented using the
Eclipse Vorto SDK
.
Vorto Web Dashboard
Node.js/React based web dashboard, that displays device data, which are modelled with Vorto.
Read more
Eclipse Vorto Semantic Middleware
The Eclipse Vorto Semantic Middleware is a small and light-weight microservice that is able to convert any device telemetry payload (binary, json, xml, ...) to semantic Vorto compliant data structures and exposes the data via
AMQP
or push it to
AWS Kinesis
. Other micro services can easily consume the data to further process it, e.g. for running analytics on the data.
The middleware provides an Integration API, where data processors can be plugged in, such as integrating the "harmonized data" with any 3rd party IoT data service.
Read more
Vorto Generator Plugins
Vorto Generators convert Vorto Models to any platform specific source code. This code can be a simple platform descriptor, device , or backend code. They are stateless in nature and can be easily developed using the
Vorto Plugin SDK
Required
Data type
Description
vortolang
required
string
Identifies which vortolang version used to define the Information Model. Currently '1.0'
namespace
required
string
The name must match the regular expression:
name('.' name )*
version
required
string
dictionary
should be a plain JSON Object, e.g.:
demetz
@demetz
@thjaeckle
thanks.
this approach is also be very useful for mapping PLC's, where you have 1...n inputs of different kinds (e.g. 8x digital inputs, 8x analog inputs, 24x PT1000)...
nebupulickal
@nebupulickal
Hi.. I was trying with raspberry pi data visualization on vorto using bosch iot platform.
values are uploading succesfully to the iot platform. But on running vorto dashboard im getting the following error
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Security
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Security
Recursive walk-through in generator plugin template not always working · Issue #1954 · eclipse/vorto · GitHub
Repository session error when saving or importing models · Issue #1876 · eclipse/vorto · GitHub
in the menu and then click
Create Model
Choose
Function Blocks
and work yourself through the wizard by giving it the name
Geolocation
and version
1.0.0
Add the following status properties for the Geolocation and hit
Save
:
2. Describing device implementing Geolocation interface
In this step, we will create an Information Model that implements the Geolocation Function Block. An Information Model represents a vendor - specific device.
Click
Explore
in the menu and then click
Create Model
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Security
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Security
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Vorto Dashboard Tutorial
Vorto Video Walkthrough
Developing the Vorto Dashboard
If you want to extend and modify the source code of the Vorto Dashboard project you need to work on a local setup of the project.
Installation
Extending the Dashboard with custom Cards
this short guide
will serve as a starting point to do so.
Creating a Topology
In order to create a topology that can be displayed in the Sidebar, we need to follow a defined structure.
In addition to all your devices, you have to create at least one meta-thing that defines the root of the topology. You can use the basic structre of a thing and define the attributes like this:
Note
That the
"definition": "org.eclipse.vorto:Topology:1.0.0"
is the most important part since it defines this element as the root.
In order to add containers that hold entities, simply create another meta-model that holds similar content to the root (e.g. empyt features etc.). Make sure to define the
references
or
optional
in Information Models
Many UI/UX Improvements
Many Bugfixes
0.10.0 milestone 3
Fixes and Enhancements
EU-GDPR Compliance of Vorto Repository, i.e. Export of user-specific Vorto models.
Eclipse Hono Generator, supporting the generation of Arduino-, Python- and Java source code.
Code Generator Configuration UI. Code Generators that are executed from the Eclipse Vorto Toolset do now provide a configuration UI that allows developers to customize the execution of the generator.
API Changes
Vorto Code Generators must now implement
org.eclipse.vorto.codegen.api.IVortoCodeGenerator.getInfo()
that give more meta information about the specific Code Generator. This information is used by Vorto to provide a Generator Configuration UI automatically.
The Vorto Repository REST - API for publishing models is now secured exclusively with OAuth2 token - based authentication.
It is now only possibly to publish models to the Vorto Repository via the Vorto Repository Web UI !
0.10.0 milestone 2
Reject
Save preferences
.
To get started, checkout the
hello world generator
Checkout other Example Generators
Vorto Importer Plugins
Vorto Importers convert 3rd party platform descriptions to Vorto models. Just as Generator plugins, they are stateless and can easily be developed using the
Vorto Plugin SDK
.
To get started, checkout the
LwM2M example
, that converts LwM2M/IPSO XML descriptions to Vorto Function Block - and Mapping models. This example is deployed as a AWS Lambda service.
Using Vorto Models from your custom DSL
If you would like to use and reference Vorto Models from your own custom DSL, the following tutorial shows you how that is done.
Read tutorial
About
Contains example code leveraging Vorto information models
Topics
The name must match the regular expression:
/^\d+\.\d+\.\d+(-\\w+)*$/
displayname
optional
string
a name of the information model for human display
description
optional
string
A description for human display.
category
optional
string
Custom tag to categorize the model, e.g. sensor, smarthome/kitchen etc.
The name must match the regular expression:
name('/' name )*
using
required
Travis CI - Test and Deploy Your Code with Confidence
Hey there!
Looks like you have JavaScript disabled.
The Travis CI webclient needs JavaScript to work properly.
Please enable JavaScript to get the best Travis CI experience.
Thank you!
#123
#123
Credential values are entered as follows in config.json ...
{ "BOSCH_CLIENT_ID": "", "BOSCH_CLIENT_SECRET": "", "BOSCH_SCOPE": "", "REACT_APP_DEVICE_REFRESH_MS": 10000 }
also tried with environment variables. same error occurs. On accessing through browser at localhost:8080 i am getting the webpage with message "No Devices Found" and a spinner rotates at the front end
Kevin Olotu
@kolotu
Hi
@nebupulickal
this looks to me as if the authentication fails due to an erroneous request, I would expect that an API change in the Bosch IoT Suite Authentication is the root cause for this, since we haven't changed the code of the dashboard in a while. I have opened an issue to analyse and fix the problem
eclipse/vorto#2565
25 replies
nebupulickal
@nebupulickal
@kolotu
Thank you. Waiting for the reply from them :)
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Security
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Security
→
This time choose
Information Model
and work yourself through the wizard by giving it the name
SensorOne
and version
1.0.0
.
In the popup Click Next and confirm with
Create
. This will take you directly to the newly created Information Model
Save
:
Great!
One sensor is now fully described with Vorto. Go ahead and create a second sensor
SensorTwo
3. Mapping device payload to Geolocation interface
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
and
referencedBy
fields in the attributes in order to tell the dashboard the structure.
Note
The nesting can be repeated several times to create more complex structures.
By adding the
topology
attribute to regular Vorto Information Model things, you can also group things together visually.
Postman Script
Create a new local
ENV
setup that contains the following information.
SERVICE_INSTANCE_ID
TOKEN
TENANT_ID
PW_TYPE
(simply use
Fixes and Enhancements
Vorto Mapping library that is able to convert arbitrary device payload to specific IoT platform format, e.g. to Eclipse Ditto.
More code generators, that generate device code that integrates with Eclipse Hono via MQTT.
Many bugfixes
0.10.0 milestone 1
We are proud to announce Eclipse Vorto 0.10.0 milestone 1.
Here are a few major highlights:
Web Editor
More
Code Generators
have been added to the list of existing generators.
Repository Java client
API
vorto
generators
iot
device
java
bosch-security-cameras
vorto-connector
Resources
Readme
License
EPL-2.0 License
Releases
11
tags
Packages
0
No packages published
Contributors
A set of
Model Reference
s
infomodel
required
string
The name must match the regular expression:
^[A-Z][a-zA-Z0-9]*$
required
A set of
Model Property
of type
Function Block
A set of Function Block properties.
BNF (Backus normal form)
Example:
Kevin Olotu
@kolotu
Maintenance Announcement 31/08/2020
On Monday 31/08/2020 there will be maintenance work on the Eclipse Vorto Repository
https://vorto.eclipse.org
starting at 9AM CEST. The repository will be temporarily unavailable during the work. We will post an update once the works have been completed.
Kevin Olotu
@kolotu
Maintenance work is completed - the repository is available again
Kevin Olotu
@kolotu
Maintenance Announcement 3/9/2020
There will be maintenance work on the main repository between 11-12 AM CEST. The repository might be temporarily unavailable during that time frame.
Michael van Niekerk
@mvniekerk
Hello Vorto people
I've created a Vorto infomodel and used the Ditto export plugin feature.
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Previously, we saw that both sensor types were sending data in different payload representations, JSON as well as CSV. Our solution ordinarily would need to parse these different payloads and somehow identify the semantics behind this payload.
In this step, we are going to map the JSON and CSV to the Geolocation Function Block. Vorto Mappings are a very nice way to do this, and pretty easy to boot. Here is how its' done:
Click
Explore
and open the details of the SensorOne Information Model
Click
Create Mapping
which opens a dialog with some background information about mappings. Confirm with
Create
. This will open the Payload Mapping Editor
You will see two tabs, each for every Function Block property. Select
deviceInformation
tab
Our sensor does not really transmit any device information meta data. That's why we hard code these values here. Under
manufacturer
add
"ACME Company"
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
hashed-password
)
Publishing a new release
Once changes have been merged into
master
and a new release tag has been created, an automated travis-ci job will be triggered that publishes the new version to
NPM
.
Triggering a new release is done by pushing a new tag to master.
Keywords
vorto
eclipse
eclipsevorto
dashboard
iot
boschiotsuite
Install
Many bug fixes and improvements
Web Editor
With the
Web Editor
, users can describe devices online and publish these as information models to the Vorto Repository.
Code Generators
We have a few new Code Generators for easier device integration. Those are
Alexa Skill-set Generator for Bosch IoT Suite
Device Simulator Generator for Bosch IoT Suite
Eclipse Kura Generator
Web-based UI Dashboard Generator
Alexa Skill-set & Device Simulator for Bosch IoT Suite Generators
The Device Simulator Generator for Bosch IoT Suite generates a simulator that creates test data for a given information model and publishes the data to the Bosch IoT Suite.
Eclipse Kura Generator
Eclipse Kura generator supports the generation of a Kura gateway OSGI bundle that reads device data via bluetooth LE technology and sends the data to either Kura built-in Cloud Services or the Bosch IoT Suite.
8
Languages
Java
44.6%
Xtend
28.7%
SCSS
7.6%
CSS
7.4%
JavaScript
6.6%
TypeScript
2.2%
Other
2.9%
© 2020 GitHub, Inc.
Function Block
A Function Block describes related capabilities that are implemented by a digital twin. Function Blocks are reusable and can be reused across different Information Models.
Function Block properties
Keyword
Required
Data type
Description
vortolang
required
string
Identifies which vortolang version used to define the Function Block. Currently '1.0'
namespace
required
string
The name must match the regular expression:
name('.' name )*
version
required
Are there any docs how to import these .json files into Ditto?
Kevin Olotu
@kolotu
Hi
@mvniekerk
With the exported Thing JSON you can use the Ditto APIs that are documented here:
https://www.eclipse.org/ditto/http-api-doc.html#/Things/post_things
Michael van Niekerk
@mvniekerk
Ok I think my understanding is wrong:
The *schema.json files are to be a template for new instances of the same thing type to instantiate from? Or with the creation of every new instance of this have all of the *schema.json files then to be uploaded to Ditto for each new instance?
Michael van Niekerk
@mvniekerk
The resulting "create a new Thing" json file has in its json on features.speed.definition: ["vorto.private.agriio.pivot:Speed:0.1.0"] .
Now - I take it I must first create a Thing, import all of these schemas in, before I can actually POST the "create a new Thing" json file as exported by Vorto?
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto
Watch
23
Star
168
Upgrade Tomcat to v8.5.41 which contains fix for CVE-2019-0199 · Issue #2026 · eclipse/vorto · GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto
Watch
23
Star
168
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
. Make sure to add quote marks at the beginning and end of the provided manufacterer string.
Open
location
mapping tab. Let's map the longitude and latitude to the Function Block.
For
longitude
add
number:toFloat(/longitude)
and for
latitude
add
number:toFloat(/latitude)
Save your changes
Download
the Spec and save it on your local system. You need this spec later in the tutorial.
We can now test the entire mapping by inserting a sample JSON in the input box on the right and hit
Map
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto
Watch
23
Star
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto
npm i
vorto-dashboard
Downloads
Weekly Downloads
25
Version
0.7.2
License
EPL-2.0
Unpacked Size
17.4 MB
Total Files
62
Homepage
github.com/eclipse/vorto-examples#readme
Repository
Git
Web-based Device Dashboard Generator
The Web - based Device Dashboard generator creates a Spring Boot Web application that is able to visualise the device data with various UI components as well as consume the data from a IoT Cloud backend, e.g. Bosch IoT Suite.
Repository Java Client
With the Repository Java Client you can find information models and process its content as well as generate code for various IoT platforms.
Click here for more info
.
0.9.x
We are proud to announce the release of 0.9. Here are some of the major highlights:
Eclipse IoT Toolset
Information Model Repository
, acting as a device description dictionary to lookup and find device cababilities by various criteria
Generator API
that lets you define the translation rules from Information Models into executable, IoT platform specific source code
Many
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
string
The name must match the regular expression:
/^\d+\.\d+\.\d+(-\\w+)*$/
displayname
optional
string
a name of the information model for human display
description
optional
string
A description for human display.
Kevin Olotu
@kolotu
The Ditto Plugin in Vorto has two different options:
Ditto Thing JSON: A representation of a Vorto model as Thing instance in Ditto. This can be used to interact with the Ditto HTTP API (i.e. creating a thing). That's what is in the documentation here:
https://www.eclipse.org/ditto/http-api-doc.html#/Things/post_things
JSON Schema: This is to validate the payload of the messages from/to the Thing in Ditto during runtime. The validation is not performed by Ditto and therefore it cannot be imported. It is supposed to be used as a template for your own implementation.
Michael van Niekerk
@mvniekerk
Ok thanks
@kolotu
.
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
Security
Insights
More
Code
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
Security
Insights
More
Code
Issues
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto
Watch
23
Star
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto
Watch
23
Star
:
You should be able to see the following mapped output:
Fantastic!
You have just created a mapping for one sensor that sends its payload as JSON.
Create a mapping spec for your
SensorTwo
Information Model:
This time for
manufacturer
, set the value
"Company XYZ"
The second sensor sends its geolocation payload as CSV. Therefore, add the following mapping for the
longitude
number:toFloat(array[1])
and for
latitude
number:toFloat(array[2])
.
168
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
Security
Insights
More
Watch
23
Star
168
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
Security
Insights
github.com/eclipse/vorto-examples
Last publish
10 months ago
Collaborators
Try
on RunKit
Report
a vulnerability
Support
Help
Community
Advisories
Status
Contact npm
Company
About
Blog
Code Generators
to inspire you to build your own generator as well as illustrate the usage to build an IoT Application.
Command Line Interface
that lets you lookup, find and publish information models as well as generate code for a selected IoT platform
Eclipse IoT Toolset
With the
Eclipse IoT Toolset
Information Model Repository
The
Information Model Repository
Generator API
Vorto Code Generators convert an Information Model into executable IoT platform specific source code. The
Generator API
lets you plug in your own code generator into the toolset. Toolset wizards help you through this process.
Code Generators
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
category
optional
string
Custom tag to categorize the model, e.g. sensor, smarthome/kitchen etc.
The name must match the regular expression:
name('/' name )*
using
required
A set of
Model Reference
s
required
string
The name must match the regular expression:
Kevin Olotu
@kolotu
If you reference a Functionblock in an InformationModel it is a HAS_A relation
Michael van Niekerk
@mvniekerk
It also shows up as the definition field. I think the big crux of the story is that these are not inheritable, copy-able or verifiable on the Ditto side but only "suggestions" as to how the payload looks like
Kevin Olotu
@kolotu
that is correct - as Vorto only defines the structure of the Thing, the validation also just applies to the structure that is described in Vorto. The actual Thing in Ditto could be changed or modified and thus expect a different payload. So using the schema provided by Vorto is only useful, if the corresponding Thing instance still complies with the structure defined in Vorto
Kevin Olotu
@kolotu
Maintenance Announcement 22/9/2020
There will be maintenance work on the main repository between 11AM-2PM CEST. The repository might be temporarily unavailable during that time frame.
oscarfh
@oscarfh
Hello,
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
Have a question about this project?
Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Security
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
Pull requests
Actions
Projects
Wiki
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
Have a question about this project?
Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
Sign up for GitHub
168
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
Security
Insights
More
Code
Issues
Problem in Payload Mapping Editor for nested entity mappings · Issue #2036 · eclipse/vorto · GitHub
168
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
Security
Insights
More
Code
Issues
Save
and
download
the mapping spec as well.
This completes the Vorto Modelling. In summary, we described two sensor types as Vorto Information Models, implementing the same Geolocation Function Block. We then created payload mappings for each of them, in order to map their specific payload to the same semantic Function Block definition.
In the next step, we are going to see these Vorto models and mappings in action.
4. Setting up Eclipse Vorto Payload Normalization Middleware with Vorto AMQP Plugin
As seen in the picture, we will now setup the Eclipse Vorto Payload Normalization Middleware, which is a micro service written in Java, that consumes data from Eclipse Hono via AMQP and converts the data to semantic data structures, defined as Vorto Function Blocks. For this, the middleware utilizes the Mapping Specification that we created in the previous step.
Now for the normalized data to be consumed by our IoT application we will send the normalized data from middleware to Amazon MQ and in the next step configure the IoT application to receive data from the new endpoint.
Create an Amazon MQ Broker using the tutorial from AWS
here
.
Now start the middleware using the
Eclipse Vorto AMQP plugin
and mounting a
mappings
folder which contains your sensor mapping specifications. We will configure our IoT Solution to subscribe to the new AMQP endpoint in the next step.
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
Have a question about this project?
Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
More
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
Have a question about this project?
Press
Terms & Policies
Policies
Terms of Use
Code of Conduct
Privacy
In order to inspire you to build you own generator for your platform, we implemented many
Code Generators
, for example Bosch IoT Things, AWS, ThingWorx and many more. They illustrate the many possibilities of how code generators can be effectively used and act as a blueprint for other generator implementations.
Command Line Interface (CLI)
A
Command Line Interface Tool
lets you explore information models, checkin new information models as well as generate code for a selected IoT platform.
Go
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
^[A-Z][a-zA-Z0-9]*$
extends
optional
ID of a
Function Block
Extends another
Function Block
by specializing it with extended properties
configuration
optional
Configuration
Properties
An object describing configuration
Properties
. Configuration properties are read-writable by default.
status
optional
Status
I am trying to run Vorto using the docker compose as explained here:
https://github.com/eclipse/vorto/tree/master/docker
but I am not able to log in to github
Is this documentation still up to date?
I get the following error page:
but no error in the logs
Kevin Olotu
@kolotu
Hi
@oscarfh
yes the documentation is still up to date - I just tried it and was not able to reproduce your issue. Could you please double check your configuration - especially your Github client ID and client secret?
oscarfh
@oscarfh
Hi
@kolotu
, thanks for your reply.
I have double checked the id and secret multiple times. This is the vorto-variables.env file snippet
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our
terms of service
and
privacy statement
. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
When user account is deleted, models that were modified by the user are not anonymised
#1976
Closed
aedelmann
opened this issue
Sep 30, 2019
· 1 comment
GitHub Stars program
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
isMultiplicity in vorto generator API still not working · Issue #2057 · eclipse/vorto · GitHub
By clicking “Sign up for GitHub”, you agree to our
terms of service
and
privacy statement
. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
Arduino C Generator does not compile correctly
#1882
Closed
aedelmann
opened this issue
Aug 14, 2019
· 1 comment
Closed
Gracefully handle certain exceptions · Issue #2062 · eclipse/vorto · GitHub
Pull requests
Actions
Projects
Wiki
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
Have a question about this project?
Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
OpenAPI Generator - Missing resources · Issue #1964 · eclipse/vorto · GitHub
Skip to content
Pull requests
Actions
Projects
Wiki
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
Have a question about this project?
Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Code generators ignoring `multiple` keyword · Issue #2004 · eclipse/vorto · GitHub
Before we can start sending data via MQTT again, we need to make some changes to the Bosch IoT Hub Device Registry. These changes are required by the Vorto middleware to work properly.
Open the
Device Registry Swagger UI
Find the
PUT
Command , which updates your existing device ID. Add the following JSON content:
This basically overwrites the default configuration for this device ID by specifying the Vorto Information Model (device type) for the registered device as well as in what content-type the device sends its data.
Repeat this step for the second device ID (4712) , with the following content:
Finally!
We are all set to start sending the same data as in
step 2
using
mosquitto_pub
. You should be able to see the normalized payload with the exact same structure for both sensor types in the Vorto Middleware
monitoring logs
.
5. Make IoT application changes
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our
terms of service
and
privacy statement
. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
Bosch IoT Suite Provisioning script changes
#2010
Closed
aedelmann
opened this issue
Oct 10, 2019
Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our
terms of service
and
privacy statement
. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
Import very slow for zip containing many models > 50
#1997
Closed
aedelmann
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Properties
An object describing status
Properties
. Status properties are read-only by default.
events
optional
a set of
Event
s
Describes data emitted by a device or other entity
operations
optional
a set of
Operation
s
BNF (Backus normal form)
Example:
then I run
docker-compose rm
, I also delete
~/.vorto
and
/opt/mysql_data
to be sure
then
docker-compose build
and
docker-compose up
everything starts as expected, but when I try to log in, I get this page and no messages on the terminal
Is there any way I can increase the log level or anything that could help troubleshooting?
Kevin Olotu
@kolotu
The problem could be related to the EIDP properties - I used some dummy values in my config. I'd suggest you try the same:
EIDP_CLIENT_ID=123
EIDP_CLIENT_SECRET=123
Closed
When user account is deleted, models that were modified by the user are not anonymised
#1976
aedelmann
opened this issue
Sep 30, 2019
· 1 comment
Labels
bug
Projects
0.12.1
Milestone
0.12.1
Comments
Copy link
Quote reply
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto
Watch
23
Star
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Arduino C Generator does not compile correctly
#1882
aedelmann
opened this issue
Aug 14, 2019
· 1 comment
Assignees
Labels
blocker
bug
Milestone
0.11.3
Comments
Copy link
Quote reply
Contributor
aedelmann
commented
Eclipse Vorto APIs
Eclipse Vorto
Select a definition
Vorto Repository API
Vorto Generator Plugin API
Vorto Importer Plugin API
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Security
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our
terms of service
and
privacy statement
. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
Recursive walk-through in generator plugin template not always working
#1954
Closed
w4tsn
opened this issue
Sep 17, 2019
Generation of models slow due to deep structured mapping resolving · Issue #2049 · eclipse/vorto · GitHub
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Editor creates duplicates of fields · Issue #2058 · eclipse/vorto · GitHub
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Security
→
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our
terms of service
and
privacy statement
. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
Repository session error when saving or importing models
#1876
Closed
aedelmann
opened this issue
Aug 11, 2019
· 1 comment
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Security
→
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Security
Change the configuration of the Geolocation IoT application, by pointing it to our new
Amazon MQ Broker
AMQP endpoint, in order to receive the normalized geolocation sensor data.
Please open the
application.yml
and replace the url, topic and credentials as seen below:
When you start the application and send data for the two sensors via MQTT, you will see the normalized geolocation data printed in the console of the application.
What's next?
Integrate with AWS Kinesis for realtime data analytics
Extend the solution with a digital twin service
---
In case you're having difficulties or facing any issues, feel free to
create a new question on StackOverflow
and we'll answer it as soon as possible!
Please make sure to use
eclipse-vorto
as one of the tags.
· 0 comments
Closed
Bosch IoT Suite Provisioning script changes
#2010
aedelmann
opened this issue
Oct 10, 2019
· 0 comments
Labels
Code Generators
enhancement
Projects
0.12.2 (10.19)
Milestone
0.12.2
Comments
Copy link
opened this issue
Oct 7, 2019
· 1 comment
Closed
Import very slow for zip containing many models > 50
#1997
aedelmann
opened this issue
Oct 7, 2019
· 1 comment
Labels
Repository
bug
Projects
0.12.1
Milestone
0.12.1
Comments
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Properties
Properties describe both read-only and read-write state of a digital twin. Read-only properties are defined as
status
properties, whereas read-write properties as
configuration
properties. For example, a device serial number may be a status property and the temperature set point on a thermostat may be a configuration property.
Function Block property is defined as a
Model Property
Status Property Example
Configuration Property Example
Event
Events define data that is emitted by the device or entity. This kind of data would need to be transmitted to an IoT business solution in a reliable way.
An Event property is defined as a
Model Property
Event Example
Operation
if that is in fact the root cause, we should amend the file to contain default values
oscarfh
@oscarfh
I will try as soon as I can and get back to you
oscarfh
@oscarfh
I made the changes but still no luck :(
oscarfh
@oscarfh
@kolotu
I found out: I am using a VPN for access, which reduces strongly my internet speed. It seems that it is timing out (works perfectly if I unplug the VPN). Is there any way for me to change the timeout period?
Kevin Olotu
@kolotu
@oscarfh
what exactly is timing out? The request to authenticate with GitHub?
oscarfh
@oscarfh
Contributor
aedelmann
commented
Sep 30, 2019
Steps to take:
1 Login as collaborator of a namespace
2. Create or Modify an existing model
3. Go to user profile and remove account
Expected: model modifiedBy user ID is anonymised
Actual: model modifiedBy userID is not anonymised and deleted user ID is still visible
aedelmann
added the
bug
label
Sep 30, 2019
aedelmann
added this to
In progress
168
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
Security
Insights
More
Code
Issues
Pull requests
Security
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
Aug 14, 2019
Steps taken
Create info model which uses org.eclipse.vorto:Acceleration:1.0.0 Function Block
Generate Eclipse Hono, Arduino/C Code
Expected: Code can compile correctly
Actual:
this.value = value
leads to an error and cannot compile correctly.
aedelmann
added the
bug
label
Aug 14, 2019
aedelmann
added this to the
0.11.3
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
· 2 comments
Closed
Recursive walk-through in generator plugin template not always working
#1954
w4tsn
opened this issue
Sep 17, 2019
· 2 comments
Labels
Code Generators
bug
Projects
0.12.1
Milestone
0.12.1
Comments
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Security
Security
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
Closed
Repository session error when saving or importing models
#1876
aedelmann
opened this issue
Aug 11, 2019
· 1 comment
Labels
Repository
blocker
bug
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Go
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
Quote reply
Contributor
aedelmann
commented
Oct 10, 2019
Confirmations:
Generator Request with param "[..]?provision=true" returns postman script JSON (non-zipped)
Generator Request with param "[..]?provision=true&requestBodyOnly=true" returns provisioningAPI request body JSON (non-zipped)
Bosch IoT Hub attributes contains "Vorto" keyword
Bosch IoT Hub credentials hashed-password renamed to ...
aedelmann
added the
Code Generators
label
Oct 10, 2019
aedelmann
added a commit that referenced this issue
Oct 10, 2019
Copy link
Quote reply
Contributor
aedelmann
commented
Oct 7, 2019
Steps taken
Login as model creator
Import Vorto model zip containing model more than 50
Click Upload
Expected: Upload and validation should not take more than 20 seconds for 50 models
Actual: Upload takes more than 1 minute / sometimes timeout
aedelmann
added
bug
Repository
labels
Oct 7, 2019
Learn more
Accept
Reject
Save preferences
Keyword
Required
Description
breakable
Optional
Signals, that it could eventually cause an error when performing the operation on the device
operation name
required
Name of the operation
request params
optional
request params, separated by
,
response type
optional
I do not have any logs to confirm that
But it seems so.
I click "log in", then "login with github", then I wait for a long time and get the error page
Kevin Olotu
@kolotu
I'm not aware of any option to configure the timeout for that request - we are using the Spring implementation of OAuth, so maybe there is a way to do it, but Vorto itself doesn't offer that option
oscarfh
@oscarfh
Ok, thanks a lot!
_
Sign in to start talking
window.webpackPublicPath = '//cdn02.gitter.im/_s/edbef577a/js/';
in
0.12 (E09.19)
Sep 30, 2019
aedelmann
added this to
To do
in
0.12.1
Sep 30, 2019
aedelmann
removed this from
In progress
in
0.12 (E09.19)
Sep 30, 2019
aedelmann
Actions
Projects
Wiki
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
Have a question about this project?
Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
GitHub Stars program
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
milestone
Aug 14, 2019
aedelmann
self-assigned this
Aug 14, 2019
aedelmann
mentioned this issue
Aug 14, 2019
C++ code generator modify due to a special keyword issue
#1880
Closed
Copy link
Contributor
Author
aedelmann
commented
Aug 14, 2019
Add BooleanPropertyAttribute and EnumLiteralPropertyAttribute to the Swagger specification · Issue #2116 · eclipse/vorto · GitHub
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
Loading of mapping models with 2+ very slow · Issue #2193 · eclipse/vorto · GitHub
Copy link
Quote reply
Contributor
w4tsn
commented
Sep 17, 2019
See my
vorto-ditto-skeleton-generator
project for reference how I'm using the generator as micro-service in a docker-container.
What is wrong?
The generator does not always traverse through the
extends
dependencies and return all of the configuration and status properties. This might be a bug or a flaw in my template.
How to reproduce
My used docker-compose file looks like this:
docker-compose.yml.txt
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
Security
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
↵
Milestone
0.11.2
Comments
Copy link
Quote reply
Contributor
aedelmann
commented
Aug 11, 2019
•
edited
Steps taken for model saving:
Create a new vorto.private namespace
Create model in that namespace
Make valid changes in the model (using ACE editor) and Save model
Expected: Model is saved successfully
Actual: Repository Session for user error
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
Fixes
#2010
Loading status checks…
91eab5b
aedelmann
added this to
In progress
in
0.12.2 (10.19)
Oct 10, 2019
aedelmann
added this to the
0.12.2
milestone
Oct 10, 2019
aedelmann
added the
aedelmann
added this to the
0.12.1
milestone
Oct 7, 2019
aedelmann
added this to
In progress
in
0.12.1
Oct 7, 2019
Copy link
Contributor
Author
aedelmann
commented
Oct 8, 2019
fixed
Maven Central Repository Search
Sorry, your browser does not support JavaScript!
Specifies a response of the operation. Response type must comply to
Data Type
description
optional
A description for human display
Example
Data Types
Primitive Types
A full set of primitive data types are provided and can be specified directly as a type value of a model property.
Primitive Schema
Description
boolean
a boolean value
dateTime
A date and time in ISO 8601 format
double
An IEEE 8-byte floating point number
added this to the
0.12.1
milestone
Sep 30, 2019
aedelmann
moved this from
To do
to
In progress
in
0.12.1
Sep 30, 2019
Copy link
Contributor
Author
aedelmann
commented
Oct 7, 2019
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our
terms of service
and
privacy statement
. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
Upgrade Tomcat to v8.5.41 which contains fix for CVE-2019-0199
#2026
Closed
somesh-kumar
opened this issue
Oct 16, 2019
· 0 comments
Closed
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto
fixed
aedelmann
closed this
Aug 14, 2019
aedelmann
added the
blocker
label
Aug 14, 2019
Sign up for free
to join this conversation on GitHub
. Already have an account?
Sign in to comment
Assignees
aedelmann
Labels
blocker
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Security
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto
Watch
23
Star
168
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Security
A working and verified image is
on docker hub
:
lionax/vorto-ditto-skeleton-generator:latest
The vorto-variables.env looks like this:
Used example infomodel and fbmodels
othermo.meter_Heat_1.0.0.zip
The skeleton template
can be found
in my skeleton project on github
.
How should it be?
If the template is correct, the generator should in any case return all properties of a model and it's parents.
aedelmann
added
bug
Code Generators
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto
Watch
23
Star
GitHub Stars program
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto
Steps taken for model import:
Go to Import and upload model (or zip of models) into vorto.private namespace
Expected: Successful upload
Actual: Internal Server Error
aedelmann
added
bug
Repository
blocker
labels
Aug 11, 2019
aedelmann
added this to the
0.11.2
milestone
Aug 11, 2019
Copy link
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
enhancement
label
Oct 10, 2019
aedelmann
closed this in
7f8e38e
Oct 10, 2019
aedelmann
moved this from
In progress
to
Done
in
0.12.2 (10.19)
Oct 11, 2019
Sign up for free
aedelmann
closed this
Oct 8, 2019
aedelmann
moved this from
In progress
to
Done
in
0.12.1
Oct 8, 2019
mena-bosch
mentioned this issue
Dec 6, 2019
Offer asynchronous model upload/import
#2148
Open
float
An IEEE 4-byte floating point number
int
A signed 4-byte integer
long
A signed 8-byte integer
string
A UTF8 string
base64Binary
Represents an arbitrary binary content
base64Binary
Represents an arbitrary binary content
short
A short 16-bit integer between -32768 and 32767
byte
A 8-bit integer between -128 and 127
Enum
An
fixed
aedelmann
closed this
Oct 7, 2019
aedelmann
moved this from
In progress
to
Done
in
0.12.1
Oct 7, 2019
Sign up for free
to join this conversation on GitHub
. Already have an account?
Sign in to comment
Assignees
Upgrade Tomcat to v8.5.41 which contains fix for CVE-2019-0199
#2026
somesh-kumar
opened this issue
Oct 16, 2019
· 0 comments
Labels
Refactoring
Projects
0.12.2 (10.19)
Milestone
0.12.2
Comments
Copy link
Quote reply
Contributor
somesh-kumar
Watch
23
Star
168
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
Security
Insights
bug
Projects
None yet
Milestone
0.11.3
Linked pull requests
Successfully merging a pull request may close this issue.
None yet
1 participant
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
Security
Insights
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
labels
Sep 24, 2019
aedelmann
added this to
To do
in
0.12 (E09.19)
Sep 27, 2019
aedelmann
moved this from
To do
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto
168
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
Security
Insights
More
Code
Issues
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto
Watch
23
Watch
23
Star
168
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
Security
Insights
Contributor
Author
aedelmann
commented
Aug 11, 2019
Fixed
aedelmann
closed this
Aug 11, 2019
Sign up for free
to join this conversation on GitHub
. Already have an account?
Sign in to comment
Assignees
No one assigned
Labels
Sign up
eclipse
/
vorto
Watch
23
Star
168
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
eclipse
/
vorto
Watch
23
Star
168
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
to join this conversation on GitHub
. Already have an account?
Sign in to comment
Assignees
No one assigned
Labels
Code Generators
enhancement
Projects
1 closed project
0.12.2 (10.19)
Done
Milestone
0.12.2
Linked pull requests
Successfully merging a pull request may close this issue.
None yet
Sign up for free
to join this conversation on GitHub
. Already have an account?
Sign in to comment
Assignees
No one assigned
Labels
Repository
bug
Projects
1 closed project
0.12.1
Done
Milestone
0.12.1
Linked pull requests
Successfully merging a pull request may close this issue.
enum
is an enumeration of values of the same type similar to an
enum
in Java.
Keyword
Required
Data type
Description
vortolang
required
string
Identifies which vortolang version used to define the Enumeration. Currently '1.0'
namespace
required
string
The name must match the regular expression:
name('.' name )*
No one assigned
Labels
bug
Projects
1 closed project
0.12.1
Done
Milestone
0.12.1
Linked pull requests
Successfully merging a pull request may close this issue.
None yet
1 participant
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
commented
Oct 16, 2019
Upgrade Tomcat to v8.5.41 which contains fix for
CVE-2019-0199
aedelmann
added this to
To do
in
0.12.2 (10.19)
Oct 16, 2019
aedelmann
moved this from
To do
to
In progress
in
More
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
Have a question about this project?
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
More
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
Have a question about this project?
Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
to
In progress
in
0.12 (E09.19)
Sep 27, 2019
aedelmann
removed this from
In progress
in
0.12 (E09.19)
Sep 30, 2019
aedelmann
added this to the
0.12.1
milestone
Sep 30, 2019
aedelmann
Watch
23
Star
168
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
Security
Insights
More
Pull requests
Actions
Projects
Wiki
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
Have a question about this project?
Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our
Star
168
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
Security
Insights
More
Code
Issues
More
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
Have a question about this project?
Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Repository
blocker
bug
Projects
None yet
Milestone
0.11.2
Linked pull requests
Successfully merging a pull request may close this issue.
None yet
1 participant
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
0
Wiki
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
Wiki
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
1 participant
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
None yet
1 participant
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
version
required
string
The name must match the regular expression:
/^\d+\.\d+\.\d+(-\\w+)*$/
displayname
optional
string
a name of the enumeration model for human display
description
optional
string
A description for human display.
category
optional
string
Custom tag to categorize the model, e.g. sensor, smarthome/kitchen etc.
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
0.12.2 (10.19)
Oct 16, 2019
aedelmann
added the
Refactoring
label
Oct 16, 2019
aedelmann
added this to the
0.12.2
milestone
Oct 16, 2019
somesh-kumar
added a commit to bosch-io/vorto that referenced this issue
Oct 16, 2019
Fixed
eclipse#2026
Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our
terms of service
and
privacy statement
. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
isMultiplicity in vorto generator API still not working
#2057
Closed
w4tsn
Learn more
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto
Watch
23
Star
168
Email Address
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our
terms of service
and
privacy statement
. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
Gracefully handle certain exceptions
#2062
Closed
somesh-kumar
opened this issue
Nov 7, 2019
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
added this to
In progress
in
0.12.1
Sep 30, 2019
Copy link
Contributor
aedelmann
commented
Sep 30, 2019
Hi
@w4tsn
we could reproduce your problem and working on a fix right now, which we will ship in a patch release the next few days.
🎉
1
Copy link
Contributor
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
Have a question about this project?
Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
terms of service
and
privacy statement
. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
OpenAPI Generator - Missing resources
#1964
Closed
philbuettner
opened this issue
Sep 19, 2019
· 0 comments
Closed
OpenAPI Generator - Missing resources
#1964
Pull requests
Actions
Projects
Wiki
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
Have a question about this project?
Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
Sign up for GitHub
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our
terms of service
and
privacy statement
. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
Problem in Payload Mapping Editor for nested entity mappings
#2036
Closed
aedelmann
opened this issue
Oct 22, 2019
· 0 comments
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
New issue
Have a question about this project?
Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our
terms of service
and
privacy statement
. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
Code generators ignoring `multiple` keyword
#2004
Have a question about this project?
Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our
terms of service
and
privacy statement
. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
#2029
Closed
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
optional
The name must match the regular expression:
name('/' name )*
literal
required
a set of literal values
Multiple literal values are separated by
,
It must match the regular expression:
('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
literal description
optional
string
A description for human display.
BNF (Backus normal form)
Example
Entity
Keyword
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
, CVE vulnerability
…
Loading status checks…
5c97f08
aedelmann
closed this in
376849b
Oct 16, 2019
aedelmann
moved this from
In progress
to
Done
in
0.12.2 (10.19)
Oct 17, 2019
mena-bosch
opened this issue
Nov 5, 2019
· 0 comments
Closed
isMultiplicity in vorto generator API still not working
#2057
w4tsn
opened this issue
Nov 5, 2019
· 0 comments
Assignees
Labels
bug
Projects
0.13 (E01.19)
0.12.5
Milestone
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
Security
Insights
More
Code
Issues
Pull requests
· 4 comments
Closed
Gracefully handle certain exceptions
#2062
somesh-kumar
opened this issue
Nov 7, 2019
· 4 comments
Labels
Repository
enhancement
Projects
0.12.5
Milestone
0.12.5
Comments
Copy link
/
vorto
Watch
23
Star
168
Fork
104
Code
Issues
149
Pull requests
6
Actions
Projects
0
Wiki
vorto-examples/Readme.md at master · eclipse/vorto-examples · GitHub
aedelmann
commented
Oct 7, 2019
fixed
🎉
1
aedelmann
closed this
Oct 7, 2019
aedelmann
moved this from
In progress
to
Done
in
0.12.1
Oct 7, 2019
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our
terms of service
and
privacy statement
. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
Generation of models slow due to deep structured mapping resolving
#2049
Closed
aedelmann
opened this issue
philbuettner
opened this issue
Sep 19, 2019
· 0 comments
Labels
Code Generators
bug
Projects
0.12.2 (10.19)
Milestone
0.12.2
Comments
Copy link
Quote reply
Contributor
philbuettner
commented
By clicking “Sign up for GitHub”, you agree to our
terms of service
and
privacy statement
. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
Editor creates duplicates of fields
#2058
Closed
demetz
opened this issue
Nov 6, 2019
· 0 comments
Closed
Editor creates duplicates of fields
Closed
Problem in Payload Mapping Editor for nested entity mappings
#2036
aedelmann
opened this issue
Oct 22, 2019
· 0 comments
Labels
blocker
bug
Milestone
0.12.3
Comments
Copy link
Quote reply
Contributor
aedelmann
commented
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Closed
gitolicious
opened this issue
Oct 8, 2019
· 2 comments
Closed
Code generators ignoring `multiple` keyword
#2004
gitolicious
opened this issue
Oct 8, 2019
· 2 comments
Labels
bug
Projects
0.12.2 (10.19)
aedelmann
opened this issue
Oct 17, 2019
· 3 comments
Closed
#2029
aedelmann
opened this issue
Oct 17, 2019
· 3 comments
Labels
Mappings
Projects
0.12.3
Milestone
0.12.3
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Required
Data type
Description
vortolang
required
string
Identifies which vortolang version used to define the Enumeration. Currently '1.0'
namespace
required
string
The name must match the regular expression:
name('.' name )*
version
required
string
The name must match the regular expression:
/^\d+\.\d+\.\d+(-\\w+)*$/
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
mentioned this issue
Jan 8, 2020
Security: tomcat-embed 8.5.41 is vulnerable to CVE-2019-17563
#2201
Closed
Sign up for free
to join this conversation on GitHub
. Already have an account?
Sign in to comment
Assignees
No one assigned
Labels
Refactoring
Projects
1 closed project
0.12.2 (10.19)
Done
0.12.5
Comments
Copy link
Quote reply
Contributor
w4tsn
commented
Nov 5, 2019
The isMultiplicity of a property in the generators API is still not behaving as expected in every scenario.
I tested the ditto schema generator on a vorto 0.12.4 instance and build the schema generator with the plugin api v0.12.4. The
multiple -> array
branches of the code aren't executed.
How to reproduce
The resulting schema is this
I'd expect it to be:
aedelmann
Actions
Projects
Wiki
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
Have a question about this project?
Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our
Quote reply
Contributor
somesh-kumar
commented
Nov 7, 2019
•
edited
There are quite a few exceptions in production logs due to:
Session invalid
User does not have permissions to access a model
Invalid characters used in search
Actual
: ERROR is thrown
Expected
: Handle these exceptions gracefully with an INFO message. Identify if there are more such exceptions which do not need to be thrown as an ERROR.
aedelmann
added
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
New issue
Have a question about this project?
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Security
Sign up for free
to join this conversation on GitHub
. Already have an account?
Sign in to comment
Assignees
No one assigned
Labels
Code Generators
bug
Projects
1 closed project
0.12.1
Done
Milestone
0.12.1
Linked pull requests
Successfully merging a pull request may close this issue.
Oct 25, 2019
· 0 comments
Closed
Generation of models slow due to deep structured mapping resolving
#2049
aedelmann
opened this issue
Oct 25, 2019
· 0 comments
Labels
Code Generators
Mappings
Milestone
0.12.4
Comments
Copy link
Quote reply
Sep 19, 2019
•
edited
https://apidocs.bosch-iot-suite.com/?urls.primaryName=Bosch%20IoT%20Things%20-%20API%20v2#/
.
For the purpose of completion, these resources should also be available in the generated documentation.
Details:
/things resource should be added to the generated openAPI specifications. The return type should use the generic "Things" schema defined by IoT Things REST API.
aedelmann
added the
Code Generators
label
Sep 24, 2019
aedelmann
added this to the
0.12
milestone
#2058
demetz
opened this issue
Nov 6, 2019
· 0 comments
Labels
bug
Projects
0.13 (E01.19)
0.12.5
Milestone
0.12.5
Comments
Copy link
Quote reply
demetz
commented
Oct 22, 2019
Steps to reproduce:
Create Information model with Function block referencing an enitity. This entity referencing another entity
Create Payload Mapping for the Information Model.
Save the model
Expected: Model is serialised to Vorto Mapping DSLs successfully. Payload Mapping is saved. Mapping Editor UI shows updated spec.
Actual: Serialization to Mapping DSL for 2nd nested entity is not correct and in wrong namespace. Mapping Editor UI hangs
aedelmann
added
bug
blocker
labels
Oct 22, 2019
aedelmann
added this to the
0.12.3
milestone
Accept
Reject
Save preferences
Milestone
0.12.2
Comments
Copy link
Quote reply
gitolicious
commented
Oct 8, 2019
multiple
keyword, the resulting code does not include an array but an object.
Steps to reproduce:
https://vorto.eclipse.org/
Use the schema generators.
Expected result:
According to
Comments
Copy link
Quote reply
Contributor
aedelmann
commented
Oct 17, 2019
•
edited
Motivation:
https://stackoverflow.com/questions/58411197/parsing-non-fixed-format-binary-payload-with-a-custom-javascript-conversion-in-v
Confirmations:
Current workaround:
aedelmann
Reject
Save preferences
displayname
optional
string
a name of the enumeration model for human display
description
optional
string
A description for human display.
category
optional
string
Custom tag to categorize the model, e.g. sensor, smarthome/kitchen etc.
The name must match the regular expression:
name('/' name )*
using
Milestone
0.12.2
Linked pull requests
Successfully merging a pull request may close this issue.
None yet
2 participants
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
added this to
To Do
in
0.13 (E01.19)
Nov 8, 2019
aedelmann
added this to the
1.0-M1
milestone
Nov 8, 2019
aedelmann
added the
bug
label
Nov 8, 2019
aedelmann
moved this from
To Do
terms of service
and
privacy statement
. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
Add BooleanPropertyAttribute and EnumLiteralPropertyAttribute to the Swagger specification
#2116
Closed
kolotu
opened this issue
Nov 27, 2019
· 1 comment
Closed
enhancement
Repository
labels
Nov 7, 2019
aedelmann
added this to the
1.0-M1
milestone
Nov 7, 2019
aedelmann
added this to
To Do
in
0.13 (E01.19)
Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our
terms of service
and
privacy statement
. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
Loading of mapping models with 2+ very slow
#2193
Closed
We've detected that JavaScript is disabled in your browser. Would you like to proceed to legacy Twitter?
Yes
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
None yet
2 participants
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Contributor
aedelmann
commented
Oct 25, 2019
This problem occurs, that generator invocation is extremely slow for bigger models. The mappings for the generator are always resolved unnecessarily upon every invocation which impacts performance.
aedelmann
added
Code Generators
Mappings
labels
Oct 25, 2019
aedelmann
added this to the
0.12.4
milestone
Oct 25, 2019
Sep 24, 2019
aedelmann
added this to
To do
in
0.12 (E09.19)
Sep 27, 2019
aedelmann
added the
bug
label
Sep 27, 2019
aedelmann
moved this from
To do
to
In progress
in
Nov 6, 2019
In some cases, the editor creates duplicates of the operation and event properties.
After saving, the model is modified to:
aedelmann
added the
bug
label
Nov 7, 2019
aedelmann
added this to the
1.0-M1
milestone
Nov 7, 2019
aedelmann
added this to
To Do
in
Oct 22, 2019
aedelmann
added a commit that referenced this issue
Oct 22, 2019
Fixes
#2036
Loading status checks…
968ceb0
aedelmann
added a commit that referenced this issue
Oct 22, 2019
Fixes
#2036
Loading status checks…
ae45b98
aedelmann
added a commit that referenced this issue
the Vortolang specification
multiple
optional
Indicates if the property is an array type
I am expecting an attribute
values
of type array to be created.
Actual result:
The
multiple
keyword is ignored and an object of type
number
instead of an array is generated.
JSON Schema:
Ditto:
Bosch IoT Suite - Digital Twin API:
Bosch IoT Suite - Connect device with Java:
aedelmann
added the
Mappings
label
Oct 17, 2019
aedelmann
added this to the
1.0-M1
milestone
Oct 17, 2019
aedelmann
added this to
To Do
in
0.13 (E01.19)
Oct 17, 2019
Copy link
glennergeerts-aloxy
required
A set of
Model Reference
s
Defines the imported models that are referenced by this Entity
extends
optional
Entity
name
Expresses inheritance of entities
properties
optional
A set of
Model Property
elements
A set of
Model Property
elements
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
optional
to
In Progress
in
0.13 (E01.19)
Nov 20, 2019
aedelmann
added a commit that referenced this issue
Nov 20, 2019
Fixes
#2057
Loading status checks…
13af2b6
aedelmann
self-assigned this
Nov 20, 2019
aedelmann
closed this in
Add BooleanPropertyAttribute and EnumLiteralPropertyAttribute to the Swagger specification
#2116
kolotu
opened this issue
Nov 27, 2019
· 1 comment
Labels
bug
Projects
0.12.5
Milestone
0.12.5
Comments
Copy link
Quote reply
Member
Nov 8, 2019
aedelmann
moved this from
To Do
to
In Progress
in
0.13 (E01.19)
Nov 20, 2019
aedelmann
self-assigned this
Nov 20, 2019
aedelmann
added this to
To do
in
0.12.5
Nov 28, 2019
aedelmann
opened this issue
Jan 2, 2020
· 0 comments
Closed
Loading of mapping models with 2+ very slow
#2193
aedelmann
opened this issue
Jan 2, 2020
· 0 comments
Labels
Mappings
Milestone
0.12.6
Comments
Copy link
Something went wrong, but don’t fret — let’s give it another shot.
document.cookie = decodeURIComponent("gt=1320446883047874562; Max-Age=10800; Domain=.twitter.com; Path=/; Secure");
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
Issues · eclipse/vorto · GitHub
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
aedelmann
closed this in
690e31c
Oct 25, 2019
aedelmann
added a commit that referenced this issue
Oct 25, 2019
Fixes
#2049
1d4f12b
JulianFeinauer
added a commit to JulianFeinauer/vorto that referenced this issue
Jun 27, 2020
Fixes
eclipse#2049
399f1c3
Sign up for free
0.12 (E09.19)
Sep 27, 2019
aedelmann
moved this from
In progress
to
To do
in
0.12 (E09.19)
Sep 27, 2019
aedelmann
removed this from
To do
in
0.12 (E09.19)
Sep 27, 2019
aedelmann
added this to
0.13 (E01.19)
Nov 8, 2019
aedelmann
moved this from
To Do
to
In Progress
in
0.13 (E01.19)
Nov 18, 2019
kolotu
added a commit to bosch-io/vorto that referenced this issue
Nov 19, 2019
Make content in event and operation blocks required.
Fixed
eclipse#2058
…
Loading status checks…
Oct 22, 2019
Fixes
#2036
Loading status checks…
539d0d2
aedelmann
closed this in
75a2cfa
Oct 22, 2019
Sign up for free
to join this conversation on GitHub
. Already have an account?
Sign in to comment
Assignees
No one assigned
Labels
blocker
added this to
To do
in
0.12.2 (10.19)
Oct 10, 2019
aedelmann
added the
bug
label
Oct 10, 2019
aedelmann
added this to the
0.12.2
milestone
Oct 10, 2019
commented
Oct 17, 2019
Allowing for loops in the javascript engine is a part of the solution indeed.
👍
1
aedelmann
added this to
To do
in
0.12.3
Oct 24, 2019
aedelmann
removed this from
To Do
in
BNF (Backus normal form)
Example
Dictionary
A
dictionary
describes values in a map.
Example
Model Property
Keyword
Required
Description
extension
optional
Indicates that the property is extended from a supertype with additional meta data
mandatory or optional
optional
Whether the property is mandatory or optional. Default is optional.
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
4c88091
Nov 20, 2019
aedelmann
moved this from
In Progress
to
Done
in
0.13 (E01.19)
Nov 20, 2019
aedelmann
modified the milestones:
1.0-M1
,
0.12.5
Dec 2, 2019
aedelmann
kolotu
commented
Nov 27, 2019
BooleanPropertyAttribute and EnumLiteralPropertyAttribute are existing in the vortolang 1.0, but are not yet included in the Swagger specification. They should be placed under schemas / ModelProperty / attributes.
aedelmann
added this to
To Do
in
0.13 (E01.19)
Nov 27, 2019
aedelmann
added the
bug
label
Nov 27, 2019
aedelmann
added this to
aedelmann
removed this from
In Progress
in
0.13 (E01.19)
Nov 28, 2019
aedelmann
modified the milestones:
1.0-M1
,
0.12.5
Nov 28, 2019
aedelmann
removed their assignment
Nov 29, 2019
Copy link
Contributor
Quote reply
Contributor
aedelmann
commented
Jan 2, 2020
Steps taken:
Create Infomodel referencing 3 Function Block Models
Create Payload Mapping for Information Model
Expected: Mapping Editor opens and is ready to be used in less than 5 seconds
Actual: Mapping Editor opens and is ready to be used in 20+ seconds
aedelmann
added the
Mappings
label
Jan 2, 2020
aedelmann
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
to join this conversation on GitHub
. Already have an account?
Sign in to comment
Assignees
No one assigned
Labels
Code Generators
Mappings
Projects
None yet
Milestone
0.12.4
Linked pull requests
Successfully merging a pull request may close this issue.
None yet
1 participant
© 2020 GitHub, Inc.
To do
in
0.12.1
Sep 30, 2019
aedelmann
removed this from the
0.12
milestone
Sep 30, 2019
aedelmann
removed this from
To do
in
0.12.1
Oct 3, 2019
aedelmann
added this to
cf8eaff
kolotu
added a commit to bosch-io/vorto that referenced this issue
Nov 20, 2019
Adapt tests to reflect that empty events and operations blocks are no…
…
Loading status checks…
a99aeca
aedelmann
closed this in
4739a51
Nov 20, 2019
aedelmann
moved this from
In Progress
to
bug
Projects
None yet
Milestone
0.12.3
Linked pull requests
Successfully merging a pull request may close this issue.
None yet
1 participant
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
aedelmann
moved this from
To do
to
In progress
in
0.12.2 (10.19)
Oct 11, 2019
Copy link
Contributor
aedelmann
commented
Oct 15, 2019
fixed.
aedelmann
closed this
Oct 15, 2019
0.13 (E01.19)
Oct 24, 2019
aedelmann
modified the milestones:
1.0-M1
,
0.12.3
Oct 24, 2019
aedelmann
moved this from
To do
to
In progress
in
0.12.3
Oct 24, 2019
aedelmann
multiple
optional
Indicates if the property is an array type
with
optional
additional meta - data about the property, such as measurementUnit or if the property is readable or writable
BNF (Backus normal form)
Further links
Describing a device with Vorto in 5 minutes
Describing a TI SensorTag
Go
© 2020 GitHub, Inc.
Terms
added this to
Done
in
0.12.5
Dec 3, 2019
aedelmann
added a commit that referenced this issue
Dec 16, 2019
Resolved merge conflict for
#2057
bb868b4
Sign up for free
to join this conversation on GitHub
. Already have an account?
Sign in to comment
Assignees
aedelmann
To do
in
0.12.5
Nov 28, 2019
aedelmann
added this to the
0.12.5
milestone
Nov 28, 2019
aedelmann
removed this from
To Do
in
0.13 (E01.19)
Nov 28, 2019
Copy link
Contributor
t-gauss
mena-bosch
commented
Dec 4, 2019
Having a look.
Copy link
Contributor
mena-bosch
commented
Dec 4, 2019
Hi
@somesh-kumar
@aedelmann
, I've started having a look and so far, I can categorize a couple of those cases, based on the error messages I got from AWS.
However, I'm having a hard time replicating anything consistently - maybe either of you can help me do that locally in an ad-hoc "discovery" session.
Session invalid --> suspect AbstractRepositoryController#unAuthorized --> change logging level would do.
User does not have permissions to access a model --> maybe this matches one or more of the exception handlers in AbstractRepositoryOperation#doInSession? In which case, either lower the logging level to warn or see caller if rethrown?
Invalid characters in search --> we had an initial conversation with Somesh but I forgot where we left it. It seems that spamming a few search requests containing the % character in the prod server consistently fails, but no e-mail seems to be sent after the threshold. The same fails locally, but is intercepted at Spring level. URL-encoding the text at front-end controller level doesn't seem to do anything.
added this to the
0.12.6
milestone
Jan 2, 2020
aedelmann
added a commit that referenced this issue
Jan 2, 2020
Fixes
#2193
36dd683
aedelmann
closed this
Jan 2, 2020
Sign up for free
to join this conversation on GitHub
. Already have an account?
Sign in to comment
Sign up
eclipse
/
vorto-examples
Watch
9
Star
15
Fork
8
Code
Issues
5
Pull requests
1
Actions
Security
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
To do
in
0.12.2 (10.19)
Oct 10, 2019
aedelmann
added this to the
0.12.2
milestone
Oct 10, 2019
aedelmann
moved this from
To do
to
In progress
in
0.12.2 (10.19)
Oct 10, 2019
Done
in
0.13 (E01.19)
Nov 20, 2019
aedelmann
modified the milestones:
1.0-M1
,
0.12.5
Dec 2, 2019
aedelmann
added this to
Done
in
0.12.5
Dec 3, 2019
aedelmann
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
aedelmann
moved this from
In progress
to
Done
in
0.12.2 (10.19)
Oct 15, 2019
Copy link
Contributor
w4tsn
commented
Oct 29, 2019
•
edited
I'm still having this issue.
I tested the ditto schema generator on a vorto 0.12.4 instance and build the schema generator with the plugin api v0.12.4. The
added a commit that referenced this issue
Oct 24, 2019
Fixed
#2029
Loading status checks…
a0c0785
aedelmann
added a commit that referenced this issue
Oct 24, 2019
Fixed
#2029
Loading status checks…
af1b785
aedelmann
closed this
Oct 24, 2019
Copy link
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
Labels
bug
Projects
2 closed projects
0.13 (E01.19)
Done
0.12.5
Done
Milestone
0.12.5
Linked pull requests
Successfully merging a pull request may close this issue.
None yet
2 participants
© 2020 GitHub, Inc.
Terms
Privacy
commented
Dec 6, 2019
I will have a look
aedelmann
moved this from
To do
to
In progress
in
0.12.5
Dec 9, 2019
t-gauss
pushed a commit to bosch-io/vorto that referenced this issue
Dec 11, 2019
Added missing property type description.
Fixes
eclipse#2116
…
@somesh-kumar
can we discuss replication again, and the last actions you've taken after our internal discussion? Your last statement was: "still waiting for an exception email to come to me, hoping we get the same error"
Copy link
Contributor
mena-bosch
commented
Dec 6, 2019
PR
here
.
As mentioned, my change set is weaksauce for now: it only lowers some logging levels to warning.
Per se, this should not be dangerous given the use cases, but it might contribute to clear some of the AWS threshold occurrences.
My take is we can iterate further once this is merged, and see if there is something missed out.
aedelmann
Assignees
No one assigned
Labels
Mappings
Projects
None yet
Milestone
0.12.6
Linked pull requests
Successfully merging a pull request may close this issue.
None yet
1 participant
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
Permalink
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
philbuettner
pushed a commit to philbuettner/vorto that referenced this issue
Oct 10, 2019
Fixes
eclipse#1964
: Updated reference
…
4241469
aedelmann
closed this in
51f82d0
Oct 10, 2019
aedelmann
moved this from
added a commit that referenced this issue
Dec 16, 2019
Make content in event and operation blocks required.
Fixes
#2058
(
#2084
)
…
ec69156
Sign up for free
to join this conversation on GitHub
. Already have an account?
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
multiple -> array
branches of the code won't get executed still.
The resulting schema is this
I'd expect it to be:
w4tsn
mentioned this issue
Nov 4, 2019
'multiple' keyword for properties not implemented
w4tsn/vorto-ditto-skeleton-generator#2
Open
Sign up for free
to join this conversation on GitHub
. Already have an account?
Sign in to comment
Assignees
No one assigned
Contributor
Author
aedelmann
commented
Oct 24, 2019
fixed in 0.12.3
👍
1
Copy link
glennergeerts-aloxy
commented
Oct 24, 2019
thanks, will try to test this shortly
👍
1
aedelmann
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
Loading status checks…
d850b60
aedelmann
closed this in
2c0768f
Dec 11, 2019
aedelmann
moved this from
In progress
to
Done
in
0.12.5
Dec 12, 2019
aedelmann
added a commit that referenced this issue
Dec 16, 2019
Added missing property type description.
moved this from
To do
to
In progress
in
0.12.5
Dec 9, 2019
Copy link
Contributor
aedelmann
commented
Dec 11, 2019
Hi
@mena-bosch
With your fix, lets keep an eye on the logs and see if your changes improved it. Nevertheless, I would recommend to specify an Exception Handling concept, with all possible errors that could occur in the system and define the measures that need to be taken. Lets create a separate issue for that. I would close this issue.
aedelmann
closed this
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
master
vorto-examples
/
vorto-dsl-integration
/
Readme.md
Go to file
Go to file
T
Go to line
L
Copy path
Cannot retrieve contributors at this time
137 lines (89 sloc)
5.04 KB
Raw
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
eclipse
/
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
In progress
to
Done
in
0.12.2 (10.19)
Oct 11, 2019
philbuettner
pushed a commit to philbuettner/vorto that referenced this issue
Oct 29, 2019
Fixes
eclipse#1964
: Added missing resources
…
51043d5
aedelmann
added a commit that referenced this issue
Sign in to comment
Assignees
No one assigned
Labels
bug
Projects
2 closed projects
0.13 (E01.19)
Done
0.12.5
Done
Milestone
0.12.5
Linked pull requests
Successfully merging a pull request may close this issue.
None yet
Save preferences
Labels
bug
Projects
1 closed project
0.12.2 (10.19)
Done
Milestone
0.12.2
Linked pull requests
Successfully merging a pull request may close this issue.
None yet
3 participants
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
added a commit that referenced this issue
Oct 24, 2019
Fixed
#2029
(
#2044
)
…
Verified
This commit was created on GitHub.com and signed with a
verified signature
using GitHub’s key.
GPG key ID:
4AEE18F83AFDEB23
Learn about signing commits
Loading status checks…
c2ce886
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Fixes
#2116
(
#2169
)
…
5de4335
Sign up for free
to join this conversation on GitHub
. Already have an account?
Sign in to comment
Assignees
No one assigned
Labels
bug
Projects
1 closed project
Dec 11, 2019
aedelmann
moved this from
In progress
to
Done
in
0.12.5
Dec 11, 2019
Sign up for free
to join this conversation on GitHub
. Already have an account?
Sign in to comment
Assignees
No one assigned
Labels
Repository
enhancement
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Blame
Reference Vorto Models from your DSL
This tutorial shows you, how you can reference Vorto Models from your custom Xtext DSL Eclipse Plugins.
In this demo, we are going to create a DSL with which you can describe an IoT system aggregating Vorto Information Models.
Prerequisites
Install Eclipse IDE 2018-12 for Java and DSL Developers
Windows
MacOS
Linux
Proceed as follows
vorto
Watch
23
Star
168
Fork
104
Code
Issues
149
Pull requests
Eclipse Vorto
Oct 29, 2019
Fixes
#1964
: Added missing resources (
#2052
)
…
Loading status checks…
5564d12
philbuettner
mentioned this issue
Jan 28, 2020
Xtend template doesn't seem to compile
#2260
Closed
Sign up for free
to join this conversation on GitHub
2 participants
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
JulianFeinauer
added a commit to JulianFeinauer/vorto that referenced this issue
Jun 27, 2020
Fixed
eclipse#2029
(
eclipse#2044
)
…
b796f46
Sign up for free
to join this conversation on GitHub
. Already have an account?
Sign in to comment
Assignees
No one assigned
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
0.12.5
Done
Milestone
0.12.5
Linked pull requests
Successfully merging a pull request may close this issue.
None yet
3 participants
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Projects
1 closed project
0.12.5
Done
Milestone
0.12.5
Linked pull requests
Successfully merging a pull request may close this issue.
None yet
3 participants
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Step 1: Installation of Vorto DSL Plugins
Open Eclipse IDE
Download
Vorto DSL Plugins
and install it as an archive in your Eclipse IDE
Restart your Eclipse
Step 2: Create your DSL Xtext Plugins
Create a new
DSL Xtext Project
File > New > Other > Xtext > Xtext Project
Choose a projectname and language name
Specify a file extension for your language, e.g.
mysdl
Click on
Finish
.
After the wizard is finished, it will create five projects for you.
Your Project Browser would look something like this:
6
Actions
Projects
0
Wiki
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Labels
Eclipse Vorto
Getting started
Release Notes
HTTP API
Case Studies
Testimonials
Contributors
Contact
Language for Digital Twins
Brings a common understanding to your device data.
Device Catalog
Demo
Describe
Vorto provides a simple language to describe IoT device capabilities.
Start today
vorto-examples/extending.md at master · eclipse/vorto-examples · GitHub
. Already have an account?
Sign in to comment
Assignees
No one assigned
Labels
Code Generators
bug
Projects
1 closed project
0.12.2 (10.19)
Done
Milestone
0.12.2
Linked pull requests
Successfully merging a pull request may close this issue.
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
Labels
Mappings
Projects
1 closed project
0.12.3
In progress
Milestone
0.12.3
Linked pull requests
Successfully merging a pull request may close this issue.
None yet
2 participants
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
org.xtext.example.mydsl (core language plugin)
org.xtext.example.mydsl.ide
org.xtext.example.mydsl.ui
org.xtext.example.mydsl.tests
org.xtext.example.mydsl.ui.tests
Step 3: Reference Vorto Models from your DSL
We are primarily interested in the core language plugin, e.g. org.xtext.example.mydsl.
Open the core language plugin and find the *.xtext grammar file
Replace the content with the following grammar:
As you can notice, it imports the Vorto Information Model Ecore and use it from your own DSL grammar.
Open the *.mwe2 Workflow file and add a reference to the Vorto Model Ecore files. Since we only use Vorto Information Models from our DSL, we just reference those.
Open the MANIFEST.MF file and add the following dependencies (under required bundles):
Step 4: Generate Xtext Source Code
If you are behind proxy, you would need to download ANTLR SDK manually, using the following Update Site:
http://download.itemis.com/updates/
. Once done so, please restart the IDE and continue with the following steps:
Find the
35
Milestones
0
Labels
35
Milestones
0
New issue
Have a question about this project?
Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our
terms of service
and
Share
The Vorto Repository is an open platform to share and manage device descriptions.
Check it out
Integrate
Vorto provides tools and libraries that consume device descriptions to integrate devices with various IoT platforms and solutions.
Learn more
Describe
Vorto DSL
temperature
as
Temperature
location
as
Location
namespace
com.acme
version
vorto-dashboard/deviceDashboard.png at master · timgrossmann/vorto-dashboard · GitHub
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Security
None yet
2 participants
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
GenerateMyDsl.mwe2
Workflow file in the core plugin project.
Right-click on the file and Run it. This will generate all necessary Xtext source code in order to run your language as an Eclipse Plugin
Now your language is all set. It's time to test it.
Step 5: Run & Test your DSL
Right-click on the core plugin project (e.g. org.xtext.example.mydsl) and run it in a new Eclipse Workbench. A new Eclipse Workbench instance starts up for your language. It automatically loads all Vorto Eclipse Plugins as well as your DSL plugins.
Create a new simple project
Add a new Vorto Information Model file to the project or download it from the
Vorto Repository
Here is an example of a Vorto Information Model
securitycamera.infomodel
:
Add a new file for your DSL. The autocompletion editor feature kicks in and suggests you the SecurityCamera Information Model to choose for a reference:
Example:
Congratulations
! You have just created a simple Xtext language project which references Vorto Information Models.
Go
© 2020 GitHub, Inc.
privacy statement
. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
149 Open
1,157 Closed
149 Open
1,157 Closed
Author
Filter by author
Label
Filter by label
Use
alt
+
click/return
to exclude labels.
2.0.0
displayname
"Raspberry Pi"
description
"Raspberry Pi with onboard sensor and GPS module"
using
org.eclipse.vorto.Location;
1.0.0
using
org.eclipse.vorto.Temperature;
1.0.0
infomodel
RaspberryPi{
{
}
Describe your first device
Skip to content
Sign up
Why GitHub?
Features
→
Code review
Project management
Integrations
Actions
Packages
Security
Team management
Hosting
Mobile
Customer stories
→
Security
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Learn more
Accept
Reject
Save preferences
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Projects
Filter by project
Milestones
Filter by milestone
Assignee
Filter by who’s assigned
Sort
Sort by
Newest
Oldest
Most commented
Least commented
Recently updated
Least recently updated
Most reactions
👍
👎
Share
The Vorto Repository is an open platform where device manufacturers share Information Models of devices with other IoT Stakeholders, allowing them to easily create solutions using the capabilities of these devices.
Open Repository
Integrate
Vorto harmonises device APIs that helps IoT developers to integrate devices using IoT platforms much quicker, in order to build device-agnostic IoT solutions.
Getting Started
Case studies
Take a look at a few interesting Vorto Case Studies, illustrating the usage of Vorto in real-world IoT Projects.
Eclipse Vorto, the next step in IoT device integration
Learn what the Eclipse Vorto Project is all about
Bosch Security Camera Integration
Read how Vorto integrates Bosch Security Cameras with Bosch IoT Suite.
Harmonizing specific device payloads
Read how to harmonize a Digital Twin API for different device payloads
Testimonials
See what our users have to say about Vorto.
→
Team
Enterprise
Explore
Explore GitHub
→
Learn & contribute
Topics
Collections
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Trending
Learning Lab
Open source guides
Connect with others
Events
Community forum
GitHub Education
GitHub Stars program
Marketplace
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
😄
🎉
😕
❤️
🚀
👀
bug
#2660 opened
Oct 23, 2020
by
tobias-zeptio
9
Add business justification free-text field to the form for requesting namespace access and response from administrator
UX
#2656 opened
Oct 21, 2020
by
“Vorto serves as the intermediary among all the IoT protocols and brings a common understanding to device data. Additionally the code generation infrastructure enables rapid prototyping and easy integration of IoT devices and platforms.”
Oliver Meili,Head of IoT Development - Bosch
“Vorto provides an excellent technology stack to develop platform-agnostic IoT solutions.”
Preston Holmes,Head of IoT Solutions - Google
“Eclipse Vorto provides developers important capabilities for delivering IoT solutions which are platform and language independent.”
Mike Milinkovich,Executive Director - Eclipse
Contributors
The Vorto Project is an open source iniative of the Eclipse Foundation, the following companies have contributed to the codebase.
Robert Bosch GmbH
Contributor
ThingWorx
Contributor
IAS Universität Stuttgart
Contributor
FZI
Contributor
Pricing
Plans
→
Compare plans
Contact Sales
Nonprofit
→
Education
→
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
→
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this repository
All GitHub
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
mena-bosch
Add links API to Swagger documentation
Documentation
good-first-issue
#2651 opened
Oct 19, 2020
by
kolotu
4
Integration tests for generators
coverage
#2649 opened
Oct 16, 2020
by
kolotu
Improve loading time for model info used by the Developer Console
#2633 opened
Eclipse Foundation
Open Source Organization
Hahn Schickard
Contributor
Stats
1809
Described devices
17
Vorto Plugins/Add-ons
66154
Lines of Code
135
Github stars
Contact
To reach out to us, just send us an email.
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
timgrossmann
/
vorto-dashboard
Watch
4
Star
5
↵
Jump to
↵
Sign in
Sign up
eclipse
/
vorto-examples
Watch
9
Star
15
Fork
8
Code
Issues
5
Oct 13, 2020
by
kolotu
Ensure the ElasticSearch service uses caching for namespaces
performance
#2624 opened
Oct 5, 2020
by
mena-bosch
1
Upgrade Spring Boot
#2620 opened
Oct 2, 2020
by
mena-bosch
Investigate how de-coupling JCR workspace ID from user context may allow concurrent model operations to leverage the request-scoped JCR session handler
Refactoring
Vorto Dev Team
Vorto Repository
Your name
Your email address
Message
Copyright Agent
Legal
Terms of Use
Privacy
Community
Security
Fork
0
Code
Issues
9
Pull requests
0
Actions
Projects
1
Security
Insights
More
Code
Issues
Pull requests
Pull requests
1
Actions
Projects
0
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Security
Insights
performance
#2613 opened
Sep 29, 2020
by
mena-bosch
Optimize model mapping retrieval
performance
#2610 opened
Sep 25, 2020
by
mena-bosch
2
Usage of IUserContext.getWorkspaceId()
bug
#2607 opened
Actions
Projects
Security
Insights
Permalink
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
master
vorto-dashboard
/
assets
/
deviceDashboard.png
Permalink
Dismiss
Join GitHub today
GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.
Sign up
master
vorto-examples
/
vorto-dashboard
/
extending.md
Go to file
Go to file
T
Go to line
L
Copy path
Cannot retrieve contributors at this time
Sep 23, 2020
by
t-gauss
Ditto Thing JSON Generator on Functionblocks
Code Generators
#2605 opened
Sep 23, 2020
by
kolotu
1
Multiline copyright headers in Vortolang .type files missing after importing ZIP file
bug
#2600 opened
Sep 18, 2020
by
hristobojilov
3
Go to file
Go to file
T
Go to line
L
Copy path
Cannot retrieve contributors at this time
252 KB
Download
Go
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
67 lines (43 sloc)
3.67 KB
Raw
Blame
Extending the Dashboard with custom widgets
Note
In order to work with the development environment and get actual data from things, you have to start two processes.
The React Frontend dev server using
npm start
(sudo on Unix)
The NodeJS Backend that polls the data from things using
node index.js config.json
Step by Step creating a custom Card
1.
Open the project and duplicate the TemplateCard folder
2.
Allow users to cascade-delete their technical users when deleting their own account
#2597 opened
Sep 18, 2020
by
mena-bosch
Implement technical user creation quota
#2596 opened
Sep 18, 2020
by
mena-bosch
Allow disabling OAuth providers through configuration
bug
#2591 opened
Sep 10, 2020
by
kolotu
Provide a direct link for collaborators to request a change in their roles on a given namespace in the notifications
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
Rename the copy to your to be created Card type
3.
In
utils/cardUtils.js
, add a new category to the
CATEGORIES
4.
In the
mapDeftoCardCategories
CATEGORIES.XYZ
to the name of the category you just created.
5.
In the
views/DeviceDashboard/DeviceDashboard
, add a new case to the switch-statement of the
mapCategorieToCard
enhancement
#2578 opened
Sep 1, 2020
by
mena-bosch
Allow users to remove themselves from a namespace
privacy
#2577 opened
Sep 1, 2020
by
mena-bosch
Display progress indication with minimal output information when restoring a repository
Infrastructure
Repository
UX
#2574 opened
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
6.
The last step is to set up the card itself. Head to the file of your card, get the values that should be displayed and create your the integration in the second
<Row>
element.
Already implemented Mappings
Specific
Temperature
:
Requires FB
org.eclipse.vorto:Temperature:1.0.0
or
integration of
org.eclipse.vorto.types:SensorValue:1.0.0
in status
Battery
:
Requires FB
Aug 31, 2020
by
mena-bosch
1
Display an "outage" banner across all pages in the Vorto repository conditionally
UX
#2573 opened
Aug 31, 2020
by
mena-bosch
Mapping page: UX issues
UX
cosmetics
#2547 opened
Aug 19, 2020
by
t-gauss
Opening mapping dialogue takes very long if the model has references
Learn more
Accept
Reject
Save preferences
org.eclipse.vorto:Battery:1.0.0
or
integration of
org.eclipse.vorto.types:Percentage:1.0.0
in status
Location
:
Requires FB
org.eclipse.vorto:Location:1.0.0
or
org.eclipse.vorto:Geolocation:1.0.0
General
Gauge
:
Requires Integration of
org.eclipse.vorto.types:SensorValue:1.0.0
in status
UX
performance
#2546 opened
Aug 19, 2020
by
t-gauss
Meta Model / DSL
bug
#2540 opened
Aug 18, 2020
by
mena-bosch
Enabling Eclipse as an authentication provider alongside GitHub makes usernames potentially non-unique and potentially breaks access control
bug
security
#2529 opened
Percentage
:
Requires Integration of
org.eclipse.vorto.types:SensorValuePercentage:1.0.0
in status
Barchart with 3 Bars
:
Requires Integration of
org.eclipse.vorto.types:Sensor3DValue:1.0.0
in status
Image
:
Requires Integration of
org.eclipse.vorto:Image:1.0.0
State Number
Requires Integration of
com.ipso.smartobjects:Presence:1.1.0
Aug 17, 2020
by
mena-bosch
3
Ease on the restriction to delete a user if they only "own" a private namespace
UX
#2528 opened
Aug 17, 2020
by
mena-bosch
Empty mapping dialogue
cosmetics
#2527 opened
Aug 17, 2020
by
t-gauss
Previous
Connectivity
Requires Integration of
org.eclipse.vorto.types:ConnectivityStatus:1.0.0
in status
JSON
:
Doesn't require any additional work, every FB without more specific mapping will be displayed as JSON code
Go
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
Status
Help
Contact GitHub
Pricing
1
2
3
4
5
6
Next
Previous
Next
ProTip!
Adding
no:label
will show everything without a label.
© 2020 GitHub, Inc.
Terms
Privacy
Cookie Preferences
Security
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window.
Reload
to refresh your session.
You signed out in another tab or window.
Reload
to refresh your session.
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
Learn more
.
Accept
Reject
We use
optional
third-party analytics cookies to understand how you use GitHub.com so we can build better products.
You can always update your selection by clicking
Cookie Preferences
at the bottom of the page. For more information, see our
Privacy Statement
.
Essential cookies
Learn more
Always active
Analytics cookies
We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task.
Learn more
Accept
Reject
Save preferences
Eclipse Vorto: Interoperability for the Internet of Things - JAXenter
is where the Java community meets!
Join us next week, October 7-10 - kicking off in:
days
0
-38
-5
hours
-1
-2
minutes
-2
-8
seconds
-2
-8
Toggle navigation
News
Articles
JAX Magazine
DevOpsCon 2020
search
Java
DevOps
Machine Learning
Serverless
Blockchain
JavaScript
NetBeans
Careers
Tutorials
Check out the latest:
Introducing new JVM language Concurnas
Meet us in London: International JavaScript Conference, September 2 – 4, 2020
Angular Elements: Where no one has gone before
JAX Magazine: Exploring the IoT universe
Eclipse Vorto to the rescue
Eclipse Vorto: Interoperability for the Internet of Things
April 25, 2016
Jeroen Laverman, Jochen Scheib, Marco Wagner, Olaf Weinmann
#eclipse
#iot
Internet of Things
image via Shutterstock
Interoperability is one of the key topics in the Internet of Things – and at the heart of this is the way in which individual, connected components work together. Communication between these elements makes sense only if the underlying language can actually be understood by the devices involved. Yet from a technological perspective, this can be difficult to achieve due to the wide variety of existing communication protocols. As a result, this calls for some means of translating between the individual languages.
Eclipse Vorto is an open source project set up to address this issue. It provides the technical capability required to describe the devices to be interconnected and their messages and helps define relevant mappings for translations. The aim of this article is to provide an overview of the project and demonstrate its potential applications based on two detailed examples.
Vorto components
It is common knowledge that industry consortia and standardization organizations are working on various projects to define and standardize abstract descriptions for electronic devices. Some of this work is domain-specific, whereas some reaches across domain boundaries. Eclipse Vorto deliberately takes a technological approach that does not prescribe any one standard. Instead, it provides a handy toolkit designed to integrate smart devices into IoT platforms or applications, reduce the development work required, and facilitate interoperability. Vorto consists of the following three technical components:
Vorto IoT toolset
Vorto repository
Code generator infrastructure
The IoT toolset is a well-structured and easy-to-use Eclipse application that enables users to create device descriptions known as “information models” on the basis of Vorto DSL (domain- specific language). As well as standard features such as syntax highlighting, auto completion, validation, etc., the toolset also offers integration with the Vorto Repository, which allows users to browse, check in, and check out information models. Code generators can also be run from within the toolset.
The key to Vorto component usability is ensuring that users do not have new formats “forced” on them. That’s why Vorto offers mechanisms that allow users to incorporate code generators, as these can convert Vorto-format device descriptions into different formats. Available formats include programming languages such as Java and C++, as well as formats for documentation purposes such as Markdown representations. It is also possible, however, to transform the models into formats defined by the standardization organizations and industry consortia mentioned above. Ultimately this means that users can retain their previously chosen format for device abstraction while still benefiting from the features of the Vorto project.
Example: communication in an automotive environment
Bosch Corporate Research is currently conducting a research project that uses Eclipse Vorto to describe the vehicle-to-cloud interface. The key data and services required for communication at this vehicle-to-cloud interface can be represented using Vorto. This makes these services and data available in a machine-readable format, which in turn makes automatic processing much simpler. In addition, the use of a common description language breaks down the barriers that still exist between the (physical) vehicle world and the (virtual) Internet of Things.
SetTime
procedure to start up the block heater at a specified time.
Services can also offer events that others can subscribe to. For example, to actually use the vehicle after warming it up, you need some charge in the battery. In this case, the battery could offer a service that allows you to check the battery charge level – and a “low battery” message would also be useful. An extract of the description can be seen in Listing 1, which uses the examples of the
BatteryStatus
and
VehicleCommonDataType
data types defined by W3C Vehicle Data [1].
To generate code for communication on the basis of the descriptions discussed above, you also need corresponding mappings. These contain information on addressing modes, for example, as well as other protocol specifications used by the code generator.
A demonstrator was set up to evaluate the concept and to show how all the information required for communication can be generated on the basis of the existing Vorto description. It consists of three components: The electronic control unit (ECU) provides a service (e.g.
Battery
), which is made available to an external application via the connectivity control unit (CCU).
ASOME/IP implementation is used for communication inside the vehicle. SOME/IP is a service-oriented middleware solution specially developed and standardized for the automotive industry. External communication with the application makes use of the RESTful protocol CoAP, which is widely used in IoT environments.
Eclipse Californium is put to use here: the CoAP server and client implementations based on Eclipse Californium are currently being generated on the CoAP side. Looking beyond what is possible today, one option for SOME/IP in the future would be to generate the configuration file, which contains information including the description of the services. Eventually, the mapping table available in the CCU, which is used to translate between the two protocols, can be generated from the Vorto model and the mappings for CoAP and SOME/IP.
SEE ALSO:
A simple way to look at Eclipse IoT
Example: interoperability in the Industry 4.0 environment
The semantic description of machines and field devices is playing an increasingly important role in industrial automation, particularly in the context of the fourth industrial revolution and the Internet of Things. Bosch Rexroth is one of several companies investigating potential applications for semantic descriptions in industrial automation.
The modularization of machines offers an opportunity to reduce complexity and increase the reusability of source code. Coupled with the distribution of the application across multiple resources, this facilitates the development of a flexible control architecture. One prerequisite is an efficient communication infrastructure that makes communication possible both locally and across a network infrastructure.
A further prerequisite is a description of the interfaces in order to enable interoperable communication. Bosch Rexroth is therefore carrying out projects to investigate various possibilities, including the use of the Eclipse Vorto Toolset in combination with technologies that are already established and standardized in industrial automation, such as AutomationML.
Representing production systems in the form of skills makes it possible to describe the underlying technical potential provided by a resource in a production system [2]. Resources can be divided into three basic categories:
Mechatronic systems (e.g. autonomous production systems and machines)
Mechatronic machine modules (self-contained assemblies such as a gripper)
Mechatronic device components (i.e. field devices [3])
Eclipse Vorto offers an optimum way to describe the skills of resources. What it does not offer, however, is a means of storing interdisciplinary information. This might include additional engineering data such as CAD drawings, process behaviors, or documentation on individual resources. Information from the overall system context (e.g. installation site and equipment identifier) also lies outside the scope of Vorto, even though this information is extremely important for developing production systems.
It is in this context that AutomationML has established itself as a container format in many areas of industrial automation. AutomationML is an XML format based on the CAEX standard (IEC 62424), and is used to describe system topologies, geometries and kinematics (COLLADA), logic and behavior (PLCopen XML) and semantics on the basis of libraries [4].
SystemUnitClass
) in AutomationML make it possible to comprehensively model a resource and describe its own skills by incorporating an information model.
Embedding is carried out through a reference to the corresponding information model in the local or public Vorto Repository. References to external resources used by a specific resource can be modeled by a corresponding relation (interface) in AutomationML. Thanks to AutomationML’s instance hierarchy, it is then possible to model a complete production system. This is shown here based on a sample system.
The next step in the project is to investigate the potential applications of Vorto code generators in order to generate a communication framework for programmable logic controllers and enable the networking of resources.
Links & references
[1] “W3C Working Draft 19 January 2016”, W3C: https://www.w3.org/TR/vehicle-data (last updated: January 19, 2016)
[2] Schleipen, Miriam et al.: “AutomationML to describe skills of production plants based on the PPR concept”, 3
rd
AutomationML user conference, 2014
[3] Scheib, Jochen: “Modulares Engineering als Wegweiser für verteilte intelligente Systeme”, SPS/IPC/Drives conference proceedings, 2014
[4] “AutomationML – Fachexperten erklären das Format”, SPS-Magazin, 2013: http://www.sps-magazin.de/downloads/WhitepaperAutomationML.pdf (last updated: February 3, 2016)
Be the first to share this article with your network!
Author
Jeroen Laverman, Jochen Scheib, Marco Wagner, Olaf Weinmann
All Posts by Jeroen Laverman, Jochen Scheib, Marco Wagner, Olaf Weinmann
Recommended For You
Name*
Email*
Website
Name*
Email*
Website
0
Comments
Inline Feedbacks
View all comments
Join us Online!
Featured Posts
Technology as a Source for Good
Address decision fatigue – before it turns code into spaghetti
A Developer’s Guide to Cloud Costs
Women in Tech: “Curiosity and support are essential for STEM careers”
Tweets by @JAXenterCOM
Tips, tricks and tutorials
A hands-on tutorial on how to test against 12 different JVM’s using TestContainers
Avoid the Enemy! This is a simple game made with Kree.
Topics
Java
DevOps
Machine Learning
Serverless
Blockchain
JavaScript
NetBeans
Careers
Tutorials
Pages
Contact
Newsletter
Authors
Found a bug?
Advertise
Privacy Policy
Terms of Use
Imprint
Follow JAXenter
Twitter
Facebook
RSS
S&S Media
JAXenter.de
JAX London
JAX Germany
DevOpsCon
International PHP Conference
Webinale
S&S Media
Software & Support Media Group
Contact
Masterclass Terms & Conditions
var templateDirUrl = 'https://jaxenter.com/wp-content/themes/jaxenter.com';
Insert
Vorto - Eclipsepedia
document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );
Skip to main content
Log in
Manage Cookies
Download
Projects
Working Groups
Members
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
More
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
Toggle navigation
Breadcrumbs
Home
Eclipse Wiki
Vorto
Jump to:
navigation
,
search
---Navigation---
Main Page
Community portal
Current events
Recent changes
Random page
Help
Navigation
Main Page
Community portal
Current events
Recent changes
Random page
Help
---Toolbox---
Page information
Permanent link
Printable version
Special pages
Related changes
What links here
Toolbox
Page information
Permanent link
Printable version
Special pages
Related changes
What links here
Page
Discussion
View source
History
Vorto
Eclipse Vorto
Website
Download
Community
Mailing List
•
Forums
•
IRC
•
mattermost
Issues
Open
•
Help Wanted
•
Bug Day
Contribute
Browse Source
The Vorto project is an approach to leverage the standardization of so called Information Models. Information models are abstract representations of real world devices following a meta information model which is also part of the project. The meta information model is very flexible and easy to use. In addition, the project scope includes an eclipse based toolset that allows for creating information models, a repository for finding, managing and sharing information models, and last but not least a set of code generators that allow for the creation of information model based code artifacts to be employed in specific solutions.
Contents
Project Overview
Meta Information Model
Discussion
Packages
Compatibility to SDT
Compatibility to SensIDL
Compatibility to OSGi-DAL
Describing Devices
Entities
Functionblocks
Information Models
Vorto Code Generators
Vorto Homepage
Retrieved from "
https://wiki.eclipse.org/index.php?title=Vorto&oldid=402387
"
This page was last modified 13:59, 7 March 2016 by
Christopher Hylands
. Based on work by
Olaf Weinmann
.
Back to the top
Eclipse Foundation
About Us
Contact Us
Donate
Members
Governance
Code of Conduct
Logo and Artwork
Board of Directors
Legal
Privacy Policy
Terms of Use
Copyright Agent
Eclipse Public License
Legal Resources
Useful Links
Report a Bug
Documentation
How to Contribute
Mailing Lists
Forums
Marketplace
Other
IDE and Tools
Projects
Working Groups
Research@Eclipse
Report a Vulnerability
Service Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
Eclipse Vorto - Device Payload Mapping
// <![CDATA[ // Setting custom variable [slot = 3, scope = 3(page level)] for tracking source (related, search etc) of pageview window._gaq.push(['_setCustomVar', 3, 'source', 'not_set', 3]); window._gaq.push(['_trackEvent', 'bigfoot_slideview', 'pageload', slideshare_object.gam_cat_name, undefined, true]); // ]]> <!-- slideshare_object.deploy_environment = 'production'; //-->
User Agreement
and
Privacy Policy
.
Privacy Policy
and
User Agreement
for details.
Scribd will begin operating the SlideShare business on December 1, 2020
As of this date,
Scribd
will manage your SlideShare account and any content you may have on SlideShare, and Scribd's
General Terms of Use
and
Privacy Policy
will apply. If you wish to opt out, please close your SlideShare account.
Learn more
.
SlideShare
Explore
Search
You
Upload
Login
Signup
Submit Search
Home
Explore
Successfully reported this slideshow.
We use your LinkedIn profile and activity data to personalize ads and to show you more relevant ads.
You can change your ad preferences anytime.
Eclipse Vorto - Device Payload Mapping
Upcoming SlideShare
Loading in …
5
×
1
1
of
13
Like this presentation? Why not share!
Share
Email
What to Upload to SlideShare
by SlideShare
4333155 views
Customer Code: Creating a Company C...
by HubSpot
3243732 views
Be A Great Product Leader (Amplify,...
by Adam Nash
724792 views
Trillion Dollar Coach Book (Bill Ca...
by Eric Schmidt
874410 views
APIdays Paris 2019 - Innovation @ s...
by apidays
905026 views
A few thoughts on work life-balance
by Wim Vanderbauwhede
751035 views
Share SlideShare
Facebook
Twitter
LinkedIn
Embed
Size (px)
Start on
Show related SlideShares at end
WordPress Shortcode
Link
Eclipse Vorto - Device Payload Mapping
3,722 views
Share
Like
Download
...
AlexanderEdelmann2
Follow
Published on
Jun 13, 2018
Devices may not always send the data structure that is required by the IoT platform. The Vorto Payload Mapping lets you specify how device data is mapped to standardized data structures in form of Vorto Mapping Specifications and execute them in order to transform arbitrary device data to IoT platform specific data.
...
Published in:
Technology
1 Comment
0 Likes
Statistics
Notes
Full Name
Comment goes here.
12 hours ago
Delete
Reply
Block
Are you sure you want to
Yes
No
Your message goes here
Post
Freda Clapton
I think you need a perfect and 100% unique academic essays papers have a look once this site i hope you will get valuable papers, ⇒ www.HelpWriting.net ⇐
3 months ago
Reply
Are you sure you want to
Yes
No
Your message goes here
Be the first to like this
No Downloads
Views
Total views
3,722
On SlideShare
0
From Embeds
Mailing list: vorto-dev (75 subscribers) | Eclipse - The Eclipse Foundation open source community website.
0
Number of Embeds
1
Actions
Shares
0
Downloads
4
Comments
1
Likes
0
Embeds
0
No embeds
No notes for slide
Eclipse Vorto - Device Payload Mapping
1. Vorto Eclipse Vorto VortoDescribe. Share. Integrate. Info Model Info Model Info Model Info Model Eclipse Vorto Device Payload Mapping Alexander Edelmann
Google Tag Manager
Skip to main content
Log in
Manage Cookies
Eclipse - The Eclipse Foundation open source community website.
Download
Projects
Working Groups
Members
Community
Marketplace
Events
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
2.
Vorto Eclipse Vorto Motivation for Payload Mappings Devices sharing the same capability may not send the data in the standardized structure, expected by the IoT platform. Device Capability A Binary (Non – Standard)Device Capability A Device Capability A Device Data Mapper Capability Domain Model IoT Platform Platform Services convert understand
3.
Vorto Eclipse Vorto 3 Device Payload Mapping with Eclipse Vorto Transform device specific payload into Vorto-standardized data structures, complying to and described as Vorto Information Models. Transformations are defined in Mapping Specification with the Vorto DSL. Vorto Payload Mapping Engine Vorto Device Mapping Spec Vorto Info Model Target Platform Data Complies to JSON, XML, Binary, … Target Platform Mapper Device Map: ToMap:From Describes Capabilities
4.
Vorto Eclipse Vorto Eclipse Ditto Mapping Plugin Vorto Payload Mapping Engine supports Eclipse Ditto as a Target Platform Mapper out-of-the-box: Vorto Payload Mapping Engine Mapping Spec Vorto Info Model Eclipse Ditto Mapper Eclipse Ditto Feature(s) Structure JSON, XML, Binary, … Complies to References
5.
6.
7.
8.
9.
Vorto Eclipse Vorto Example: Execution of a Payload Mapping Specification 1. Add Maven dependency 2. Code Snippet to map to Eclipse Ditto (Bosch IoT Things): IPSO compliant Ditto Data: Mapped Result
10.
Vorto Eclipse Vorto 10 Plugging in custom target platform mapper Target Platform Mapper Execution Vorto Payload Mapping Engine Target Platform Mapper Data Normalization to Vorto Information Model Phase 1 Phase 2 Mapping Spec Info Model
11.
Vorto Eclipse Vorto Example
12.
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Newcomer Forum
More
Community
Marketplace
Events
Vorto Eclipse Vorto Get Started with Payload Mappings • Eclipse Vorto Toolset to create Vorto Information Models and Payload Mapping Specifications • Payload Mapping Tutorial that maps AWS IoT Button to standardized Eclipse Ditto data • Payload Mapping Documentation
13.
Vorto Eclipse Vorto VortoDescribe. Share. Integrate. Info Model Info Model Info Model Info Model Contact Details Alexander.Edelmann@bosch-si.com www.eclipse.org/vorto
Recommended
What to Upload to SlideShare
SlideShare
Customer Code: Creating a Company Customers Love
HubSpot
Be A Great Product Leader (Amplify, Oct 2019)
Adam Nash
Trillion Dollar Coach Book (Bill Campbell)
Eric Schmidt
APIdays Paris 2019 - Innovation @ scale, APIs as Digital Factories' New Machi...
apidays
A few thoughts on work life-balance
Wim Vanderbauwhede
Planet Eclipse
Newsletter
Videos
Blogs
Participate
Report a Bug
Forums
Mailing Lists
Wiki
IRC
Research
Eclipse IDE
Download
Learn More
Documentation
Getting Started / Support
How to Contribute
IDE and Tools
Is vc still a thing final
Mark Suster
English
Español
Português
Français
Deutsch
About
Dev & API
Blog
Terms
Privacy
Copyright
Support
×
Share Clipboard
×
Newcomer Forum
Toggle navigation
Log in
Search
Mailing list: vorto-dev
(75 subscribers)
vorto developer discussions
About vorto-dev
vorto developer discussions
Using vorto-dev
To post a message to all the list members, send email to
vorto-dev@eclipse.org
. You must be subscribed to the list before you can post. To access a web archive of this list, visit the
vorto-dev Archives
or subscribe to this list's
RSS feed
Subscribing vorto-dev
All contributions you make to our web site are governed by our
Facebook
Twitter
LinkedIn
Link
Public clipboards featuring this slide
×
No public clipboards found for this slide
Select another clipboard
×
Looks like you’ve clipped this slide to
already.
Create a clipboard
You just clipped your first slide!
Clipping is a handy way to collect important slides you want to go back to later. Now customize the name of a clipboard to store your clips.
Name*
Description
Visibility
Terms Of Use
. Your interactions with the Eclipse Foundation web properties and any information you may provide us about yourself are governed by our
Privacy Policy
.
To subscribe to a mailing list, you must have an Eclipse.org account.
Log in
- Or -
Create an account
Once you’ve are logged in, you can manage your mailing list subscriptions on the
Mailing List
page.
View All Mailing Lists
Mailing List
View All Mailing Lists
View Archived Mailing Lists
Privacy Policy
Terms of Use
Others can see my Clipboard
Cancel
Save
Mailing list: vorto-dev
RSS Feed
Archive
Eclipse Foundation
About Us
Contact Us
Donate
Members
Governance
Code of Conduct
Logo and Artwork
Board of Directors
Legal
Privacy Policy
Terms of Use
Copyright Agent
Eclipse Public License
Legal Resources
Useful Links
Report a Bug
Documentation
How to Contribute
Mailing Lists
Forums
Marketplace
Other
IDE and Tools
Projects
Working Groups
Research@Eclipse
Report a Vulnerability
Service Status
Copyright © Eclipse Foundation, Inc. All Rights Reserved.
Back to the top
