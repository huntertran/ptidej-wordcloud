Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Apache IoTDB Database for Internet of Things
Apache IoTDB (Database for Internet of Things) is an IoT native database with high performance
for data management and analysis, deployable on the edge and the cloud. Due to its light-weight architecture,
high performance and rich feature set together with its deep integration with Apache
Hadoop, Spark and Flink, Apache IoTDB can meet the requirements of massive
data storage, high-speed data ingestion and complex data analysis in the IoT
industrial fields.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Project Mentors Justin Mclean Mentor Apache ID: jmclean Starting date: 2018/11/18 Christofer Dutz Mentor Apache ID: cdutz Starting date: 2018/11/18 Willem Ning Jiang Mentor Apache ID: ningjiang Starting date: 2018/11/18 Kevin A. McGrail Champion Apache ID: kmcgrail Starting date: 2018/11/18 Project Committers Gaofei Cao PMC, Committer Apache ID: caogaofei Starting date: 2018/11/18 Yi Xu PMC, Committer Apache ID: dope Starting date: 2018/11/18 Dongfang Mao PMC, Committer Apache ID: east Starting date: 2018/11/18 Wangminhao Gou Committer Apache ID: ejttianyu Starting date: 2020/03/03 Boris Zhu Committer Apache ID: geniuspig Starting date: 2019/12/19 Haonan Hou PMC, Committer Apache ID: haonan Starting date: 2020/01/30 Xiangdong Huang PMC, Committer Apache ID: hxd Starting date: 2018/11/18 Yuan Tian Committer Apache ID: jackietien Starting date: 2019/12/18 Julian Feinauer PMC, Committer Apache ID: jfeinauer Starting date: 2019/07/15 Tian Jiang PMC, Committer Apache ID: jiangtian Starting date: 2018/11/18 Jianmin Wang PMC, Committer Apache ID: jimwang Starting date: 2018/11/18 Jincheng Sun PMC, Committer Apache ID: jincheng Starting date: 2020/01/21 Rong Kang PMC, Committer Apache ID: kangrong Starting date: 2018/11/18 Lei Rui PMC, Committer Apache ID: leirui Starting date: 2019/06/20 Dawei Liu PMC, Committer Apache ID: liudw Starting date: 2020/03/01 Kun Liu PMC, Committer Apache ID: liukun Starting date: 2018/11/18 Rui Liu PMC, Committer Apache ID: liurui Starting date: 2018/11/18 Tianan Li PMC, Committer Apache ID: lta Starting date: 2018/11/18 Jialin Qiao PMC, Committer Apache ID: qiaojialin Starting date: 2018/11/18 Shuo Zhang PMC, Committer Apache ID: shuozhang Starting date: 2018/11/18 Zesong Sun Committer Apache ID: sunzesong Starting date: 2019/12/23 Yue Su PMC, Committer Apache ID: suyue Starting date: 2018/11/18 Zonghan Cai Committer Apache ID: tsaitsunghan Starting date: 2019/11/05 Chen Wang PMC, Committer Apache ID: wangchen Starting date: 2018/11/18 Jinrui Zhang PMC, Committer Apache ID: xingtanzjr Starting date: 2018/11/18 Xin Wang Committer Apache ID: xinwang Starting date: 2020/05/18 Kaifeng Xue Committer Apache ID: xuekaifeng Starting date: 2018/12/19 Jun Yuan PMC, Committer Apache ID: yuanjun Starting date: 2018/11/18 Stefanie Zhao PPMC, Committer Apache ID: zhaoxinyi Starting date: 2018/11/18 Chao Wang PMC, Committer Apache ID: chaow Starting date: 2020/09/04 Houliang Qi Committer Apache ID: neuyilan Starting date: 2020/12/18 Xinyu Tan Committer Apache ID: LebronAl Starting date: 2020/12/21 Xiangwei Wei Committer Apache ID: Alima777 Starting date: 2021/02/20 Jesse Zhou Committer Apache ID: JesseZhou-1 Starting date: 2021/02/20 Yurong Su Committer Apache ID: Steve Yurong Su Starting date: 2021/05/12 Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (In progress) IoTDB Introduction Quick Start QuickStartStorage Path SettingGet IoTDB Binary filesData Concept CLI Administration Management IoTDB-SQL Language API Advanced Features Communication Service Protocol System Tools Collaboration of Edge and Cloud Ecosystem Integration Cluster Setup FAQ Appendix Comparison with TSDBs # Quick Start This short guide will walk you through the basic process of using IoTDB. For a more-complete guide, please visit our website's User Guide. # Prerequisites To use IoTDB, you need to have: Java >= 1.8 (Please make sure the environment path has been set) Set the max open files num as 65535 to avoid "too many open files" problem. # Installation IoTDB provides you three installation methods, you can refer to the following suggestions, choose one of them: Installation from source code. If you need to modify the code yourself, you can use this method. Installation from binary files. Download the binary files from the official website. This is the recommended method, in which you will get a binary released package which is out-of-the-box.(Coming Soon...) Using Docker：The path to the dockerfile is https://github.com/apache/iotdb/blob/master/docker/src/main # Download You can download the binary file from:
Download Page (opens new window) # Configurations configuration files are under "conf" folder environment config module (iotdb-env.bat, iotdb-env.sh), system config module (iotdb-engine.properties) log config module (logback.xml). For more, see Config in detail. # Start You can go through the following step to test the installation, if there is no error after execution, the installation is completed. # Start IoTDB Users can start IoTDB by the start-server script under the sbin folder. # Unix/OS X
> nohup sbin/start-server.sh >/dev/null 2>&1 &
or
> nohup sbin/start-server.sh -c <conf_path> -rpc_port <rpc_port> >/dev/null 2>&1 &
# Windows
> sbin\start-server.bat -c <conf_path> -rpc_port <rpc_port>
1234567"-c" and "-rpc_port" are optional. option "-c" specifies the system configuration file directory. option "-rpc_port" specifies the rpc port. if both option specified, the rpc_port will overrides the rpc_port in conf_path. if you want to use JMX to connect IOTDB, you may need to add -Dcom.sun.management.jmxremote.rmi.port=PORT -Djava.rmi.server.hostname=IP
1to $IOTDB_JMX_OPTS in iotdb-env.sh. or iotdb-env.bat # Use Cli IoTDB offers different ways to interact with server, here we introduce basic steps of using Cli tool to insert and query data. After installing IoTDB, there is a default user 'root', its default password is also 'root'. Users can use this
default user to login Cli to use IoTDB. The startup script of Cli is the start-cli script in the folder sbin. When executing the script, user should assign
IP, PORT, USER_NAME and PASSWORD. The default parameters are "-h 127.0.0.1 -p 6667 -u root -pw -root". Here is the command for starting the Cli: # Unix/OS X
> sbin/start-cli.sh -h 127.0.0.1 -p 6667 -u root -pw root
# Windows
> sbin\start-cli.bat -h 127.0.0.1 -p 6667 -u root -pw root
12345The command line client is interactive so if everything is ready you should see the welcome logo and statements: _____ _________ ______ ______
|_ _| | _ _ ||_ _ `.|_ _ \
| | .--.|_/ | | \_| | | `. \ | |_) |
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.10.x) Get Started QuickStartFrequently asked questionsResearch PapersOverview Concept Server Client Operation Manual System Tools Ecosystem Integration Architecture # Quick Start # Outline Quick Start Prerequisites Installation
Build from source
Configurations Start
Start IoTDB Use IoTDB
Use Cli Basic commands for IoTDB Stop IoTDB Only build server Only build cli This short guide will walk you through the basic process of using IoTDB. For a more-complete guide, please visit our website's User Guide. # Prerequisites To use IoTDB, you need to have: Java >= 1.8 (Please make sure the environment path has been set) Set the max open files num as 65535 to avoid "too many open files" problem. # Installation IoTDB provides you three installation methods, you can refer to the following suggestions, choose one of them: Installation from source code. If you need to modify the code yourself, you can use this method. Installation from binary files. Download the binary files from the official website. This is the recommended method, in which you will get a binary released package which is out-of-the-box.(Coming Soon...) Using Docker：The path to the dockerfile is https://github.com/apache/incubator-iotdb/blob/master/docker/src/main Here in the Quick Start, we give a brief introduction to install IoTDB. For further information, please refer to Chapter 3 of the User Guide. # Download You can download the binary file from:
Here # Configurations configuration files are under "conf" folder environment config module (iotdb-env.bat, iotdb-env.sh), system config module (iotdb-engine.properties) log config module (logback.xml). For more, see Chapter3: Server in detail. # Start You can go through the following step to test the installation, if there is no error after execution, the installation is completed. # Start IoTDB Users can start IoTDB by the start-server script under the sbin folder. # Unix/OS X
> nohup sbin/start-server.sh >/dev/null 2>&1 &
or
> nohup sbin/start-server.sh -c <conf_path> -rpc_port <rpc_port> >/dev/null 2>&1 &
# Windows
> sbin\start-server.bat -c <conf_path> -rpc_port <rpc_port>
1234567"-c" and "-rpc_port" are optional. option "-c" specifies the system configuration file directory. option "-rpc_port" specifies the rpc port. if both option specified, the rpc_port will overrides the rpc_port in conf_path. if you want to use JMX to connect IOTDB, you may need to add -Dcom.sun.management.jmxremote.rmi.port=PORT -Djava.rmi.server.hostname=IP
1to $IOTDB_JMX_OPTS in iotdb-env.sh. or iotdb-env.bat # Use IoTDB # Use Cli IoTDB offers different ways to interact with server, here we introduce basic steps of using Cli tool to insert and query data. After installing IoTDB, there is a default user 'root', its default password is also 'root'. Users can use this
default user to login Cli to use IoTDB. The startup script of Cli is the start-cli script in the folder sbin. When executing the script, user should assign
IP, PORT, USER_NAME and PASSWORD. The default parameters are "-h 127.0.0.1 -p 6667 -u root -pw -root". Here is the command for starting the Cli: # Unix/OS X
> sbin/start-cli.sh -h 127.0.0.1 -p 6667 -u root -pw root
# Windows
> sbin\start-cli.bat -h 127.0.0.1 -p 6667 -u root -pw root
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) 文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) 文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
| | / .'`\ \ | | | | | | | __'.
_| |_| \__. | _| |_ _| |_.' /_| |__) |
|_____|'.__.' |_____| |______.'|_______/ version x.x.x
IoTDB> login successfully
IoTDB>
12345678910# Basic commands for IoTDB Now, let us introduce the way of creating timeseries, inserting data and querying data. The data in IoTDB is organized as timeseries, in each timeseries there are some data-time pairs, and every timeseries is owned by a storage group. Before defining a timeseries, we should define a storage group using SET STORAGE GROUP, and here is an example: IoTDB> SET STORAGE GROUP TO root.ln
1We can also use SHOW STORAGE GROUP to check created storage group: IoTDB> SHOW STORAGE GROUP
+-----------------------------------+
| Storage Group|
+-----------------------------------+
| root.ln|
+-----------------------------------+
storage group number = 1
1234567After the storage group is set, we can use CREATE TIMESERIES to create new timeseries. When we create a timeseries, we should define its data type and the encoding scheme. We create two timeseries as follow: IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN
IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE
12To query the specific timeseries, use SHOW TIMESERIES <Path>. <Path> represents the path of the timeseries. Its default value is null, which means querying all the timeseries in the system(the same as using "SHOW TIMESERIES root"). Here are the examples: Query all timeseries in the system: IoTDB> SHOW TIMESERIES
+-------------------------------+---------------+--------+--------+
| Timeseries| Storage Group|DataType|Encoding|
+-------------------------------+---------------+--------+--------+
| root.ln.wf01.wt01.status| root.ln| BOOLEAN| PLAIN|
| root.ln.wf01.wt01.temperature| root.ln| FLOAT| RLE|
+-------------------------------+---------------+--------+--------+
Total timeseries number = 2
12345678Query a specific timeseries(root.ln.wf01.wt01.status): IoTDB> SHOW TIMESERIES root.ln.wf01.wt01.status
+------------------------------+--------------+--------+--------+
12345The command line client is interactive so if everything is ready you should see the welcome logo and statements: _____ _________ ______ ______
|_ _| | _ _ ||_ _ `.|_ _ \
| | .--.|_/ | | \_| | | `. \ | |_) |
| | / .'`\ \ | | | | | | | __'.
_| |_| \__. | _| |_ _| |_.' /_| |__) |
|_____|'.__.' |_____| |______.'|_______/ version x.x.x
IoTDB> login successfully
IoTDB>
12345678910# Basic commands for IoTDB Now, let us introduce the way of creating timeseries, inserting data and querying data. The data in IoTDB is organized as timeseries, in each timeseries there are some data-time pairs, and every timeseries is owned by a storage group. Before defining a timeseries, we should define a storage group using SET STORAGE GROUP, and here is an example: IoTDB> SET STORAGE GROUP TO root.ln
1We can also use SHOW STORAGE GROUP to check created storage group: IoTDB> SHOW STORAGE GROUP
+-----------------------------------+
| Storage Group|
+-----------------------------------+
| root.ln|
+-----------------------------------+
storage group number = 1
1234567After the storage group is set, we can use CREATE TIMESERIES to create new timeseries. When we create a timeseries, we should define its data type and the encoding scheme. We create two timeseries as follow: IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN
IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE
12In order to query the specific timeseries, we can use SHOW TIMESERIES <Path>. <Path> represent the path of the timeseries. Its default value is null, which means querying all the timeseries in the system(the same as using "SHOW TIMESERIES root"). Here are the examples: Querying all timeseries in the system: IoTDB> SHOW TIMESERIES
+-------------------------------+---------------+--------+--------+
| Timeseries| Storage Group|DataType|Encoding|
+-------------------------------+---------------+--------+--------+
| root.ln.wf01.wt01.status| root.ln| BOOLEAN| PLAIN|
| root.ln.wf01.wt01.temperature| root.ln| FLOAT| RLE|
+-------------------------------+---------------+--------+--------+
Total timeseries number = 2
12345678Querying a specific timeseries(root.ln.wf01.wt01.status): IoTDB> SHOW TIMESERIES root.ln.wf01.wt01.status
+------------------------------+--------------+--------+--------+
文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.11.x) Get Started QuickStartFrequently asked questionsResearch PapersOverview Concept Server Client Operation Manual System Tools Ecosystem Integration Architecture Comparison with TSDBs # Quick Start # Outline Quick Start Prerequisites Installation
Build from source
Configurations Start
Start IoTDB Use IoTDB
Use Cli Basic commands for IoTDB Stop IoTDB Only build server Only build cli This short guide will walk you through the basic process of using IoTDB. For a more-complete guide, please visit our website's User Guide. # Prerequisites To use IoTDB, you need to have: Java >= 1.8 (Please make sure the environment path has been set) Set the max open files num as 65535 to avoid "too many open files" problem. # Installation IoTDB provides you three installation methods, you can refer to the following suggestions, choose one of them: Installation from source code. If you need to modify the code yourself, you can use this method. Installation from binary files. Download the binary files from the official website. This is the recommended method, in which you will get a binary released package which is out-of-the-box.(Coming Soon...) Using Docker：The path to the dockerfile is https://github.com/apache/iotdb/blob/master/docker/src/main Here in the Quick Start, we give a brief introduction to install IoTDB. For further information, please refer to Chapter 3 of the User Guide. # Download You can download the binary file from:
Here # Configurations configuration files are under "conf" folder environment config module (iotdb-env.bat, iotdb-env.sh), system config module (iotdb-engine.properties) log config module (logback.xml). For more, see Chapter3: Server in detail. # Start You can go through the following step to test the installation, if there is no error after execution, the installation is completed. # Start IoTDB Users can start IoTDB by the start-server script under the sbin folder. # Unix/OS X
> nohup sbin/start-server.sh >/dev/null 2>&1 &
or
> nohup sbin/start-server.sh -c <conf_path> -rpc_port <rpc_port> >/dev/null 2>&1 &
# Windows
> sbin\start-server.bat -c <conf_path> -rpc_port <rpc_port>
1234567"-c" and "-rpc_port" are optional. option "-c" specifies the system configuration file directory. option "-rpc_port" specifies the rpc port. if both option specified, the rpc_port will overrides the rpc_port in conf_path. if you want to use JMX to connect IOTDB, you may need to add -Dcom.sun.management.jmxremote.rmi.port=PORT -Djava.rmi.server.hostname=IP
1to $IOTDB_JMX_OPTS in iotdb-env.sh. or iotdb-env.bat # Use IoTDB # Use Cli IoTDB offers different ways to interact with server, here we introduce basic steps of using Cli tool to insert and query data. After installing IoTDB, there is a default user 'root', its default password is also 'root'. Users can use this
Languages English 简体中文
gitHub
TsFile
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.8.x) 0-Get Started QuickStartFrequently asked questionsResearch Papers1-Overview 2-Concept Key Concepts and Terminology 3-Operation Manual 4-Deployment and Management 5-IoTDB SQL Documentation 6-JDBC API 7-TsFile 8-System Tools # Quick Start # Outline Quick Start Prerequisites
Installation
Installation from source code Configure Start
Start Server Start Client Have a try Stop Server This short guide will walk you through the basic process of using IoTDB. For a more-complete guide, please visit our website’s documents. # Prerequisites To use IoTDB, you need to have: Java >= 1.8 (Please make sure the environment path has been set) Maven >= 3.0 (If you want to compile and install IoTDB from source code) # Installation IoTDB provides you two installation methods, you can refer to the following suggestions, choose one of them: Installation from source code. If you need to modify the code yourself, you can use this method. Installation from binary files. Download the binary files from the official website. This is the recommended method, in which you will get a binary released package which is out-of-the-box.(Comming Soon...) Here in the Quick Start, we give a brief introduction of using source code to install IoTDB. For further information, please refer to Chapter 4 of the User Guide. # Installation from source code You can get the released source code from https://iotdb.apache.org/Download/, or from the git repository https://github.com/apache/incubator-iotdb/tree/master Now suppose your directory is like this: > pwd
/workspace/incubator-iotdb
> ls -l
incubator-iotdb/ <-- root path
|
+- server/
|
+- jdbc/
|
+- client/
|
...
|
语言 English 简体中文
gitHub
(opens new window) Apache IoTDB 物联网数据库
Apache IoTDB（物联网数据库）是一体化收集、存储、管理与分析物联网时序数据的软件系统。
Apache IoTDB 采用轻量式架构，具有高性能和丰富的功能，并与Apache Hadoop、Spark和Flink等进行了深度集成，可以满足工业物联网领域的海量数据存储、高速数据读取和复杂数据分析需求。
下载 快速开始 应用场景 高端设备 在高端制造业中，有很多设备配备有传感器来收集工作状态数据，例如气象站，风力涡轮机是常见的高端设备。这些设备如果支持Java或Go（正在开发中），则可以运行TsFile在本地存储数据。通过这种方式，TsFile可以提供具有高吞吐、高压缩率和毫秒级查询延迟的数据管理功能。结合TsFile-Sync工具，可以将TsFiles同步到数据中心。 本地控制器 在工厂现场，LAN网络下有数十台设备。 IoTDB可以安装在工厂的本地控制器服务器上，以从这些设备接收数据。 安装有IoTDB的本地服务器（普通PC或工作站）可以使用类SQL存储和查询数据。 此外，使用TsFile-Sync工具，可以将本地控制器上的TsFile文件传输到云上安装有IoTDB实例的数据中心。 云数据管理 在高速网络（车联网等）的场景中，安装有传感器的汽车可以以一定频率收集自身的监视信息（行驶状态等）。 通常，这些汽车设备的硬件配置有限，并且难以进行复杂的应用。 轻量级的IoTDB（IoTDB客户端）应运而生。 借助JDBC API（或MQTT），它可以使用窄带IoT或4G/5G发送数据，从而将设备和云连接在一起。 主要特点 高吞吐量读写Apache IoTDB中可以支持数百万个低功耗和智能联网设备的高速写访问。 它还提供数据快速读取访问以查询。 高吞吐量读写 高效的目录结构Apache IoTDB可以对拥有复杂组织关系的物联网设备进行树形结构管理，并使用通配符对这些元数据进行模糊匹配。 高效的树形元数据结构 丰富的查询语义Apache IoTDB可以支持跨设备和传感器的时间对齐查询，在时间维度上的聚合（降采样）等。 丰富的查询语义 硬件成本低Apache IoTDB可以实现磁盘存储的高压缩率。 硬件成本低 灵活的部署Apache IoTDB可以为用户提供云上的一键式安装、终端访问工具以及边-云之间的协同（数据同步工具）。 灵活的部署 与开源生态系统的紧密集成Apache IoTDB支持许多大数据软件生态系统，例如Hadoop、Spark、Flink和Grafana（可视化工具）。 与开源生态系统的紧密集成 Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.9.x) 0-Get Started QuickStartFrequently asked questionsResearch Papers1-Overview 2-Concept 3-Server 4-Client 5-Operation Manual 6-System Tools 7-Ecosystem Integration 8-System Design # Quick Start This short guide will walk you through the basic process of using IoTDB. For a more-complete guide, please visit our website's User Guide. # Prerequisites To use IoTDB, you need to have: Java >= 1.8 (Please make sure the environment path has been set) Set the max open files num as 65535 to avoid "too many open files" problem. # Installation IoTDB provides you three installation methods, you can refer to the following suggestions, choose one of them: Installation from source code. If you need to modify the code yourself, you can use this method. Installation from binary files. Download the binary files from the official website. This is the recommended method, in which you will get a binary released package which is out-of-the-box.(Comming Soon...) Using Docker：The path to the dockerfile is https://github.com/apache/incubator-iotdb/blob/master/docker/Dockerfile Here in the Quick Start, we give a brief introduction to install IoTDB. For further information, please refer to Chapter 3 of the User Guide. # Download You can download the binary file from:
Here # Configurations configuration files are under "conf" folder environment config module (iotdb-env.bat, iotdb-env.sh), system config module (iotdb-engine.properties) log config module (logback.xml). For more, see Chapter3: Server in detail. # Start You can go through the following step to test the installation, if there is no error after execution, the installation is completed. # Start IoTDB Users can start IoTDB by the start-server script under the sbin folder. # Unix/OS X
> sbin/start-server.sh
# Windows
> sbin\start-server.bat
12345# Use IoTDB # Use Cli IoTDB offers different ways to interact with server, here we introduce basic steps of using Cli tool to insert and query data. After installing IoTDB, there is a default user 'root', its default password is also 'root'. Users can use this
default user to login Cli to use IoTDB. The startup script of Cli is the start-client script in the folder sbin. When executing the script, user should assign
IP, PORT, USER_NAME and PASSWORD. The default parameters are "-h 127.0.0.1 -p 6667 -u root -pw -root". Here is the command for starting the Cli: # Unix/OS X
> sbin/start-client.sh -h 127.0.0.1 -p 6667 -u root -pw root
# Windows
> sbin\start-client.bat -h 127.0.0.1 -p 6667 -u root -pw root
12345The command line client is interactive so if everything is ready you should see the welcome logo and statements: _____ _________ ______ ______
|_ _| | _ _ ||_ _ `.|_ _ \
| | .--.|_/ | | \_| | | `. \ | |_) |
| | / .'`\ \ | | | | | | | __'.
_| |_| \__. | _| |_ _| |_.' /_| |__) |
|_____|'.__.' |_____| |______.'|_______/ version x.x.x
Languages English 简体中文
gitHub
(opens new window) # Some Notes on Release 0.9.3 and upcoming 0.10.0 Note: This Blog Post was initially written by Jialin Qiao and has been published here: https://mp.weixin.qq.com/s/MUoUsoRRDUqkQb0-XekXbA.
This Text was translated with DeepL and slightly corrected by Julian Feinauer. # Notes on 0.9.3 It's been a long time since I've written an article, I've been working on development and took advantage of this release to write a bit now. The Release 0.9.3 is a minor release with no changes in file structure or RPC and can be upgraded painlessly. In fact, shortly after 0.9.2 was released, a serious bug was found, so the IoTDB Community decided to Release 0.9.3 shortly after. Let me say a few general things. The official website of IoTDB has gotten a big upgrade in the last few months, with a much more beautiful interface than before! You can have a look at: http://iotdb.apache.org/. The official website has also added Chinese and English design documents, although not yet complete, but basically all the big modules are documented in both languages and the IoTDB Community highly welcomes suggestions how to improve or contributions that do so: English: http://iotdb.apache.org/SystemDesign/Architecture/Architecture.html
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
(opens new window) Project Mentors Justin Mclean Mentor Apache ID: jmclean Starting date: 2018/11/18 Christofer Dutz Mentor Apache ID: cdutz Starting date: 2018/11/18 Willem Ning Jiang Mentor Apache ID: ningjiang Starting date: 2018/11/18 Kevin A. McGrail Champion Apache ID: kmcgrail Starting date: 2018/11/18 Project Committers Gaofei Cao PMC, Committer Apache ID: caogaofei Starting date: 2018/11/18 Yi Xu PMC, Committer Apache ID: dope Starting date: 2018/11/18 Dongfang Mao PMC, Committer Apache ID: east Starting date: 2018/11/18 Wangminhao Gou Committer Apache ID: ejttianyu Starting date: 2020/03/03 Boris Zhu Committer Apache ID: geniuspig Starting date: 2019/12/19 Haonan Hou PMC, Committer Apache ID: haonan Starting date: 2020/01/30 Xiangdong Huang PMC, Committer Apache ID: hxd Starting date: 2018/11/18 Yuan Tian Committer Apache ID: jackietien Starting date: 2019/12/18 Julian Feinauer PMC, Committer Apache ID: jfeinauer Starting date: 2019/07/15 Tian Jiang PMC, Committer Apache ID: jiangtian Starting date: 2018/11/18 Jianmin Wang PMC, Committer Apache ID: jimwang Starting date: 2018/11/18 Jincheng Sun PMC, Committer Apache ID: jincheng Starting date: 2020/01/21 Rong Kang PMC, Committer Apache ID: kangrong Starting date: 2018/11/18 Lei Rui PMC, Committer Apache ID: leirui Starting date: 2019/06/20 Dawei Liu PMC, Committer Apache ID: liudw Starting date: 2020/03/01 Kun Liu PMC, Committer Apache ID: liukun Starting date: 2018/11/18 Rui Liu PMC, Committer Apache ID: liurui Starting date: 2018/11/18 Tianan Li PMC, Committer Apache ID: lta Starting date: 2018/11/18 Jialin Qiao PMC, Committer Apache ID: qiaojialin Starting date: 2018/11/18 Shuo Zhang PMC, Committer Apache ID: shuozhang Starting date: 2018/11/18 Zesong Sun Committer Apache ID: sunzesong Starting date: 2019/12/23 Yue Su PMC, Committer Apache ID: suyue Starting date: 2018/11/18 Zonghan Cai Committer Apache ID: tsaitsunghan Starting date: 2019/11/05 Chen Wang PMC, Committer Apache ID: wangchen Starting date: 2018/11/18 Jinrui Zhang PMC, Committer Apache ID: xingtanzjr Starting date: 2018/11/18 Xin Wang Committer Apache ID: xinwang Starting date: 2020/05/18 Kaifeng Xue Committer Apache ID: xuekaifeng Starting date: 2018/12/19 Jun Yuan PMC, Committer Apache ID: yuanjun Starting date: 2018/11/18 Stefanie Zhao PPMC, Committer Apache ID: zhaoxinyi Starting date: 2018/11/18 Chao Wang PMC, Committer Apache ID: chaow Starting date: 2020/09/04 Houliang Qi Committer Apache ID: neuyilan Starting date: 2020/12/18 Xinyu Tan Committer Apache ID: LebronAl Starting date: 2020/12/21 Xiangwei Wei Committer Apache ID: Alima777 Starting date: 2021/02/20 Jesse Zhou Committer Apache ID: JesseZhou-1 Starting date: 2021/02/20 Yurong Su Committer Apache ID: Steve Yurong Su Starting date: 2021/05/12 Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.12.x) IoTDB Introduction Quick Start QuickStartStorage Path SettingGet IoTDB Binary filesData Concept CLI Administration Management IoTDB-SQL Language API UDF Communication Service Protocol System Tools Collaboration of Edge and Cloud Ecosystem Integration Cluster Setup FAQ Appendix Comparison with TSDBs # Quick Start This short guide will walk you through the basic process of using IoTDB. For a more-complete guide, please visit our website's User Guide. # Prerequisites To use IoTDB, you need to have: Java >= 1.8 (Please make sure the environment path has been set) Set the max open files num as 65535 to avoid "too many open files" problem. # Installation IoTDB provides you three installation methods, you can refer to the following suggestions, choose one of them: Installation from source code. If you need to modify the code yourself, you can use this method. Installation from binary files. Download the binary files from the official website. This is the recommended method, in which you will get a binary released package which is out-of-the-box.(Coming Soon...) Using Docker：The path to the dockerfile is https://github.com/apache/iotdb/blob/master/docker/src/main # Download You can download the binary file from:
Download Page (opens new window) # Configurations configuration files are under "conf" folder environment config module (iotdb-env.bat, iotdb-env.sh), system config module (iotdb-engine.properties) log config module (logback.xml). For more, see Config in detail. # Start You can go through the following step to test the installation, if there is no error after execution, the installation is completed. # Start IoTDB Users can start IoTDB by the start-server script under the sbin folder. # Unix/OS X
> nohup sbin/start-server.sh >/dev/null 2>&1 &
or
> nohup sbin/start-server.sh -c <conf_path> -rpc_port <rpc_port> >/dev/null 2>&1 &
# Windows
> sbin\start-server.bat -c <conf_path> -rpc_port <rpc_port>
1234567"-c" and "-rpc_port" are optional. option "-c" specifies the system configuration file directory. option "-rpc_port" specifies the rpc port. if both option specified, the rpc_port will overrides the rpc_port in conf_path. if you want to use JMX to connect IOTDB, you may need to add -Dcom.sun.management.jmxremote.rmi.port=PORT -Djava.rmi.server.hostname=IP
1to $IOTDB_JMX_OPTS in iotdb-env.sh. or iotdb-env.bat # Use Cli IoTDB offers different ways to interact with server, here we introduce basic steps of using Cli tool to insert and query data. After installing IoTDB, there is a default user 'root', its default password is also 'root'. Users can use this
default user to login Cli to use IoTDB. The startup script of Cli is the start-cli script in the folder sbin. When executing the script, user should assign
IP, PORT, USER_NAME and PASSWORD. The default parameters are "-h 127.0.0.1 -p 6667 -u root -pw -root". Here is the command for starting the Cli: # Unix/OS X
> sbin/start-cli.sh -h 127.0.0.1 -p 6667 -u root -pw root
# Windows
> sbin\start-cli.bat -h 127.0.0.1 -p 6667 -u root -pw root
12345The command line client is interactive so if everything is ready you should see the welcome logo and statements: _____ _________ ______ ______
|_ _| | _ _ ||_ _ `.|_ _ \
Current Events
Languages English 简体中文
gitHub
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
gitHub
(opens new window) # 0.11.x(version-2) -> 0.12.x(version-1) Last Updated on 2021.01.19 by Xiangwei Wei. # 1. Delete Old Latest Changes Related Committers # 2. Add New Latest Changes Related Committers Add timeout in TSFetchResultsReq and TSExecuteStatementReq Xiangwei Wei # 3. Update Latest Changes Related Committers # 0.10.x (version-2) -> 0.11.x (version-3) Last Updated on 2020-10-27 by Xiangwei Wei. # 1. Delete Old Latest Changes Related Committers Remove TSBatchExecuteStatementResp Tian Jiang # 2. Add New Latest Changes Related Committers set the input/output as TFramedTransport Tian Jiang Add timeout(optional) in TSFetchResultsReq and TSExecuteStatementReq Xiangwei Wei # 3. Update Latest Changes Related Committers Add sub-status in TSStatus Tian Jiang Change the result of executeBatchStatement as TSStatus Tian Jiang Change TSDeleteDataReq, delete timestamp and add startTime and endTime Wei Shao Add zoneId in TSOpenSessionReq Xiangwei Wei # 0.9.x (version-1) -> 0.10.x (version-2) Last Updated on 2020-5-25 by Kaifeng Xue. # 1. Delete Old Latest Changes Related Committers Remove TS_SessionHandle,TSHandleIdentifier Tian Jiang Remove TSStatus,TSExecuteInsertRowInBatchResp Jialin Qiao # 2. Add New Latest Changes Related Committers Add parameter sessionId in getTimeZone, getProperties, setStorageGroup, createTimeseries... Tian Jiang Add struct TSQueryNonAlignDataSet Haonan Hou Add struct TSInsertTabletsReq Jialin Qiao Add method insertTablets Jialin Qiao Add method testInsertTablets Xiangdong Huang add new field inferType in TSInsertRecordReq Jialin Qiao # 3. Update Latest Changes Related Committers Replace TS_SessionHandles with SessionIds, TSOperationHandle with queryIds Tian Jiang Add optional TSQueryNonAlignDataSet in TSExecuteStatementResp, TSFetchResultsResp and required bool isAlign in TSFetchResultsReq Haonan Hou Rename TSStatusType to TSStatus Jialin Qiao Remove sessionId in TSExecuteBatchStatementResp Jialin Qiao Rename insertRows to insertReords, insert to insertRecord, insertBatch to insertTablet Jialin Qiao Use TsDataType and binary rather than string in TSInsertInBatchReq and TSInsertReq Kaifeng Xue # 0.8.x -> 0.9.x (version-1) Last Updated on 2019-10-27 by Lei Rui. # 1. Delete Old Latest Changes Related Committers Delete struct TSSetStorageGroupReq Jialin Qiao Remove struct TSDataValue Lei Rui Remove struct TSRowRecord Lei Rui Remove optional string version in TSFetchMetadataResp Genius_pig Remove optional set childPaths, nodesList, storageGroups, devices in TSFetchMetadataResp Genius_pig Remove optional map<string, string> nodeTimeseriesNum in TSFetchMetadataResp Genius_pig Remove optional list<list> timeseriesList in TSFetchMetadataResp Genius_pig Remove optinoal optional i32 timeseriesNum in TSFetchMetadataResp Genius_pig Remove optional i32 nodeLevel in TSFetchMetadataReq Genius_pig # 2. Add New Latest Changes Related Committers Add struct TSBatchInsertionReq qiaojialin Add method TSExecuteBatchStatementResp insertBatch(1:TSBatchInsertionReq req) qiaojialin Add Struct TSStatusType Zesong Sun Add TSCreateTimeseriesReq Zesong Sun Add method TSStatus setStorageGroup(1:string storageGroup) Zesong Sun, Jialin Qiao Add method TSStatus createTimeseries(1:TSCreateTimeseriesReq req) Zesong Sun Add struct TSInsertReq qiaojialin Add method TSRPCResp insertRow(1:TSInsertReq req) qiaojialin Add struct TSDeleteDataReq Jack Tsai, qiaojialin Add method TSStatus deleteData(1:TSDeleteDataReq req) Jack Tsai, Jialin Qiao, qiaojialin Add method TSStatus deleteTimeseries(1:list<string> path) qiaojialin Add method TSStatus deleteStorageGroups(1:list<string> storageGroup) Yi Tao Add Struct TSExecuteInsertRowInBatchResp Kaifeng Xue Add method insertRowInBatch(1:TSInsertInBatchReq req); Kaifeng Xue Add method testInsertRowInBatch(1:TSInsertInBatchReq req); Kaifeng Xue Add method testInsertRow(1:TSInsertReq req); Kaifeng Xue Add method testInsertBatch(1:TSBatchInsertionReq req); Kaifeng Xue Add struct TSCreateMultiTimeseriesReq qiaojialin Add method createMultiTimeseries(1:TSCreateMultiTimeseriesReq req); qiaojialin # 3. Update Latest Changes Related Committers Add required string timestampPrecision in ServerProperties 1160300922 Add optional list<string> dataTypeList in TSExecuteStatementResp suyue Update TSStatus to use TSStatusType, instead of using TS_StatusCode, errorCode and errorMessage Zesong Sun Rename item in enum TSProtocolVersion from TSFILE_SERVICE_PROTOCOL_V1 to IOTDB_SERVICE_PROTOCOL_V1 qiaojialin Rename method name from TSExecuteStatementResp executeInsertion(1:TSInsertionReq req) to TSExecuteStatementResp insert(1:TSInsertionReq req) qiaojialin Add required i32 compressor in TSCreateTimeseriesReq Jialin Qiao Add optional list<string> nodesList, optional map<string, string> nodeTimeseriesNum in TSFetchMetadataResp jack870131 Add optional i32 nodeLevel in TSFetchMetadataReq jack870131, Zesong Sun Change the following methods' returned type to be TSStatus: TSStatus closeSession(1:TSCloseSessionReq req), TSStatus cancelOperation(1:TSCancelOperationReq req), TSStatus closeOperation(1:TSCloseOperationReq req), TSStatus setTimeZone(1:TSSetTimeZoneReq req), TSStatus setStorageGroup(1:string storageGroup), TSStatus createTimeseries(1:TSCreateTimeseriesReq req), TSStatus insertRow(1:TSInsertReq req), TSStatus deleteData(1:TSDeleteDataReq req) Zesong Sun, qiaojialin Change from required string path to required list<string> paths in TSDeleteDataReq qiaojialin Add optional set<string> devices in TSFetchMetadataResp Zesong Sun Rename some fields in TSFetchMetadataResp: ColumnsList to columnsList, showTimeseriesList to timeseriesList, showStorageGroups to storageGroups Zesong Sun Change struct TSQueryDataSet to eliminate row-wise rpc writing Lei Rui Add optional i32 timeseriesNum in TSFetchMetadataResp Jack Tsai Add required i64 queryId in TSHandleIdentifier Yuan Tian Add optional set<string> childPaths in TSFetchMetadataResp Haonan Hou Add optional string version in TSFetchMetadataResp Genius_pig Add required i64 statementId in TSExecuteStatementReq Yuan Tian Add required binary time, required list valueList, required list bitmapList and remove required binary values, required i32 rowCount in TSQueryDataSet Yuan Tian Add optional i32 fetchSize in TSExecuteStatementReq,Add optional TSQueryDataSet in TSExecuteStatementResp liutaohua Add optional map<string, string> props, optional map<string, string> tags, optional map<string, string> attributes and optional string aliasPath in TSCreateTimeseriesReq Yuan Tian Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
gitHub
(opens new window) Tips: All English Slides and videos are on slideshare.net and Youtube;
All Chinese Slides and videos are on myslide.cn and bilibili.
(所有的中文材料都在 myslide.cn 和 bilibili上.) # Meetups and Talks 2021.01.24, BDTC Big Data Technology Conference 2020. 2020中国大数据技术大会. Beijing, China. 2020.12.30, The 10th China Cloud Computing Standards and Application Conference. Beijing, China. (Chinese 中文) Apache IoTDB: Industrial Internet of Things Time Series Data Management System. Apache IoTDB: 工业物联网时序数据管理系统. Reporter: Jialin Qiao. 2020.11.29, Apache IoTDB Meetup, Beijing, China (Chinese 中文) IoTDB Advanced use and introduction to the principle behind. IoTDB 使用进阶与背后原理介绍. Reporter: Kaifeng Xue. (Chinese 中文) Mass Time series processing: Distributed meta management in IoTDB. 海量序列处理: IoTDB 的分布式元数据管理技术. Reporter: Chao Wang. (Chinese 中文) Talkweb Internet of Things Platform and Apache IoTDB Application Practice Analysis. 拓维物联网平台与 Apache IoTDB 的应用实践分析. Reporter: Bin Huang. (Chinese 中文) X-DB: an IoTDB based real-time database. 基于IoTDB的X-DB实时数据库的使用情况. Reporter: Wanhong Li. (Chinese 中文) Apache IoTDB Community Development Profile. Apache IoTDB 社区发展情况简介. Reporter: Xiangdong Huang. (Chinese 中文) Apache Local community ALC Beijing Introduction. Apache 本土社区 ALC Beijing 介绍. Reporter: Ning Jiang. (Chinese 中文) Empathy: Needed ability for embracing the open source of collaboration in competition. 同理心: 拥抱竞争中合作的开源必备之技. Reporter: Jiansheng Li. (English) IoTDB for Digital Twin Platform in Germany. Reporter: Julian Feinaeur. 2020.11.14, Open Source Software Supply Chain Summit 2020. "开源软件供应链 2020 峰会"。 (Chinese 中文) Apache IoTDB core technology. Apache IoTDB 核心技术剖析. Reporter: Jincheng Sun. 2020.10.25, COSCon’ 20 & Apache Roadshow (2020 中国开源年会暨阿帕奇中国路演), Beijing, China. (Chinese 中文) Apache IoTDB: From Chinese University to the World Apache IoTDB: 从中国高校走向世界. Reporter: Jialin Qiao. (Chinese 中文) Apache IoTDB: Managing Industrial IoT Data Apache IoTDB: 工业物联网数据管理. Reporter: Xiangdong Huang. 2020.09.30, ApacheCon 2020, online (English) Use Cases and Optimizations of IoTDB. Reporter: Jialin Qiao 2020.09.26, Apache Hadoop Meetup. Shanghai, China. (Chinese 中文) 从IoTDB到 Hadoop: 工业物联网边云协同开源生态 (略，类似Apache IoTDB: Managing Industrial IoT Data). Reporter: Xiangdong Huang. 2020.03.02, Building IoT 2020. Essen, Germany. (German) Industrial IoT mit Open Source (opens new window). Reporter: Julian Feinauer, Chirstofer Dutz. 2020.01.12, Apache IoTDB x Apache ShardingSphere Meetup. Beijing, China. 2020.01.04, Apache IoTDB x Apache Pulsar Meetup. Beijing, China. (Chinese) Managing Time series data with IoTDB. 基于IoTDB的时序数据开源解决方案. Reporter: Jialin Qiao. (Chinese) Apache IoTDB: History and Technical Details. Apache IoTDB的前世今生与技术细节. Reporter: Xiangdong Huang. 2019.12.28, Apache RocketMQ x Apache IoTDB Meetup. Dalian, China. (Chinese) Apache IoTDB: Why We Need a Time Series Database. Apache IoTDB：为什么我们需要一个时序数据库. Reporter: Xiangdong Huang. 2019.11.09, Apache Event: Embrace Apache Software Foundation. Beijing China. (Chinese) Open Source in Campus - Apache IoTDB as an Example. 从 Apache IoTDB 看高校学生的 Apache 开源实践. Reporter: Xiangdong Huang. 2019.10.23, ApacheCon Europe 2019. Berlin, Germany. (English) Apache IoTDB: Time Series Database for Industrial IoT. Reporter: Xiangdong Huang, Julian Feinauer. 2019.09.10, ApacheCon North America 2019. Las Vegas, USA. (English) Hello World! Introducing Apache IoTDB - a Database for the Internet of Things. Reporter: Xiangdong Huang, Julian Feinauer. 2019.07.13, Beijing Hackatthon 2019. Beijing, China. (Chinese) Apache IoTDB (incubating): Time Series Database for IIoT. IoTDB：工业互联网时序数据库. Reporter: Xiangdong Huang. 2019.05.07, The 2nd Digital China Summit. Fuzhou, China. (Chinese) Apache IoTDB (incubating): Time Series Database for IIoT. IoTDB：工业互联网时序数据库. Reporter: Xiangdong Huang. 2019.02.21, Industrial Internet Summit 2019. Beijing, China. (Chinese) Apache IoTDB (incubating): Time Series Database for IIoT. IoTDB：工业互联网时序数据库. Reporter: Jianmin Wang. 2018.12.09, Tsinghua Open Source Software Summit 2018. Beijing, China. (Chinese) IoTDB: from Tsinghua IoTDB to Apache IoTDB (incubating). IoTDB:从清华IoTDB到Apache孵化器项目。Reporter: Xiangdong Huang. # Slides, Audios and Videos # English 2020.11, IoTDB for Digital Twin Platform in Germany. Reporter: Julian Feinaeur. 2020.09, Use Cases and Optimizations of IoTDB. Reporter: Jialin Qiao. 2019.12, Coding example (from Dalian Meetup 2019). Reporter: Xiangdong Huang. 2019.09, ApacheCon North America 2019: Hello World! Introducing Apache IoTDB - a Database for the Internet of Things. Reporter: Xiangdong Huang, Julian Feinauer. 2019.10, ApacheCon Europe 2019: Apache IoTDB: Time Series Database for Industrial IoT. Reporter: Xiangdong Huang, Julian Feinauer. # Chinese 中文 2021.01, Apache IoTDB: 工业物联网时序数据管理系统. Reporter: Jialin Qiao. 2020.11, IoTDB 使用进阶与背后原理介绍. Reporter: Kaifeng Xue. 2020.11, 海量序列处理: IoTDB 的分布式元数据管理技术. Reporter: Chao Wang. 2020.11, 拓维物联网平台与 Apache IoTDB 的应用实践分析. Reporter: Bin Huang. 2020.11, 基于IoTDB的X-DB实时数据库的使用情况. Reporter: Wanhong Li. 2020.11, Apache IoTDB 社区发展情况简介. Reporter: Xiangdong Huang. 2020.11, 同理心: 拥抱竞争中合作的开源必备之技. Reporter: Jiansheng Li. 2020.11, Apache IoTDB 核心技术剖析. Reporter: Jincheng Sun. 2020.10, Apache IoTDB: 从中国高校走向世界. Reporter: Jialin Qiao. 2020.10, Apache IoTDB: 工业物联网数据管理. Reporter: Xiangdong Huang. 2020.06, IoTDB 性能优化及案例分享. Reporter: Jialin Qiao. 2020.05, IoTDB 基本使用. Reporter: Jialin Qiao. 2020.05, IoTDB 部署运维及常见问题. Reporter: Jialin Qiao. 2020.01, 北京Meetup 2019. 基于Apache IoTDB的时序数据开源解决方案. Reporter: Jialin Qiao. 2020.01, 北京Meetup 2019. Apache IoTDB的前世今生与技术细节. Reporter: Xiangdong Huang. 2019.12, 大连Meetup 2019. Apache IoTDB: 工业互联网时序数据库. Reporter: Xiangdong Huang. [IoTDB v0.8.0 Query Process Implementation], Reporter: Lei Rui Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
gitHub
(opens new window) # IoTDB Working Process # Main link IoTDB official website：https://iotdb.apache.org/ Code library：https://github.com/apache/iotdb/tree/master Get started quickly：http://iotdb.apache.org/UserGuide/master/Get%20Started/QuickStart.html # Subscribe to mailing list The mailing list is where the Apache project conducts technical discussions and communication with users. Follow the mailing list to receive mail. Mailing list address：dev@iotdb.apache.org Follow method: Send an email to dev-subscribe@iotdb.apache.org with the email you want to receive the email, the subject content is not limited, after receiving the reply, send a confirmation email to the confirmation address again (the confirmation address is longer, it is recommended gmail mailbox). Other mailing list: notifications@iotdb.apache.org (for JIRA information notification.)
If you just want to pay attention to some issues, you do not need to subscribe this mailing list.
Instead, you just need to click "start-watching this issue" on the jira issue webpage. commits@iotdb.apache.org (for code changes notification. Take care because this mailing list may have many emails) reviews@iotdb.apache.org (for code reviews notification on Github. Take care because this mailing list may have many emails) # New features, bug feedback, improvements and more All features or bugs that you want IoTDB to do can be raised on Jira：https://issues.apache.org/jira/projects/IOTDB/issues You can choose issue types: bug, improvement, new feature, etc. New issues will be automatically synchronized to the mailing list (notifications@), and subsequent discussions can be left on jira or on the mailing list. When the issue is resolved, close the issue. # Email discussion content (English) Joining the mailing list for the first time can introduce youself briefly. (Hi, I'm xxx ...) Before developing a new feature, you can send an e-mail to declare the task you want to do.（Hi，I'm working on issue IOTDB-XXX，My plan is ...） # Contributing documents The content of all IoTDB official websites is in the docs of the project root directory: docs/SystemDesign: System Design Document-English Version docs/zh/SystemDesign: System Design Document-Chinese Version docs/UserGuide: User Guide English Version docs/zh/UserGuide: User Guide Chinese Version docs/Community: community English Version docs/zh/Community: community Chinese Version docs/Development: Development Guide English Version docs/zh/Development: Development Guide Chinese Version Correspondence between versions and branches on the official website: In progress -> master major_version.x -> rel/major_version （eg 0.9.x -> rel/0.9） Precautions: Images in Markdown can be uploaded to https://github.com/apache/iotdb-bin-resources for url Do not use special Unicode chars, e.g., U+FF1A Do not use the character of dollar (as we will use Latex to generate pdf files) # Code Formatting We use the Spotless
plugin (opens new window) together with google-java-format (opens new window) to format our Java code. You can configure your IDE to automatically apply formatting on saving with these steps(Take idea as an example): Download the google-java-format
plugin v1.7.0.5 (opens new window), it can be installed in IDEA (Preferences -> plugins -> search google-java-format), More detailed setup manual (opens new window) Install the plugin from disk (Plugins -> little gear icon -> "Install plugin from disk" -> Navigate to downloaded zip file) In the plugin settings, enable the plugin and keep the default Google code style (2-space indents) Remember to never update this plugin to a later version，until Spotless was upgraded to version 1.8+. Install the Save Actions
plugin (opens new window) , and enable the plugin, along with "Optimize imports" and "Reformat file" In the "Save Actions" settings page, setup a "File Path Inclusion" for .*\.java. Otherwise you will get unintended reformatting in other files you edit. Fix the issues of reordering the import packages: in IDEA: choose: Preferences | Editor | Code Style | Java | imports. At the tail of the panel, there is "Import Layout", change it to: import org.apache.iotdb.*
<blank line>
import all other imports
<blank line>
import java.*
<blank line>
import static all other imports
Integration test reference:server/src/test/java/org/apache/iotdb/db/integration/IoTDBTimeZoneIT Use mvn spotless:check to check the code style and use mvn spotless:apply to correct the code style Submit a PR, starting with [IOTDB-jira number] Email to dev mailing list：(I've submitted a PR for issue IOTDB-xxx [link]) Make changes based on other people's reviews and continue to update until merged close jira issue # IoTDB Debug Guide Recommended use Intellij idea. mvn clean package -DskipTests
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Languages English 简体中文
gitHub
(opens new window) # Become a Committer An Apache IoTDB committer (opens new window) has write access to the repository for merging pull requests, but you don’t have to be a code contributor to become a committer. Becoming a committer means that you have the project’s trust. Read the ASF documentation (opens new window) for more about being a committer in the Apache Software Foundation. The PMC (opens new window) makes someone a committer via nomination, discussion, and then majority vote. We use data from as many sources as possible to inform our reasoning. Here are some examples: IoTDB expert and evangelist (documentations, blogs, etc..) Public events Firsthand PMC testimonials The PMC has assembled the following set of guidelines for becoming a committer. # An Apache IoTDBcommitter… # Takes many forms There are many actions other than coding that build the trust we place in a committer - code review, design discussion, user support, community outreach, improving infrastructure, documentation, project management, etc. # Knows, upholds, and reinforces the Apache Software Foundation code of conduct See the ASF documentation (opens new window). In particular, they manifestly strive to: Be open Be empathetic Be welcoming Be friendly Be patient Be collaborative Be inquisitive Be careful in the words that they choose # Knows, upholds, and reinforces the responsibilities of an Apache Software Foundation committer See the ASF documentation (opens new window). They help create a product that will outlive the interest of any particular volunteer (including themselves) They grow and maintain the health of the Apache community They help out with surrounding work, such as the website & documentation They help users They can be trusted to decide when code is ready for release, or when to ask someone else to make the judgment They can be trusted to decide when to merge code (if a code contributor) or when to ask someone else to make the judgment # Knows, upholds, and reinforces the IoTDB community’s practices They have a proven commitment to the project They share their intentions with the community They accept and integrate community feedback in their plans, designs, code, etc. They earnestly try to make IoTDB better with their contributions In particular, if a code contributor:
They earnestly try to make IoTDB better with their own code They earnestly try to make IoTDB better with code review They accept and integrate feedback on their code They know, follow, and enforce IoTDB's practices while reviewing/merging code - style, documentation, testing, backward compatibility, etc. The code of conduct is derived from Apache Beam (opens new window). Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Current Events
Languages English 简体中文
gitHub
(opens new window) # Howto Submit Code # Contribution IoTDB invites developers to participate in the construction of open source projects You can check issues (opens new window) and participate in the resolution, or make other improvements. After submitting the pr, after passing the Travis-CI test and Sonar code quality inspection, at least one Committer agrees and the code does not conflict, you can merge # PR guide You can easily submit Pull Request (PR) (opens new window) on Github, the following will use this website project apache/iotdb (opens new window) as an example (if it is another project, please replace the project name iotdb) # Fork repository Visit the apache/iotdb project’s github page (opens new window), click Fork button on the right left cornor. # Setup local repository Clone the source code to local machine: git clone https://github.com/<your_github_name>/iotdb.git
1Note: substitute <your_github_name> with your github username. After the clone is done, the origin remote will point to the default branch of the cloned repository. add apache/iotdb as upstream remote: cd iotdb
git remote add upstream https://github.com/apache/iotdb.git
12Check the local repository’s remotes git remote -v
origin https://github.com/<your_github_name>/iotdb.git (fetch)
origin https://github.com/<your_github_name>/iotdb.git(push)
upstream https://github.com/apache/iotdb.git (fetch)
upstream https://github.com/apache/iotdb.git (push)
12345Create a new branch to start working：(e.g. fix) git checkout -b fix
1You can make code changes after creation. Push the changes to a remote repository：(e.g. fix) git commit -a -m "<you_commit_message>"
git push origin fix
12For more on git usages, please visitGit tutorial (opens new window). # Create PR Goto your github page, find the apache/servicecomb-website project, swich to the branch you just pushed, click on New pull request and then Create pull request, see the image below:If you solve the issues (opens new window), you need to add [IOTDB-xxx] at the beginning，see the image below: Congrautulations, now you have succesfully submitted a PR. For more on PR, please read collaborating-with-issues-and-pull-requests (opens new window) # Resolve conflicts When a same piece of file is edited by multiple person simultaneously, conflicts can occur. It can be resolved as follow: 1：Switch to the master branch git checkout master
12：Pull the upstream’s master branch git pull upstream master
13：Switch back to the branch we are working on(e.g. fix) git checkout fix
14：Rebase the working branch onto the master branch git rebase -i master
1A list of commits will be listed on your text editor. Normally we can just save and exit. Git will now apply the commits one by one onto the master branch until it encounters a conflict. When this happens, the rebase process is paused. We need to resolve the conflicts, then execute git add .
git rebase --continue
Current Events
Languages English 简体中文
gitHub
(opens new window) # Where to Find Us As an Apache project, we are using mailing list, JIRA, and Github Issues to obtain the feedback of users. We also have a Twitter account. Mailing list: dev@iotdb.apache.org. The mailing list is used for both user feedback and developer discussion. Follow method: Send an email to dev-subscribe@iotdb.apache.org with the email you want to
receive the email, the subject content is not limited, after receiving the reply, send a
confirmation email to the confirmation address again (the confirmation address is longer,
it is recommended gmail mailbox). JIRA issue: https://issues.apache.org/jira/projects/IOTDB/issues Github issue: https://github.com/apache/iotdb/issues Twitter: https://twitter.com/apacheiotdb For Chinese users, we have a QQ Group: 659990460. We look forward to you sharing the experience of using IoTDB: Survey (opens new window) For Chinese users, we have a Wechat Public Account. For more details, read 交流 For Chinese users，we have a DingTalk Group. For more details, read 交流 IoTDB community will host Meetups aperiodically, the information can be found in our mailing list and Meetup List Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Languages English 简体中文
gitHub
(opens new window) # How to vote for a release For non-Chinese users, please read https://cwiki.apache.org/confluence/display/IOTDB/Validating+a+staged+Release # Download everything under voting version / rc https://dist.apache.org/repos/dist/dev/iotdb/ # Import the public key of the release manager https://dist.apache.org/repos/dist/dev/iotdb/KEYS At the bottom is the public key of the Release Manager (RM) Install gpg2 # the first method The beginning of the public key is this
pub rsa4096 2019-10-15 [SC]
10F3B3F8A1201B79AA43F2E00FC7F131CAA00430
Or this
pub rsa4096/28662AC6 2019-12-23 [SC]
1234567Download the public key gpg2 --receive-keys 10F3B3F8A1201B79AA43F2E00FC7F131CAA00430 (or 28662AC6)
or (Designation keyserver)
gpg2 --keyserver p80.pool.sks-keyservers.net --recv-keys 10F3B3F8A1201B79AA43F2E00FC7F131CAA00430 (或 28662AC6)
1234# The second method Copy the following paragraph into a text file and name it key.asc -----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v2
...
-----END PGP PUBLIC KEY BLOCK-----
1234Import RM's public key to your computer gpg2 --import key.asc
1# Verify the source distribution Verify that there are NOTICE, LICENSE, and the content is correct. Verify README, RELEASE_NOTES Validation header mvn -B apache-rat:check
1Verify signatures and hashes gpg2 --verify apache-iotdb-0.12.0-source-release.zip.asc apache-iotdb-0.12.0-source-release.zip
appear Good Singnature
shasum -a512 apache-iotdb-0.12.0-source-release.zip
Compared with the corresponding .sha512, the same is fine.
1234567Verify compilation mvnw.sh install
Should end up all SUCCESS
123# Verifying the binary release Verify that there are NOTICE, LICENSE, and the content is correct. Verify README, RELEASE_NOTES Verify signatures and hashes gpg2 --verify apache-iotdb-0.12.0-bin.zip.asc apache-iotdb-0.12.0-bin.zip
appear Good Singnature
shasum -a512 apache-iotdb-0.12.0-bin.zip
Compared with the corresponding .sha512, the same is fine.
Current Events
Languages English 简体中文
gitHub
(opens new window) # Powered By # Project and Product names using "IoTDB" Organizations creating products and projects using Apache IoTDB, along with associated marketing materials, should take care to respect the trademark in “Apache IoTDB” and its logo. Please refer to ASF Trademarks Guidance (opens new window) and associated FAQ (opens new window) for comprehensive and authoritative guidance on proper usage of ASF trademarks.
It is recommended to not include “IoTDB” in any names to prevent potential trademark issue with the IoTDB project.
As an example, names like “IoTDB BigDataProduct” should not be used, as the name include “IoTDB” in general. The above links, however, describe some exceptions, like for names such as “BigDataProduct, powered by Apache IoTDB” or “BigDataProduct for Apache IoTDB”. In summary, any names contain "Apache IoTDB" as a whole are acceptable.
A common practice you can take is to create software identifiers (Maven coordinates, module names, etc.) like “iotdb-tool”. These are permitted. Nominative use of trademarks in descriptions is also allowed, as in “BigDataProduct is a subproduct for Apache IoTDB”. # Companies and Organizations To add yourself to the list, please email dev@iotdb.apache.org with your organization name, URL, a list of IoTDB components you are using, and a short description of your use case. You can also leave the info on Github (opens new window). School of Software (Tsinghua University), and National Engineering Laboratery for Big Data Software that initially launched IoTDB We have both graduate students and a team of professional software engineers working on the stack We use Apache IoTDB in Shanghai Metro and two other cities in China to replace KairosDB. We use Apache IoTDB in CMA (China Meteorological Administration) for storing 10-years station data. There are about 100 thousand stations. Lenovo developed TsFile Go version, and uses it in YOFC (Yangtze Optical Fiber and Cable Company). The system collects data from more than 90 thousand data points, stores them to the TsFile (with Go) as the edge storage and then reads them later to send to the cloud. Goldwind uses Apache IoTDB to manage the wind turbine data. They consume the SCADA data from Kafka, write to IoTDB and use IoTDB to support queries. DaTangXianYi deployed IoTDB in many power stations in China. Beijing ZhiChuangXinKe uses IoTDB to store the battery data of signal towers for China Tower company. There are about 3 million towers. Beijing QingZhiWuLian uses IoTDB for electric generator's monitoring. Currently they look forward to the cluster mode of IoTDB. JianLongGangTie is testing IoTDB for using it in their applications. Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
| Timeseries| Storage Group|DataType|Encoding|
+------------------------------+--------------+--------+--------+
| root.ln.wf01.wt01.status| root.ln| BOOLEAN| PLAIN|
+------------------------------+--------------+--------+--------+
Total timeseries number = 1
1234567Insert timeseries data is the basic operation of IoTDB, you can use ‘INSERT’ command to finish this. Before insert you should assign the timestamp and the suffix path name: IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status) values(100,true);
IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status,temperature) values(200,false,20.71)
12The data we’ve just inserted displays like this: IoTDB> SELECT status FROM root.ln.wf01.wt01
+-----------------------+------------------------+
| Time|root.ln.wf01.wt01.status|
+-----------------------+------------------------+
|1970-01-01T08:00:00.100| true|
|1970-01-01T08:00:00.200| false|
+-----------------------+------------------------+
Total line number = 2
12345678We can also query several timeseries data at once like this: IoTDB> SELECT * FROM root.ln.wf01.wt01
+-----------------------+--------------------------+-----------------------------+
| Time| root.ln.wf01.wt01.status|root.ln.wf01.wt01.temperature|
+-----------------------+--------------------------+-----------------------------+
|1970-01-01T08:00:00.100| true| null|
|1970-01-01T08:00:00.200| false| 20.71|
+-----------------------+--------------------------+-----------------------------+
| Timeseries| Storage Group|DataType|Encoding|
+------------------------------+--------------+--------+--------+
| root.ln.wf01.wt01.status| root.ln| BOOLEAN| PLAIN|
+------------------------------+--------------+--------+--------+
Total timeseries number = 1
1234567Insert timeseries data is the basic operation of IoTDB, you can use ‘INSERT’ command to finish this. Before inserting you should assign the timestamp and the suffix path name: IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status) values(100,true);
IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status,temperature) values(200,false,20.71)
12The data we’ve just inserted displays like this: IoTDB> SELECT status FROM root.ln.wf01.wt01
+-----------------------+------------------------+
| Time|root.ln.wf01.wt01.status|
+-----------------------+------------------------+
|1970-01-01T08:00:00.100| true|
|1970-01-01T08:00:00.200| false|
+-----------------------+------------------------+
Total line number = 2
12345678We can also query several timeseries data at once like this: IoTDB> SELECT * FROM root.ln.wf01.wt01
+-----------------------+--------------------------+-----------------------------+
| Time| root.ln.wf01.wt01.status|root.ln.wf01.wt01.temperature|
+-----------------------+--------------------------+-----------------------------+
|1970-01-01T08:00:00.100| true| null|
|1970-01-01T08:00:00.200| false| 20.71|
+-----------------------+--------------------------+-----------------------------+
Total line number = 2
12345678The commands to exit the Cli is: IoTDB> quit
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) 文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) # 成为Committer Apache IoTDB Committer (opens new window) 拥有代码库的写权限，可以合并PR，但是您不必成为代码贡献者才能成为Committer。成为一个Committer意味着你获得了项目的信任。阅读ASF文档 (opens new window) 以获取有关成为Apache Software Foundation中的提交者的更多信息。 项目管理委员会 PMC (opens new window) 通过提名、讨论、并投票（且多数人投赞成票）来将某人增选为Committer。我们会使用尽可能多的数据来源来解释为什么增选某人。例如： IoTDB技术专家且是布道者（贡献文档、博客等） 公开活动 PMC推荐 对于想成为Committer的贡献者，PMC制定了以下的指导准则 # Apache IoTDB Committer # 采取多种形式 除了贡献代码之外，还有许多其他形式可以提高我们对贡献者的信任，例如代码审查，设计讨论，为其他用户提供支持，发展社区，改善IoTDB基础设施，文档，项目管理等。 # 知道、支持并不断强化Apache Software Foundation的行为准则 请参阅ASF文档 (opens new window)。特别是，他们显然致力于： 开放 善解人意 热情 友善 有耐心 团队协作力强 好奇心强 注意言行 # 知道、支持并不断强化作为Apache Software Foundation提交者的职责 请参阅ASF文档 (opens new window)。 他们帮助创造的是一个产品，而不仅仅是某个贡献者的兴趣 他们维护Apache社区的健康，并帮助社区成长 他们帮忙做一些周边工作，例如维护网站、维护文档。 他们帮助用户 可以信任他们来决定何时准备发布代码，或何时需要别人一起做出判断。 可以信任他们来决定何时合并代码（如果是代码贡献者），或何时需要别人一起做出判断。 # 知道、支持并不断强化IoTDB社区的实践 他们对项目有坚定的承诺 他们与社区分享他们的想法 他们接受社区反馈并将其整合到他们的计划，设计，代码等中。 他们认真地尝试通过贡献使IoTDB更好 特别是，如果代码贡献者：
他们认真尝试用自己的代码使IoTDB更好 他们认真地尝试通过代码审查使IoTDB更好 他们接受并整合有关其代码的反馈 他们在查看/合并代码（样式，文档，测试，向后兼容性等）时了解、遵守并不断优化IoTDB的最佳实践。 这个指导文档修改于Apache Beam (opens new window) Copyright © 2021 The Apache Software Foundation.
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) 文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) # 代码提交指南 # 贡献途径 IoTDB诚邀广大开发者参与开源项目构建 您可以查看issues (opens new window)并参与解决，或者做其他改善。 提交pr，通过Travis-CI测试和Sonar代码质量检测后，至少有一位以上Committer同意且代码无冲突，就可以合并了 # PR指南 在Github上面可以很方便地提交 Pull Request (PR) (opens new window)，下面将以本网站项目apache/iotdb (opens new window) 为例（如果是其他项目，请替换项目名iotdb） # Fork仓库 进入 apache/iotdb 的 github 页面 (opens new window) ，点击右上角按钮 Fork 进行 Fork # 配置git和提交修改 将代码克隆到本地： git clone https://github.com/<your_github_name>/iotdb.git
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) 文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) 文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) # 联系我们 作为Apache项目，我们使用邮件列表、JIRA和Github的issue模块来获取用户反馈。 邮件列表: dev@iotdb.apache.org. 该列表同时用于用户反馈和开发者交流. 订阅方法：用想接收邮件的邮箱向 dev-subscribe@iotdb.apache.org 发一封邮件，主题内容不限，收到回复后，
再次向确认地址发一封确认邮件（确认地址比较长，推荐qq邮箱）。 JIRA issue: https://issues.apache.org/jira/projects/IOTDB/issues Github issue: https://github.com/apache/iotdb/issues Twitter: https://twitter.com/apacheiotdb 对中文用户，欢迎加入QQ群: 659990460. 我们非常期待您分享您使用IoTDB的经验: 调研问卷 (opens new window) 对中文用户，欢迎关注微信公众号，IoTDB漫游指南 对中文用户，我们提供了钉钉群，可以搜索群名称加入：Apache IoTDB交流1群 IoTDB社区会不定期举办Meetup，相关信息会在邮件列表和研讨会议和报告列表 (opens new window) 页面找到。 Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) 文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) # 技术支持 # 使用“IoTDB”的项目和产品名称 其他组织或企业在使用Apache IoTDB建立项目或者产品时，应该应该注意尊重“Apache IoTDB”的商标。
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) 文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) # 发行版本 Version IoTDB Binaries IoTDB Sources release notes 0.12.0 All-in-one SHA512 ASC 源代码 SHA512 ASC release notes 单机版 SHA512 ASC 集群版 SHA512 ASC Grafana连接器 SHA512 ASC 0.11.3 可执行程序 SHA512 ASC 源码 SHA512 ASC release notes 历史版本下载: https://archive.apache.org/dist/iotdb/ (opens new window) 升级注意事项: 如何升级小版本 (例如，从 v0.11.0 to v0.11.2)? 同一个大版本下的多个小版本是互相兼容的。 只需要下载新的小版本， 然后修改其配置文件，使其与原有版本的设置一致。 停掉旧版本进程，启动新版本即可。 如何从v0.11.x或v0.10.x 升级到 v0.12.x? 从0.11或0.10升级到0.12的过程与v0.9升级到v0.10类似，升级工具会自动进行数据文件的升级。 停掉旧版本新数据写入。 用CLI调用flush，确保关闭所有的TsFile文件. 我们推荐提前备份数据文件（以及写前日志和mlog文件），以备回滚。 下载最新版，解压并修改配置文件。将各数据目录都指向备份的或者v0.11或0.10原来使用的数据目录。 把0.11中的其他修改都放到0.12中。 停止旧版本IoTDB的实例，启动v0.12的实例。IoTDB将后台自动升级数据文件格式。在升级过程中数据可以进行查询和写入。
当日志中显示All files upgraded successfully! 后代表升级成功。 注意1：0.12的配置文件进行了较大改动，因此不要直接将原本的配置文件用于0.12 注意2: 由于0.12不支持从0.9或者更低版本升级，如果需要升级，请先升级到0.10版本 注意3: 在文件升级完成前，最好不要进行delete操作。如果删除某个存储组内的数据且该存储组内存在待升级文件，删除会失败。 如何从v0.10.x 升级到 v0.11.x? 0.10 与0.11的数据文件格式兼容，但写前日志等格式不兼容，因此需要进行升级（但速度很快）： 停掉0.10的新数据写入。 用CLI调用flush，确保关闭所有的TsFile文件. 我们推荐提前备份写前日志和mlog文件，以备回滚。 下载最新版，解压并修改配置文件。将各数据目录都指向备份的或者v0.10原来使用的数据目录。 停止v0.10的实例，启动v0.11的实例。IoTDB将自动升级不兼容的文件格式。 注意：0.11的配置文件进行了较大改动，因此不要直接将0.10的配置文件用于0.11 如何从v0.9.x 升级到 v0.10.x? 停掉0.9的新数据写入。 用CLI调用flush，确保关闭所有的TsFile文件. 我们推荐提前备份数据文件（以及写前日志和mlog文件），以备回滚。 下载最新版，解压并修改配置文件。将各数据目录都指向备份的或者v0.9原来使用的数据目录。 停止v0.9的实例，启动v0.10的实例。IoTDB将自动升级数据文件格式。 如何从0.8.x 升级到 v0.9.x? 我们推荐提前备份数据文件（以及写前日志和mlog文件），以备回滚。 下载最新版，解压并修改配置文件。将各数据目录都指向备份的或者v0.8原来使用的数据目录。 停止v0.8的实例，启动v0.9.x的实例。IoTDB将自动升级数据文件格式。 # 所有版本 在 Archive repository (opens new window)查看所有版本 # 验证哈希和签名 除了我们的发行版，我们还在* .sha512文件中提供了sha512散列，并在* .asc文件中提供了加密签名。 Apache Software Foundation提供了广泛的教程来 验证哈希和签名 (opens new window)，您可以使用任何这些发布签名的KEYS (opens new window)来遵循这些哈希和签名。 Copyright © 2021 The Apache Software Foundation.
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) 文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) 系统设计 应用概览 应用概览TsFile 查询引擎 元数据管理 存储引擎 数据查询 工具 连接器 客户端 # 应用概览 物联网时序数据库 Apache IoTDB 的架构图如上所示，覆盖了对时序数据的采集、存储、查询、分析以及可视化等全生命周期的数据管理功能，其中灰色部分为 IoTDB 组件。 # IoTDB 架构介绍 IoTDB 采用客户端-服务器架构，如下图所示。 其中服务器端主要包括查询引擎，用来处理用户的所有请求，并分发到对应的管理组件，包括数据写入层、数据查询、元数据管理、权限管理等模块。 数据文件 查询引擎 元数据管理 存储引擎 数据查询 # 系统工具 数据同步工具 # 连接器 IoTDB 与大数据系统进行了对接。 Hadoop-TsFile Hive-TsFile Spark-TsFile Spark-IoTDB Grafana
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) 文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) IoTDB用户手册 (V0.8.x) 0-开始使用 快速入门常见问题调查报告1-概述 2-基本概念 3-操作指南 4-系统部署与管理 5-IoTDB SQL文档 6-JDBC API 7-TsFile 8-系统工具 # 快速入门 # 概览 快速入门 安装环境
IoTDB安装 IoTDB试用
启动IoTDB 操作IoTDB
使用Cli/Shell工具 IoTDB的基本操作 停止IoTDB
default user to login Cli to use IoTDB. The startup script of Cli is the start-cli script in the folder sbin. When executing the script, user should assign
IP, PORT, USER_NAME and PASSWORD. The default parameters are "-h 127.0.0.1 -p 6667 -u root -pw -root". Here is the command for starting the Cli: # Unix/OS X
> sbin/start-cli.sh -h 127.0.0.1 -p 6667 -u root -pw root
# Windows
> sbin\start-cli.bat -h 127.0.0.1 -p 6667 -u root -pw root
12345The command line client is interactive so if everything is ready you should see the welcome logo and statements: _____ _________ ______ ______
|_ _| | _ _ ||_ _ `.|_ _ \
| | .--.|_/ | | \_| | | `. \ | |_) |
| | / .'`\ \ | | | | | | | __'.
_| |_| \__. | _| |_ _| |_.' /_| |__) |
|_____|'.__.' |_____| |______.'|_______/ version x.x.x
IoTDB> login successfully
IoTDB>
12345678910# Basic commands for IoTDB Now, let us introduce the way of creating timeseries, inserting data and querying data. The data in IoTDB is organized as timeseries, in each timeseries there are some data-time pairs, and every timeseries is owned by a storage group. Before defining a timeseries, we should define a storage group using SET STORAGE GROUP, and here is an example: IoTDB> SET STORAGE GROUP TO root.ln
1We can also use SHOW STORAGE GROUP to check created storage group: IoTDB> SHOW STORAGE GROUP
+-----------------------------------+
| Storage Group|
+-----------------------------------+
| root.ln|
+-----------------------------------+
storage group number = 1
1234567After the storage group is set, we can use CREATE TIMESERIES to create new timeseries. When we create a timeseries, we should define its data type and the encoding scheme. We create two timeseries as follow: IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN
IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE
12To query the specific timeseries, use SHOW TIMESERIES <Path>. <Path> represents the path of the timeseries. Its default value is null, which means querying all the timeseries in the system(the same as using "SHOW TIMESERIES root"). Here are the examples: Query all timeseries in the system: IoTDB> SHOW TIMESERIES
+-------------------------------+---------------+--------+--------+
gitHub
(opens new window) # Release version Version IoTDB Binaries IoTDB Sources release notes 0.12.0 All-in-one SHA512 ASC Sources SHA512 ASC release notes Server SHA512 ASC Cluster SHA512 ASC Grafana-connector SHA512 ASC 0.11.3 Release SHA512 ASC Sources SHA512 ASC release notes Legacy version are available here: https://archive.apache.org/dist/iotdb/ (opens new window) Attention: How to upgrade a minor version (e.g., from v0.11.0 to v0.11.3)? versions which have the same major version are compatible. Just download and unzip the new version. Then modify the configuration files to keep consistent
with what you set in the old version. stop the old vesion instance, and start the new one. How to upgrade from v.11.x or v0.10.x to v0.12.x? Upgrading from v0.11 or v0.10 to v0.12 is similar as v0.9 to v0.10. The upgrade tool will rewrite the data files automatically. Stop writing new data. Call flush command using sbin/start-cli.sh in original version to close all TsFiles. We recommend to backup the data file (also the wal files and mlog.txt) before upgrading for rolling back. Just download, unzip v0.12.x.zip, and modify conf/iotdb-engine.proeprties to let all the
directories point to the folders set in previous version (or the backup folder).
You can also modify other settings if you want. Any other config changes in v0.11 should be moved to v0.12. Stop IoTDB v0.11 or v0.10 instance, and start v0.12.x, then the IoTDB will upgrade data file format automatically. It is ok to read and write data when the upgrading process works. After a log All files upgraded successfully! printed, the upgrading completes. NOTICE 1: V0.12 changes many settings in conf/iotdb-engine.properties, so do not use previous
configuration file directly. NOTICE 2: V0.12 doesn't support upgrade from v0.9 or lower version, please upgrade to v0.10 first if needed. NOTICE 3: We don't recommend to delete data before the upgrading finished. The deletion will fail if you try to delete data in the storage group with upgrading files. How to upgrade from v.10.x to v0.11.x? The data format (i.e., TsFile data) of v0.10.x and v0.11 are compatible, but the WAL file is
incompatible. So, you can follow the steps: Stop writing new data. Call flush command using sbin/start-cli.sh in v0.10.x to close all TsFiles. We recommend to backup the the wal files and mlog.txt before upgrading for rolling back. Just download, unzip v0.11.x.zip, and modify conf/iotdb-engine.proeprties to let all the
directories point to the data folder set in v0.10.x (or the backup folder). You can also modify
other settings if you want. Stop IoTDB v0.10.x instance, and start v0.11.x, then the IoTDB will upgrade data file format
automatically. NOTICE: V0.11 changes many settings in conf/iotdb-engine.properties, so do not use v0.10's
configuration file directly. How to upgrade from v.9.x to v0.10.x? Upgrading from v0.9 to v0.10 is more complex than v0.8 to v0.9. Stop writing new data. Call flush command using sbin/start-client.sh in v0.9 to close all TsFiles. We recommend to backup the data file (also the wal files and mlog.txt) before upgrading for rolling back. Just download, unzip v0.10.x.zip, and modify conf/iotdb-engine.proeprties to let all the
directories point to the folders set in v0.9.x (or the backup folder).
You can also modify other settings if you want. Stop IoTDB v0.9 instance, and start v0.10.x, then the IoTDB will upgrade data file format automatically. How to upgrade from 0.8.x to v0.9.x? We recommend to backup the data file (also the wal files and mlog.txt) before upgrading for rolling back. Just download, unzip v0.9.x.zip, and modify conf/iotdb-engine.proeprties to let all the
directories point to the folders set in v0.8.x (or the backup folder).
You can also modify other settings if you want. Stop IoTDB v0.8 instance, and start v0.9.x, then the IoTDB will upgrade data file format automatically. # All releases Find all releases in the Archive repository (opens new window). # Verifying Hashes and Signatures Along with our releases, we also provide sha512 hashes in *.sha512 files and cryptographic signatures in *.asc files. The Apache Software Foundation has an extensive tutorial to verify hashes and signatures (opens new window)which you can follow by using any of these release-signing KEYS (opens new window). Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
+- pom.xml
then by default IOTDB_HOME is the direct parent directory of sbin/start-server.sh on Unix/OS X
(or that of sbin\start-server.bat on Windows). if IOTDB_CLI_HOME is not explicitly assigned,
then by default IOTDB_CLI_HOME is the direct parent directory of sbin/start-client.sh on
Unix/OS X (or that of sbin\start-client.bat on Windows). If you are not the first time that building IoTDB, remember deleting the following files: > rm -rf $IOTDB_HOME/data/
> rm -rf $IOTDB_HOME/lib/
12Then under the root path of incubator-iotdb, you can build IoTDB using Maven: > pwd
/workspace/incubator-iotdb
# Unix/OS X
> mvn clean package -pl server -am -Dmaven.test.skip=true
# Windows
> mvn clean package -pl server -am '-Dmaven.test.skip=true'
12345678Note: If you are a Windows user, you should use quoting '-Dmaven.test.skip=true' in the following commands. If successful, you will see the the following text in the terminal: [INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO]
[INFO] Apache IoTDB (incubating) Project Parent POM ....... SUCCESS [ 6.405 s]
[INFO] TsFile ............................................. SUCCESS [ 10.435 s]
[INFO] Service-rpc ........................................ SUCCESS [ 4.170 s]
[INFO] IoTDB Jdbc ......................................... SUCCESS [ 3.252 s]
[INFO] IoTDB Server ....................................... SUCCESS [ 8.072 s]
[INFO] ------------------------------------------------------------------------
IoTDB> login successfully
IoTDB>
12345678910# Basic commands for IoTDB Now, let us introduce the way of creating timeseries, inserting data and querying data. The data in IoTDB is organized as timeseries, in each timeseries there are some data-time pairs, and every timeseries is owned by a storage group. Before defining a timeseries, we should define a storage group using SET STORAGE GROUP, and here is an example: IoTDB> SET STORAGE GROUP TO root.ln
1We can also use SHOW STORAGE GROUP to check created storage group: IoTDB> SHOW STORAGE GROUP
+-----------------------------------+
| Storage Group|
+-----------------------------------+
| root.ln|
+-----------------------------------+
storage group number = 1
1234567After the storage group is set, we can use CREATE TIMESERIES to create new timeseries. When we create a timeseries, we should define its data type and the encoding scheme. We create two timeseries as follow: IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN
IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE
12Inorder to query the specific timeseries, we can use SHOW TIMESERIES.represent the path of the timeseries. Its default value is null, which means quering all the timeseries in the system(the same as using "SHOW TIMESERIES root"). Here are the examples: Querying all timeseries in the system: IoTDB> SHOW TIMESERIES
+-------------------------------+---------------+--------+--------+
| Timeseries| Storage Group|DataType|Encoding|
+-------------------------------+---------------+--------+--------+
| root.ln.wf01.wt01.status| root.ln| BOOLEAN| PLAIN|
| root.ln.wf01.wt01.temperature| root.ln| FLOAT| RLE|
+-------------------------------+---------------+--------+--------+
Total timeseries number = 2
12345678Querying a specific timeseries(root.ln.wf01.wt01.status): IoTDB> SHOW TIMESERIES root.ln.wf01.wt01.status
| | .--.|_/ | | \_| | | `. \ | |_) |
| | / .'`\ \ | | | | | | | __'.
_| |_| \__. | _| |_ _| |_.' /_| |__) |
|_____|'.__.' |_____| |______.'|_______/ version x.x.x
IoTDB> login successfully
IoTDB>
12345678910# Basic commands for IoTDB Now, let us introduce the way of creating timeseries, inserting data and querying data. The data in IoTDB is organized as timeseries, in each timeseries there are some data-time pairs, and every timeseries is owned by a storage group. Before defining a timeseries, we should define a storage group using SET STORAGE GROUP, and here is an example: IoTDB> SET STORAGE GROUP TO root.ln
1We can also use SHOW STORAGE GROUP to check created storage group: IoTDB> SHOW STORAGE GROUP
+-----------------------------------+
| Storage Group|
+-----------------------------------+
| root.ln|
+-----------------------------------+
storage group number = 1
1234567After the storage group is set, we can use CREATE TIMESERIES to create new timeseries. When we create a timeseries, we should define its data type and the encoding scheme. We create two timeseries as follow: IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN
IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE
12To query the specific timeseries, use SHOW TIMESERIES <Path>. <Path> represents the path of the timeseries. Its default value is null, which means querying all the timeseries in the system(the same as using "SHOW TIMESERIES root"). Here are the examples: Query all timeseries in the system: IoTDB> SHOW TIMESERIES
+-------------------------------+---------------+--------+--------+
| Timeseries| Storage Group|DataType|Encoding|
+-------------------------------+---------------+--------+--------+
| root.ln.wf01.wt01.status| root.ln| BOOLEAN| PLAIN|
| root.ln.wf01.wt01.temperature| root.ln| FLOAT| RLE|
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
12Repeat this process until all commits are successfully applied. And finally run 5：to push the resolved branch to remote origin git push -f origin fix
1The code of conduct is derived fromApache ServiceComb (opens new window) Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
1234567Verify that it starts and the sample statements execute correctly nohup ./sbin/start-server.sh >/dev/null 2>&1 &
./sbin/start-cli.sh
SET STORAGE GROUP TO root.turbine;
CREATE TIMESERIES root.turbine.d1.s0 WITH DATATYPE=DOUBLE, ENCODING=GORILLA;
insert into root.turbine.d1(timestamp,s0) values(1,1);
insert into root.turbine.d1(timestamp,s0) values(2,2);
insert into root.turbine.d1(timestamp,s0) values(3,3);
select * from root;
Prints the following:
+-----------------------------------+------------------+
| Time|root.turbine.d1.s0|
+-----------------------------------+------------------+
| 1970-01-01T08:00:00.001+08:00| 1.0|
| 1970-01-01T08:00:00.002+08:00| 2.0|
| 1970-01-01T08:00:00.003+08:00| 3.0|
+-----------------------------------+------------------+
1234567891011121314151617181920# Sample mail Email can be sent after verification Hi,
+1 (PMC could binding)
The source release:
LICENSE and NOTICE [ok]
signatures and hashes [ok]
All files have ASF header [ok]
Total line number = 2
12345678The commands to exit the Cli are: IoTDB> quit
or
IoTDB> exit
123For more on what commands are supported by IoTDB SQL, see SQL Reference. # Stop IoTDB The server can be stopped with ctrl-C or the following script: # Unix/OS X
> sbin/stop-server.sh
# Windows
> sbin\stop-server.bat
12345# Basic configuration The configuration files is in the conf folder, includes: environment configuration (iotdb-env.bat, iotdb-env.sh), system configuration (iotdb-engine.properties) log configuration (logback.xml).
←
Publication
Storage Path Setting
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
加入社区（Join the community） · Issue #1995 · apache/iotdb · GitHub
or
IoTDB> exit
123For more on what commands are supported by IoTDB SQL, see SQL Reference. # Stop IoTDB The server can be stopped with ctrl-C or the following script: # Unix/OS X
> sbin/stop-server.sh
# Windows
> sbin\stop-server.bat
12345# Only build cli Under the root path of incubator-iotdb: > mvn clean package -pl cli -am -DskipTests
Frequently asked questions
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
1请将 <your_github_name> 替换为您的github名字 clone完成后，origin会默认指向github上的远程fork地址。 将 apache/iotdb 添加为本地仓库的远程分支 upstream： cd iotdb
git remote add upstream https://github.com/apache/iotdb.git
12检查远程仓库设置： git remote -v
origin https://github.com/<your_github_name>/iotdb.git (fetch)
origin https://github.com/<your_github_name>/iotdb.git(push)
upstream https://github.com/apache/iotdb.git (fetch)
upstream https://github.com/apache/iotdb.git (push)
12345新建分支以便在分支上做修改：（假设新建的分支名为fix） git checkout -b fix
1创建完成后可进行代码更改。 提交代码到远程分支：（此处以fix分支为例） git commit -a -m "<you_commit_message>"
git push origin fix
12更多 git 使用方法请访问：git 使用 (opens new window)，这里不赘述。 # 创建PR 在浏览器切换到自己的 github 仓库页面，切换分支到提交的分支 <your_branch_name> ，依次点击 New pull request 和 Create pull request 按钮进行创建，如果您解决的是issues (opens new window)，需要在开头加上[IOTDB-xxx]，如下图所示： 至此，您的PR创建完成，更多关于 PR 请阅读 collaborating-with-issues-and-pull-requests (opens new window) # 冲突解决 提交PR时的代码冲突一般是由于多人编辑同一个文件引起的，解决冲突主要通过以下步骤即可： 1：切换至主分支 git checkout master
12：同步远端主分支至本地 git pull upstream master
13：切换回刚才的分支（假设分支名为fix） git checkout fix
14：进行rebase git rebase -i master
1此时会弹出修改记录的文件，一般直接保存即可。然后会提示哪些文件出现了冲突，此时可打开冲突文件对冲突部分进行修改，将提示的所有冲突文件的冲突都解决后，执行 git add .
git rebase --continue
12依此往复，直至屏幕出现类似 rebase successful 字样即可，此时您可以进行往提交PR的分支进行更新： git push -f origin fix
1这个指导文档修改于Apache ServiceComb (opens new window) Copyright © 2021 The Apache Software Foundation.
语言 English 简体中文
gitHub
(opens new window) # 给发布版本投票 For non-Chinese users, please read https://cwiki.apache.org/confluence/display/IOTDB/Validating+a+staged+Release # 下载投票的 版本/rc 下的所有内容 https://dist.apache.org/repos/dist/dev/iotdb/ # 导入发布经理的公钥 https://dist.apache.org/repos/dist/dev/iotdb/KEYS 最下边有 Release Manager (RM) 的公钥 安装 gpg2 # 第一种方法 公钥的开头是这种
pub rsa4096 2019-10-15 [SC]
10F3B3F8A1201B79AA43F2E00FC7F131CAA00430
或这种
pub rsa4096/28662AC6 2019-12-23 [SC]
1234567下载公钥 gpg2 --receive-keys 10F3B3F8A1201B79AA43F2E00FC7F131CAA00430 (或 28662AC6)
或 (指定 keyserver)
gpg2 --keyserver p80.pool.sks-keyservers.net --recv-keys 10F3B3F8A1201B79AA43F2E00FC7F131CAA00430 (或 28662AC6)
1234# 第二种方法 把下边这段复制到一个文本文件中，起个名叫 key.asc -----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v2
...
-----END PGP PUBLIC KEY BLOCK-----
1234导入 RM 的公钥到自己电脑 gpg2 --import key.asc
1# 验证源码发布版 验证是否有 NOTICE、LICENSE，以及内容是否正确。 验证 README、RELEASE_NOTES 验证 header mvn -B apache-rat:check
1验证签名和哈希值 gpg2 --verify apache-iotdb-0.12.0-source-release.zip.asc apache-iotdb-0.12.0-source-release.zip
出现 Good Singnature
shasum -a512 apache-iotdb-0.12.0-source-release.zip
see Join the community for more
具体事项请参阅 ASF Trademarks Guidance (opens new window)
和FAQ (opens new window)。 一般来说，我们建议不要仅使用"IoTDB"在任何名字中，以避免出现商标风险。
例如，不应该给自己的产品命名为"IoTDB 大数据产品"，因为这个名字中包含IoTDB。然而，如果说是命名为"Apache IoTDB赋能的大数据产品"，
或者"基于Apache IoTDB的大数据产品"， 这种名字就是被允许的。
简单来说，当你想在名字中出现IoTDB时，应为"Apache IoTDB"，而不是仅"IoTDB"。 在你（在Maven 或者其他模块名中）创建软件标识时，可以命名为例如"iotdb-tool"。 在产品描述中明确指出Apache IoTDB也是可以的，例如"该大数据产品是Apache IoTDB的一个子产品"。 # 相关贡献或应用的公司和组织 要将自己添加到列表中，请给dev@iotdb.apache.org发送电子邮件，其中包含您的组织名称，URL，正在使用的IoTDB组件列表以及用例的简短描述。
你也可以在Github (opens new window) 留言。 清华大学软件学院和大数据系统软件国家工程实验室最初开发了IoTDB，并捐献给Apache。 我们有很多研究生和专业软件工程师在持续开发IoTDB 我们在上海地铁和其他两个城市的地铁管理中使用IoTDB。 我们在中国气象局使用IoTDB管理超过10年的站点实况数据。 联想开发了TsFile的Go语言版本，并用于长飞光纤项目。该项目收集了超过9万个测点，并基于TsFile同步到云端。 金风科技使用IoTDB管理风机数据。他们首先从Kafka消费SCADA数据，然后写入IoTDB并从IoTDB进行查询。 大唐先一将IoTDB部署在了中国的许多电厂。 北京智创新科使用IoTDB存储中国铁塔的2百万铁塔的蓄电池数据。 北京清智物联使用IoTDB收集调相机（发电机）的监控数据。 建龙钢铁在测试IoTDB。 Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
TsFile
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
使用stop-server脚本强制停止 # 安装环境 安装前需要保证设备上配有JDK>=1.8的运行环境，并配置好JAVA_HOME环境变量。 如需从源码进行编译，还需要Maven>=3.0的运行环境。 # IoTDB安装 IoTDB支持多种安装途径。用户可以使用三种方式对IoTDB进行安装——下载二进制可运行程序、使用源码、使用docker镜像。 二进制可运行程序：请从Download页面下载最新的安装包，解压后即完成安装。 使用源码：您可以从代码仓库下载源码并编译：git clone https://github.com/apache/incubator-iotdb.git, 并通过mvn package -DskipTests 进行编译。 使用Docker： dockerfile文件位于 https://github.com/apache/incubator-iotdb/blob/master/docker/Dockerfile # IoTDB试用 用户可以根据以下操作对IoTDB进行简单的试用，若以下操作均无误，则说明IoTDB安装成功。 在后文中，记$IOTDB_HOME为IoTDB的安装目录路径，即上述iotdb子文件夹路径。 # 启动IoTDB 用户可以使用$IOTDB_HOME/bin文件夹下的start-server脚本启动IoTDB。 Linux系统与MacOS系统启动命令如下： > $IOTDB_HOME/sbin/start-server.sh
1Windows系统启动命令如下： > $IOTDB_HOME\sbin\start-server.bat
1当服务器输出log中包含ERROR输出时，服务器启动不成功。 # 操作IoTDB # 使用Cli/Shell工具 IoTDB为用户提供多种与服务器交互的方式，您可以选择使用Cli/Shell工具、Grafana可视化工具或JAVA API与IoTDB服务器进行数据写入与查询的交互操作。在此我们介绍使用Cli/Shell工具进行写入、查询数据的基本步骤。 初始安装后的IoTDB中有一个默认用户：root，默认密码为root。用户可以使用该用户运行Cli/Shell工具操作IoTDB。Cli/Shell工具启动脚本为$IOTDB_HOME/bin文件夹下的start-client脚本。启动脚本时需要指定运行IP和PORT。 以下启动语句为服务器在本机运行，且用户未更改运行端口号的示例。 Linux系统与MacOS系统启动命令如下： > $IOTDB_HOME/sbin/start-client.sh -h 127.0.0.1 -p 6667 -u root
1Windows系统启动命令如下： > $IOTDB_HOME\sbin\start-client.bat -h 127.0.0.1 -p 6667 -u root
1回车后输入root用户的密码，即可成功启动客户端。启动后出现如图提示即为启动成功。 _____ _________ ______ ______
|_ _| | _ _ ||_ _ `.|_ _ \
| | .--.|_/ | | \_| | | `. \ | |_) |
| | / .'`\ \ | | | | | | | __'.
_| |_| \__. | _| |_ _| |_.' /_| |__) |
|_____|'.__.' |_____| |______.'|_______/ version x.x.x
IoTDB> login successfully
IoTDB>
12345678910# IoTDB的基本操作 Cli/Shell启动成功后，用户可使用该工具输入SQL命令操作IoTDB Server。 在这里，我们首先介绍一下使用Cli/Shell工具创建时间序列、插入数据并查看数据的方法。 数据在IoTDB中的组织形式是以时间序列为单位，每一个时间序列中有若干个数据-时间点对，存储结构为存储组。在定义时间序列之前，要首先使用SET STORAGE GROUP语句定义存储组。SQL语句如下： IoTDB> SET STORAGE GROUP TO root.ln
1执行成功后，Cli/Shell返回execute successfully表示执行成功。 存储组设定后，使用CREATE TIMESERIES语句可以创建新的时间序列，创建时间序列时需要定义数据的类型和编码形式。SQL语句如下： IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN
1执行成功后，Cli/Shell返回execute successfully表示执行成功。
如果系统中已有被创建的存储组和时间序列，则系统会提示该部分已存在。如以下提示表示存储组已存在： IoTDB> SET STORAGE GROUP TO root.ln
error: The path of root.ln already exist, it can't be set to the storage group
| Timeseries| Storage Group|DataType|Encoding|
+-------------------------------+---------------+--------+--------+
| root.ln.wf01.wt01.status| root.ln| BOOLEAN| PLAIN|
| root.ln.wf01.wt01.temperature| root.ln| FLOAT| RLE|
+-------------------------------+---------------+--------+--------+
Total timeseries number = 2
12345678Query a specific timeseries(root.ln.wf01.wt01.status): IoTDB> SHOW TIMESERIES root.ln.wf01.wt01.status
+------------------------------+--------------+--------+--------+
| Timeseries| Storage Group|DataType|Encoding|
+------------------------------+--------------+--------+--------+
| root.ln.wf01.wt01.status| root.ln| BOOLEAN| PLAIN|
+------------------------------+--------------+--------+--------+
Total timeseries number = 1
1234567Insert timeseries data is the basic operation of IoTDB, you can use ‘INSERT’ command to finish this. Before insert you should assign the timestamp and the suffix path name: IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status) values(100,true);
IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status,temperature) values(200,false,20.71)
12The data we’ve just inserted displays like this: IoTDB> SELECT status FROM root.ln.wf01.wt01
+-----------------------+------------------------+
| Time|root.ln.wf01.wt01.status|
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
1234567891011Otherwise, you may need to check the error statements and fix the problems. After building, the IoTDB project will be at the subfolder named iotdb. The folder will include the following contents: $IOTDB_HOME/
|
+- sbin/ <-- script files
|
+- conf/ <-- configuration files
|
+- lib/ <-- project dependencies
1234567# Configure Before starting to use IoTDB, you need to config the configuration files first. For your convenience, we have already set the default config in the files. In total, we provide users three kinds of configurations module: environment config module (iotdb-env.sh(Linux or OSX), iotdb-env.bat(Windows)) system config module (tsfile-format.properties, iotdb-engine.properties) log config module (logback.xml) The configuration files of the three configuration items are located in the IoTDB installation directory: $IOTDB_HOME/conf folder. For more, you are advised to check Chapter 4 of the User Guide to give you the details. # Start # Start Server After that we start the server. Running the startup script: # Unix/OS X
> $IOTDB_HOME/sbin/start-server.sh
# Windows
> $IOTDB_HOME\sbin\start-server.bat
12345# Start Client Now let's trying to read and write some data from IoTDB using our Client. To start the client, you need to explicit the server's IP and PORT as well as the USER_NAME and PASSWORD. # You can first build cli project
> pwd
/workspace/incubator-iotdb
> mvn clean package -pl client -am -Dmaven.test.skip=true
# Unix/OS X
> $IOTDB_CLI_HOME/sbin/start-client.sh -h <IP> -p <PORT> -u <USER_NAME>
# Windows
> $IOTDB_CLI_HOME\sbin\start-client.bat -h <IP> -p <PORT> -u <USER_NAME>
1234567891011NOTE: In the system, we set a default user in IoTDB named 'root'. The default password for 'root' is 'root'. You can use this default user if you are making the first try or you didn't create users by yourself. The command line client is interactive so if everything is ready you should see the welcome logo and statements: _____ _________ ______ ______
|_ _| | _ _ ||_ _ `.|_ _ \
| | .--.|_/ | | \_| | | `. \ | |_) |
+------------------------------+--------------+--------+--------+
| Timeseries| Storage Group|DataType|Encoding|
+------------------------------+--------------+--------+--------+
| root.ln.wf01.wt01.status| root.ln| BOOLEAN| PLAIN|
+------------------------------+--------------+--------+--------+
Total timeseries number = 1
1234567Insert timeseries data is the basic operation of IoTDB, you can use ‘INSERT’ command to finish this. Before inserting you should assign the timestamp and the suffix path name: IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status) values(100,true);
IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status,temperature) values(200,false,20.71)
12The data we’ve just inserted displays like this: IoTDB> SELECT status FROM root.ln.wf01.wt01
+-----------------------+------------------------+
| Time|root.ln.wf01.wt01.status|
+-----------------------+------------------------+
|1970-01-01T08:00:00.100| true|
|1970-01-01T08:00:00.200| false|
+-----------------------+------------------------+
Total line number = 2
12345678We can also query several timeseries data at once like this: IoTDB> SELECT * FROM root.ln.wf01.wt01
+-----------------------+--------------------------+-----------------------------+
| Time| root.ln.wf01.wt01.status|root.ln.wf01.wt01.temperature|
+-----------------------+--------------------------+-----------------------------+
|1970-01-01T08:00:00.100| true| null|
|1970-01-01T08:00:00.200| false| 20.71|
+-----------------------+--------------------------+-----------------------------+
Total line number = 2
+-------------------------------+---------------+--------+--------+
Total timeseries number = 2
12345678Query a specific timeseries(root.ln.wf01.wt01.status): IoTDB> SHOW TIMESERIES root.ln.wf01.wt01.status
+------------------------------+--------------+--------+--------+
| Timeseries| Storage Group|DataType|Encoding|
+------------------------------+--------------+--------+--------+
| root.ln.wf01.wt01.status| root.ln| BOOLEAN| PLAIN|
+------------------------------+--------------+--------+--------+
Total timeseries number = 1
1234567Insert timeseries data is the basic operation of IoTDB, you can use ‘INSERT’ command to finish this. Before insert you should assign the timestamp and the suffix path name: IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status) values(100,true);
IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status,temperature) values(200,false,20.71)
12The data we’ve just inserted displays like this: IoTDB> SELECT status FROM root.ln.wf01.wt01
+-----------------------+------------------------+
| Time|root.ln.wf01.wt01.status|
+-----------------------+------------------------+
|1970-01-01T08:00:00.100| true|
|1970-01-01T08:00:00.200| false|
+-----------------------+------------------------+
Total line number = 2
12345678We can also query several timeseries data at once like this: IoTDB> SELECT * FROM root.ln.wf01.wt01
+-----------------------+--------------------------+-----------------------------+
| Time| root.ln.wf01.wt01.status|root.ln.wf01.wt01.temperature|
+-----------------------+--------------------------+-----------------------------+
|1970-01-01T08:00:00.100| true| null|
|1970-01-01T08:00:00.200| false| 20.71|
+-----------------------+--------------------------+-----------------------------+
could compile from source: ./mvnw.sh clean install [ok]
The binary distribution:
LICENSE and NOTICE [ok]
signatures and hashes [ok]
Could run with the following statements [ok]
SET STORAGE GROUP TO root.turbine;
CREATE TIMESERIES root.turbine.d1.s0 WITH DATATYPE=DOUBLE, ENCODING=GORILLA;
insert into root.turbine.d1(timestamp,s0) values(1,1);
insert into root.turbine.d1(timestamp,s0) values(2,2);
insert into root.turbine.d1(timestamp,s0) values(3,3);
select * from root;
Thanks,
xxx
123456789101112131415161718192021222324# small tools Print out lines containing certain characters (just look at the top output, you don't need to look at the bottom file) find . -type f -exec grep -i "copyright" {} \; -print | sort -u
find **/src -type f -exec grep -i "copyright" {} \; -print | sort -u
12 Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Skip to content
Sign up
Why GitHub?
Features →
Mobile →
Actions →
Codespaces →
Packages →
Security →
Code review →
Project management →
Integrations →
GitHub Sponsors →
Customer stories→
Team
Enterprise
Explore
Explore GitHub →
Learn and contribute
Topics →
Collections →
Trending →
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) 文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) IoTDB用户手册 (V0.9.x) 0-开始 快速入门常见问题研究论文1-概览 2-概念 3-服务器端 4-客户端 5-操作指南 6-系统工具 7-生态集成 8-系统设计 # 概览 快速入门 安装环境 IoTDB安装
从源代码生成
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) 文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) IoTDB用户手册 (V0.11.x) 开始 快速入门常见问题调查报告概述 概念 服务器端 客户端 操作指南 系统工具 生态集成 系统设计 # 快速入门 # 概览 快速入门 安装环境 IoTDB安装
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) 文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) IoTDB用户手册 (V0.12.x) IoTDB简介 快速上手 快速上手存储路径设置获取IoTDB二进制文件途径数据模式与概念 SQL命令行终端(CLI) 权限管理 IoTDB-SQL 语言 应用编程接口 用户定义函数(UDF) 通信服务协议 系统工具 端云协同 系统集成 集群搭建 常见问题 附录 # 快速上手 本文将介绍关于IoTDB使用的基本流程，如果需要更多信息，请浏览我们官网的指引. # 安装环境 安装前需要保证设备上配有JDK>=1.8的运行环境，并配置好JAVA_HOME环境变量。 设置最大文件打开数为65535。 # 安装步骤 IoTDB支持多种安装途径。用户可以使用三种方式对IoTDB进行安装——下载二进制可运行程序、使用源码、使用docker镜像。 使用源码：您可以从代码仓库下载源码并编译，具体编译方法见下方。 二进制可运行程序：请从下载 (opens new window)页面下载最新的安装包，解压后即完成安装。 使用Docker镜像：dockerfile 文件位于 https://github.com/apache/iotdb/blob/master/docker/src/main # 软件目录结构 sbin 启动和停止脚本目录 conf 配置文件目录 tools 系统工具目录 lib 依赖包目录 # IoTDB试用 用户可以根据以下操作对IoTDB进行简单的试用，若以下操作均无误，则说明IoTDB安装成功。 # 启动IoTDB 用户可以使用sbin文件夹下的start-server脚本启动IoTDB。 Linux系统与MacOS系统启动命令如下： > nohup sbin/start-server.sh >/dev/null 2>&1 &
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) 文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) 文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) 文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.12.x) IoTDB Introduction What is IoTDBArchitectureScenarioFeaturesPublicationQuick Start Data Concept CLI Administration Management IoTDB-SQL Language API UDF Communication Service Protocol System Tools Collaboration of Edge and Cloud Ecosystem Integration Cluster Setup FAQ Appendix Comparison with TSDBs # Research Papers Apache IoTDB starts at Tsinghua University, School of Software. IoTDB is a database for managing large amount of time series data with columnar storage, data encoding, pre-computation, and index techniques. It has SQL-like interface to write millions of data points per second per node and is optimized to get query results in few seconds over trillions of data points. It can also be easily integrated with Apache Hadoop MapReduce and Apache Spark for analytics. The research papers related are as follows: Apache IoTDB: time-series database for internet of things (opens new window), Chen Wang, Xiangdong Huang, Jialin Qiao,
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
和对应的 .sha512 对比，一样就可以。
1234567验证编译 mvnw.sh install
应该最后全 SUCCESS
123# 验证二进制发布版 验证是否有 NOTICE、LICENSE，以及内容是否正确。 验证 README、RELEASE_NOTES 验证签名和哈希值 gpg2 --verify apache-iotdb-0.12.0-bin.zip.asc apache-iotdb-0.12.0-bin.zip
出现 Good Singnature
shasum -a512 apache-iotdb-0.12.0-bin.zip
和对应的 .sha512 对比，一样就可以。
1234567验证是否能启动以及示例语句是否正确执行 nohup ./sbin/start-server.sh >/dev/null 2>&1 &
./sbin/start-cli.sh
SET STORAGE GROUP TO root.turbine;
CREATE TIMESERIES root.turbine.d1.s0 WITH DATATYPE=DOUBLE, ENCODING=GORILLA;
insert into root.turbine.d1(timestamp,s0) values(1,1);
insert into root.turbine.d1(timestamp,s0) values(2,2);
insert into root.turbine.d1(timestamp,s0) values(3,3);
select * from root;
打印如下内容：
+-----------------------------------+------------------+
| Time|root.turbine.d1.s0|
+-----------------------------------+------------------+
| 1970-01-01T08:00:00.001+08:00| 1.0|
| 1970-01-01T08:00:00.002+08:00| 2.0|
| 1970-01-01T08:00:00.003+08:00| 3.0|
12如下提示表示时间序列已存在： IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN
error: Timeseries root.ln.wf01.wt01.status already exist
12创建时间序列后，我们使用SHOW TIMESERIES语句查看系统中存在的所有时间序列，SQL语句如下： IoTDB> SHOW TIMESERIES
1执行结果为： === Timeseries Tree ===
{
"root":{
"ln":{
"wf01":{
"wt01":{
"status":{
"args":"{}",
"StorageGroup":"root.ln",
"DataType":"BOOLEAN",
"Compressor":"UNCOMPRESSED",
"Encoding":"PLAIN"
}
}
}
}
}
}
12345678910111213141516171819我们可以尝试再创建一个时间序列，查看SHOW TIMESERIES的返回情况。SQL语句如下： IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE
IoTDB> SHOW TIMESERIES
+-----------------------+------------------------+
|1970-01-01T08:00:00.100| true|
|1970-01-01T08:00:00.200| false|
+-----------------------+------------------------+
Total line number = 2
12345678We can also query several timeseries data at once like this: IoTDB> SELECT * FROM root.ln.wf01.wt01
+-----------------------+--------------------------+-----------------------------+
| Time| root.ln.wf01.wt01.status|root.ln.wf01.wt01.temperature|
+-----------------------+--------------------------+-----------------------------+
|1970-01-01T08:00:00.100| true| null|
|1970-01-01T08:00:00.200| false| 20.71|
+-----------------------+--------------------------+-----------------------------+
Total line number = 2
12345678The commands to exit the Cli are: IoTDB> quit
or
IoTDB> exit
123For more on what commands are supported by IoTDB SQL, see SQL Reference. # Stop IoTDB The server can be stopped with ctrl-C or the following script: # Unix/OS X
> sbin/stop-server.sh
# Windows
> sbin\stop-server.bat
| | / .'`\ \ | | | | | | | __'.
_| |_| \__. | _| |_ _| |_.' /_| |__) |
|_____|'.__.' |_____| |______.'|_______/ version x.x.x
IoTDB> login successfully
IoTDB>
12345678910# Have a try Now, you can use IoTDB SQL to operate IoTDB, and when you’ve had enough fun, you can input 'quit' or 'exit' command to leave the client. But lets try something slightly more interesting: IoTDB> SET STORAGE GROUP TO root.ln
execute successfully.
IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN
execute successfully.
1234Till now, we have already create a table called root.vehicle and add a column called d0.s0 in the table. Let's take a look at what we have done by 'SHOW TIMESERIES' command. IoTDB> SHOW TIMESERIES
=== Timeseries Tree ===
{
"root":{
"ln":{
"wf01":{
"wt01":{
"status":{
"args":"{}",
"StorageGroup":"root.ln",
"DataType":"BOOLEAN",
"Compressor":"UNCOMPRESSED",
"Encoding":"PLAIN"
}
}
12345678The commands to exit the Cli is: IoTDB> quit
or
IoTDB> exit
123For more on what commands are supported by IoTDB SQL, see SQL Reference. # Stop IoTDB The server can be stopped with ctrl-C or the following script: # Unix/OS X
> sbin/stop-server.sh
# Windows
> sbin\stop-server.bat
12345# Only build client Under the root path of incubator-iotdb: > mvn clean package -pl client -am -DskipTests
Frequently asked questions
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Total line number = 2
12345678The commands to exit the Cli are: IoTDB> quit
or
IoTDB> exit
123For more on what commands are supported by IoTDB SQL, see SQL Reference. # Stop IoTDB The server can be stopped with ctrl-C or the following script: # Unix/OS X
> sbin/stop-server.sh
# Windows
> sbin\stop-server.bat
12345# Basic configuration The configuration files is in the conf folder, includes: environment configuration (iotdb-env.bat, iotdb-env.sh), system configuration (iotdb-engine.properties) log configuration (logback.xml).
←
Publication
Storage Path Setting
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
(欢迎使用/测试IoTDB的公司在此登记) Welcome to leave your company's info if your company are using/testing IoTDB · Issue #748 · apache/iotdb · GitHub
Learning Lab →
Open source guides →
Connect with others
The ReadME Project →
Events →
Community forum →
GitHub Education →
GitHub Stars program →
Marketplace
Pricing
Plans →
Compare plans →
Contact Sales →
Education →
In this repository
All GitHub
↵
Jump to
↵
配置文件 IoTDB试用
启动IoTDB 操作IoTDB
使用Cli工具 IoTDB的基本操作 停止IoTDB 单独打包服务器 单独打包客户端 # 快速入门 本文将介绍关于IoTDB使用的基本流程，如果需要更多信息，请浏览我们官网的指引. # 安装环境 安装前需要保证设备上配有JDK>=1.8的运行环境，并配置好JAVA_HOME环境变量。 设置最大文件打开数为65535。 # IoTDB安装 IoTDB支持多种安装途径。用户可以使用三种方式对IoTDB进行安装——下载二进制可运行程序、使用源码、使用docker镜像。 使用源码：您可以从代码仓库下载源码并编译，具体编译方法见下方。 二进制可运行程序：请从Download页面下载最新的安装包，解压后即完成安装。 使用Docker镜像： dockerfile文件位于 https://github.com/apache/incubator-iotdb/blob/master/docker/Dockerfile # IoTDB下载 您可以从这里下载程序：下载 # 配置文件 配置文件在"conf"文件夹下，包括： 环境配置模块 (iotdb-env.bat, iotdb-env.sh), 系统配置模块 (iotdb-engine.properties) 日志配置模块 (logback.xml). 想要了解更多，请浏览Chapter3: Server
​ # IoTDB试用 用户可以根据以下操作对IoTDB进行简单的试用，若以下操作均无误，则说明IoTDB安装成功。 # 启动IoTDB 用户可以使用sbin文件夹下的start-server脚本启动IoTDB。 Linux系统与MacOS系统启动命令如下： > sbin/start-server.sh
1Windows系统启动命令如下： > sbin\start-server.bat
1# 操作IoTDB # 使用Cli工具 IoTDB为用户提供多种与服务器交互的方式，在此我们介绍使用Cli工具进行写入、查询数据的基本步骤。 初始安装后的IoTDB中有一个默认用户：root，默认密码为root。用户可以使用该用户运行Cli工具操作IoTDB。Cli工具启动脚本为sbin文件夹下的start-client脚本。启动脚本时需要指定运行ip、port、username和password。若脚本未给定对应参数,则默认参数为"-h 127.0.0.1 -p 6667 -u root -pw -root" 以下启动语句为服务器在本机运行，且用户未更改运行端口号的示例。 Linux系统与MacOS系统启动命令如下： > sbin/start-client.sh -h 127.0.0.1 -p 6667 -u root -pw root
1Windows系统启动命令如下： > sbin\start-client.bat -h 127.0.0.1 -p 6667 -u root -pw root
1启动后出现如图提示即为启动成功。 _____ _________ ______ ______
|_ _| | _ _ ||_ _ `.|_ _ \
| | .--.|_/ | | \_| | | `. \ | |_) |
| | / .'`\ \ | | | | | | | __'.
_| |_| \__. | _| |_ _| |_.' /_| |__) |
|_____|'.__.' |_____| |______.'|_______/ version x.x.x
IoTDB> login successfully
IoTDB>
12345678910# IoTDB的基本操作 在这里，我们首先介绍一下使用Cli工具创建时间序列、插入数据并查看数据的方法。 数据在IoTDB中的组织形式是以时间序列为单位，每一个时间序列中有若干个数据-时间点对，每一个时间序列属于一个存储组。在定义时间序列之前，要首先使用SET STORAGE GROUP语句定义存储组。SQL语句如下： IoTDB> SET STORAGE GROUP TO root.ln
从源代码生成
配置文件 IoTDB试用
启动IoTDB 操作IoTDB
使用Cli工具 IoTDB的基本操作 停止IoTDB 单独打包服务器 单独打包客户端 本文将介绍关于IoTDB使用的基本流程，如果需要更多信息，请浏览我们官网的指引. # 安装环境 安装前需要保证设备上配有JDK>=1.8的运行环境，并配置好JAVA_HOME环境变量。 设置最大文件打开数为65535。 # IoTDB安装 IoTDB支持多种安装途径。用户可以使用三种方式对IoTDB进行安装——下载二进制可运行程序、使用源码、使用docker镜像。 使用源码：您可以从代码仓库下载源码并编译，具体编译方法见下方。 二进制可运行程序：请从Download页面下载最新的安装包，解压后即完成安装。 使用Docker镜像：dockerfile 文件位于 https://github.com/apache/iotdb/blob/master/docker/src/main # IoTDB下载 您可以从这里下载程序：下载 # 配置文件 配置文件在"conf"文件夹下，包括： 环境配置模块 (iotdb-env.bat, iotdb-env.sh), 系统配置模块 (iotdb-engine.properties) 日志配置模块 (logback.xml). 想要了解更多，请浏览Chapter3: Server
​ # IoTDB试用 用户可以根据以下操作对IoTDB进行简单的试用，若以下操作均无误，则说明IoTDB安装成功。 # 启动IoTDB 用户可以使用sbin文件夹下的start-server脚本启动IoTDB。 Linux系统与MacOS系统启动命令如下： > nohup sbin/start-server.sh >/dev/null 2>&1 &
or
> nohup sbin/start-server.sh -c <conf_path> -rpc_port <rpc_port> >/dev/null 2>&1 &
123Windows系统启动命令如下： > sbin\start-server.bat -c <conf_path> -rpc_port <rpc_port>
1"-c" and "-rpc_port" 都是可选的。 选项 "-c" 指定了配置文件所在的文件夹。 选项 "-rpc_port" 指定了启动的 rpc port。 如果两个选项同时指定，那么rpc_port将会覆盖conf_path下面的配置。 # 操作IoTDB # 使用Cli工具 IoTDB为用户提供多种与服务器交互的方式，在此我们介绍使用Cli工具进行写入、查询数据的基本步骤。 初始安装后的IoTDB中有一个默认用户：root，默认密码为root。用户可以使用该用户运行Cli工具操作IoTDB。Cli工具启动脚本为sbin文件夹下的start-cli脚本。启动脚本时需要指定运行ip、port、username和password。若脚本未给定对应参数,则默认参数为"-h 127.0.0.1 -p 6667 -u root -pw -root" 以下启动语句为服务器在本机运行，且用户未更改运行端口号的示例。 Linux系统与MacOS系统启动命令如下： > sbin/start-cli.sh -h 127.0.0.1 -p 6667 -u root -pw root
1Windows系统启动命令如下： > sbin\start-cli.bat -h 127.0.0.1 -p 6667 -u root -pw root
1启动后出现如图提示即为启动成功。 _____ _________ ______ ______
|_ _| | _ _ ||_ _ `.|_ _ \
| | .--.|_/ | | \_| | | `. \ | |_) |
| | / .'`\ \ | | | | | | | __'.
_| |_| \__. | _| |_ _| |_.' /_| |__) |
|_____|'.__.' |_____| |______.'|_______/ version x.x.x
IoTDB> login successfully
IoTDB>
12345678910# IoTDB的基本操作 在这里，我们首先介绍一下使用Cli工具创建时间序列、插入数据并查看数据的方法。 数据在IoTDB中的组织形式是以时间序列为单位，每一个时间序列中有若干个数据-时间点对，每一个时间序列属于一个存储组。在定义时间序列之前，要首先使用SET STORAGE GROUP语句定义存储组。SQL语句如下： IoTDB> SET STORAGE GROUP TO root.ln
1我们可以使用SHOW STORAGE GROUP语句来查看系统当前所有的存储组，SQL语句如下： IoTDB> SHOW STORAGE GROUP
or
> nohup sbin/start-server.sh -c <conf_path> -rpc_port <rpc_port> >/dev/null 2>&1 &
123Windows系统启动命令如下： > sbin\start-server.bat -c <conf_path> -rpc_port <rpc_port>
1"-c" and "-rpc_port" 都是可选的。 选项 "-c" 指定了配置文件所在的文件夹。 选项 "-rpc_port" 指定了启动的 rpc port。 如果两个选项同时指定，那么rpc_port将会覆盖conf_path下面的配置。 # 使用Cli工具 IoTDB为用户提供多种与服务器交互的方式，在此我们介绍使用Cli工具进行写入、查询数据的基本步骤。 初始安装后的IoTDB中有一个默认用户：root，默认密码为root。用户可以使用该用户运行Cli工具操作IoTDB。Cli工具启动脚本为sbin文件夹下的start-cli脚本。启动脚本时需要指定运行ip、port、username和password。若脚本未给定对应参数,则默认参数为"-h 127.0.0.1 -p 6667 -u root -pw -root" 以下启动语句为服务器在本机运行，且用户未更改运行端口号的示例。 Linux系统与MacOS系统启动命令如下： > sbin/start-cli.sh -h 127.0.0.1 -p 6667 -u root -pw root
1Windows系统启动命令如下： > sbin\start-cli.bat -h 127.0.0.1 -p 6667 -u root -pw root
1启动后出现如图提示即为启动成功。 _____ _________ ______ ______
|_ _| | _ _ ||_ _ `.|_ _ \
| | .--.|_/ | | \_| | | `. \ | |_) |
| | / .'`\ \ | | | | | | | __'.
_| |_| \__. | _| |_ _| |_.' /_| |__) |
|_____|'.__.' |_____| |______.'|_______/ version x.x.x
IoTDB> login successfully
IoTDB>
12345678910# IoTDB的基本操作 在这里，我们首先介绍一下使用Cli工具创建时间序列、插入数据并查看数据的方法。 数据在IoTDB中的组织形式是以时间序列为单位，每一个时间序列中有若干个数据-时间点对，每一个时间序列属于一个存储组。在定义时间序列之前，要首先使用SET STORAGE GROUP语句定义存储组。SQL语句如下： IoTDB> SET STORAGE GROUP TO root.ln
1我们可以使用SHOW STORAGE GROUP语句来查看系统当前所有的存储组，SQL语句如下： IoTDB> SHOW STORAGE GROUP
1执行结果为： +-------------+
|storage group|
+-------------+
| root.ln|
+-------------+
Total line number = 1
123456存储组设定后，使用CREATE TIMESERIES语句可以创建新的时间序列，创建时间序列时需要定义数据的类型和编码方式。此处我们创建两个时间序列，SQL语句如下： IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN
gitHub
(opens new window) IoTDB用户手册 (v0.10.x) 开始 快速入门常见问题调查报告概述 概念 服务器端 客户端 操作指南 系统工具 生态集成 系统设计 # 快速入门 # 概览 快速入门 安装环境 IoTDB安装
从源代码生成
配置文件 IoTDB试用
启动IoTDB 操作IoTDB
使用Cli工具 IoTDB的基本操作 停止IoTDB 单独打包服务器 单独打包客户端 本文将介绍关于IoTDB使用的基本流程，如果需要更多信息，请浏览我们官网的指引. # 安装环境 安装前需要保证设备上配有JDK>=1.8的运行环境，并配置好JAVA_HOME环境变量。 设置最大文件打开数为65535。 # IoTDB安装 IoTDB支持多种安装途径。用户可以使用三种方式对IoTDB进行安装——下载二进制可运行程序、使用源码、使用docker镜像。 使用源码：您可以从代码仓库下载源码并编译，具体编译方法见下方。 二进制可运行程序：请从Download页面下载最新的安装包，解压后即完成安装。 使用Docker镜像：dockerfile 文件位于 https://github.com/apache/incubator-iotdb/blob/master/docker/src/main # IoTDB下载 您可以从这里下载程序：下载 # 配置文件 配置文件在"conf"文件夹下，包括： 环境配置模块 (iotdb-env.bat, iotdb-env.sh), 系统配置模块 (iotdb-engine.properties) 日志配置模块 (logback.xml). 想要了解更多，请浏览Chapter3: Server
​ # IoTDB试用 用户可以根据以下操作对IoTDB进行简单的试用，若以下操作均无误，则说明IoTDB安装成功。 # 启动IoTDB 用户可以使用sbin文件夹下的start-server脚本启动IoTDB。 Linux系统与MacOS系统启动命令如下： > nohup sbin/start-server.sh >/dev/null 2>&1 &
or
> nohup sbin/start-server.sh -c <conf_path> -rpc_port <rpc_port> >/dev/null 2>&1 &
123Windows系统启动命令如下： > sbin\start-server.bat -c <conf_path> -rpc_port <rpc_port>
1"-c" and "-rpc_port" 都是可选的。 选项 "-c" 指定了配置文件所在的文件夹。 选项 "-rpc_port" 指定了启动的 rpc port。 如果两个选项同时指定，那么rpc_port将会覆盖conf_path下面的配置。 # 操作IoTDB # 使用Cli工具 IoTDB为用户提供多种与服务器交互的方式，在此我们介绍使用Cli工具进行写入、查询数据的基本步骤。 初始安装后的IoTDB中有一个默认用户：root，默认密码为root。用户可以使用该用户运行Cli工具操作IoTDB。Cli工具启动脚本为sbin文件夹下的start-cli脚本。启动脚本时需要指定运行ip、port、username和password。若脚本未给定对应参数,则默认参数为"-h 127.0.0.1 -p 6667 -u root -pw -root" 以下启动语句为服务器在本机运行，且用户未更改运行端口号的示例。 Linux系统与MacOS系统启动命令如下： > sbin/start-cli.sh -h 127.0.0.1 -p 6667 -u root -pw root
1Windows系统启动命令如下： > sbin\start-cli.bat -h 127.0.0.1 -p 6667 -u root -pw root
1启动后出现如图提示即为启动成功。 _____ _________ ______ ______
|_ _| | _ _ ||_ _ `.|_ _ \
| | .--.|_/ | | \_| | | `. \ | |_) |
| | / .'`\ \ | | | | | | | __'.
_| |_| \__. | _| |_ _| |_.' /_| |__) |
|_____|'.__.' |_____| |______.'|_______/ version x.x.x
IoTDB> login successfully
IoTDB>
语言 English 简体中文
gitHub
(opens new window) IoTDB用户手册 (In progress) IoTDB简介 快速上手 快速上手存储路径设置获取IoTDB二进制文件途径数据模式与概念 SQL命令行终端(CLI) 权限管理 IoTDB-SQL 语言 应用编程接口 高级功能 通信服务协议 系统工具 端云协同 系统集成 集群搭建 常见问题 附录 时间序列数据库比较 # 快速上手 本文将介绍关于IoTDB使用的基本流程，如果需要更多信息，请浏览我们官网的指引. # 安装环境 安装前需要保证设备上配有JDK>=1.8的运行环境，并配置好JAVA_HOME环境变量。 设置最大文件打开数为65535。 # 安装步骤 IoTDB支持多种安装途径。用户可以使用三种方式对IoTDB进行安装——下载二进制可运行程序、使用源码、使用docker镜像。 使用源码：您可以从代码仓库下载源码并编译，具体编译方法见下方。 二进制可运行程序：请从下载 (opens new window)页面下载最新的安装包，解压后即完成安装。 使用Docker镜像：dockerfile 文件位于 https://github.com/apache/iotdb/blob/master/docker/src/main # 软件目录结构 sbin 启动和停止脚本目录 conf 配置文件目录 tools 系统工具目录 lib 依赖包目录 # IoTDB试用 用户可以根据以下操作对IoTDB进行简单的试用，若以下操作均无误，则说明IoTDB安装成功。 # 启动IoTDB 用户可以使用sbin文件夹下的start-server脚本启动IoTDB。 Linux系统与MacOS系统启动命令如下： > nohup sbin/start-server.sh >/dev/null 2>&1 &
or
> nohup sbin/start-server.sh -c <conf_path> -rpc_port <rpc_port> >/dev/null 2>&1 &
123Windows系统启动命令如下： > sbin\start-server.bat -c <conf_path> -rpc_port <rpc_port>
1"-c" and "-rpc_port" 都是可选的。 选项 "-c" 指定了配置文件所在的文件夹。 选项 "-rpc_port" 指定了启动的 rpc port。 如果两个选项同时指定，那么rpc_port将会覆盖conf_path下面的配置。 # 使用Cli工具 IoTDB为用户提供多种与服务器交互的方式，在此我们介绍使用Cli工具进行写入、查询数据的基本步骤。 初始安装后的IoTDB中有一个默认用户：root，默认密码为root。用户可以使用该用户运行Cli工具操作IoTDB。Cli工具启动脚本为sbin文件夹下的start-cli脚本。启动脚本时需要指定运行ip、port、username和password。若脚本未给定对应参数,则默认参数为"-h 127.0.0.1 -p 6667 -u root -pw -root" 以下启动语句为服务器在本机运行，且用户未更改运行端口号的示例。 Linux系统与MacOS系统启动命令如下： > sbin/start-cli.sh -h 127.0.0.1 -p 6667 -u root -pw root
1Windows系统启动命令如下： > sbin\start-cli.bat -h 127.0.0.1 -p 6667 -u root -pw root
1启动后出现如图提示即为启动成功。 _____ _________ ______ ______
|_ _| | _ _ ||_ _ `.|_ _ \
| | .--.|_/ | | \_| | | `. \ | |_) |
| | / .'`\ \ | | | | | | | __'.
_| |_| \__. | _| |_ _| |_.' /_| |__) |
|_____|'.__.' |_____| |______.'|_______/ version x.x.x
IoTDB> login successfully
IoTDB>
12345678910# IoTDB的基本操作 在这里，我们首先介绍一下使用Cli工具创建时间序列、插入数据并查看数据的方法。 数据在IoTDB中的组织形式是以时间序列为单位，每一个时间序列中有若干个数据-时间点对，每一个时间序列属于一个存储组。在定义时间序列之前，要首先使用SET STORAGE GROUP语句定义存储组。SQL语句如下： IoTDB> SET STORAGE GROUP TO root.ln
1我们可以使用SHOW STORAGE GROUP语句来查看系统当前所有的存储组，SQL语句如下： IoTDB> SHOW STORAGE GROUP
1执行结果为： +-------------+
|storage group|
+-------------+
| root.ln|
+-------------+
(opens new window) # 0.11.x(version-2) -> 0.12.x(version-1) Last Updated on 2021.01.19 by Xiangwei Wei. # 1. Delete Old Latest Changes Related Committers # 2. Add New Latest Changes Related Committers Add timeout in TSFetchResultsReq and TSExecuteStatementReq Xiangwei Wei # 3. Update Latest Changes Related Committers # 0.10.x (version-2) -> 0.11.x (version-3) Last Updated on 2020-10-27 by Xiangwei Wei. # 1. Delete Old Latest Changes Related Committers Remove TSBatchExecuteStatementResp Tian Jiang # 2. Add New Latest Changes Related Committers set the input/output as TFramedTransport Tian Jiang Add timeout(optional) in TSFetchResultsReq and TSExecuteStatementReq Xiangwei Wei # 3. Update Latest Changes Related Committers Add sub-status in TSStatus Tian Jiang Change the result of executeBatchStatement as TSStatus Tian Jiang Change TSDeleteDataReq, delete timestamp and add startTime and endTime Wei Shao Add zoneId in TSOpenSessionReq Xiangwei Wei # 0.9.x (version-1) -> 0.10.x (version-2) Last Updated on 2020-5-25 by Kaifeng Xue. # 1. Delete Old Latest Changes Related Committers Remove TS_SessionHandle,TSHandleIdentifier Tian Jiang Remove TSStatus,TSExecuteInsertRowInBatchResp Jialin Qiao # 2. Add New Latest Changes Related Committers Add parameter sessionId in getTimeZone, getProperties, setStorageGroup, createTimeseries... Tian Jiang Add struct TSQueryNonAlignDataSet Haonan Hou Add struct TSInsertTabletsReq Jialin Qiao Add method insertTablets Jialin Qiao Add method testInsertTablets Xiangdong Huang add new field inferType in TSInsertRecordReq Jialin Qiao # 3. Update Latest Changes Related Committers Replace TS_SessionHandles with SessionIds, TSOperationHandle with queryIds Tian Jiang Add optional TSQueryNonAlignDataSet in TSExecuteStatementResp, TSFetchResultsResp and required bool isAlign in TSFetchResultsReq Haonan Hou Rename TSStatusType to TSStatus Jialin Qiao Remove sessionId in TSExecuteBatchStatementResp Jialin Qiao Rename insertRows to insertReords, insert to insertRecord, insertBatch to insertTablet Jialin Qiao Use TsDataType and binary rather than string in TSInsertInBatchReq and TSInsertReq Kaifeng Xue # 0.8.x -> 0.9.x (version-1) Last Updated on 2019-10-27 by Lei Rui. # 1. Delete Old Latest Changes Related Committers Delete struct TSSetStorageGroupReq Jialin Qiao Remove struct TSDataValue Lei Rui Remove struct TSRowRecord Lei Rui Remove optional string version in TSFetchMetadataResp Genius_pig Remove optional set childPaths, nodesList, storageGroups, devices in TSFetchMetadataResp Genius_pig Remove optional map<string, string> nodeTimeseriesNum in TSFetchMetadataResp Genius_pig Remove optional list<list> timeseriesList in TSFetchMetadataResp Genius_pig Remove optinoal optional i32 timeseriesNum in TSFetchMetadataResp Genius_pig Remove optional i32 nodeLevel in TSFetchMetadataReq Genius_pig # 2. Add New Latest Changes Related Committers Add struct TSBatchInsertionReq qiaojialin Add method TSExecuteBatchStatementResp insertBatch(1:TSBatchInsertionReq req) qiaojialin Add Struct TSStatusType Zesong Sun Add TSCreateTimeseriesReq Zesong Sun Add method TSStatus setStorageGroup(1:string storageGroup) Zesong Sun, Jialin Qiao Add method TSStatus createTimeseries(1:TSCreateTimeseriesReq req) Zesong Sun Add struct TSInsertReq qiaojialin Add method TSRPCResp insertRow(1:TSInsertReq req) qiaojialin Add struct TSDeleteDataReq Jack Tsai, qiaojialin Add method TSStatus deleteData(1:TSDeleteDataReq req) Jack Tsai, Jialin Qiao, qiaojialin Add method TSStatus deleteTimeseries(1:list<string> path) qiaojialin Add method TSStatus deleteStorageGroups(1:list<string> storageGroup) Yi Tao Add Struct TSExecuteInsertRowInBatchResp Kaifeng Xue Add method insertRowInBatch(1:TSInsertInBatchReq req); Kaifeng Xue Add method testInsertRowInBatch(1:TSInsertInBatchReq req); Kaifeng Xue Add method testInsertRow(1:TSInsertReq req); Kaifeng Xue Add method testInsertBatch(1:TSBatchInsertionReq req); Kaifeng Xue Add struct TSCreateMultiTimeseriesReq qiaojialin Add method createMultiTimeseries(1:TSCreateMultiTimeseriesReq req); qiaojialin # 3. Update Latest Changes Related Committers Add required string timestampPrecision in ServerProperties 1160300922 Add optional list<string> dataTypeList in TSExecuteStatementResp suyue Update TSStatus to use TSStatusType, instead of using TS_StatusCode, errorCode and errorMessage Zesong Sun Rename item in enum TSProtocolVersion from TSFILE_SERVICE_PROTOCOL_V1 to IOTDB_SERVICE_PROTOCOL_V1 qiaojialin Rename method name from TSExecuteStatementResp executeInsertion(1:TSInsertionReq req) to TSExecuteStatementResp insert(1:TSInsertionReq req) qiaojialin Add required i32 compressor in TSCreateTimeseriesReq Jialin Qiao Add optional list<string> nodesList, optional map<string, string> nodeTimeseriesNum in TSFetchMetadataResp jack870131 Add optional i32 nodeLevel in TSFetchMetadataReq jack870131, Zesong Sun Change the following methods' returned type to be TSStatus: TSStatus closeSession(1:TSCloseSessionReq req), TSStatus cancelOperation(1:TSCancelOperationReq req), TSStatus closeOperation(1:TSCloseOperationReq req), TSStatus setTimeZone(1:TSSetTimeZoneReq req), TSStatus setStorageGroup(1:string storageGroup), TSStatus createTimeseries(1:TSCreateTimeseriesReq req), TSStatus insertRow(1:TSInsertReq req), TSStatus deleteData(1:TSDeleteDataReq req) Zesong Sun, qiaojialin Change from required string path to required list<string> paths in TSDeleteDataReq qiaojialin Add optional set<string> devices in TSFetchMetadataResp Zesong Sun Rename some fields in TSFetchMetadataResp: ColumnsList to columnsList, showTimeseriesList to timeseriesList, showStorageGroups to storageGroups Zesong Sun Change struct TSQueryDataSet to eliminate row-wise rpc writing Lei Rui Add optional i32 timeseriesNum in TSFetchMetadataResp Jack Tsai Add required i64 queryId in TSHandleIdentifier Yuan Tian Add optional set<string> childPaths in TSFetchMetadataResp Haonan Hou Add optional string version in TSFetchMetadataResp Genius_pig Add required i64 statementId in TSExecuteStatementReq Yuan Tian Add required binary time, required list valueList, required list bitmapList and remove required binary values, required i32 rowCount in TSQueryDataSet Yuan Tian Add optional i32 fetchSize in TSExecuteStatementReq,Add optional TSQueryDataSet in TSExecuteStatementResp liutaohua Add optional map<string, string> props, optional map<string, string> tags, optional map<string, string> attributes and optional string aliasPath in TSCreateTimeseriesReq Yuan Tian Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Tian Jiang, Lei Rui, Jinrui Zhang, Rong Kang, Julian Feinauer, Kevin A. McGrail, Peng Wang, Jun Yuan, Jianmin Wang, Jiaguang Sun. VLDB 2020 PISA: An Index for Aggregating Big Time Series Data (opens new window), Xiangdong Huang and Jianmin Wang and Raymond K. Wong and Jinrui Zhang and Chen Wang. CIKM 2016. Matching Consecutive Subpatterns over Streaming Time Series (opens new window), Rong Kang and Chen Wang and Peng Wang and Yuting Ding and Jianmin Wang. APWeb/WAIM 2018. KV-match: A Subsequence Matching Approach Supporting Normalization and Time Warping (opens new window), Jiaye Wu and Peng Wang and Chen Wang and Wei Wang and Jianmin Wang. ICDE 2019. The Design of Apache IoTDB distributed framework (opens new window), Tianan Li, Jianmin Wang, Xiangdong Huang, Yi Xu, Dongfang Mao, Jun Yuan. NDBC 2019 Dual-PISA: An index for aggregation operations on time series data (opens new window), Jialin Qiao, Xiangdong Huang, Jianmin Wang, Raymond K Wong. IS 2020 # Benchmark tools We also developed Benchmark tools for time series databases https://github.com/thulab/iotdb-benchmark
←
Features
QuickStart
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
gitHub
1+---------------+
| version|
+---------------+
|0.12.0-SNAPSHOT|
+---------------+
Total line number = 1
It costs 0.417s
1234567# Schema Statement Set Storage Group SET STORAGE GROUP TO <FullPath>
Eg: IoTDB > SET STORAGE GROUP TO root.ln.wf01.wt01
Note: FullPath can not include `*`
123Delete Storage Group DELETE STORAGE GROUP <FullPath> [COMMA <FullPath>]*
Eg: IoTDB > DELETE STORAGE GROUP root.ln.wf01.wt01
Eg: IoTDB > DELETE STORAGE GROUP root.ln.wf01.wt01, root.ln.wf01.wt02
Eg: IoTDB > DELETE STORAGE GROUP root.ln.wf01.*
Eg: IoTDB > DELETE STORAGE GROUP root.*
12345Create Timeseries Statement CREATE TIMESERIES <FullPath> WITH <AttributeClauses>
alias
+-----------------------------------+------------------+
1234567891011121314151617181920# 示例邮件 验证通过之后可以发邮件了 Hi,
+1 (PMC could binding)
The source release:
LICENSE and NOTICE [ok]
signatures and hashes [ok]
All files have ASF header [ok]
could compile from source: ./mvnw.sh clean install [ok]
The binary distribution:
LICENSE and NOTICE [ok]
signatures and hashes [ok]
Could run with the following statements [ok]
SET STORAGE GROUP TO root.turbine;
CREATE TIMESERIES root.turbine.d1.s0 WITH DATATYPE=DOUBLE, ENCODING=GORILLA;
insert into root.turbine.d1(timestamp,s0) values(1,1);
insert into root.turbine.d1(timestamp,s0) values(2,2);
insert into root.turbine.d1(timestamp,s0) values(3,3);
select * from root;
Thanks,
Home - IOTDB - Apache Software Foundation
12执行结果为： === Timeseries Tree ===
{
"root":{
"ln":{
"wf01":{
"wt01":{
"temperature":{
"args":"{}",
"StorageGroup":"root.ln",
"DataType":"FLOAT",
"Compressor":"UNCOMPRESSED",
"Encoding":"RLE"
},
"status":{
"args":"{}",
"StorageGroup":"root.ln",
"DataType":"BOOLEAN",
"Compressor":"UNCOMPRESSED",
"Encoding":"PLAIN"
}
}
12345# Only build cli Under the root path of iotdb: > mvn clean package -pl cli -am -DskipTests
Frequently asked questions
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
}
}
}
}
1234567891011121314151617181920For a further try, create a timeseries again and use SHOW TIMESERIES to check result. IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE
IoTDB> SHOW TIMESERIES
=== Timeseries Tree ===
{
"root":{
"ln":{
"wf01":{
"wt01":{
"temperature":{
"args":"{}",
"StorageGroup":"root.ln",
"DataType":"FLOAT",
"Compressor":"UNCOMPRESSED",
"Encoding":"RLE"
},
"status":{
"args":"{}",
"StorageGroup":"root.ln",
"DataType":"BOOLEAN",
"Compressor":"UNCOMPRESSED",
"Encoding":"PLAIN"
}
}
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
Skip to content
Sign up
Why GitHub?
Features →
Mobile →
Actions →
Codespaces →
Packages →
Security →
Code review →
Project management →
Integrations →
GitHub Sponsors →
Customer stories→
Team
Enterprise
Explore
Explore GitHub →
Learn and contribute
Topics →
Collections →
Trending →
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this organization
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
apache
/
iotdb
Notifications
Star
1我们可以使用SHOW STORAGE GROUP语句来查看系统当前所有的存储组，SQL语句如下： IoTDB> SHOW STORAGE GROUP
1执行结果为： +-----------------------------------+
| Storage Group|
+-----------------------------------+
| root.ln|
+-----------------------------------+
storage group number = 1
123456存储组设定后，使用CREATE TIMESERIES语句可以创建新的时间序列，创建时间序列时需要定义数据的类型和编码方式。此处我们创建两个时间序列，SQL语句如下： IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN
IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE
12为了查看指定的时间序列，我们可以使用SHOW TIMESERIES <Path>语句，其中<Path>表示时间序列对应的路径，默认值为空，表示查看系统中所有的时间序列。下面是两个例子： 使用SHOW TIMESERIES语句查看系统中存在的所有时间序列，SQL语句如下： IoTDB> SHOW TIMESERIES
1执行结果为： +-------------------------------+---------------+--------+--------+
| Timeseries| Storage Group|DataType|Encoding|
+-------------------------------+---------------+--------+--------+
| root.ln.wf01.wt01.status| root.ln| BOOLEAN| PLAIN|
| root.ln.wf01.wt01.temperature| root.ln| FLOAT| RLE|
+-------------------------------+---------------+--------+--------+
Total timeseries number = 2
1234567查看具体的时间序列root.ln.wf01.wt01.status的SQL语句如下： IoTDB> SHOW TIMESERIES root.ln.wf01.wt01.status
1执行结果为： +------------------------------+--------------+--------+--------+
| Timeseries| Storage Group|DataType|Encoding|
+------------------------------+--------------+--------+--------+
1执行结果为： +-----------------------------------+
| Storage Group|
+-----------------------------------+
| root.ln|
+-----------------------------------+
storage group number = 1
123456存储组设定后，使用CREATE TIMESERIES语句可以创建新的时间序列，创建时间序列时需要定义数据的类型和编码方式。此处我们创建两个时间序列，SQL语句如下： IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN
IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE
12为了查看指定的时间序列，我们可以使用SHOW TIMESERIES <Path>语句，其中<Path>表示时间序列对应的路径，默认值为空，表示查看系统中所有的时间序列。下面是两个例子： 使用SHOW TIMESERIES语句查看系统中存在的所有时间序列，SQL语句如下： IoTDB> SHOW TIMESERIES
1执行结果为： +-------------------------------+---------------+--------+--------+
| Timeseries| Storage Group|DataType|Encoding|
+-------------------------------+---------------+--------+--------+
| root.ln.wf01.wt01.status| root.ln| BOOLEAN| PLAIN|
| root.ln.wf01.wt01.temperature| root.ln| FLOAT| RLE|
+-------------------------------+---------------+--------+--------+
Total timeseries number = 2
1234567查看具体的时间序列root.ln.wf01.wt01.status的SQL语句如下： IoTDB> SHOW TIMESERIES root.ln.wf01.wt01.status
1执行结果为： +------------------------------+--------------+--------+--------+
| Timeseries| Storage Group|DataType|Encoding|
+------------------------------+--------------+--------+--------+
| root.ln.wf01.wt01.status| root.ln| BOOLEAN| PLAIN|
IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE
12为了查看指定的时间序列，我们可以使用SHOW TIMESERIES <Path>语句，其中<Path>表示时间序列对应的路径，默认值为空，表示查看系统中所有的时间序列。下面是两个例子： 使用SHOW TIMESERIES语句查看系统中存在的所有时间序列，SQL语句如下： IoTDB> SHOW TIMESERIES
1执行结果为： +-----------------------------+-----+-------------+--------+--------+-----------+----+----------+
| timeseries|alias|storage group|dataType|encoding|compression|tags|attributes|
+-----------------------------+-----+-------------+--------+--------+-----------+----+----------+
|root.ln.wf01.wt01.temperature| null| root.ln| FLOAT| RLE| SNAPPY|null| null|
| root.ln.wf01.wt01.status| null| root.ln| BOOLEAN| PLAIN| SNAPPY|null| null|
+-----------------------------+-----+-------------+--------+--------+-----------+----+----------+
Total line number = 2
1234567查看具体的时间序列root.ln.wf01.wt01.status的SQL语句如下： IoTDB> SHOW TIMESERIES root.ln.wf01.wt01.status
1执行结果为： +------------------------+-----+-------------+--------+--------+-----------+----+----------+
| timeseries|alias|storage group|dataType|encoding|compression|tags|attributes|
+------------------------+-----+-------------+--------+--------+-----------+----+----------+
|root.ln.wf01.wt01.status| null| root.ln| BOOLEAN| PLAIN| SNAPPY|null| null|
+------------------------+-----+-------------+--------+--------+-----------+----+----------+
Total line number = 1
123456接下来，我们使用INSERT语句向root.ln.wf01.wt01.status时间序列中插入数据，在插入数据时需要首先指定时间戳和路径后缀名称： IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status) values(100,true);
1我们也可以向多个时间序列中同时插入数据，这些时间序列同属于一个时间戳： IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status,temperature) values(200,false,20.71)
1最后，我们查询之前插入的数据。使用SELECT语句我们可以查询指定的时间序列的数据结果，SQL语句如下： IoTDB> SELECT status FROM root.ln.wf01.wt01
1查询结果如下： +-----------------------+------------------------+
| Time|root.ln.wf01.wt01.status|
12345678910# IoTDB的基本操作 在这里，我们首先介绍一下使用Cli工具创建时间序列、插入数据并查看数据的方法。 数据在IoTDB中的组织形式是以时间序列为单位，每一个时间序列中有若干个数据-时间点对，每一个时间序列属于一个存储组。在定义时间序列之前，要首先使用SET STORAGE GROUP语句定义存储组。SQL语句如下： IoTDB> SET STORAGE GROUP TO root.ln
1我们可以使用SHOW STORAGE GROUP语句来查看系统当前所有的存储组，SQL语句如下： IoTDB> SHOW STORAGE GROUP
1执行结果为： +-----------------------------------+
| Storage Group|
+-----------------------------------+
| root.ln|
+-----------------------------------+
storage group number = 1
123456存储组设定后，使用CREATE TIMESERIES语句可以创建新的时间序列，创建时间序列时需要定义数据的类型和编码方式。此处我们创建两个时间序列，SQL语句如下： IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN
IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE
12为了查看指定的时间序列，我们可以使用SHOW TIMESERIES <Path>语句，其中<Path>表示时间序列对应的路径，默认值为空，表示查看系统中所有的时间序列。下面是两个例子： 使用SHOW TIMESERIES语句查看系统中存在的所有时间序列，SQL语句如下： IoTDB> SHOW TIMESERIES
1执行结果为： +-------------------------------+---------------+--------+--------+
| Timeseries| Storage Group|DataType|Encoding|
+-------------------------------+---------------+--------+--------+
| root.ln.wf01.wt01.status| root.ln| BOOLEAN| PLAIN|
| root.ln.wf01.wt01.temperature| root.ln| FLOAT| RLE|
+-------------------------------+---------------+--------+--------+
Total timeseries number = 2
1234567查看具体的时间序列root.ln.wf01.wt01.status的SQL语句如下： IoTDB> SHOW TIMESERIES root.ln.wf01.wt01.status
1执行结果为： +------------------------------+--------------+--------+--------+
| Timeseries| Storage Group|DataType|Encoding|
+------------------------------+--------------+--------+--------+
| root.ln.wf01.wt01.status| root.ln| BOOLEAN| PLAIN|
Total line number = 1
123456存储组设定后，使用CREATE TIMESERIES语句可以创建新的时间序列，创建时间序列时需要定义数据的类型和编码方式。此处我们创建两个时间序列，SQL语句如下： IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN
IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE
12为了查看指定的时间序列，我们可以使用SHOW TIMESERIES <Path>语句，其中<Path>表示时间序列对应的路径，默认值为空，表示查看系统中所有的时间序列。下面是两个例子： 使用SHOW TIMESERIES语句查看系统中存在的所有时间序列，SQL语句如下： IoTDB> SHOW TIMESERIES
1执行结果为： +-----------------------------+-----+-------------+--------+--------+-----------+----+----------+
| timeseries|alias|storage group|dataType|encoding|compression|tags|attributes|
+-----------------------------+-----+-------------+--------+--------+-----------+----+----------+
|root.ln.wf01.wt01.temperature| null| root.ln| FLOAT| RLE| SNAPPY|null| null|
| root.ln.wf01.wt01.status| null| root.ln| BOOLEAN| PLAIN| SNAPPY|null| null|
+-----------------------------+-----+-------------+--------+--------+-----------+----+----------+
Total line number = 2
1234567查看具体的时间序列root.ln.wf01.wt01.status的SQL语句如下： IoTDB> SHOW TIMESERIES root.ln.wf01.wt01.status
1执行结果为： +------------------------+-----+-------------+--------+--------+-----------+----+----------+
| timeseries|alias|storage group|dataType|encoding|compression|tags|attributes|
+------------------------+-----+-------------+--------+--------+-----------+----+----------+
|root.ln.wf01.wt01.status| null| root.ln| BOOLEAN| PLAIN| SNAPPY|null| null|
+------------------------+-----+-------------+--------+--------+-----------+----+----------+
Total line number = 1
123456接下来，我们使用INSERT语句向root.ln.wf01.wt01.status时间序列中插入数据，在插入数据时需要首先指定时间戳和路径后缀名称： IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status) values(100,true);
1我们也可以向多个时间序列中同时插入数据，这些时间序列同属于一个时间戳： IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status,temperature) values(200,false,20.71)
1最后，我们查询之前插入的数据。使用SELECT语句我们可以查询指定的时间序列的数据结果，SQL语句如下： IoTDB> SELECT status FROM root.ln.wf01.wt01
1查询结果如下： +-----------------------+------------------------+
| Time|root.ln.wf01.wt01.status|
+-----------------------+------------------------+
: LR_BRACKET ID RR_BRACKET
;
attributeClauses
: DATATYPE OPERATOR_EQ dataType COMMA ENCODING OPERATOR_EQ encoding
(COMMA (COMPRESSOR | COMPRESSION) OPERATOR_EQ compressor=propertyValue)?
(COMMA property)*
tagClause
attributeClause
;
attributeClause
: (ATTRIBUTES LR_BRACKET property (COMMA property)* RR_BRACKET)?
;
tagClause
: (TAGS LR_BRACKET property (COMMA property)* RR_BRACKET)?
;
DataTypeValue: BOOLEAN | DOUBLE | FLOAT | INT32 | INT64 | TEXT
EncodingValue: GORILLA | PLAIN | RLE | TS_2DIFF | REGULAR
CompressorValue: UNCOMPRESSED | SNAPPY
propertyValue: SDT | COMPDEV | COMPMINTIME | COMPMAXTIME
Eg: CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN
xxx
123456789101112131415161718192021222324# 小工具 打印出包含某些字符的行（只看最上边的输出就可以，下边的文件不需要看） find . -type f -exec grep -i "copyright" {} \; -print | sort -u
find **/src -type f -exec grep -i "copyright" {} \; -print | sort -u
12 Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Skip to content
Skip to breadcrumbs
Skip to header menu
Skip to action menu
Skip to quick search
Linked ApplicationsLoading…Apache Software Foundation
Spaces
Hit enter to search
Help
Online Help
Keyboard Shortcuts
Feed Builder
What’s new
What’s new
Available Gadgets
About Confluence
Log in
Sign up
IOTDBPagesBlogSpace shortcutsWebsiteMain Code RepositoryGo Client Code Repository文件列表Page tree
Browse pagesConfigureSpace tools
Attachments (0)
Page History
People who can view
Resolved comments
Page Information
}
}
}
}
1234567891011121314151617181920212223242526为了查看指定的时间序列，我们可以使用SHOW TIMESERIES <Path>语句，查看时间序列root.ln.wf01.wt01.status的SQL语句如下： IoTDB> SHOW TIMESERIES root.ln.wf01.wt01.status
1执行结果为： +------------------------------+--------------+--------+--------+
| Timeseries| Storage Group|DataType|Encoding|
+------------------------------+--------------+--------+--------+
| root.ln.wf01.wt01.status| root.ln| BOOLEAN| PLAIN|
+------------------------------+--------------+--------+--------+
timeseries number = 1
Execute successfully.
It costs 0.02s.
12345678我们还可以使用SHOW STORAGE GROUP语句来查看系统当前所有的存储组，SQL语句如下： IoTDB> SHOW STORAGE GROUP
1执行结果为： +-----------------------------------+
| Storage Group|
+-----------------------------------+
| root.ln|
+-----------------------------------+
storage group number = 1
Execute successfully.
It costs 0.001s
12345678接下来，我们使用INSERT语句向root.ln.wf01.wt01.status时间序列中插入数据，在插入数据时需要首先指定时间戳和插入的传感器路径名称： IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status) values(100,true);
}
}
}
}
12345678910111213141516171819202122232425262728Now, for your conveniect, SHOW TIMESERIES clause also supports extention syntax, the pattern is (for further details, check Chapter 5 of the User Guide): SHOW TIMESERIES <PATH>
1Here is the example: IoTDB> SHOW TIMESERIES root.ln.wf01.wt01
+------------------------------+--------------+--------+--------+
| Timeseries| Storage Group|DataType|Encoding|
+------------------------------+--------------+--------+--------+
| root.ln.wf01.wt01.status| root.ln| BOOLEAN| PLAIN|
| root.ln.wf01.wt01.temperature| root.ln| FLOAT| RLE|
+------------------------------+--------------+--------+--------+
Total timeseries number = 2
Execute successfully.
123456789We can also use SHOW STORAGE GROUP to check created storage group: IoTDB> show storage group
+-----------------------------------+
| Storage Group|
+-----------------------------------+
| root.ln|
+-----------------------------------+
Total storage group number = 1
Execute successfully.
For performance tuning, you may want to collect the GC info. To enable GC log, just add a parameter "printgc" when you start the server. nohup sbin/start-server.sh printgc >/dev/null 2>&1 &
1Or sbin\start-server.bat printgc
1GC log is stored at IOTDB_HOME/logs/gc.log.
There will be at most 10 gc.log.* files and each one can reach to 10MB.
←
Frequently asked questions
SQL Reference
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Learning Lab →
Open source guides →
Connect with others
The ReadME Project →
Events →
Community forum →
GitHub Education →
GitHub Stars program →
Marketplace
Pricing
Plans →
Compare plans →
Contact Sales →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
1.4k
Fork
413
Code
Issues
99
Pull requests
55
Actions
Security
Insights
More
Code
Issues
Pull requests
Actions
Security
Insights
New issue
Have a question about this project? Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our terms of service and
privacy statement. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
| root.ln.wf01.wt01.status| root.ln| BOOLEAN| PLAIN|
+------------------------------+--------------+--------+--------+
Total timeseries number = 1
123456接下来，我们使用INSERT语句向root.ln.wf01.wt01.status时间序列中插入数据，在插入数据时需要首先指定时间戳和路径后缀名称： IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status) values(100,true);
1我们也可以向多个时间序列中同时插入数据，这些时间序列同属于一个时间戳： IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status,temperature) values(200,false,20.71)
1最后，我们查询之前插入的数据。使用SELECT语句我们可以查询指定的时间序列的数据结果，SQL语句如下： IoTDB> SELECT status FROM root.ln.wf01.wt01
1查询结果如下： +-----------------------+------------------------+
| Time|root.ln.wf01.wt01.status|
+-----------------------+------------------------+
|1970-01-01T08:00:00.100| true|
|1970-01-01T08:00:00.200| false|
+-----------------------+------------------------+
Total line number = 2
1234567我们也可以查询多个时间序列的数据结果，SQL语句如下： IoTDB> SELECT * FROM root.ln.wf01.wt01
1查询结果如下： +-----------------------+--------------------------+-----------------------------+
| Time| root.ln.wf01.wt01.status|root.ln.wf01.wt01.temperature|
+-----------------------+--------------------------+-----------------------------+
|1970-01-01T08:00:00.100| true| null|
|1970-01-01T08:00:00.200| false| 20.71|
+-----------------------+--------------------------+-----------------------------+
Total line number = 2
1234567输入quit或exit可退出Cli结束本次会话。 IoTDB> quit
1或 IoTDB> exit
1想要浏览更多IoTDB数据库支持的命令，请浏览SQL Reference. # 停止IoTDB 用户可以使用$IOTDB_HOME/sbin文件夹下的stop-server脚本停止IoTDB（注意，此停止方式为强制停止，若希望安全停止IoTDB，请使用Jconsole工具的停止方法）。 Linux系统与MacOS系统停止命令如下： > $sbin/stop-server.sh
1Windows系统停止命令如下： > $sbin\stop-server.bat
1
常见问题
→
Copyright © 2021 The Apache Software Foundation.
+------------------------------+--------------+--------+--------+
Total timeseries number = 1
123456接下来，我们使用INSERT语句向root.ln.wf01.wt01.status时间序列中插入数据，在插入数据时需要首先指定时间戳和路径后缀名称： IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status) values(100,true);
1我们也可以向多个时间序列中同时插入数据，这些时间序列同属于一个时间戳： IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status,temperature) values(200,false,20.71)
1最后，我们查询之前插入的数据。使用SELECT语句我们可以查询指定的时间序列的数据结果，SQL语句如下： IoTDB> SELECT status FROM root.ln.wf01.wt01
1查询结果如下： +-----------------------+------------------------+
| Time|root.ln.wf01.wt01.status|
+-----------------------+------------------------+
|1970-01-01T08:00:00.100| true|
|1970-01-01T08:00:00.200| false|
+-----------------------+------------------------+
Total line number = 2
1234567我们也可以查询多个时间序列的数据结果，SQL语句如下： IoTDB> SELECT * FROM root.ln.wf01.wt01
1查询结果如下： +-----------------------+--------------------------+-----------------------------+
| Time| root.ln.wf01.wt01.status|root.ln.wf01.wt01.temperature|
+-----------------------+--------------------------+-----------------------------+
|1970-01-01T08:00:00.100| true| null|
|1970-01-01T08:00:00.200| false| 20.71|
+-----------------------+--------------------------+-----------------------------+
Total line number = 2
1234567输入quit或exit可退出Cli结束本次会话。 IoTDB> quit
1或 IoTDB> exit
1想要浏览更多IoTDB数据库支持的命令，请浏览SQL Reference. # 停止IoTDB 用户可以使用$IOTDB_HOME/sbin文件夹下的stop-server脚本停止IoTDB。 Linux系统与MacOS系统停止命令如下： > $sbin/stop-server.sh
+-----------------------+------------------------+
|1970-01-01T08:00:00.100| true|
|1970-01-01T08:00:00.200| false|
+-----------------------+------------------------+
Total line number = 2
1234567我们也可以查询多个时间序列的数据结果，SQL语句如下： IoTDB> SELECT * FROM root.ln.wf01.wt01
1查询结果如下： +-----------------------+--------------------------+-----------------------------+
| Time| root.ln.wf01.wt01.status|root.ln.wf01.wt01.temperature|
+-----------------------+--------------------------+-----------------------------+
|1970-01-01T08:00:00.100| true| null|
|1970-01-01T08:00:00.200| false| 20.71|
+-----------------------+--------------------------+-----------------------------+
Total line number = 2
1234567输入quit或exit可退出Cli结束本次会话。 IoTDB> quit
1或 IoTDB> exit
1想要浏览更多IoTDB数据库支持的命令，请浏览SQL Reference. # 停止IoTDB 用户可以使用$IOTDB_HOME/sbin文件夹下的stop-server脚本停止IoTDB。 Linux系统与MacOS系统停止命令如下： > $sbin/stop-server.sh
1Windows系统停止命令如下： > $sbin\stop-server.bat
1# 基础配置 配置文件在"conf"文件夹下，包括： 环境配置模块 (iotdb-env.bat, iotdb-env.sh), 系统配置模块 (iotdb-engine.properties) 日志配置模块 (logback.xml).
←
研究论文
存储路径设置
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
+------------------------------+--------------+--------+--------+
Total timeseries number = 1
123456接下来，我们使用INSERT语句向root.ln.wf01.wt01.status时间序列中插入数据，在插入数据时需要首先指定时间戳和路径后缀名称： IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status) values(100,true);
1我们也可以向多个时间序列中同时插入数据，这些时间序列同属于一个时间戳： IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status,temperature) values(200,false,20.71)
1最后，我们查询之前插入的数据。使用SELECT语句我们可以查询指定的时间序列的数据结果，SQL语句如下： IoTDB> SELECT status FROM root.ln.wf01.wt01
1查询结果如下： +-----------------------+------------------------+
| Time|root.ln.wf01.wt01.status|
+-----------------------+------------------------+
|1970-01-01T08:00:00.100| true|
|1970-01-01T08:00:00.200| false|
+-----------------------+------------------------+
Total line number = 2
1234567我们也可以查询多个时间序列的数据结果，SQL语句如下： IoTDB> SELECT * FROM root.ln.wf01.wt01
1查询结果如下： +-----------------------+--------------------------+-----------------------------+
| Time| root.ln.wf01.wt01.status|root.ln.wf01.wt01.temperature|
+-----------------------+--------------------------+-----------------------------+
|1970-01-01T08:00:00.100| true| null|
|1970-01-01T08:00:00.200| false| 20.71|
+-----------------------+--------------------------+-----------------------------+
Total line number = 2
1234567输入quit或exit可退出Cli结束本次会话。 IoTDB> quit
1或 IoTDB> exit
1想要浏览更多IoTDB数据库支持的命令，请浏览SQL Reference. # 停止IoTDB 用户可以使用$IOTDB_HOME/sbin文件夹下的stop-server脚本停止IoTDB。 Linux系统与MacOS系统停止命令如下： > $sbin/stop-server.sh
1Windows系统停止命令如下： > $sbin\stop-server.bat
1# 只建立客户端 在incubator-iotdb的根路径下： > mvn clean package -pl cli -am -DskipTests
常见问题
→
Copyright © 2021 The Apache Software Foundation.
|1970-01-01T08:00:00.100| true|
|1970-01-01T08:00:00.200| false|
+-----------------------+------------------------+
Total line number = 2
Eg: CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE
Eg: CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE, COMPRESSOR=SNAPPY, MAX_POINT_NUMBER=3
Eg: create timeseries root.turbine.d0.s0(temperature) with datatype=FLOAT, encoding=RLE, compression=SNAPPY tags(unit=f, description='turbine this is a test1') attributes(H_Alarm=100, M_Alarm=50)
Eg: CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE, LOSS=SDT, COMPDEV=0.01
Eg: CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE, LOSS=SDT, COMPDEV=0.01, COMPMINTIME=3
Eg: CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE, LOSS=SDT, COMPDEV=0.01, COMPMINTIME=2, COMPMAXTIME=15
Note: Datatype and encoding type must be corresponding. Please check Chapter 3 Encoding Section for details.
Note: When propertyValue is SDT, it is required to set compression deviation COMPDEV, which is the maximum absolute difference between values.
Note: For SDT, values withtin COMPDEV will be discarded.
Note: For SDT, it is optional to set compression minimum COMPMINTIME, which is the minimum time difference between stored values for purpose of noise reduction.
Note: For SDT, it is optional to set compression maximum COMPMAXTIME, which is the maximum time difference between stored values regardless of COMPDEV.
123456789101112131415161718192021222324252627282930313233Delete Timeseries Statement DELETE TIMESERIES <PrefixPath> [COMMA <PrefixPath>]*
Eg: IoTDB > DELETE TIMESERIES root.ln.wf01.wt01.status
Eg: IoTDB > DELETE TIMESERIES root.ln.wf01.wt01.status, root.ln.wf01.wt01.temperature
Eg: IoTDB > DELETE TIMESERIES root.ln.wf01.wt01.*
1234Alter Timeseries Statement ALTER TIMESERIES fullPath alterClause
alterClause
: RENAME beforeName=ID TO currentName=ID
| SET property (COMMA property)*
| DROP ID (COMMA ID)*
View in Hierarchy
View Source
Delete comments
Export to PDF
Export to EPUB
Export to Word
Pages
Skip to end of banner
Jira links
Go to start of banner
Home
Skip to end of metadata
Created by ASF Infrabot, last modified on Dec 24, 2018
Go to start of metadata
This is the home of the IOTDB space.
No labels
Overview
Content Tools
Apps
Powered by a free Atlassian Confluence Open Source Project License granted to Apache Software Foundation. Evaluate Confluence today.
Powered by Atlassian Confluence 7.5.0
Printed by Atlassian Confluence 7.5.0
Report a bug
execute successfully.
12我们也可以向多个传感器中同时插入数据，这些传感器同属于一个时间戳： IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status,temperature) values(200,false,20.71)
execute successfully.
123最后，我们查询之前插入的数据。使用SELECT语句我们可以查询指定的时间序列的数据结果，SQL语句如下： IoTDB> SELECT status FROM root.ln.wf01.wt01
1查询结果如下： +-----------------------+------------------------+
| Time|root.ln.wf01.wt01.status|
+-----------------------+------------------------+
|1970-01-01T08:00:00.100| true|
|1970-01-01T08:00:00.200| false|
+-----------------------+------------------------+
record number = 1
execute successfully.
12345678我们也可以查询多个时间序列的数据结果，SQL语句如下： IoTDB> SELECT * FROM root.ln.wf01.wt01
1查询结果如下： +-----------------------+--------------------------+-----------------------------+
| Time| root.ln.wf01.wt01.status|root.ln.wf01.wt01.temperature|
+-----------------------+--------------------------+-----------------------------+
|1970-01-01T08:00:00.100| true| null|
|1970-01-01T08:00:00.200| false| 20.71|
+-----------------------+--------------------------+-----------------------------+
It costs 0.006s
123456789Insert timeseries data is the basic operation of IoTDB, you can use 'INSERT' command to finish this: IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status) values(100,true);
execute successfully.
IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status,temperature) values(200,false,20.71)
execute successfully.
1234The data we've just inserted displays like this: IoTDB> SELECT status FROM root.ln.wf01.wt01
+-----------------------+------------------------+
| Time|root.ln.wf01.wt01.status|
+-----------------------+------------------------+
|1970-01-01T08:00:00.100| true|
|1970-01-01T08:00:00.200| false|
+-----------------------+------------------------+
record number = 1
execute successfully.
123456789We can also query several timeseries data at once like this: IoTDB> SELECT * FROM root.ln.wf01.wt01
+-----------------------+--------------------------+-----------------------------+
| Time| root.ln.wf01.wt01.status|root.ln.wf01.wt01.temperature|
+-----------------------+--------------------------+-----------------------------+
|1970-01-01T08:00:00.100| true| null|
|1970-01-01T08:00:00.200| false| 20.71|
+-----------------------+--------------------------+-----------------------------+
1234567If your session looks similar to what’s above, congrats, your IoTDB is operational! For more on what commands are supported by IoTDB SQL, see Chapter 5 of the User Guide. It will give you help. # Stop Server The server can be stopped with ctrl-C or the following script: # Unix/ OS X
> $IOTDB_HOME/bin/stop-server.sh
↵
In this organization
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
apache
/
iotdb
Notifications
Star
1.4k
Jump to bottom
加入社区（Join the community）
#1995
Open
qiaojialin opened this issue
Nov 10, 2020
· 1 comment
Open
加入社区（Join the community）
#1995
qiaojialin opened this issue
Nov 10, 2020
· 1 comment
Comments
Copy link
Member
qiaojialin
commented
Nov 10, 2020
•
edited
中文版
入门资料
基本概念与使用手册：http://iotdb.apache.org/UserGuide/Master/Data-Concept/Data-Model-and-Terminology.html
0.10 之前设计文档：http://iotdb.apache.org/SystemDesign/Architecture/Architecture.html
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
1Windows系统停止命令如下： > $sbin\stop-server.bat
1# 只建立客户端 在iotdb的根路径下： > mvn clean package -pl cli -am -DskipTests
常见问题
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
1234567我们也可以查询多个时间序列的数据结果，SQL语句如下： IoTDB> SELECT * FROM root.ln.wf01.wt01
1查询结果如下： +-----------------------+--------------------------+-----------------------------+
| Time| root.ln.wf01.wt01.status|root.ln.wf01.wt01.temperature|
+-----------------------+--------------------------+-----------------------------+
|1970-01-01T08:00:00.100| true| null|
|1970-01-01T08:00:00.200| false| 20.71|
+-----------------------+--------------------------+-----------------------------+
Total line number = 2
1234567输入quit或exit可退出Cli结束本次会话。 IoTDB> quit
1或 IoTDB> exit
1想要浏览更多IoTDB数据库支持的命令，请浏览SQL Reference. # 停止IoTDB 用户可以使用$IOTDB_HOME/sbin文件夹下的stop-server脚本停止IoTDB。 Linux系统与MacOS系统停止命令如下： > $sbin/stop-server.sh
1Windows系统停止命令如下： > $sbin\stop-server.bat
1# 基础配置 配置文件在"conf"文件夹下，包括： 环境配置模块 (iotdb-env.bat, iotdb-env.sh), 系统配置模块 (iotdb-engine.properties) 日志配置模块 (logback.xml).
←
研究论文
存储路径设置
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
GitHub - apache/iotdb: Apache IoTDB
| ADD TAGS property (COMMA property)*
| ADD ATTRIBUTES property (COMMA property)*
| UPSERT tagClause attributeClause
;
attributeClause
: (ATTRIBUTES LR_BRACKET property (COMMA property)* RR_BRACKET)?
;
tagClause
: (TAGS LR_BRACKET property (COMMA property)* RR_BRACKET)?
;
Eg: ALTER timeseries root.turbine.d1.s1 RENAME tag1 TO newTag1
Eg: ALTER timeseries root.turbine.d1.s1 SET tag1=newV1, attr1=newV1
Eg: ALTER timeseries root.turbine.d1.s1 DROP tag1, tag2
Eg: ALTER timeseries root.turbine.d1.s1 ADD TAGS tag3=v3, tag4=v4
Eg: ALTER timeseries root.turbine.d1.s1 ADD ATTRIBUTES attr3=v3, attr4=v4
EG: ALTER timeseries root.turbine.d1.s1 UPSERT TAGS(tag2=newV2, tag3=v3) ATTRIBUTES(attr3=v3, attr4=v4)
123456789101112131415161718192021Show All Timeseries Statement SHOW TIMESERIES
Eg: IoTDB > SHOW TIMESERIES
Note: This statement can only be used in IoTDB Client. If you need to show all timeseries in JDBC, please use `DataBaseMetadata` interface.
Atlassian News
Atlassian
{"serverDuration": 146, "requestCorrelationId": "831f5e5fff8e51cf"}
123456输入quit或exit可退出Client结束本次会话，Client输出quit normally表示退出成功，操作语句与返回结果如下： IoTDB> quit
quit normally
12# 停止IoTDB # 使用stop-server脚本强制停止 用户可以使用$IOTDB_HOME/sbin文件夹下的stop-server脚本停止IoTDB（注意，此停止方式为强制停止，若希望安全停止IoTDB，请使用Jconsole工具的停止方法）。 Linux系统与MacOS系统停止命令如下： > $IOTDB_HOME/sbin/stop-server.sh
1Windows系统停止命令如下： > $IOTDB_HOME\sbin\stop-server.bat
1
常见问题
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
# Windows
> $IOTDB_HOME\bin\stop-server.bat
12345
Frequently asked questions
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Fork
413
Code
Issues
99
Pull requests
55
Actions
Security
Insights
More
Code
Issues
Pull requests
Actions
Security
Insights
New issue
0.11 之后设计文档及工作记录：https://cwiki.apache.org/confluence/display/IOTDB/Home
如何调试 IoTDB server：https://my.oschina.net/u/3664598/blog/4500279
入门系列教程：https://my.oschina.net/u/3664598?tab=newest&catalogId=0
联系我们
在使用 IoTDB 的过程中，如果您发现任何问题、有任何新的想法，可以通过 Apache 邮件列表、QQ 群、微信群参与到 IoTDB 的社区建设中。
订阅邮件列表
发送订阅邮件。使用想接收邮件的邮箱向 dev-subscribe@iotdb.apache.org 发送一封邮件，主题内容不限。
确认订阅邮件。完成上一步后，您将收到一封来自 iotdb.apache.org 结尾的确认订阅邮件。向该邮件再次发一封主题内容不限的邮件即可确认订阅。
至此，您可以通过订阅的邮箱接收及回复邮件，或通过查看 归档邮件 来跟踪之前的邮件对话。
Slack
https://join.slack.com/t/apacheiotdb/shared_invite/zt-qvso1nj8-7715TpySZtZqmyG5qXQwpg
QQ群
Apache IoTDB 交流群：659990460
微信群
添加好友 tietouqiao，我们会邀请您进群。
公众号：IoTDB漫游指南
公众号内容：包括 IoTDB 的使用教程、源码解析、实际案例、社区活动等，欢迎投稿！
关注方式：微信搜索 Apache-IoTDB，或扫描下方二维码即可关注我们。
案例分享
Skip to content
Sign up
Why GitHub?
Features →
Mobile →
Actions →
Codespaces →
Packages →
Security →
Code review →
Project management →
Integrations →
GitHub Sponsors →
Customer stories→
Team
Enterprise
Explore
Explore GitHub →
Learn and contribute
Topics →
Collections →
Trending →
Learning Lab →
Open source guides →
Connect with others
123Show Specific Timeseries Statement SHOW TIMESERIES <Path>
Eg: IoTDB > SHOW TIMESERIES root
Eg: IoTDB > SHOW TIMESERIES root.ln
Eg: IoTDB > SHOW TIMESERIES root.ln.*.*.status
Eg: IoTDB > SHOW TIMESERIES root.ln.wf01.wt01.status
Note: The path can be prefix path, star path or timeseries path
Note: This statement can be used in IoTDB Client and JDBC.
1234567Show Specific Timeseries Statement with where clause SHOW TIMESERIES prefixPath? showWhereClause?
showWhereClause
: WHERE (property | containsExpression)
;
containsExpression
: name=ID OPERATOR_CONTAINS value=propertyValue
;
Eg: show timeseries root.ln where unit='c'
Eg: show timeseries root.ln where description contains 'test1'
12345678910Show Specific Timeseries Statement with where clause start from offset and limit the total number of result SHOW TIMESERIES prefixPath? showWhereClause? limitClause?
showWhereClause
: WHERE (property | containsExpression)
;
containsExpression
: name=ID OPERATOR_CONTAINS value=propertyValue
Have a question about this project? Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our terms of service and
privacy statement. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
(欢迎使用/测试IoTDB的公司在此登记) Welcome to leave your company's info if your company are using/testing IoTDB
#748
Open
jixuan1989 opened this issue
Jan 15, 2020
· 23 comments
Open
(欢迎使用/测试IoTDB的公司在此登记) Welcome to leave your company's info if your company are using/testing IoTDB
#748
jixuan1989 opened this issue
Jan 15, 2020
· 23 comments
Comments
如果您正在使用 IoTDB，欢迎在这个 调研问卷 分享您使用 IoTDB 的经验，非常期待您的参与。
贡献指南
提交 issue
如果您有任何希望 IoTDB 支持的新功能、期望 IoTDB 的改进提升或者发现了 bug，欢迎您在 Jira 或着 Github 上提 issue。
在提交 issue 之前，请先查看 issue 列表或简单搜索，确定该 issue 不重复。
新建一个 issue 并选择您的 issue 类型。
使用一个清晰并有描述性的标题来定义 issue。
根据模板填写必要信息。
在提交 issue 之后，对该 issue 分配合适的标签。如：Wish，Improvement，Bug 等。
请对自己提交的 issue 保持关注，在讨论中进一步提供必要信息。
邮件讨论(英文)
如果您第一次参与邮件列表可以简单介绍一下自己。
开发功能前可以发邮件声明一下自己想做的任务。
设计文档讨论
贡献文档
IoTDB 所有官网上的内容都在项目根目录的 docs 中：
docs/SystemDesign: 系统设计文档-英文版
docs/zh/SystemDesign: 系统设计文档-中文版
docs/UserGuide: 用户手册-英文版
docs/zh/UserGuide: 用户手册-中文版
docs/Community: 社区-英文版
docs/zh/Community: 社区-中文版
docs/Development: 开发指南-英文版
docs/zh/Development: 开发指南-中文版
官网用户手册版本和分支的对应关系：
In progress -> master
major_version.x -> rel/major_version （如 0.10.x -> rel/0.10）
- ASF JIRA
The ReadME Project →
Events →
Community forum →
GitHub Education →
GitHub Stars program →
Marketplace
Pricing
Plans →
Compare plans →
Contact Sales →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
;
limitClause
: LIMIT INT offsetClause?
| offsetClause? LIMIT INT
;
Eg: show timeseries root.ln where unit='c'
Eg: show timeseries root.ln where description contains 'test1'
Eg: show timeseries root.ln where unit='c' limit 10 offset 10
12345678910111213141516Show Storage Group Statement SHOW STORAGE GROUP
Eg: IoTDB > SHOW STORAGE GROUP
Note: This statement can be used in IoTDB Client and JDBC.
123Show Specific Storage Group Statement SHOW STORAGE GROUP <PrefixPath>
Eg: IoTDB > SHOW STORAGE GROUP root.*
Eg: IoTDB > SHOW STORAGE GROUP root.ln
Note: The path can be prefix path or star path.
Note: This statement can be used in IoTDB Client and JDBC.
12345Show Merge Status Statement SHOW MERGE
Eg: IoTDB > SHOW MERGE
Note: This statement can be used in IoTDB Client and JDBC.
123Count Timeseries Statement COUNT TIMESERIES <Path>
Eg: IoTDB > COUNT TIMESERIES root
Eg: IoTDB > COUNT TIMESERIES root.ln
Copy link
Member
jixuan1989
commented
Jan 15, 2020
Welcome to register by company + homepage (optional) + use case(optional),
your support is important to us.
We will sync to official website periodically (TBD).
欢迎采用/正在测试IoTDB的公司在此登记，您的支持是我们最大的动力。
请按公司名 + 首页（可选） + 应用案例（可选）的格式登记。
后期我们会定期同步至使用公司列表页面。
The text was updated successfully, but these errors were encountered:
👍
2
😄
6
🎉
4
🚀
2
jixuan1989
added
Survey
labels
注意事项：
Markdown 中的图片可上传至 thulab/iotdb#543 获得 url
贡献代码
可以到 jira 上领取现有 issue 或者自己创建 issue 再领取，评论说我要做这个 issue 就可以。
从 iotdb 的仓库上 fork 一个分支到您自己的仓库来开始工作，clone 到本地并设置 upstream 为 apache/iotdb 的仓库。
git clone https://github.com/自己的仓库/iotdb.git
git remote add upstream https://github.com/apache/iotdb.git
进入 iotdb 根目录，拉取最新 master 分支，从 master 切出新的分支，分支名根据这个分支的功能决定，一般叫 f_new_feature(如f_storage_engine) 或者 fix_bug(如fix_query_cache_bug)
cd iotdb
git pull upstream master
git checkout -b "f_storage_engine"
在 idea 中添加 code style 为 根目录的 java-google-style.xml
修改代码，增加测试用例（单元测试、集成测试）
集成测试参考: server/src/test/java/org/apache/iotdb/db/integration/IoTDBTimeZoneIT
提交 PR, 以 [IOTDB-jira号] 或者[ISSUE-github issue号]开头
git add 修改代码
git commit -m 'commit log'
git push origin f_storage_engine
发邮件到 dev 邮件列表：(I've submitted a PR for issue IOTDB-xxx [link])
根据其他人的审阅意见进行修改，继续更新，直到合并
关闭 jira 或 Github issue
注意: 为了让您的 id 显示在 contributor 列表中，别忘了以下设置：
git config --global user.name "username"
git config --global user.email "username@mail.com"
Linked ApplicationsLoading…DashboardsProjectsIssues
Help
Jira Core help
Keyboard Shortcuts
About Jira
Jira Credits
Log In
Atlassian Jira Project Management Software
(v8.3.4#803005-sha1:1f96e09)
About Jira
Report a problem
Powered by a free Atlassian Jira open source license for Apache Software Foundation. Try Jira - bug tracking software for your team.
Atlassian
↵
In this organization
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
apache
/
iotdb
Notifications
Star
1.4k
Fork
413
Apache IoTDB
Eg: IoTDB > COUNT TIMESERIES root.ln.*.*.status
Eg: IoTDB > COUNT TIMESERIES root.ln.wf01.wt01.status
Note: The path can be prefix path, star path or timeseries path.
Note: This statement can be used in IoTDB Client and JDBC.
1234567COUNT TIMESERIES <Path> GROUP BY LEVEL=<INTEGER>
Eg: IoTDB > COUNT TIMESERIES root GROUP BY LEVEL=1
Eg: IoTDB > COUNT TIMESERIES root.ln GROUP BY LEVEL=2
Eg: IoTDB > COUNT TIMESERIES root.ln.wf01 GROUP BY LEVEL=3
Note: The path can be prefix path or timeseries path.
Note: This statement can be used in IoTDB Client and JDBC.
123456Count Nodes Statement COUNT NODES <Path> LEVEL=<INTEGER>
Eg: IoTDB > COUNT NODES root LEVEL=2
Eg: IoTDB > COUNT NODES root.ln LEVEL=2
Eg: IoTDB > COUNT NODES root.ln.* LEVEL=3
Eg: IoTDB > COUNT NODES root.ln.wf01 LEVEL=3
Note: The path can be prefix path or timeseries path.
Note: This statement can be used in IoTDB Client and JDBC.
1234567Show All Devices Statement SHOW DEVICES (WITH STORAGE GROUP)? limitClause?
Eg: IoTDB > SHOW DEVICES
Eg: IoTDB > SHOW DEVICES WITH STORAGE GROUP
Note: This statement can be used in IoTDB Client and JDBC.
Jan 15, 2020
Copy link
juice411
commented
Jan 16, 2020
•
edited
大唐先一科技，由最初的0.9到目前的0.12，经历了多个版本的测试、反馈、调优、上线、升级，下一步将考虑单机到集群版的升级，大力支持国产软件的推进。
👍
4
😄
1
🎉
1
Copy link
kevin-xin
commented
Jan 17, 2020
金风科技在重点研发项目中使用了iotdb，实时消费kafka中的风机SCADA数据，使用方便接口方便,极值查询，函数计算基本上都是毫秒级返回。
👍
5
Copy link
zhangweide666
In English
Material
Concept and UserGuide：http://iotdb.apache.org/UserGuide/Master/Data-Concept/Data-Model-and-Terminology.html
Design doc before 0.11：http://iotdb.apache.org/SystemDesign/Architecture/Architecture.html
Design doc since 0.11：https://cwiki.apache.org/confluence/display/IOTDB/Home
How to debug IoTDB Server：https://my.oschina.net/u/3664598/blog/4500279
Getting Start：https://my.oschina.net/u/3664598?tab=newest&catalogId=0
Contact Us
if you encounter any problem or have any new idea using IoTDB, you can participate in the community of IoTDB through the Apache mailing list, QQ group, WeChat group.
Subscribe to Mailing List
Send a subscription email：Send an email to dev-subscribe@iotdb.apache.org using the email address you want to receive emails from, with any subject.
Confirm your subscription：After completing the previous step, you will receive a confirmation email from iotdb.apache.org with your subscription. Confirm your subscription by sending another email to that email with any subject you wish.
At this point, you can receive and reply to emails from your subscribed email address, or track previous email conversations by viewing the archived emails.
Slack
https://join.slack.com/t/apacheiotdb/shared_invite/zt-qvso1nj8-7715TpySZtZqmyG5qXQwpg
QQ Group
Apache IoTDB User Group：659990460
Wechat Group
Add friend: tietouqiao, and then we'll invite you to the group.
WeChat Official Account：IoTDB Roaming Guide
Contents in Official account: tutorials on using IoTDB, source code parsing, case analyzing, community events, etc., looking forward to new ideas!
iotdb.apache.org/
Apache-2.0 License
1.4k
stars
413
forks
Star
Notifications
Code
Issues
99
Pull requests
55
Actions
Security
Insights
More
Code
Issues
1234Show Specific Devices Statement SHOW DEVICES <PrefixPath> (WITH STORAGE GROUP)? limitClause?
Eg: IoTDB > SHOW DEVICES root
Eg: IoTDB > SHOW DEVICES root.ln
Eg: IoTDB > SHOW DEVICES root.*.wf01
Eg: IoTDB > SHOW DEVICES root.ln WITH STORAGE GROUP
Eg: IoTDB > SHOW DEVICES root.*.wf01 WITH STORAGE GROUP
Note: The path can be prefix path or star path.
Note: This statement can be used in IoTDB Client and JDBC.
12345678Show Child Paths of Root Statement SHOW CHILD PATHS
Eg: IoTDB > SHOW CHILD PATHS
Note: This statement can be used in IoTDB Client and JDBC.
123Show Child Paths Statement SHOW CHILD PATHS <Path>
Eg: IoTDB > SHOW CHILD PATHS root
Eg: IoTDB > SHOW CHILD PATHS root.ln
Eg: IoTDB > SHOW CHILD PATHS root.*.wf01
Eg: IoTDB > SHOW CHILD PATHS root.ln.wf*
Note: The path can be prefix path or star path, the nodes can be in a "prefix + star" format.
Note: This statement can be used in IoTDB Client and JDBC.
1234567Create snapshot for schema CREATE SNAPSHOT FOR SCHEMA
1# Data Management Statement Insert Record Statement INSERT INTO <PrefixPath> LPAREN TIMESTAMP COMMA <Sensor> [COMMA <Sensor>]* RPAREN VALUES LPAREN <TimeValue>, <PointValue> [COMMA <PointValue>]* RPAREN
commented
Jan 17, 2020
北京创智信科，使用IoTDB存储中国铁塔设备监控数据，在试用阶段，IoTDB数据库的插入、存储、查询性能优越，目前正在进行压力和稳定性测试
👍
5
Copy link
xiamingwu365
commented
Jan 19, 2020
北京清智物联在分析调相机(发电机)的在线监测数据，测试使用IoTDB，目前在等待分布式版本，用于诊断中心。
👍
6
🎉
1
jixuan1989
pinned this issue
Feb 7, 2020
JackieTien97
unpinned this issue
Apr 8, 2020
Copy link
Member
vesense
commented
Follow us by searching Apache-IoTDB on WeChat, or by scanning the QR code below.
Case Sharing
If you are currently using IoTDB, please share your experience with IoTDB in this survey, and we look forward to your participation.
Contribution Guidelines
Submit issue
If there is any new feature you'd like IoTDB to support, improvements you'd like IoTDB to improve, or bugs you've found, you're welcome to submit an issue in Jira or on Github.
Check the issue list or do a simple search before you submit an issue to make sure the issue isn't a repetitive one.
Create a new issue and choose your issue type.
Use a clear and descriptive title to define the issue.
Fill in the necessary information according to the template.
Assign the appropriate tags to the issue after submitting the issue,. For example: Wish, Improve, Bug, etc.
Keep an eye on your own issue, and provide further necessary information in the discussion.
Email Discussions
If it is the first time you participate in the mailing list, you can briefly introduce yourself.
Send an email declaring the task you want to do Before developing the feature. (Hi，I'm working on issue IOTDB-XXX，My plan is ...)
Discuss on the design document
Contribute wiki documents
Community documentation is stored at Confluence and can be consulted when using and contributing to IoTDB. Feature development and experimentation on IoTDB can also be logged on it.
Contribute Documents
All of IoTDB's official website content is in docs in the project's root directory.
docs/SystemDesign: System Design Documentation - English version
docs/zh/SystemDesign: System Design Documentation-Chinese Version
docs/UserGuide: UserGuide - English Version
docs/zh/UserGuide: UserGuide - Chinese Version
docs/Community: Community - English Version
docs/zh/Community: Community - Chinese Version
docs/Development: Development Guide - English Version
Pull requests
Actions
Security
Insights
master
Switch branches/tags
Branches
Tags
View all branches
View all tags
134
branches
18
tags
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
Sensor : Identifier
Eg: IoTDB > INSERT INTO root.ln.wf01.wt01(timestamp,status) values(1509465600000,true)
Eg: IoTDB > INSERT INTO root.ln.wf01.wt01(timestamp,status) VALUES(NOW(), false)
Eg: IoTDB > INSERT INTO root.ln.wf01.wt01(timestamp,temperature) VALUES(2017-11-01T00:17:00.000+08:00,24.22028)
Eg: IoTDB > INSERT INTO root.ln.wf01.wt01(timestamp, status, temperature) VALUES (1509466680000, false, 20.060787);
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Note: The order of Sensor and PointValue need one-to-one correspondence
12345678Delete Record Statement DELETE FROM <PrefixPath> [COMMA <PrefixPath>]* [WHERE <WhereClause>]?
WhereClause : <Condition> [(AND) <Condition>]*
Condition : <TimeExpr> [(AND) <TimeExpr>]*
TimeExpr : TIME PrecedenceEqualOperator (<TimeValue> | <RelativeTime>)
Eg: DELETE FROM root.ln.wf01.wt01.temperature WHERE time > 2016-01-05T00:15:00+08:00 and time < 2017-11-1T00:05:00+08:00
Eg: DELETE FROM root.ln.wf01.wt01.status, root.ln.wf01.wt01.temperature WHERE time < NOW()
Eg: DELETE FROM root.ln.wf01.wt01.* WHERE time >= 1509466140000
1234567Select Record Statement SELECT <SelectClause> FROM <FromClause> [WHERE <WhereClause>]?
SelectClause : <SelectPath> (COMMA <SelectPath>)*
SelectPath : <FUNCTION> LPAREN <Path> RPAREN | <Path>
FUNCTION : ‘COUNT’ , ‘MIN_TIME’, ‘MAX_TIME’, ‘MIN_VALUE’, ‘MAX_VALUE’
FromClause : <PrefixPath> (COMMA <PrefixPath>)?
WhereClause : <Condition> [(AND | OR) <Condition>]*
Condition : <Expression> [(AND | OR) <Expression>]*
Apr 12, 2020
@jixuan1989 We'd better add these companies to the powered page. This is very convincing for users.
http://iotdb.apache.org/Community/Community-Powered%20By.html#companies-and-organizations
👍
3
Copy link
lxn1992
commented
Apr 26, 2020
建龙钢铁，对iotdb进行测试，祝愿乔博等创作者引领世界
👍
1
😄
1
🎉
1
jixuan1989
pushed a commit
that referenced
this issue
May 11, 2020
sync useage with github issue #748
Loading status checks…
db1c89c
jixuan1989
mentioned this issue
May 11, 2020
This issue is for storing pictures in IoTDB website or other MD files · Issue #543 · thulab/iotdb · GitHub
docs/zh/Development: Development Guide - Chinese Version
Relation between official versions of user manual and branches：
In progress -> master
major_version.x -> rel/major_version (e.g. 0.10.x -> rel/0.10)
Caution:
Images from Markdown can be uploaded to thulab/iotdb#543 to get the url.
Contribute Code
Pick up an existing issue on Jira or create a new issue and then pick it up, just comment that I want to do this issue will be fine.
Fork a branch from the iotdb repository to your own repository to get started, clone to local and set upstream as the apache/iotdb repository.
git clone https://github.com/your own repository/iotdb.git
git remote add upstream https://github.com/apache/iotdb.git
cd iotdb
git pull upstream master
git checkout -b "f_storage_engine"
Add java-google-style.xml to the root directory of code style in idea.
Modify Code and Add test Cases (unit test, integration test)
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio Code
Your codespace will open once ready.
There was a problem preparing your codespace, please try again.
Latest commit
HTHou
Change the default primitive array size to 32 (#3398)
…
b472b3a
Jun 12, 2021
Change the default primitive array size to 32 (#3398)
b472b3a
Git stats
Expression : [NOT | !]? <TimeExpr> | [NOT | !]? <SensorExpr>
TimeExpr : TIME PrecedenceEqualOperator (<TimeValue> | <RelativeTime>)
RelativeTimeDurationUnit = Integer ('Y'|'MO'|'W'|'D'|'H'|'M'|'S'|'MS'|'US'|'NS')
RelativeTime : (now() | <TimeValue>) [(+|-) RelativeTimeDurationUnit]+
SensorExpr : (<Timeseries> | <Path>) PrecedenceEqualOperator <PointValue>
Eg: IoTDB > SELECT status, temperature FROM root.ln.wf01.wt01 WHERE temperature < 24 and time > 2017-11-1 0:13:00
Eg. IoTDB > SELECT * FROM root
Eg. IoTDB > SELECT * FROM root where time > now() - 5m
Eg. IoTDB > SELECT * FROM root.ln.*.wf*
Eg. IoTDB > SELECT COUNT(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 25
Eg. IoTDB > SELECT MIN_TIME(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 25
Eg. IoTDB > SELECT MAX_TIME(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature > 24
Eg. IoTDB > SELECT MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature > 23
Eg. IoTDB > SELECT MAX_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 25
Eg. IoTDB > SELECT COUNT(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 25 GROUP BY LEVEL=1
Note: the statement needs to satisfy this constraint: <Path>(SelectClause) + <PrefixPath>(FromClause) = <Timeseries>
Note: If the <SensorExpr>(WhereClause) is started with <Path> and not with ROOT, the statement needs to satisfy this constraint: <PrefixPath>(FromClause) + <Path>(SensorExpr) = <Timeseries>
Note: In Version 0.7.0, if <WhereClause> includes `OR`, time filter can not be used.
Note: There must be a space on both sides of the plus and minus operator appearing in the time expression
[ISSUE-748] sync the usage survey with github issue #748
#1188
Merged
qiaojialin
added a commit
that referenced
this issue
May 12, 2020
sync useage with github issue #748
Loading status checks…
a9a74c1
qiaojialin
removed
Survey
labels
Sep 2, 2020
Copy link
shareli
commented
Skip to content
Sign up
Why GitHub?
Features →
Mobile →
Actions →
Codespaces →
Packages →
Security →
Code review →
Project management →
Integrations →
GitHub Sponsors →
Customer stories→
Team
Enterprise
Explore
Explore GitHub →
Learn and contribute
Topics →
Collections →
Trending →
Integration test refers to: server/src/test/java/org/apache/iotdb/db/integration/IoTDBTimeZoneIT
Submit PR, beginning with [IOTDB-jira number]
git add Modify Code
git commit -m 'commit log'
git push origin f_storage_engine
Email to dev Mailing list:(I've submitted a PR for issue IOTDB-xxx [link])
Make changes based on others' review comments and continue to update until merged
Close jira or Github issue
Note: In order for your id to appear in the contributor list, don't forget the following settings:
git config --global user.name "username"
git config --global user.email "username@mail.com"
Contributors: HTHou, qiaojialin, JesseZhou-1
The text was updated successfully, but these errors were encountered:
👍
13
😄
3
🎉
4
❤️
4
🚀
4,975
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
.github
.mvn/wrapper
antlr
cli
client-cpp
client-go @ 3208ea6
client-py
cluster
code-coverage
compile-tools
cross-tests
distribution
docker
1234567891011121314151617181920212223242526Group By Statement SELECT <SelectClause> FROM <FromClause> WHERE <WhereClause> GROUP BY <GroupByTimeClause>
SelectClause : <Function> [COMMA < Function >]*
Function : <AggregationFunction> LPAREN <Path> RPAREN
FromClause : <PrefixPath>
WhereClause : <Condition> [(AND | OR) <Condition>]*
Condition : <Expression> [(AND | OR) <Expression>]*
Expression : [NOT | !]? <TimeExpr> | [NOT | !]? <SensorExpr>
TimeExpr : TIME PrecedenceEqualOperator (<TimeValue> | <RelativeTime>)
RelativeTimeDurationUnit = Integer ('Y'|'MO'|'W'|'D'|'H'|'M'|'S'|'MS'|'US'|'NS')
RelativeTime : (now() | <TimeValue>) [(+|-) RelativeTimeDurationUnit]+
SensorExpr : (<Timeseries> | <Path>) PrecedenceEqualOperator <PointValue>
GroupByTimeClause : LPAREN <TimeInterval> COMMA <TimeUnit> (COMMA <TimeUnit>)? RPAREN
TimeInterval: LSBRACKET <TimeValue> COMMA <TimeValue> RRBRACKET | LRBRACKET <TimeValue> COMMA <TimeValue> RSBRACKET
TimeUnit : Integer <DurationUnit>
DurationUnit : "ms" | "s" | "m" | "h" | "d" | "w" | "mo"
Eg: SELECT COUNT(status), COUNT(temperature) FROM root.ln.wf01.wt01 where temperature < 24 GROUP BY([1509465720000, 1509466380000), 5m)
Eg: SELECT COUNT(status), COUNT(temperature) FROM root.ln.wf01.wt01 where temperature < 24 GROUP BY((1509465720000, 1509466380000], 5m)
Eg. SELECT COUNT (status), MAX_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE time < 1509466500000 GROUP BY([1509465720000, 1509466380000), 5m, 10m)
Eg. SELECT MIN_TIME(status), MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE temperature < 25 GROUP BY ([1509466140000, 1509466380000), 3m, 5ms)
Eg. SELECT MIN_TIME(status), MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE temperature < 25 GROUP BY ((1509466140000, 1509466380000], 3m, 5ms)
Eg. SELECT MIN_TIME(status), MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE temperature < 25 GROUP BY ((1509466140000, 1509466380000], 1mo)
Eg. SELECT MIN_TIME(status), MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE temperature < 25 GROUP BY ((1509466140000, 1509466380000], 1mo, 1mo)
Sep 21, 2020
中泰科技 主要使用iotdb在物联网，智能家居行业。目前在做性能和压力测试。由于没有集群版本，所以还在观望
Copy link
Member
Author
jixuan1989
commented
Sep 21, 2020
中泰科技 主要使用iotdb在物联网，智能家居行业。目前在做性能和压力测试。由于没有集群版本，所以还在观望
可以测试下cluster_new 分支，并非常欢迎对这个分支提issue~
Copy link
wc188996
commented
Nov 4, 2020
太极计算机股份有限公司 企业BG 基础能源SBU 准备 测试性能
👍
1
jixuan1989
pinned this issue
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
GitHub - apache/iotdb-client-go: Apache IoTDB Client for GoLang
Learning Lab →
Open source guides →
Connect with others
The ReadME Project →
Events →
Community forum →
GitHub Education →
GitHub Stars program →
Marketplace
Pricing
Plans →
Compare plans →
Contact Sales →
Education →
In this repository
All GitHub
↵
Jump to
3
qiaojialin
pinned this issue
Nov 10, 2020
qiaojialin
changed the title
社区入门
加入社区（Join the community）
Nov 10, 2020
Copy link
cdmikechen
commented
Jan 5, 2021
国外都很喜欢用Slack，是否能有Slack频道？
Sign up for free
to join this conversation on GitHub.
Already have an account?
Sign in to comment
Assignees
No one assigned
docs
example
flink-iotdb-connector
flink-tsfile-connector
grafana
hadoop
hive-connector
jdbc
licenses
server
service-rpc
session
site
spark-iotdb-connector
spark-tsfile
test/e2e
testcontainer
thrift-cluster
thrift-sync
Eg. SELECT MIN_TIME(status), MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE temperature < 25 GROUP BY ((1509466140000, 1509466380000], 1mo, 2mo)
Note: the statement needs to satisfy this constraint: <Path>(SelectClause) + <PrefixPath>(FromClause) = <Timeseries>
Note: If the <SensorExpr>(WhereClause) is started with <Path> and not with ROOT, the statement needs to satisfy this constraint: <PrefixPath>(FromClause) + <Path>(SensorExpr) = <Timeseries>
Note: <TimeValue>(TimeInterval) needs to be greater than 0
Note: First <TimeValue>(TimeInterval) in needs to be smaller than second <TimeValue>(TimeInterval)
Note: <TimeUnit> needs to be greater than 0
Note: Third <TimeUnit> if set shouldn't be smaller than second <TimeUnit>
Note: If the second <DurationUnit> is "mo", the third <DurationUnit> need to be in month
Note: If the third <DurationUnit> is "mo", the second <DurationUnit> can be in any unit
12345678910111213141516171819202122232425262728293031Fill Statement SELECT <SelectClause> FROM <FromClause> WHERE <WhereClause> FILL <FillClause>
SelectClause : <Path> [COMMA <Path>]*
FromClause : < PrefixPath > [COMMA < PrefixPath >]*
WhereClause : <WhereExpression>
WhereExpression : TIME EQUAL <TimeValue>
FillClause : LPAREN <TypeClause> [COMMA <TypeClause>]* RPAREN
TypeClause : <Int32Clause> | <Int64Clause> | <FloatClause> | <DoubleClause> | <BoolClause> | <TextClause>
Int32Clause: INT32 LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
Int64Clause: INT64 LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
FloatClause: FLOAT LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
DoubleClause: DOUBLE LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
Nov 7, 2020
jixuan1989
changed the title
Welcome to leave your company's info if your company are using/testing IoTDB(欢迎使用/测试IoTDB的公司在此登记)
(欢迎使用/测试IoTDB的公司在此登记) Welcome to leave your company's info if your company are using/testing IoTDB
Nov 7, 2020
qiaojialin
mentioned this issue
Nov 10, 2020
加入社区（Join the community）
#1995
Open
Copy link
yuerj
commented
Jan 4, 2021
用友-云平台-微服务团队，在开发测试环境使用了iotdb，祝愿乔博等创作者引领世界，社区越来越强大
👍
2
Copy link
changyonggang
commented
Jan 4, 2021
大唐先一科技，目前正在做Iotdb的性能和稳定性测试，因为集群版没有出来，公司暂时停留在测试观察阶段。
现在有分布式的版本吗？
Copy link
Member
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (In progress) IoTDB Introduction Quick Start Data Concept Data Model and TerminologyData TypeEncodingCompressionSDTCLI Administration Management IoTDB-SQL Language API Advanced Features Communication Service Protocol System Tools Collaboration of Edge and Cloud Ecosystem Integration Cluster Setup FAQ Appendix Comparison with TSDBs # Data Concept # Data Model In this section, a power scenario is taken as an example to illustrate how to creat a correct data model in IoTDB. For convenience, a sample data file is attached for you to practise IoTDB. Download the attachment: IoTDB-SampleData.txt (opens new window). According to the data attribute layers, it is expressed as an attribute hierarchy structure based on the coverage of attributes and the subordinate relationship between them, as shown below. The hierarchical from top to bottom is: power group layer - power plant layer - device layer - sensor layer. ROOT is the root node, and each node of sensor layer is a leaf node. In the process of using IoTDB, the attributes on the path from ROOT node is directly connected to each leaf node with ".", thus forming the name of a timeseries in IoTDB. For example, The left-most path in Figure 2.1 can generate a timeseries named root.ln.wf01.wt01.status. Attribute hierarchy structure After getting the name of the timeseries, we need to set up the storage group according to the actual scenario and scale of the data. Because in the scenario of this chapter data is usually arrived in the unit of groups (i.e., data may be across electric fields and devices), in order to avoid frequent switch of IO when writing data, and meet the user's requirement of physical isolation of data in the unit of groups, storage group is set at the group layer. Here are the basic concepts of the model involved in IoTDB: Device A device is an installation equipped with sensors in real scenarios. In IoTDB, all sensors should have their corresponding devices. Sensor A sensor is a detection equipment in an actual scene, which can sense the information to be measured, and can transform the sensed information into an electrical signal or other desired form of information output and send it to IoTDB. In IoTDB, all data and paths stored are organized in units of sensors. Storage Group Storage groups are used to let users define how to organize and isolate different time series data on disk. Time series belonging to the same storage group is continuously written to the same file in the corresponding folder. The file may be closed due to user commands or system policies, and hence the data coming next from these sensors will be stored in a new file in the same folder. Time series belonging to different storage groups are stored in different folders. Users can set any prefix path as a storage group. Provided that there are four time series root.vehicle.d1.s1, root.vehicle.d1.s2, root.vehicle.d2.s1, root.vehicle.d2.s2, two devices d1 and d2 under the path root.vehicle may belong to the same owner or the same manufacturer, so d1 and d2 are closely related. At this point, the prefix path root.vehicle can be designated as a storage group, which will enable IoTDB to store all devices under it in the same folder. Newly added devices under root.vehicle will also belong to this storage group. Note: A full path (root.vehicle.d1.s1 as in the above example) is not allowed to be set as a storage group. Setting a reasonable number of storage groups can lead to performance gains: there is neither the slowdown of the system due to frequent switching of IO (which will also take up a lot of memory and result in frequent memory-file switching) caused by too many storage files (or folders), nor the block of write commands caused by too few storage files (or folders) (which reduces concurrency). Users should balance the storage group settings of storage files according to their own data size and usage scenarios to achieve better system performance. (There will be officially provided storage group scale and performance test reports in the future). Note: The prefix of a time series must belong to a storage group. Before creating a time series, the user must set which storage group the series belongs to. Only the time series whose storage group is set can be persisted to disk. Once a prefix path is set as a storage group, the storage group settings cannot be changed. After a storage group is set, all parent and child layers of the corresponding prefix path are not allowed to be set up again (for example, after root.ln is set as the storage group, the root layer and root.ln.wf01 are not allowed to be set as storage groups). The Layer Name of storage group can only consist of characters, numbers, underscores and hyphen, like root.storagegroup_1-sg1. Path In IoTDB, a path is an expression that conforms to the following constraints: path: LayerName (DOT LayerName)+
LayerName: Identifier | STAR
Skip to content
Sign up
Why GitHub?
Features →
Mobile →
Actions →
Codespaces →
Packages →
Security →
Code review →
Project management →
Integrations →
GitHub Sponsors →
Customer stories→
Team
Enterprise
Explore
Explore GitHub →
Learn and contribute
Topics →
Collections →
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this organization
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
thulab
/
iotdb
Notifications
Star
18
Fork
Labels
None yet
Projects
None yet
Milestone
No milestone
Linked pull requests
Successfully merging a pull request may close this issue.
None yet
2 participants
© 2021 GitHub, Inc.
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
thrift
tools
tsfile
zeppelin-interpreter
.asf.yaml
.checkstyle
.dockerignore
.git-blame-ignore-revs
.gitignore
.gitmodules
CONTRIBUTING.md
Code Summary.md
Jenkinsfile
LICENSE
LICENSE-binary
NOTICE
NOTICE-binary
README.md
README_ZH.md
RELEASE_NOTES.md
asf.header
checkstyle.xml
codecov.yml
BoolClause: BOOLEAN LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
TextClause: TEXT LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
PreviousClause : PREVIOUS [COMMA <ValidPreviousTime>]?
LinearClause : LINEAR [COMMA <ValidPreviousTime> COMMA <ValidBehindTime>]?
ValidPreviousTime, ValidBehindTime: <TimeUnit>
TimeUnit : Integer <DurationUnit>
DurationUnit : "ms" | "s" | "m" | "h" | "d" | "w"
Eg: SELECT temperature FROM root.ln.wf01.wt01 WHERE time = 2017-11-01T16:37:50.000 FILL(float[previous, 1m])
Eg: SELECT temperature,status FROM root.ln.wf01.wt01 WHERE time = 2017-11-01T16:37:50.000 FILL (float[linear, 1m, 1m], boolean[previous, 1m])
Eg: SELECT temperature,status,hardware FROM root.ln.wf01.wt01 WHERE time = 2017-11-01T16:37:50.000 FILL (float[linear, 1m, 1m], boolean[previous, 1m], text[previous])
Eg: SELECT temperature,status,hardware FROM root.ln.wf01.wt01 WHERE time = 2017-11-01T16:37:50.000 FILL (float[linear], boolean[previous, 1m], text[previous])
Note: the statement needs to satisfy this constraint: <PrefixPath>(FromClause) + <Path>(SelectClause) = <Timeseries>
Note: Integer in <TimeUnit> needs to be greater than 0
123456789101112131415161718192021222324Group By Fill Statement SELECT <SelectClause> FROM <FromClause> WHERE <WhereClause> GROUP BY <GroupByClause> (FILL <GROUPBYFillClause>)?
GroupByClause : LPAREN <TimeInterval> COMMA <TimeUnit> RPAREN
GROUPBYFillClause : LPAREN <TypeClause> RPAREN
TypeClause : <AllClause> | <Int32Clause> | <Int64Clause> | <FloatClause> | <DoubleClause> | <BoolClause> | <TextClause>
AllClause: ALL LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
Int32Clause: INT32 LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
Int64Clause: INT64 LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
FloatClause: FLOAT LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
DoubleClause: DOUBLE LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
BoolClause: BOOLEAN LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
TextClause: TEXT LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
PreviousClause : PREVIOUS
PreviousUntilLastClause : PREVIOUSUNTILLAST
Home - IOTDB - Apache Software Foundation
qiaojialin
commented
Jan 10, 2021
大唐先一科技，目前正在做Iotdb的性能和稳定性测试，因为集群版没有出来，公司暂时停留在测试观察阶段。
现在有分布式的版本吗？
@changyonggang master 分支的 0.12.0-SNAPSHOT 有分布式的代码，可以测试了。这个问题可以单独提 issue，不在这讨论啦~
http://iotdb.apache.org/zh/UserGuide/Master/Server/Cluster%20Setup.html
Copy link
wc188996
commented
Jan 19, 2021
•
edited
太极计算机股份有限公司，目前在做IOTDB的各项性能测试并且在某些场景中进行应用中，在危化应急项目中用来记录危化品车辆的定位信息。祝IOTDB社区越做越强！👍👍
👍
4
🎉
4
❤️
1
Copy link
fly-chosen
commented
12Among them, STAR is "*" and DOT is ".". We call the middle part of a path between two "." as a layer, and thus root.A.B.C is a path with four layers. It is worth noting that in the path, root is a reserved character, which is only allowed to appear at the beginning of the time series mentioned below. If root appears in other layers, it cannot be parsed and an error is reported. Single quotes are not allowed in the path. If you want to use special characters such as "." in LayerName, use double quotes. For example, root.sg."d.1"."s.1". The characters supported in LayerName without double quotes are as below: Chinese characters '\u2E80' to '\u9FFF' '+', '&', '%', '$', '#', '@', '/', '_', '-', ':' 'A' to 'Z', 'a' to 'z', '0' to '9' '[', ']' (eg. 's[1', 's[1]', s[ab]') '-' and ':' cannot be the first character. '+' cannot use alone. Note: the LayerName of storage group can only be characters, numbers, underscores and hyphen. Besides, if deploy on Windows system, the LayerName is case-insensitive, which means it's not allowed to set storage groups root.ln and root.LN at the same time. Timeseries Path The timeseries path is the core concept in IoTDB. A timeseries path can be thought of as the complete path of a sensor that produces the time series data. All timeseries paths in IoTDB must start with root and end with the sensor. A timeseries path can also be called a full path. For example, if device1 of the vehicle type has a sensor named sensor1, its timeseries path can be expressed as: root.vehicle.device1.sensor1. Double quotes can be nested with escape characters, e.g. root.sg.d1."s.\"t\"1". Note: The layer of timeseries paths supported by the current IoTDB must be greater than or equal to four (it will be changed to two in the future). Aligned timeseries (From v0.13) When a group of sensors detects data at the same time, multiple timeseries with the same timestamp will be produced, which are called aligned timeseries in IoTDB (and are also called multivariate timeseries academically. It contains multiple unary timeseries as components, and the sampling time of each unary timeseries is the same.) Aligned timeseries can be created, inserted values, and deleted at the same time. However, when querying, each sensor can be queried separately. By using aligned timeseries, the timestamp column could be stored only once in memory and disk when inserting data, instead of stored as many times as the number of timeseries: In the following chapters of data definition language, data operation language and Java Native Interface, various operations related to aligned timeseries will be introduced one by one. Device template (From v0.13) In the actual scenario, there are many devices with the same model, that is, they have the same working condition name and type. To save system resources, you can declare a device template for the same type of device, mount it to any node in the path. Currently you can only set one device template on a specific path. Device will use it's own device template or nearest ancestor's device template. In the following chapters of data definition language, data operation language and Java Native Interface, various operations related to device template will be introduced one by one. Prefix Path The prefix path refers to the path where the prefix of a timeseries path is located. A prefix path contains all timeseries paths prefixed by the path. For example, suppose that we have three sensors: root.vehicle.device1.sensor1, root.vehicle.device1.sensor2, root.vehicle.device2.sensor1, the prefix path root.vehicle.device1 contains two timeseries paths root.vehicle.device1.sensor1 and root.vehicle.device1.sensor2 while root.vehicle.device2.sensor1 is excluded. Path With Star In order to make it easier and faster to express multiple timeseries paths or prefix paths, IoTDB provides users with the path pith star. * can appear in any layer of the path. According to the position where * appears, the path with star can be divided into two types: * appears at the end of the path; * appears in the middle of the path; When * appears at the end of the path, it represents (*)+, which is one or more layers of *. For example, root.vehicle.device1.* represents all paths prefixed by root.vehicle.device1 with layers greater than or equal to 4, like root.vehicle.device1.*, root.vehicle.device1.*.*, root.vehicle.device1.*.*.*, etc. When * appears in the middle of the path, it represents * itself, i.e., a layer. For example, root.vehicle.*.sensor1 represents a 4-layer path which is prefixed with root.vehicle and suffixed with sensor1. Note1: * cannot be placed at the beginning of the path. Note2: A path with * at the end has the same meaning as a prefix path, e.g., root.vehicle.* and root.vehicle is the same. Timestamp The timestamp is the time point at which data is produced. It includes absolute timestamps and relative timestamps Absolute timestamp Absolute timestamps in IoTDB are divided into two types: LONG and DATETIME (including DATETIME-INPUT and DATETIME-DISPLAY). When a user inputs a timestamp, he can use a LONG type timestamp or a DATETIME-INPUT type timestamp, and the supported formats of the DATETIME-INPUT type timestamp are shown in the table below: **Supported formats of DATETIME-INPUT type timestamp**
Format yyyy-MM-dd HH:mm:ss yyyy/MM/dd HH:mm:ss yyyy.MM.dd HH:mm:ss yyyy-MM-dd'T'HH:mm:ss yyyy/MM/dd'T'HH:mm:ss yyyy.MM.dd'T'HH:mm:ss yyyy-MM-dd HH:mm:ssZZ yyyy/MM/dd HH:mm:ssZZ yyyy.MM.dd HH:mm:ssZZ yyyy-MM-dd'T'HH:mm:ssZZ yyyy/MM/dd'T'HH:mm:ssZZ yyyy.MM.dd'T'HH:mm:ssZZ yyyy/MM/dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS yyyy.MM.dd HH:mm:ss.SSS yyyy/MM/dd'T'HH:mm:ss.SSS yyyy-MM-dd'T'HH:mm:ss.SSS yyyy.MM.dd'T'HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSSZZ yyyy/MM/dd HH:mm:ss.SSSZZ yyyy.MM.dd HH:mm:ss.SSSZZ yyyy-MM-dd'T'HH:mm:ss.SSSZZ yyyy/MM/dd'T'HH:mm:ss.SSSZZ yyyy.MM.dd'T'HH:mm:ss.SSSZZ ISO8601 standard time format IoTDB can support LONG types and DATETIME-DISPLAY types when displaying timestamps. The DATETIME-DISPLAY type can support user-defined time formats. The syntax of the custom time format is shown in the table below: **The syntax of the custom time format**
Symbol Meaning Presentation Examples G era era era C century of era (>=0) number 20 Y year of era (>=0) year 1996 x weekyear year 1996 w week of weekyear number 27 e day of week number 2 E day of week text Tuesday; Tue y year year 1996 D day of year number 189 M month of year month July; Jul; 07 d day of month number 10 a halfday of day text PM K hour of halfday (0~11) number 0 h clockhour of halfday (1~12) number 12 H hour of day (0~23) number 0 k clockhour of day (1~24) number 24 m minute of hour number 30 s second of minute number 55 S fraction of second millis 978 z time zone text Pacific Standard Time; PST Z time zone offset/id zone -0800; -08:00; America/Los_Angeles ' escape for text delimiter '' single quote literal ' Relative timestamp Relative time refers to the time relative to the server time now() and DATETIME time. Syntax: Duration = (Digit+ ('Y'|'MO'|'W'|'D'|'H'|'M'|'S'|'MS'|'US'|'NS'))+
RelativeTime = (now() | DATETIME) ((+|-) Duration)+
123 **The syntax of the duration unit**
Symbol Meaning Presentation Examples y year 1y=365 days 1y mo month 1mo=30 days 1mo w week 1w=7 days 1w d day 1d=1 day 1d h hour 1h=3600 seconds 1h m minute 1m=60 seconds 1m s second 1s=1 second 1s ms millisecond 1ms=1000_000 nanoseconds 1ms us microsecond 1us=1000 nanoseconds 1us ns nanosecond 1ns=1 nanosecond 1ns eg： now() - 1d2h //1 day and 2 hours earlier than the current server time
now() - 1w //1 week earlier than the current server time
12Note：There must be spaces on the left and right of '+' and '-'.
←
Get IoTDB Binary files
Data Type
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Trending →
Learning Lab →
Open source guides →
Connect with others
The ReadME Project →
Events →
Community forum →
GitHub Education →
GitHub Stars program →
Marketplace
Pricing
Plans →
Compare plans →
Contact Sales →
Education →
In this repository
All GitHub
↵
Jump to
↵
No suggested jump to results
In this repository
All GitHub
↵
Jump to
0
Code
Issues
117
Pull requests
4
Actions
Projects
1
Wiki
Security
Insights
More
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
New issue
Have a question about this project? Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
java-google-style.xml
jenkins.pom
mvnw.cmd
mvnw.sh
pom.xml
View code
IoTDB
Overview
Main Features
Outline
Quick Start
Prerequisites
Installation
Build from source
Prepare Thrift compiler
Compile IoTDB
Configurations
Start
Start IoTDB
Use IoTDB
Use Cli
Basic commands for IoTDB
Stop IoTDB
Only build server
Only build cli
Eg: SELECT last_value(temperature) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (float[PREVIOUS])
Eg: SELECT last_value(temperature) FROM root.ln.wf01.wt01 GROUP BY((15, 100], 5m) FILL (float[PREVIOUS])
Eg: SELECT last_value(power) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (int32[PREVIOUSUNTILLAST])
Eg: SELECT last_value(power) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (int32[PREVIOUSUNTILLAST, 5m])
Eg: SELECT last_value(temperature), last_value(power) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (ALL[PREVIOUS])
Eg: SELECT last_value(temperature), last_value(power) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (ALL[PREVIOUS, 5m])
Note: In group by fill, sliding step is not supported in group by clause
Note: Linear fill is not supported in group by fill.
12345678910111213141516171819202122Order by time Statement SELECT <SelectClause> FROM <FromClause> WHERE <WhereClause> GROUP BY <GroupByClause> (FILL <GROUPBYFillClause>)? orderByTimeClause?
orderByTimeClause: order by time (asc | desc)?
Eg: SELECT last_value(temperature) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (float[PREVIOUS]) order by time desc
Eg: SELECT * from root order by time desc
Eg: SELECT * from root order by time desc align by device
Eg: SELECT * from root order by time desc disable align
Eg: SELECT last * from root order by time desc
12345678Limit Statement SELECT <SelectClause> FROM <FromClause> [WHERE <WhereClause>] [<LIMITClause>] [<SLIMITClause>]
SelectClause : [<Path> | Function]+
Function : <AggregationFunction> LPAREN <Path> RPAREN
FromClause : <Path>
WhereClause : <Condition> [(AND | OR) <Condition>]*
Condition : <Expression> [(AND | OR) <Expression>]*
Expression: [NOT|!]?<TimeExpr> | [NOT|!]?<SensorExpr>
TimeExpr : TIME PrecedenceEqualOperator (<TimeValue> | <RelativeTime>)
RelativeTimeDurationUnit = Integer ('Y'|'MO'|'W'|'D'|'H'|'M'|'S'|'MS'|'US'|'NS')
RelativeTime : (now() | <TimeValue>) [(+|-) RelativeTimeDurationUnit]+
SensorExpr : (<Timeseries>|<Path>) PrecedenceEqualOperator <PointValue>
LIMITClause : LIMIT <N> [OFFSETClause]?
N : Integer
Skip to content
Skip to breadcrumbs
Skip to header menu
Skip to action menu
Skip to quick search
Linked ApplicationsLoading…Apache Software Foundation
Spaces
Hit enter to search
Help
Online Help
Keyboard Shortcuts
Feed Builder
What’s new
What’s new
Available Gadgets
About Confluence
Log in
Sign up
IOTDBPagesBlogSpace shortcutsWebsiteMain Code RepositoryGo Client Code Repository文件列表Page tree
Browse pagesConfigureSpace tools
Attachments (0)
Page History
People who can view
Resolved comments
Page Information
View in Hierarchy
View Source
Jan 21, 2021
开始加入社区，研究
👍
1
❤️
2
Copy link
xlgo
commented
Jan 28, 2021
车星际网络科技有限公司 汽车odb盒子，行车记录仪。记录GPS轨迹信息，实现手机查看轨迹，实时位置 等。
👍
3
❤️
1
JackieTien97
unpinned this issue
Mar 2, 2021
JackieTien97
pinned this issue
Mar 2, 2021
Copy link
L00161910
↵
In this organization
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
apache
/
iotdb-client-go
Notifications
Star
11
Fork
7
Apache IoTDB Client for GoLang
iotdb.apache.org/
Apache-2.0 License
11
stars
Password
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our terms of service and
privacy statement. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
Jump to bottom
This issue is for storing pictures in IoTDB website or other MD files
#543
Open
jixuan1989 opened this issue
Dec 25, 2018
· 64 comments
Open
This issue is for storing pictures in IoTDB website or other MD files
#543
jixuan1989 opened this issue
Dec 25, 2018
· 64 comments
Comments
Copy link
Member
jixuan1989
Usage of CSV Import and Export Tool
Frequent Questions for Compiling
Contact Us
QQ Group
Wechat Group
Slack
README.md
English | 中文
IoTDB
Overview
IoTDB (Internet of Things Database) is a data management system for time series data, which can provide users specific services, such as, data collection, storage and analysis. Due to its light weight structure, high performance and usable features together with its seamless integration with the Hadoop and Spark ecology, IoTDB meets the requirements of massive dataset storage, high throughput data input, and complex data analysis in the industrial IoT field.
Main Features
Main features of IoTDB are as follows:
Flexible deployment strategy. IoTDB provides users a one-click installation tool on either the cloud platform or the terminal devices, and a data synchronization tool bridging the data on cloud platform and terminals.
Low cost on hardware. IoTDB can reach a high compression ratio of disk storage.
Efficient directory structure. IoTDB supports efficient organization for complex time series data structure from intelligent networking devices, organization for time series data from devices of the same type, fuzzy searching strategy for massive and complex directory of time series data.
High-throughput read and write. IoTDB supports millions of low-power devices' strong connection data access, high-speed data read and write for intelligent networking devices and mixed devices mentioned above.
Easy to get started. IoTDB supports SQL-Like language, JDBC standard API and import/export tools which is easy to use.
Seamless integration with state-of-the-practice Open Source Ecosystem. IoTDB supports analysis ecosystems such as, Hadoop, Spark, and visualization tool, such as, Grafana.
For the latest information about IoTDB, please visit IoTDB official website. If you encounter any problems or identify any bugs while using IoTDB, please report an issue in jira.
OFFSETClause : OFFSET <OFFSETValue>
OFFSETValue : Integer
SLIMITClause : SLIMIT <SN> [SOFFSETClause]?
SN : Integer
SOFFSETClause : SOFFSET <SOFFSETValue>
SOFFSETValue : Integer
Eg: IoTDB > SELECT status, temperature FROM root.ln.wf01.wt01 WHERE temperature < 24 and time > 2017-11-1 0:13:00 LIMIT 3 OFFSET 2
Eg. IoTDB > SELECT COUNT (status), MAX_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE time < 1509466500000 GROUP BY([1509465720000, 1509466380000], 5m) LIMIT 3
Note: N, OFFSETValue, SN and SOFFSETValue must be greater than 0.
Note: The order of <LIMITClause> and <SLIMITClause> does not affect the grammatical correctness.
Note: <FillClause> can not use <LIMITClause> but not <SLIMITClause>.
123456789101112131415161718192021222324Align By Device Statement AlignbyDeviceClause : ALIGN BY DEVICE
Rules:
1. Both uppercase and lowercase are ok.
Correct example: select * from root.sg1 align by device
Correct example: select * from root.sg1 ALIGN BY DEVICE
2. AlignbyDeviceClause can only be used at the end of a query statement.
Correct example: select * from root.sg1 where time > 10 align by device
Wrong example: select * from root.sg1 align by device where time > 10
3. The paths of the SELECT clause can only be single level. In other words, the paths of the SELECT clause can only be measurements or STAR, without DOT.
Correct example: select s0,s1 from root.sg1.* align by device
Correct example: select s0,s1 from root.sg1.d0, root.sg1.d1 align by device
Correct example: select * from root.sg1.* align by device
Pony Mail!
Delete comments
Export to PDF
Export to EPUB
Export to Word
Pages
Skip to end of banner
Jira links
Go to start of banner
Home
Skip to end of metadata
Created by ASF Infrabot, last modified on Dec 24, 2018
Go to start of metadata
This is the home of the IOTDB space.
No labels
Overview
Content Tools
Apps
Powered by a free Atlassian Confluence Open Source Project License granted to Apache Software Foundation. Evaluate Confluence today.
Powered by Atlassian Confluence 7.5.0
Printed by Atlassian Confluence 7.5.0
Report a bug
Atlassian News
Atlassian
commented
Mar 3, 2021
Testing - MS Win 10.0.19041 / 64 / Java 1.8.0_271 - Stable - No Load
👍
1
😄
1
Copy link
lizhizhou
commented
Mar 19, 2021
•
edited
震坤行 www.zkh360.com 行家设备云 https://iservice.zkh360.com/ 测试中
👍
1
👎
1
😄
1
😕
2
Copy link
7
forks
Star
Notifications
Code
Pull requests
1
Actions
Security
Insights
More
Code
Pull requests
Actions
Security
Insights
main
Switch branches/tags
Branches
Tags
View all branches
View all tags
4
branches
commented
Dec 25, 2018
You can drag a picture here to get an URL on Github.
The text was updated successfully, but these errors were encountered:
Copy link
Member
Author
jixuan1989
commented
Dec 25, 2018
Copy link
Collaborator
little-emotion
commented
Jan 23, 2019
Deployment-1
Deployment-2
Deployment-3
Copy link
Collaborator
little-emotion
commented
Outline
IoTDB
Overview
Main Features
Outline
Quick Start
Prerequisites
Installation
Build from source
Configurations
Start
Start IoTDB
Use IoTDB
Use Cli
Basic commands for IoTDB
Stop IoTDB
Only build server
Only build cli
Usage of CSV Import and Export Tool
Quick Start
This short guide will walk you through the basic process of using IoTDB. For a more detailed introduction, please visit our website's User Guide.
Prerequisites
To use IoTDB, you need to have:
Java >= 1.8 (1.8, 11, and 15 are verified. Please make sure the environment path has been set accordingly).
Maven >= 3.6 (If you want to compile and install IoTDB from source code).
Set the max open files num as 65535 to avoid "too many open files" error.
Correct example: select * from root align by device
Correct example: select s0,s1,* from root.*.* align by device
Wrong example: select d0.s1, d0.s2, d1.s0 from root.sg1 align by device
Wrong example: select *.s0, *.s1 from root.* align by device
Wrong example: select *.*.* from root align by device
4. The data types of the same measurement column should be the same across devices.
Note that when it comes to aggregated paths, the data type of the measurement column will reflect
Correct example: select s0 from root.sg1.d0,root.sg1.d1 align by device
root.sg1.d0.s0 and root.sg1.d1.s0 are both INT32.
Correct example: select count(s0) from root.sg1.d0,root.sg1.d1 align by device
count(root.sg1.d0.s0) and count(root.sg1.d1.s0) are both INT64.
Wrong example: select s0 from root.sg1.d0, root.sg2.d3 align by device
root.sg1.d0.s0 is INT32 while root.sg2.d3.s0 is FLOAT.
5. The display principle of the result table is that all the columns (no matther whther a column has has existing data) will be shown, with nonexistent cells being null. Besides, the select clause support const column (e.g., 'a', '123' etc..).
For example, "select s0,s1,s2,'abc',s1,s2 from root.sg.d0, root.sg.d1, root.sg.d2 align by device". Suppose that the actual existing timeseries are as follows:
- root.sg.d0.s0
- root.sg.d0.s1
- root.sg.d1.s0
Then you could expect a table like:
| Time | Device | s0 | s1 | s2 | 'abc' | s1 | s2 |
| --- | --- | ---| ---| null | 'abc' | ---| null |
| 1 |root.sg.d0| 20 | 2.5| null | 'abc' | 2.5| null |
| 2 |root.sg.d0| 23 | 3.1| null | 'abc' | 3.1| null |
| ... | ... | ...| ...| null | 'abc' | ...| null |
| 1 |root.sg.d1| 12 |null| null | 'abc' |null| null |
| 2 |root.sg.d1| 19 |null| null | 'abc' |null| null |
On a mobile device and just browsing? Try our mobile-enhanced version!
Pony Mail!
Search:
-This list
-Less than 1 month ago
Where to search:
This list
All lists
Date range:
Available projects:
Default theme
Social theme
Compact theme
Static HTML lists
Log in
This site requires JavaScript enabled. Please enable it.
This search allows you to search all archives you have access to at once. Use with care.
You may search for whole sentences using "sentence goes here" or omit certain words by prepending a - to them, such as: apples -oranges to search for apples but exclude emails with oranges.
When:
Quick query:
From:
Subject:
Look in:
Current list
All lists
Pick a month:
View mode:
{"serverDuration": 140, "requestCorrelationId": "fe93dd8d982de706"}
-----BEGIN PGP SIGNATURE-----
iQIzBAABCgAdFiEEukXNu4fosUaoH1u+Igbvj2TDWIkFAmBqbFwACgkQIgbvj2TD
WIkHig//Uvg8buUxTe9clSoeRBE+OPlwqNOpCJPIDSIcCZtpsG15BA05paiXzP8C
OElMzHhhiVFD/6mRIJkQDWlm0QCRFywVEKMUfXYfdEqrfeadtLwmxuFg+BwT/QC3
mCDKSy9luKGM595GodpiXie5Fd0VgSuIbrvlnuQ7QOaXj5GPgbeVW1xm2Mee/1Bk
17PW5dsIuvYKFu7Bm2MpogN82143+D+aYNCqtZjNhqGvAit7XMk+MHYJoB/XQ3L7
fN/EHobt9W8NI6tN5cDii3hWHcdR1Yc8VgnNfzMKR5E8qOQArOOoigOcqVaBqEoj
bmZpQZFcTNTHMs8RQ9yFvLDLyVOpC5/pfR4oM5yvNvAa+w0XpcHjcug/M6LQ0s8c
2Q+L9y83n2IGw09JxEl9pRscpTGCz472Z2ARTQZWoa0ld1wajsKXHP7tYr9Wkezg
V1tOVlDTXRjlnGOVP5/W/a3DgN0xBbVMkh1g4m73pvAFUnZH2xWmYtVuWfEQ2CVk
KZvmDHiGf1t2phcEXTNXgvK4vIp6vzb1gTozprCC4XOKzLs2+9dHyjFizHehhWOY
iHZbMZfbNG143r9djdsDVFpsuQb4GJWg48M6NBmv0SygaGzXAOrwujkBmv/tbZi+
R8MZ6F6ODq5j/dwS+5FJghHIxmH4mn5cnupiDlWJbQwtKIBdIiw=
=rDNB
-----END PGP SIGNATURE-----
Contributor
LeiRui
commented
May 26, 2021
@jixuan1989 We'd better add these companies to the powered page. This is very convincing for users.
http://iotdb.apache.org/Community/Community-Powered%20By.html#companies-and-organizations
Agree. If possible I would suggest listing the cooperating companies on the IoTDB home page. Take shimo document as an example:
Copy link
Eights-Li
commented
May 27, 2021
长安汽车 IOTDB用于车况信号的存储和查询
👍
1
😄
1
🎉
1
1
tag
Code
Clone
HTTPS
GitHub CLI
Use Git or checkout with SVN using the web URL.
Work fast with our official CLI.
Learn more.
Open with GitHub Desktop
Download ZIP
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching GitHub Desktop
If nothing happens, download GitHub Desktop and try again.
Go back
Launching Xcode
If nothing happens, download Xcode and try again.
Go back
Launching Visual Studio Code
Your codespace will open once ready.
Jan 23, 2019
Detail-1
Detail-2
Detail-3
Detail-4
Detail-5
Detail-6
Detail-7
Detail-8
Detail-9
Detail-10
Copy link
Collaborator
little-emotion
commented
Jan 23, 2019
Detail-11
Detail-12
Detail-13
Detail-14
Detail-15
Installation
IoTDB provides three installation methods, you can refer to the following suggestions, choose the one fits you best:
Installation from source code. If you need to modify the code yourself, you can use this method.
Installation from binary files. Download the binary files from the official website. This is the recommended method, in which you will get a binary released package which is out-of-the-box.
Using Docker：The path to the dockerfile is https://github.com/apache/iotdb/tree/master/docker/src/main
Here in the Quick Start, we give a brief introduction of using source code to install IoTDB. For further information, please refer to User Guide.
Build from source
Prepare Thrift compiler
Skip this chapter if you are using Windows.
As we use Thrift for our RPC module (communication and
protocol definition), we involve Thrift during the compilation, so Thrift compiler 0.13.0 (or
higher) is required to generate Thrift Java code. Thrift officially provides binary compiler for
Windows, but unfortunately, they do not provide that for Unix OSs.
If you have permission to install new softwares, use apt install or yum install or brew install
to install the Thrift compiler (If you already have installed the thrift compiler, skip this step).
Then, you may add the following parameter
when running Maven: -Dthrift.download-url=http://apache.org/licenses/LICENSE-2.0.txt -Dthrift.exec.absolute.path=<YOUR LOCAL THRIFT BINARY FILE>.
If not, then you have to compile the thrift compiler, and it requires you install a boost library first.
Therefore, we compiled a Unix compiler ourselves and put it onto GitHub, and with the help of a
maven plugin, it will be downloaded automatically during compilation.
This compiler works fine with gcc8 or later, Ubuntu MacOS, and CentOS, but previous versions
and other OSs are not guaranteed.
If you can not download the thrift compiler automatically because of network problem, you can download
| ... | ... | ...| ...| null | 'abc' | ...| null |
Note that the cells of measurement 's0' and device 'root.sg.d1' are all null.
6. The duplicated devices in the prefix paths are neglected.
For example, "select s0,s1 from root.sg.d0,root.sg.d0,root.sg.d1 align by device" is equal to "select s0,s1 from root.sg.d0,root.sg.d1 align by device".
For example. "select s0,s1 from root.sg.*,root.sg.d0 align by device" is equal to "select s0,s1 from root.sg.* align by device".
7. The duplicated measurements in the suffix paths are not neglected.
For example, "select s0,s0,s1 from root.sg.* align by device" is not equal to "select s0,s1 from root.sg.* align by device".
8. Both time predicates and value predicates are allowed in Where Clause. The paths of the value predicates can be the leaf node or full path started with ROOT. And wildcard is not allowed here. For example:
- select * from root.sg.* where time = 1 align by device
- select * from root.sg.* where s0 < 100 align by device
- select * from root.sg.* where time < 20 AND s0 > 50 align by device
- select * from root.sg.d0 where root.sg.d0.s0 = 15 align by device
9. More correct examples:
- select * from root.vehicle align by device
- select s0,s0,s1 from root.vehicle.* align by device
- select s0,s1 from root.vehicle.* limit 10 offset 1 align by device
- select * from root.vehicle slimit 10 soffset 2 align by device
- select * from root.vehicle where time > 10 align by device
- select * from root.vehicle.* where time < 10 AND s0 > 25 align by device
- select * from root.vehicle where root.vehicle.d0.s0>0 align by device
- select count(*) from root.vehicle align by device
- select sum(*) from root.vehicle GROUP BY (20ms,0,[2,50]) align by device
- select * from root.vehicle where time = 3 Fill(int32[previous, 5ms]) align by device
Copy link
it-boy-like-girl
commented
May 28, 2021
绍兴安瑞思网络科技，工业互联网项目，对于目前需求，单机完全够用，只希望稳定，查询很高效。nice
👍
1
😄
1
🎉
1
Copy link
e1o
commented
May 31, 2021
•
edited
深圳嘉信公司，使用IoTDB存储武汉桥梁健康监控数据，在试用阶段，IoTDB数据库的插入、存储、查询性能优越，目前在等待Grafana插件，祝愿IotDB越来越好
👍
1
😄
1
🎉
1
Copy link
yanghe25413
commented
There was a problem preparing your codespace, please try again.
Latest commit
Git stats
21
commits
Files
Permalink
Failed to load latest commit information.
Type
Name
Latest commit message
Commit time
.github/workflows
client
example
rpc
test/e2e
.gitignore
LICENSE
LICENSE-binary
Makefile
NOTICE
Detail-16
Detail-17
Detail-18
Detail-18.2
Detail-19
Detail-20
Copy link
Collaborator
little-emotion
commented
Jan 23, 2019
Detail-21
Detail-22
Detail-23
Detail-24
Detail-25
Detail-26
Detail-27
Detail-28
Detail-29
Detail-30
Copy link
it yourself, and then either:
or, add Maven commands:
-Dthrift.download-url=http://apache.org/licenses/LICENSE-2.0.txt -Dthrift.exec.absolute.path=<YOUR LOCAL THRIFT BINARY FILE>.
Compile IoTDB
You can download the source code from:
git clone https://github.com/apache/iotdb.git
The default dev branch is the master branch, If you want to use a released version x.x.x:
git checkout release/x.x.x
From v0.11.3 on, the tag name format is change to: vx.x.x:
git checkout vx.x.x
Under the root path of iotdb:
> mvn clean package -DskipTests
Using -P compile-cpp for compiling cpp client (For more details, read client-cpp's Readme file.)
NOTE: Directories "thrift/target/generated-sources/thrift", "thrift-sync/target/generated-sources/thrift",
"thrift-cluster/target/generated-sources/thrift"
and "antlr/target/generated-sources/antlr4" need to be added to sources roots to avoid compilation errors in the IDE.
In IDEA, you just need to right click on the root project name and choose "Maven->Reload Project" after
you run mvn package successfully.
Configurations
configuration files are under "conf" folder
environment config module (iotdb-env.bat, iotdb-env.sh),
system config module (iotdb-engine.properties)
log config module (logback.xml).
For more information, please see Config Manual.
Start
You can go through the following steps to test the installation, if there is no error returned after execution, the installation is completed.
Start IoTDB
1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677Disable Align Statement Disable Align Clause: DISABLE ALIGN
Rules:
1. Both uppercase and lowercase are ok.
Correct example: select * from root.sg1 disable align
Correct example: select * from root.sg1 DISABLE ALIGN
2. Disable Align Clause can only be used at the end of a query statement.
Correct example: select * from root.sg1 where time > 10 disable align
Wrong example: select * from root.sg1 disable align where time > 10
3. Disable Align Clause cannot be used with Aggregation, Fill Statements, Group By or Group By Device Statements, but can with Limit Statements.
Correct example: select * from root.sg1 limit 3 offset 2 disable align
Correct example: select * from root.sg1 slimit 3 soffset 2 disable align
Wrong example: select count(s0),count(s1) from root.sg1.d1 disable align
Wrong example: select * from root.vehicle where root.vehicle.d0.s0>0 disable align
Wrong example: select * from root.vehicle align by device disable align
4. The display principle of the result table is that only when the column (or row) has existing data will the column (or row) be shown, with nonexistent cells being empty.
You could expect a table like:
| Time | root.sg.d0.s1 | Time | root.sg.d0.s2 | Time | root.sg.d1.s1 |
| --- | --- | --- | --- | --- | --- |
| 1 | 100 | 20 | 300 | 400 | 600 |
| 2 | 300 | 40 | 800 | 700 | 900 |
| 4 | 500 | | | 800 | 1000 |
May 31, 2021
拓维信息系统股份有限公司，使用iotdb为某大型国企采集设备数据，搭建物联网，智能制造相关平台，目前已步入生产环节
👍
2
😄
2
🎉
2
Copy link
CloudsYy
commented
Jun 1, 2021
广东瑞恩科技有限公司，使用iotdb的cnc工厂设备数据采集存储并应用，查询性能各方面还不错，希望后面功能越来越完善！
👍
2
😄
2
🎉
2
Sign up for free
to join this conversation on GitHub.
NOTICE-binary
README.md
README_ZH.md
go.mod
go.sum
View code
Apache IoTDB
Apache IoTDB Client for Go
Overview
Prerequisites
How to Use the Client (Quick Start)
Developer environment requirements for iotdb-client-go
OS
Command Line Tools
README.md
English | 中文
Apache IoTDB
Apache IoTDB (Database for Internet of Things) is an IoT native database with high performance for
data management and analysis, deployable on the edge and the cloud. Due to its light-weight
architecture, high performance and rich feature set together with its deep integration with
Apache Hadoop, Spark and Flink, Apache IoTDB can meet the requirements of massive data storage,
high-speed data ingestion and complex data analysis in the IoT industrial fields.
Apache IoTDB Client for Go
Overview
This is the GoLang client of Apache IoTDB.
Collaborator
little-emotion
commented
Jan 23, 2019
Detail-31
Detail-32
Detail-33
Detail-34
Detail-35
Detail-36
Detail-37
Detail-38
Copy link
Collaborator
little-emotion
commented
Jan 23, 2019
overview-1
overview-2
overview-3
overview-4
overview-5
overview-6
overview-7
overview-8
Copy link
Users can start IoTDB by the start-server script under the sbin folder.
# Unix/OS X
> nohup sbin/start-server.sh >/dev/null 2>&1 &
or
> nohup sbin/start-server.sh -c <conf_path> -rpc_port <rpc_port> >/dev/null 2>&1 &
# Windows
> sbin\start-server.bat -c <conf_path> -rpc_port <rpc_port>
"-c" and "-rpc_port" are optional.
option "-c" specifies the system configuration file directory.
option "-rpc_port" specifies the rpc port.
if both option specified, the rpc_port will overrides the rpc_port in conf_path.
Use IoTDB
Use Cli
IoTDB offers different ways to interact with server, here we introduce the basic steps of using Cli tool to insert and query data.
After installing IoTDB, there is a default user 'root', its default password is also 'root'. Users can use this
default user to login Cli to use IoTDB. The startup script of Cli is the start-cli script in the folder sbin. When executing the script, user should assign
IP, PORT, USER_NAME and PASSWORD. The default parameters are "-h 127.0.0.1 -p 6667 -u root -pw -root".
Here is the command for starting the Cli:
# Unix/OS X
> sbin/start-cli.sh -h 127.0.0.1 -p 6667 -u root -pw root
# Windows
> sbin\start-cli.bat -h 127.0.0.1 -p 6667 -u root -pw root
The command line cli is interactive, so you should see the welcome logo and statements if everything is ready:
_____ _________ ______ ______
|_ _| | _ _ ||_ _ `.|_ _ \
| | | | | 900 | 8000 |
5. More correct examples:
- select * from root.vehicle disable align
- select s0,s0,s1 from root.vehicle.* disable align
- select s0,s1 from root.vehicle.* limit 10 offset 1 disable align
- select * from root.vehicle slimit 10 soffset 2 disable align
- select * from root.vehicle where time > 10 disable align
Select Clause : <Path> [COMMA <Path>]*
FromClause : < PrefixPath > [COMMA < PrefixPath >]*
WhereClause : <TimeExpr> [(AND | OR) <TimeExpr>]*
TimeExpr : TIME PrecedenceEqualOperator (<TimeValue> | <RelativeTime>)
Eg. SELECT LAST s1 FROM root.sg.d1
Eg. SELECT LAST s1, s2 FROM root.sg.d1
Eg. SELECT LAST s1 FROM root.sg.d1, root.sg.d2
Eg. SELECT LAST s1 FROM root.sg.d1 where time > 100
Eg. SELECT LAST s1, s2 FROM root.sg.d1 where time >= 500
Rules:
1. the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
2. SELECT LAST only supports time filter that contains '>' or '>=' currently.
3. The result set of last query will always be displayed in a fixed three column table format.
For example, "select last s1, s2 from root.sg.d1, root.sg.d2", the query result would be:
| Time | Path | Value |
| --- | ------------ | ----- |
| 5 | root.sg.d1.s1| 100 |
Already have an account?
Sign in to comment
Assignees
No one assigned
Labels
None yet
Projects
None yet
Milestone
No milestone
Linked pull requests
Successfully merging a pull request may close this issue.
None yet
22 participants
and others
© 2021 GitHub, Inc.
Terms
Privacy
Security
Status
Docs
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Apache IoTDB website: https://iotdb.apache.org
Apache IoTDB Github: https://github.com/apache/iotdb
Prerequisites
golang >= 1.13
How to Use the Client (Quick Start)
With go mod
export GO111MODULE=on
export GOPROXY=https://goproxy.io
mkdir session_example && cd session_example
curl -o session_example.go -L https://github.com/apache/iotdb-client-go/raw/main/example/session_example.go
go mod init session_example
go run session_example.go
Without go mod
# get thrift 0.13.0
go get github.com/apache/thrift
cd $GOPATH/src/github.com/apache/thrift
git checkout 0.13.0
mkdir -p $GOPATH/src/iotdb-client-go-example/session_example
cd $GOPATH/src/iotdb-client-go-example/session_example
curl -o session_example.go -L https://github.com/apache/iotdb-client-go/raw/main/example/session_example.go
go run session_example.go
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Collaborator
little-emotion
commented
Jan 23, 2019
Detail-37修改版
Copy link
Collaborator
little-emotion
commented
Jan 23, 2019
Detail-5修改版
Copy link
Collaborator
little-emotion
commented
Jan 24, 2019
7-1-add_data_source
7-2-edit_data_source
7-3-add_graph
Copy link
Collaborator
| | .--.|_/ | | \_| | | `. \ | |_) |
| | / .'`\ \ | | | | | | | __'.
_| |_| \__. | _| |_ _| |_.' /_| |__) |
|_____|'.__.' |_____| |______.'|_______/ version x.x.x
IoTDB> login successfully
IoTDB>
Basic commands for IoTDB
Now, let us introduce the way of creating timeseries, inserting data and querying data.
The data in IoTDB is organized as timeseries. Each timeseries includes multiple data-time pairs, and is owned by a storage group. Before defining a timeseries, we should define a storage group using SET STORAGE GROUP first, and here is an example:
IoTDB> SET STORAGE GROUP TO root.ln
We can also use SHOW STORAGE GROUP to check the storage group being created:
IoTDB> SHOW STORAGE GROUP
+-----------------------------------+
| Storage Group|
+-----------------------------------+
| root.ln|
+-----------------------------------+
storage group number = 1
After the storage group is set, we can use CREATE TIMESERIES to create a new timeseries. When creating a timeseries, we should define its data type and the encoding scheme. Here We create two timeseries:
IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN
IoTDB> CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE
In order to query the specific timeseries, we can use SHOW TIMESERIES . represent the location of the timeseries. The default value is "null", which queries all the timeseries in the system(the same as using "SHOW TIMESERIES root"). Here are some examples:
| 2 | root.sg.d1.s2| 400 |
| 4 | root.sg.d2.s1| 250 |
| 9 | root.sg.d2.s2| 600 |
4. It is not supported to use "diable align" in LAST query.
1234567891011121314151617181920212223242526272829As Statement As statement assigns an alias to time seires queried in SELECT statement You can use as statement in all queries, but some rules are restricted about wildcard.
1. Raw data query
select s1 as speed, s2 as temperature from root.sg.d1
The result set will be like：
| Time | speed | temperature |
| ... | ... | .... |
2. Aggregation query
select count(s1) as s1_num, max_value(s2) as s2_max from root.sg.d1
3. Down-frequence query
select count(s1) as s1_num from root.sg.d1 group by ([100,500), 80ms)
4. Align by device query
select s1 as speed, s2 as temperature from root.sg.d1 align by device
select count(s1) as s1_num, count(s2), count(s3) as s3_num from root.sg.d2 align by device
5. Last Record query
select last s1 as speed, s2 from root.sg.d1
Rules：
1. In addition to Align by device query，each AS statement has to corresponding to one time series exactly.
E.g. select s1 as temperature from root.sg.*
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
Join Apache IoTDB Community on Slack | Slack
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.12.x) IoTDB Introduction What is IoTDBArchitectureScenarioFeaturesPublicationQuick Start Data Concept CLI Administration Management IoTDB-SQL Language API UDF Communication Service Protocol System Tools Collaboration of Edge and Cloud Ecosystem Integration Cluster Setup FAQ Appendix Comparison with TSDBs # What is IoTDB IoTDB(Internet of Things Database) is an integrated data management engine designed for timeseries data, which can provide users specific services for data collection, storage and analysis. Due to its light weight structure, high performance and usable features together with its intense integration with Hadoop and Spark ecology, IoTDB meets the requirements of massive dataset storage, high-speed data input and complex data analysis in the IoT industrial field.
Architecture
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.12.x) IoTDB Introduction Quick Start QuickStartStorage Path SettingGet IoTDB Binary filesData Concept CLI Administration Management IoTDB-SQL Language API UDF Communication Service Protocol System Tools Collaboration of Edge and Cloud Ecosystem Integration Cluster Setup FAQ Appendix Comparison with TSDBs # Way to get IoTDB binary files IoTDB provides you three installation methods, you can refer to the following suggestions, choose one of them: Installation from source code. If you need to modify the code yourself, you can use this method. Installation from binary files. Download the binary files from the official website. This is the recommended method, in which you will get a binary released package which is out-of-the-box. Using Docker：The path to the dockerfile is https://github.com/apache/iotdb/blob/master/docker/Dockerfile # Prerequisites To use IoTDB, you need to have: Java >= 1.8 (Please make sure the environment path has been set) Maven >= 3.6 (Optional) Set the max open files num as 65535 to avoid "too many open files" problem. Note: If you don't have maven installed, you should replace 'mvn' in the following commands with 'mvnw.sh' or 'mvnw.cmd'. # Installation from binary files You can download the binary file from:
Developer environment requirements for iotdb-client-go
OS
Linux, Macos or other unix-like OS
Windows+bash(WSL, cygwin, Git Bash)
Command Line Tools
golang >= 1.13
make >= 3.0
curl >= 7.1.1
thrift 0.13.x
About
Apache IoTDB Client for GoLang
iotdb.apache.org/
Resources
Readme
License
Apache-2.0 License
Releases
1
Apache IoTDB 0.12.0
Latest
Apr 14, 2021
Packages 0
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.12.x) IoTDB Introduction Quick Start QuickStartStorage Path SettingGet IoTDB Binary filesData Concept CLI Administration Management IoTDB-SQL Language API UDF Communication Service Protocol System Tools Collaboration of Edge and Cloud Ecosystem Integration Cluster Setup FAQ Appendix Comparison with TSDBs # Files In IoTDB, there are many kinds of data needed to be stored. This section introduces IoTDB's data storage strategy to provide you an explicit understanding of IoTDB's data management. The data in IoTDB is divided into three categories, namely data files, system files, and pre-write log files. # Data Files Data files store all the data that the user wrote to IoTDB, which contains TsFile and other files. TsFile storage directory can be configured with the data_dirs configuration item (see file layer for details). Other files can be configured through data_dirs configuration item (see Engine Layer for details). In order to support users' storage requirements such as disk space expansion better, IoTDB supports multiple file directories storage methods for TsFile storage configuration. Users can set multiple storage paths as data storage locations( see data_dirs configuration item), and you can specify or customize the directory selection strategy (see multi_dir_strategy configuration item for details). # System files System files include schema files, which store metadata information of data in IoTDB. It can be configured through the base_dir configuration item (see System Layer for details). # Pre-write Log Files Pre-write log files store WAL files. It can be configured through the wal_dir configuration item (see System Layer for details). # Example of Setting Data storage Directory For a clearer understanding of configuring the data storage directory, we will give an example in this section. The data directory path included in storage directory setting are: base_dir, data_dirs, multi_dir_strategy, and wal_dir, which refer to system files, data folders, storage strategy, and pre-write log files. An example of the configuration items are as follows: base_dir = $IOTDB_HOME/data
fanhualta
commented
Jun 14, 2019
•
edited
sync-1
sync-2
sync-3
sync-4
sync-tree
Copy link
Collaborator
little-emotion
commented
Jul 10, 2019
性能监控模块-1
性能监控模块-2
Copy link
samperson1997
commented
Jul 19, 2019
•
edited
Querying all timeseries in the system:
IoTDB> SHOW TIMESERIES
+-------------------------------+------+-------------+--------+--------+-----------+----+----------+
| timeseries | alias|storage group|dataType|encoding|compression|tags|attributes|
+-------------------------------+------+-------------+--------+--------+-----------+----+----------+
| root.ln.wf01.wt01.status| null| root.ln| BOOLEAN| PLAIN| SNAPPY|null| null|
| root.ln.wf01.wt01.temperature| null| root.ln| FLOAT| RLE| SNAPPY|null| null|
+-------------------------------+------+-------------+--------+--------+-----------+----+----------+
Total timeseries number = 2
Querying a specific timeseries(root.ln.wf01.wt01.status):
IoTDB> SHOW TIMESERIES root.ln.wf01.wt01.status
+-------------------------------+------+-------------+--------+--------+-----------+----+----------+
| timeseries | alias|storage group|dataType|encoding|compression|tags|attributes|
+-------------------------------+------+-------------+--------+--------+-----------+----+----------+
| root.ln.wf01.wt01.status| null| root.ln| BOOLEAN| PLAIN| SNAPPY|null| null|
+-------------------------------+------+-------------+--------+--------+-----------+----+----------+
Total timeseries number = 1
Insert timeseries data is a basic operation of IoTDB, you can use ‘INSERT’ command to finish this. Before insertion, you should assign the timestamp and the suffix path name:
At this time if `root.sg.*` includes more than one device，then an exception will be thrown。
2. In align by device query，the prefix path that each AS statement corresponding to can includes multiple device, but the suffix path can only be single sensor.
E.g. select s1 as temperature from root.sg.*
In this situation, it will be show correctly even if multiple devices are selected.
E.g. select * as temperature from root.sg.d1
In this situation, it will throws an exception if * corresponds to multiple sensors.
12345678910111213141516171819202122232425262728293031323334353637383940# Database Management Statement Create User CREATE USER <userName> <password>;
userName:=identifier
password:=string
Eg: IoTDB > CREATE USER thulab 'pwd';
1234Delete User DROP USER <userName>;
userName:=identifier
Eg: IoTDB > DROP USER xiaoming;
123Create Role CREATE ROLE <roleName>;
roleName:=identifie
Eg: IoTDB > CREATE ROLE admin;
123Delete Role DROP ROLE <roleName>;
roleName:=identifier
Eg: IoTDB > DROP ROLE admin;
123Grant User Privileges GRANT USER <userName> PRIVILEGES <privileges> ON <nodeName>;
userName:=identifier
Issues · apache/iotdb · GitHub
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Download page (opens new window) # Installation from source code You can get the released source code from https://iotdb.apache.org/Download/, or from the git repository https://github.com/apache/iotdb/tree/master
You can download the source code from: git clone https://github.com/apache/iotdb.git
1Under the root path of iotdb: > mvn clean package -DskipTests
Using docker pull apache/iotdb:latest can get the latest docker image. Users can also build a docker image themselves. Now a Dockerfile has been written at docker/src/main/Dockerfile. You can build a docker image by: $ docker build -t iotdb:base git://github.com/apache/iotdb#master:docker
1Or: $ git clone https://github.com/apache/iotdb
$ cd iotdb
$ cd docker
$ docker build -t iotdb:base .
1234Once the docker image has been built locally (the tag is iotdb:base in this example), you are almost done! create docker volume for data files and logs: $ docker volume create mydata
$ docker volume create mylogs
12run a docker container: $ docker run -p 6667:6667 -v mydata:/iotdb/data -v mylogs:/iotdb/logs -d iotdb:base /iotdb/bin/start-server.sh
1If success, you can run docker ps, and get something like the following: CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
2a68b6944cb5 iotdb:base "/iotdb/bin/start-se…" 4 minutes ago Up 5 minutes 0.0.0.0:6667->6667/tcp laughing_meitner
12You can use the above command to get the container ID: $ docker container ls
1suppose the IP is <C_IP>. If you just want to have a try by using iotdb-cli, you can: $ docker exec -it /bin/bash <C_ID>
$ (now you have enter the container): /cli/sbin/start-cli.sh -h localhost -p 6667 -u root -pw root
12Or, run a new docker container as the client: $ docker run -it iotdb:base /cli/sbin/start-cli.sh -h <C_IP> -p 6667 -u root -pw root
1Or, if you have a iotdb-cli locally (e.g., you have compiled the source code by mvn package), and suppose your work_dir is cli/bin, then you can just run: $ start-cli.sh -h localhost -p 6667 -u root -pw root
No packages published
Contributors 10
Languages
Go
97.9%
Makefile
2.1%
© 2021 GitHub, Inc.
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
data_dirs = /data1/data, /data2/data, /data3/data
multi_dir_strategy=MaxDiskUsableSpaceFirstStrategy
wal_dir= $IOTDB_HOME/data/wal
1234After setting the configuration, the system will: Save all system files in $IOTDB_HOME/data Save TsFile in /data1/data, /data2/data, /data3/data. And the choosing strategy is MaxDiskUsableSpaceFirstStrategy, when data writes to the disk, the system will automatically select a directory with the largest remaining disk space to write data. Save WAL data in $IOTDB_HOME/data/wal
←
QuickStart
Get IoTDB Binary files
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
These pictures are used in this PR to update outdated execution results for version 0.8.0.
update-1
update-2
update-3
update-4
samperson1997
mentioned this issue
Jul 19, 2019
[IOTDB-127] Update some execution result pictures in documents
apache/iotdb#271
Merged
Copy link
Collaborator
little-emotion
commented
Sep 26, 2019
•
edited
通过MXBean查看cache命中统计：
IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status) values(100,true);
IoTDB> INSERT INTO root.ln.wf01.wt01(timestamp,status,temperature) values(200,false,20.71)
The data that you have just inserted will display as follows:
IoTDB> SELECT status FROM root.ln.wf01.wt01
+-----------------------+------------------------+
| Time|root.ln.wf01.wt01.status|
+-----------------------+------------------------+
|1970-01-01T08:00:00.100| true|
|1970-01-01T08:00:00.200| false|
+-----------------------+------------------------+
Total line number = 2
You can also query several timeseries data using one SQL statement:
IoTDB> SELECT * FROM root.ln.wf01.wt01
+-----------------------+--------------------------+-----------------------------+
| Time| root.ln.wf01.wt01.status|root.ln.wf01.wt01.temperature|
+-----------------------+--------------------------+-----------------------------+
|1970-01-01T08:00:00.100| true| null|
|1970-01-01T08:00:00.200| false| 20.71|
+-----------------------+--------------------------+-----------------------------+
nodeName:=identifier (DOT identifier)*
privileges:= string (COMMA string)*
Eg: IoTDB > GRANT USER tempuser PRIVILEGES 'DELETE_TIMESERIES' on root.ln;
12345Grant Role Privileges GRANT ROLE <roleName> PRIVILEGES <privileges> ON <nodeName>;
privileges:= string (COMMA string)*
roleName:=identifier
nodeName:=identifier (DOT identifier)*
Eg: IoTDB > GRANT ROLE temprole PRIVILEGES 'DELETE_TIMESERIES' ON root.ln;
12345Grant User Role GRANT <roleName> TO <userName>;
roleName:=identifier
userName:=identifier
Eg: IoTDB > GRANT temprole TO tempuser;
1234Revoke User Privileges REVOKE USER <userName> PRIVILEGES <privileges> ON <nodeName>;
privileges:= string (COMMA string)*
userName:=identifier
nodeName:=identifier (DOT identifier)*
Eg: IoTDB > REVOKE USER tempuser PRIVILEGES 'DELETE_TIMESERIES' on root.ln;
12345Revoke Role Privileges REVOKE ROLE <roleName> PRIVILEGES <privileges> ON <nodeName>;
privileges:= string (COMMA string)*
roleName:= identifier
nodeName:=identifier (DOT identifier)*
Skip to content
Sign up
Why GitHub?
Features →
Mobile →
Actions →
Codespaces →
Packages →
Security →
Code review →
Project management →
Integrations →
GitHub Sponsors →
Customer stories→
Team
Enterprise
Explore
Explore GitHub →
Learn and contribute
Topics →
Collections →
Trending →
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
1If you want to write codes to insert data and query data, please add the following dependence: <dependency>
<groupId>org.apache.iotdb</groupId>
<artifactId>iotdb-jdbc</artifactId>
<version>0.10.0</version>
</dependency>
12345Some examples about how to use IoTDB with IoTDB-JDBC can be found at: https://github.com/apache/iotdb/tree/master/example/jdbc/src/main/java/org/apache/iotdb Now enjoy it!
←
Storage Path Setting
Data Model and Terminology
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
Copy link
samperson1997
commented
Oct 16, 2019
HDFS storage Tsfile architecture
Copy link
HTHou
commented
Oct 31, 2019
Architecture
Copy link
Collaborator
fanhualta
commented
Nov 14, 2019
•
edited
Cluster Architecture
1.
Copy link
SilverNarcissus
commented
Total line number = 2
The commands to exit the Cli are:
IoTDB> quit
or
IoTDB> exit
For more information about the commands supported by IoTDB SQL, please see SQL Reference.
Stop IoTDB
The server can be stopped with "ctrl-C" or the following script:
# Unix/OS X
> sbin/stop-server.sh
# Windows
> sbin\stop-server.bat
Only build server
Under the root path of iotdb:
> mvn clean package -pl server -am -DskipTests
Only build cli
Under the root path of iotdb:
> mvn clean package -pl cli -am -DskipTests
Usage of CSV Import and Export Tool
see Usage of CSV Import and Export Tool
Frequent Questions for Compiling
see Frequent Questions when Compiling the Source Code
Contact Us
QQ Group
-----BEGIN PGP SIGNATURE-----
iQIzBAABCgAdFiEEukXNu4fosUaoH1u+Igbvj2TDWIkFAmBqcboACgkQIgbvj2TD
WIkBNg/+P3TMF8OuqNBZDZ83d5YlACrFZx5tFTBTjmc+/M7WV6IzmBnQV3yBpuTg
cOvw9XCqp/2ZWEYPQOkgj9/Bd0kLRz071QhZnZdoyPERrltjs+E2e1DvD5J47J28
NsnFZ223pzF2kqxzA1dIq8Nmv+LHyCCTxH72fHw0iGxnrmH+K3DzUN0HI4gk8tR3
GC5S7NWocvFBr+8pXMXSCkg4b4jOZmH+ZyF63olgbJGFlw7zy2MGn1rKxt6bsSSf
EYZUt+y/l6cdZbHxBaFgOLgfHnMEYKaz9LLfJEQjEf+axa1APltGSyUKG8r/Zt7u
i4ObQQ5z7UnuH4XNRGMLPkZWXiU79UEUGDIKlcj5N3+n2SZO67dgLWFIw2a6xieY
4MQ5tVEpk1KFhwzR5TPAr4o4PrqXqZwVmEBCv88rFat9duighG2uB1cGuZB7/8nC
a/2bQF+wqiJzDKG6HIC3n8A4bMR3SU3H+qi/xiXmbV8Ut9Gl9V9NE7z2LkuzAi/v
13jLvddKllSRBE+CWPnl7GWU1ykST0MnQSaV9lzzEwoLMzB7MNG7+3vjX1e1oDfI
7jXEJJ/WiOqjH7w7weUDG+VZtMLCWh64kPzH1gkxeJALKDS3Us4S64cQELcigpCS
sAhkQFWBQdA8SAyajyGEPvCRg32CUQvgO8badPyj5m/IGHR3viA=
=63Eg
-----END PGP SIGNATURE-----
# Apache IoTDB 0.11.3
## Bug Fixes
* ISSUE-2505 ignore PathNotExistException in recover and change recover error to warn
* IOTDB-1119 Fix C++ SessionDataSet bug when reading value buffer
* Fix SessionPool does not recycle session and can not offer new Session due to RunTimeException
* ISSUE-2588 Fix dead lock between deleting data and querying in parallel
* ISSUE-2546 Fix first chunkmetadata should be consumed first
* IOTDB-1126 Fix unseq tsfile is deleted due to compaction
* IOTDB-1137 MNode.getLeafCount error when existing sub-device
* ISSUE-2624 ISSUE-2625 Avoid OOM if user don't close Statement and Session manually
* ISSUE-2639 Fix possible NPE during end query process
* Alter IT for An error is reported and the system is suspended occasionally
* IOTDB-1149 print error for -e param when set maxPRC<=0
* IOTDB-1247 Fix the insert blocked caused the bugs in mem control module
* ISSUE-2648 Last query not right when having multiple devices
* Delete mods files after compaction
* ISSUE-2687 fix insert NaN bug
* ISSUE-2598 Throw explicit exception when time series is unknown in where clause
Eg: IoTDB > REVOKE ROLE temprole PRIVILEGES 'DELETE_TIMESERIES' ON root.ln;
12345Revoke Role From User REVOKE <roleName> FROM <userName>;
roleName:=identifier
userName:=identifier
Eg: IoTDB > REVOKE temprole FROM tempuser;
1234List Users LIST USER
Eg: IoTDB > LIST USER
12List Roles LIST ROLE
Eg: IoTDB > LIST ROLE
12List Privileges LIST PRIVILEGES USER <username> ON <path>;
username:=identifier
path=‘root’ (DOT identifier)*
Eg: IoTDB > LIST PRIVILEGES USER sgcc_wirte_user ON root.sgcc;
1234List Privileges of Roles(On Specific Path) LIST PRIVILEGES ROLE <roleName> ON <path>;
roleName:=identifier
path=‘root’ (DOT identifier)*
Eg: IoTDB > LIST PRIVILEGES ROLE wirte_role ON root.sgcc;
1234List Privileges of Users LIST USER PRIVILEGES <username> ;
username:=identifier
Eg: IoTDB > LIST USER PRIVILEGES tempuser;
123List Privileges of Roles LIST ROLE PRIVILEGES <roleName>
roleName:=identifier
Eg: IoTDB > LIST ROLE PRIVILEGES actor;
123List Roles of Users LIST ALL ROLE OF USER <username> ;
username:=identifier
Eg: IoTDB > LIST ALL ROLE OF USER tempuser;
123List Users of Role LIST ALL USER OF ROLE <roleName>;
roleName:=identifier
Index of /dist/iotdb
Index of /dist/iotdb
Name Last modified Size Description Parent Directory -
0.10.0-incubating/ 2020-11-05 18:48 -
0.10.1-incubating/ 2020-11-05 18:48 -
0.11.0/ 2020-11-25 14:40 -
0.11.1/ 2020-12-11 02:07 -
0.11.2/ 2021-01-22 11:25 -
0.11.3/ 2021-04-11 16:38 -
0.12.0/ 2021-04-11 16:40 -
0.8.2-incubating/ 2020-11-05 18:48 -
0.9.3-incubating/ 2020-11-05 18:48 -
KEYS 2020-12-01 09:40 413K
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
0a6eb4cc9fc68c12ab06f6a80b3613e388ba52f0c35d51c7bbde7998cba9bc4b6e049286c786e332d256f7dee9d7619a8f414703130acf3de574a984d7a96478
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
633ee2a173ec89a6b584f539288efd230b6f23e8bea4e9c04421041f6176ca5395fd5ba2ec7571e913e01f0da083d4598551e4c4af57867e71d2f7c9ba6284a6
Learning Lab →
Open source guides →
Connect with others
The ReadME Project →
Events →
Community forum →
GitHub Education →
GitHub Stars program →
Marketplace
Pricing
Plans →
Compare plans →
Contact Sales →
Education →
In this repository
All GitHub
↵
Jump to
↵
1+---------------------------------------------------------------------------+
| 0.9.3|
+---------------------------------------------------------------------------+
It costs 0.001s
1234# Schema Statement Set Storage Group SET STORAGE GROUP TO <PrefixPath>
Eg: IoTDB > SET STORAGE GROUP TO root.ln.wf01.wt01
Note: PrefixPath can not include `*`
123Delete Storage Group DELETE STORAGE GROUP <PrefixPath> [COMMA <PrefixPath>]*
Eg: IoTDB > DELETE STORAGE GROUP root.ln.wf01.wt01
Eg: IoTDB > DELETE STORAGE GROUP root.ln.wf01.wt01, root.ln.wf01.wt02
Note: PrefixPath can not include `*`
1234Create Timeseries Statement CREATE TIMESERIES <Timeseries> WITH <AttributeClauses>
AttributeClauses : DATATYPE=<DataTypeValue> COMMA ENCODING=<EncodingValue> [COMMA <ExtraAttributeClause>]*
DataTypeValue: BOOLEAN | DOUBLE | FLOAT | INT32 | INT64 | TEXT
EncodingValue: GORILLA | PLAIN | RLE | TS_2DIFF | REGULAR
ExtraAttributeClause: {
Nov 14, 2019
Copy link
SilverNarcissus
commented
Nov 14, 2019
Copy link
JackieTien97
commented
Nov 19, 2019
Copy link
JackieTien97
commented
Nov 19, 2019
Copy link
JackieTien97
commented
Nov 19, 2019
Copy link
Apache IoTDB User Group: 659990460
Wechat Group
Add friend: tietouqiao or liutaohua001, and then we'll invite you to the group.
Slack
https://join.slack.com/t/apacheiotdb/shared_invite/zt-qvso1nj8-7715TpySZtZqmyG5qXQwpg
see Join the community for more!
About
Apache IoTDB
iotdb.apache.org/
Topics
java
iot
database
big-data
timeseries
nosql
tsdb
Resources
Readme
* Fix timeseriesMetadata cache is not cleared after the TsFile is deleted by a compaction
* ISSUE-2611 An unsequence file that covers too many sequence file causes OOM query
* IOTDB-1135 Fix count timeseries bug when the paths are nested
* ISSUE-2709 IOTDB-1178 Fix cache is not cleared after compaction
* ISSUE-2746 Fix data overlapped bug after the elimination unseq compaction process
* Fix getObject method in JDBC should return an Object
* IOTDB-1188 Fix IoTDB 0.11 unable to delete data bug
* Fix when covering a tsfile resource with HistoricalVersion = null, it’ll throw a NPE
* fix the elimination unseq compaction may loss data bug after a delete operation is executed
* Fix a bug of checking time partition in DeviceTimeIndex
* Throw exeception when device to be queried is not in tsFileMetaData
* Fix unseq compaction file selector conflicts with time partition bug
* Fix high CPU usage during the compaction process
## Improvements
* IOTDB-1140 optimize regular data encoding
* Add more log for better tracing
* Add max direct memory size parameter to env.sh
* Change last cache log to debug level
## New Features
* Add explain sql support
Eg: IoTDB > LIST ALL USER OF ROLE roleuser;
123Alter Password ALTER USER <username> SET PASSWORD <password>;
roleName:=identifier
password:=identifier
Eg: IoTDB > ALTER USER tempuser SET PASSWORD 'newpwd';
Eg. SELECT COUNT(status), COUNT(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT FIRST_VALUE (status), FIRST_VALUE (temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT LAST_VALUE (status), LAST_VALUE (temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT MAX_TIME(status), MAX_TIME(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT MAX_VALUE(status), MAX_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT AVG (temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.9.x) 0-Get Started 1-Overview 2-Concept 3-Server DownloadSingle Node SetupCluster SetupConfig ManualDocker Image4-Client 5-Operation Manual 6-System Tools 7-Ecosystem Integration 8-System Design # Download IoTDB provides you three installation methods, you can refer to the following suggestions, choose one of them: Installation from source code. If you need to modify the code yourself, you can use this method. Installation from binary files. Download the binary files from the official website. This is the recommended method, in which you will get a binary released package which is out-of-the-box.(Comming Soon...) Using Docker：The path to the dockerfile is https://github.com/apache/incubator-iotdb/blob/master/docker/Dockerfile # Prerequisites To use IoTDB, you need to have: Java >= 1.8 (Please make sure the environment path has been set) Maven >= 3.1 (Optional) Set the max open files num as 65535 to avoid "too many open files" problem. Note: If you don't have maven installed, you should replace 'mvn' in the following commands with 'mvnw.sh' or 'mvnw.cmd'. # Installation from binary files You can download the binary file from:
Here # Installation from source code You can get the released source code from https://iotdb.apache.org/Download/, or from the git repository https://github.com/apache/incubator-iotdb/tree/master
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.9.x) 0-Get Started 1-Overview What is IoTDBArchitectureScenarioFeatures2-Concept 3-Server 4-Client 5-Operation Manual 6-System Tools 7-Ecosystem Integration 8-System Design # What is IoTDB IoTDB(Internet of Things Database) is an integrated data management engine designed for timeseries data, which can provide users specific services for data collection, storage and analysis. Due to its light weight structure, high performance and usable features together with its intense integration with Hadoop and Spark ecology, IoTDB meets the requirements of massive dataset storage, high-speed data input and complex data analysis in the IoT industrial field.
←
Research Papers
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.9.x) 0-Get Started QuickStartFrequently asked questionsResearch Papers1-Overview 2-Concept 3-Server 4-Client 5-Operation Manual 6-System Tools 7-Ecosystem Integration 8-System Design # Research Papers Apache IoTDB started at Tsinghua University, School of Software. IoTDB is a database for managing large amount of time series data with columnar storage, data encoding, pre-computation, and index techniques. It has SQL-like interface to write millions of data points per second per node and is optimized to get query results in few seconds over trillions of data points. It can also be easily integrated with Apache Hadoop MapReduce and Apache Spark for analytics. The research papers related are in the following: PISA: An Index for Aggregating Big Time Series Data (opens new window), Xiangdong Huang and Jianmin Wang and Raymond K. Wong and Jinrui Zhang and Chen Wang. CIKM 2016. Matching Consecutive Subpatterns over Streaming Time Series (opens new window), Rong Kang and Chen Wang and Peng Wang and Yuting Ding and Jianmin Wang. APWeb/WAIM 2018. KV-match: A Subsequence Matching Approach Supporting Normalization and Time Warping (opens new window), Jiaye Wu and Peng Wang and Chen Wang and Wei Wang and Jianmin Wang. ICDE 2019.
←
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.9.x) 0-Get Started QuickStartFrequently asked questionsResearch Papers1-Overview 2-Concept 3-Server 4-Client 5-Operation Manual 6-System Tools 7-Ecosystem Integration 8-System Design # Frequently Asked Questions # How can I identify my version of IoTDB? There are several ways to identify the version of IoTDB that you are using: Launch IoTDB's Command Line Interface: > ./start-client.sh -p 6667 -pw root -u root -h localhost
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.8.x) 0-Get Started QuickStartFrequently asked questionsResearch Papers1-Overview 2-Concept Key Concepts and Terminology 3-Operation Manual 4-Deployment and Management 5-IoTDB SQL Documentation 6-JDBC API 7-TsFile 8-System Tools # Research Papers Apache IoTDB started at Tsinghua University, School of Software. IoTDB is a database for managing large amount of time series data with columnar storage, data encoding, pre-computation, and index techniques. It has SQL-like interface to write millions of data points per second per node and is optimized to get query results in few seconds over trillions of data points. It can also be easily integrated with Apache Hadoop MapReduce and Apache Spark for analytics. The research papers related are in the following: PISA: An Index for Aggregating Big Time Series Data (opens new window), Xiangdong Huang and Jianmin Wang and Raymond K. Wong and Jinrui Zhang and Chen Wang. CIKM 2016. Matching Consecutive Subpatterns over Streaming Time Series (opens new window), Rong Kang and Chen Wang and Peng Wang and Yuting Ding and Jianmin Wang. APWeb/WAIM 2018. KV-match: A Subsequence Matching Approach Supporting Normalization and Time Warping (opens new window), Jiaye Wu and Peng Wang and Chen Wang and Wei Wang and Jianmin Wang. ICDE 2019.
←
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.8.x) 0-Get Started QuickStartFrequently asked questionsResearch Papers1-Overview 2-Concept Key Concepts and Terminology 3-Operation Manual 4-Deployment and Management 5-IoTDB SQL Documentation 6-JDBC API 7-TsFile 8-System Tools # Frequently Asked Questions # Outline Frequently Asked Questions
How can I identify my version of IoTDB? Where can I find IoTDB logs? Where can I find IoTDB data files? How do I know how many time series are stored in IoTDB? Can I use Hadoop and Spark to read TsFile in IoTDB? How does IoTDB handle duplicate points? How can I tell what type of the specific timeseries? How can I change IoTDB's CLI time display format? # How can I identify my version of IoTDB? There are several ways to identify the version of IoTDB that you are using: Launch IoTDB's Command Line Interface: > ./start-client.sh -p 6667 -pw root -u root -h localhost
_____ _________ ______ ______
|_ _| | _ _ ||_ _ `.|_ _ \
| | .--.|_/ | | \_| | | `. \ | |_) |
| | / .'`\ \ | | | | | | | __'.
_| |_| \__. | _| |_ _| |_.' /_| |__) |
|_____|'.__.' |_____| |______.'|_______/ version 0.8.2
No suggested jump to results
In this repository
All GitHub
↵
Jump to
↵
In this organization
All GitHub
↵
Jump to
↵
In this repository
All GitHub
↵
Jump to
↵
Sign in
Sign up
apache
/
iotdb
Notifications
Star
1.4k
Fork
413
COMPRESSOR = <CompressorValue>
MAX_POINT_NUMBER = Integer
}
CompressorValue: UNCOMPRESSED | SNAPPY
Eg: IoTDB > CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN
Eg: IoTDB > CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE
Eg: IoTDB > CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE, COMPRESSOR=SNAPPY, MAX_POINT_NUMBER=3
Note: Datatype and encoding type must be corresponding. Please check Chapter 3 Encoding Section for details.
12345678910111213Delete Timeseries Statement DELETE TIMESERIES <PrefixPath> [COMMA <PrefixPath>]*
Eg: IoTDB > DELETE TIMESERIES root.ln.wf01.wt01.status
Eg: IoTDB > DELETE TIMESERIES root.ln.wf01.wt01.status, root.ln.wf01.wt01.temperature
Eg: IoTDB > DELETE TIMESERIES root.ln.wf01.wt01.*
1234Show All Timeseries Statement SHOW TIMESERIES
Eg: IoTDB > SHOW TIMESERIES
Note: This statement can only be used in IoTDB Client. If you need to show all timeseries in JDBC, please use `DataBaseMetadata` interface.
123Show Specific Timeseries Statement SHOW TIMESERIES <Path>
Eg: IoTDB > SHOW TIMESERIES root
Eg: IoTDB > SHOW TIMESERIES root.ln
Eg: IoTDB > SHOW TIMESERIES root.ln.*.*.status
Eg: IoTDB > SHOW TIMESERIES root.ln.wf01.wt01.status
Note: The path can be prefix path, star path or timeseries path
Note: This statement can be used in IoTDB Client and JDBC.
1234567Show Storage Group Statement SHOW STORAGE GROUP
Eg: IoTDB > SHOW STORAGE GROUP
JackieTien97
commented
Nov 19, 2019
Copy link
JackieTien97
commented
Nov 19, 2019
Copy link
samperson1997
commented
Nov 28, 2019
pictures for counting nodes and counting timeseries
Copy link
samperson1997
commented
Feb 3, 2020
System Design
chap 0
chap 1
chap2
chap3
License
Apache-2.0 License
Releases
18
Apache IoTDB 0.12.0
Latest
Apr 13, 2021
+ 17 releases
Packages 0
No packages published
Contributors 121
+ 110 contributors
Languages
Java
94.7%
Scala
1.1%
Vue
0.7%
C++
0.7%
Python
0.7%
# Apache IoTDB 0.11.2
## Bug Fixes
* IOTDB-1049 Fix Nullpointer exception and a delete bug in Last query
* IOTDB-1060 Support full deletion for delete statement without where clause
* IOTDB-1068 Fix Time series metadata cache bug
* IOTDB-1069 restrict the flushing memtable number to avoid OOM when mem_control is disabled
* IOTDB-1077 add insertOneDeviceRecords API in java session
* IOTDB-1087 fix compaction block flush: flush do not return until compaction finished
* IOTDB-1106 Delete timeseries statement will incorrectly delete other timeseries
* Github issue-2137 fix grafana value-time position bug
* Github issue-2169 GetObject returns String for all data types
* Github issue-2240 fix Sync failed: Socket is closed by peer
* Github issue-2387 The deleteData method exists in Session but not in SessionPool.
* add thrift_max_frame_size in iotdb-engine.properties
* Fix incorrect last result after deleting all data
* Fix compaction recover block restart: IoTDB cannot restart until last compaction recover task finished
* Fix compaction ignore modification file: delete does not work after compaction
* print more insert error message in client
* expose enablePartition parameter into iotdb-engines.properpties
# Apache IoTDB 0.11.1
## Bug Fixes
* IOTDB-990 cli parameter maxPRC shouldn't to be set zero
Eg. SELECT MIN_TIME(status), MIN_TIME(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT MIN_VALUE(status),MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. INSERT INTO root.ln.wf01.wt01(timestamp,status) VALUES(NOW(), false)
Eg. DELETE FROM root.ln.wf01.wt01.status, root.ln.wf01.wt01.temperature WHERE time < NOW()
Eg. SELECT * FROM root WHERE time < NOW()
Eg. SELECT COUNT(temperature) FROM root.ln.wf01.wt01 WHERE time < NOW()
Eg. SELECT SUM(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
123# TTL IoTDB supports storage-level TTL settings, which means it is able to delete old data
automatically and periodically. The benefit of using TTL is that hopefully you can control the
total disk space usage and prevent the machine from running out of disks. Moreover, the query
performance may downgrade as the total number of files goes up and the memory usage also increase
as there are more files. Timely removing such files helps to keep at a high query performance
level and reduce memory usage. The TTL operations in IoTDB are supported by the following three
statements: Set TTL SET TTL TO StorageGroupName TTLTime
Eg. SET TTL TO root.group1 3600000
-----BEGIN PGP SIGNATURE-----
iQIzBAABCgAdFiEEukXNu4fosUaoH1u+Igbvj2TDWIkFAmBr3dkACgkQIgbvj2TD
WInaEg/9GG7FjvOP8Q9DHb0MKtc7kONJ5jCswnEiA2qfQXNxTryor+bJcoejS2dX
JL09zH3TMCmF1krMKm90APWY9FYSAvfdNW514/8s6pKENIoQBWDdcJ+htpQoYlay
KCBU9h3ZoB3mVYwI96TIZm6br85HoQ+/gh/EXMUxqlcT/tbCjZ/41IqRC5mdf0QA
1nqGoYPq9YcZh5BYb+/5OQYeU29yFTZ7hukDo+XBcj8L7wqFISkni3aZM6y562de
4tQ2HkN5mMaEoQ0+vLWcrkS5k+VSERRczJAw3ZadY3XTCcKA5TW/8qms0+0ZAuSn
sPa/cpsqDVgcITspefvjdRCVuGptr9ZTnee1LOwGfr1/982eER4EUO29aAC7TVU8
2seYulS4Htnd/KrjsosGTeSZwFFsj5U4gs8yR/l7So8qs7o+zL10dh5X4PQpq6fI
1LIY/aEkR9cmmXRr3TGpJDNieYiERGEOGtv6kEu8onRmJTnIixhWFf0vhSdGOMu4
wZQqYaMCul/4Cy4fUO49ke92tcgpfHT0g/OMWbNfUA864ubvOz2XmFtnrhKr50ZR
FSyCWPOSvV4un97iC7/y42+IPkroO0OZXYh+N5RGjJqAuw4ImNhsIDlvk1jRznvD
i+TvtA28TvxI/3w+WR4ZpIyklrq5iY1RRSoKPN4/S01D9kSTEZs=
=n0ZW
-----END PGP SIGNATURE-----
d0f77c1165e8ce4ee94cd318f4ef8a4a1e0a70be164598b9cd12335b9a9f94d296015f2febf2930b595210751279081b24444f30263dac8a3ff76ed0b0b55b0c
# Apache IoTDB 0.12.0
## New Features
* [IOTDB-68] New shared-nothing cluster
* [IOTDB-507] Add zeppelin-interpreter module
* [IOTDB-825] Aggregation by natural month
* [IOTDB-890] support SDT lossy compression
* [IOTDB-944] Support UDTF (User-defined Timeseries Generating Function)
* [IOTDB-965] Add timeout parameter for query
* [IOTDB-1077] Add insertOneDeviceRecords API in java session
* [IOTDB-1055] Support data compression type GZIP
* [IOTDB-1024] Support multiple aggregated measurements for group by level statement
* [IOTDB-1276] Add explain sql support and remove debug_state parameter
* [IOTDB-1197] Add iotdb-client-go as a git submodule of IoTDB repo
* [IOTDB-1230] Support spans multi time partitions when loading one TsFile
* [IOTDB-1273] Feature/restrucutre python module as well as supporting pandas dataframe
* [IOTDB-1277] support IoTDB as Flink's data source
* [PR-2605] Add level merge to "merge" command
Apache Download Mirrors
You can download the source code from: git clone https://github.com/apache/incubator-iotdb.git
1Under the root path of incubator-iotdb: > mvn clean package -DskipTests
←
Compression
Single Node Setup
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Architecture
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Frequently asked questions
What is IoTDB
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
_____ _________ ______ ______
|_ _| | _ _ ||_ _ `.|_ _ \
| | .--.|_/ | | \_| | | `. \ | |_) |
| | / .'`\ \ | | | | | | | __'.
_| |_| \__. | _| |_ _| |_.' /_| |__) |
|_____|'.__.' |_____| |______.'|_______/ version x.x.x
1234567Check pom.xml file: <version>0.9.3</version>
1Use JDBC API: String iotdbVersion = tsfileDatabaseMetadata.getDatabaseProductVersion();
1# Where can I find IoTDB logs? Suppose your root directory is: $ pwd
/workspace/incubator-iotdb
$ ls -l
server/
client/
pom.xml
Readme.md
...
1In the result, there will be a statement shows Total timeseries number, this number is the timeseries number in IoTDB. If you are using Linux, you can use the following shell command: > grep "0,root" $IOTDB_HOME/data/system/schema/mlog.txt | wc -l
> 6
12# Can I use Hadoop and Spark to read TsFile in IoTDB? Yes. IoTDB has intense integration with Open Source Ecosystem. IoTDB supports Hadoop (opens new window), Spark (opens new window) and Grafana (opens new window) visualization tool. # How does IoTDB handle duplicate points? A data point is uniquely identified by a full time series path (e.g. root.vehicle.d0.s0) and timestamp. If you submit a new point with the same path and timestamp as an existing point, IoTDB will update the value of this point instead of inserting a new point. # How can I tell what type of the specific timeseries? Use SHOW TIMESERIES <timeseries path> SQL in IoTDB's Command Line Interface: For example, if you want to know the type of all timeseries, the <timeseries path> should be root. The statement will be: IoTDB> show timeseries root
1If you want to query specific sensor, you can replace the <timeseries path> with the sensor name. For example: IoTDB> show timeseries root.fit.d1.s1
1Otherwise, you can also use wildcard in timeseries path: IoTDB> show timeseries root.fit.d1.*
1# How can I change IoTDB's Client time display format? The default IoTDB's Client time display format is human readable (e.g. 1970-01-01T08:00:00.001), if you want to display time in timestamp type or other readable format, add parameter -disableIS08601 in start command: > $IOTDB_CLI_HOME/sbin/start-client.sh -h 127.0.0.1 -p 6667 -u root -pw root -disableIS08601
1
←
QuickStart
Research Papers
Frequently asked questions
What is IoTDB
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
-----BEGIN PGP SIGNATURE-----
iQIzBAABCgAdFiEEukXNu4fosUaoH1u+Igbvj2TDWIkFAmBr00EACgkQIgbvj2TD
WIk5FBAAjGpwLjpy/AGVJbdyctky3JbSJTq9mTHfSzhPMABqPVL5T8rLHYJFWxaO
ZIBfbVmRU3UQbmdbCM0sCOFcGII74fPzdmdVypm2gp5zQo0YFkWyOKXtBEymiEN/
yzf4UFwRceqg8wWXj4H3vy7ryEVSdh2hOz0RpmwVlc4O96TCW6dEov8ow/aywnSZ
fAgzpqxIGC3RpzftTTNoOSi9EQ46dEtDBQP1MpZHQtOYyQtQ008+HgoM7WHGPJbD
HqPdFdzk+Aj/9u2hBj27AhLid+TRcr1ylPBF0visoz3hdOH44AgNntrobkaK9jD0
UnmtXJO45kL/Ybn9pL7rJBJrKkWZQdkrS6n5F/aPGNGbtoabLlLPFPw1HRXqH31A
eQqJyR20o8gwo0MPOxlImUQ+uffhaRZWSkEV87600D34UJBK23W98UKwfIoiB2U/
b9ipXP+DaifkHulNGdSl262WxGJk/a97rrIn40SONlf7wPmcRPAXbZg36smCb1kl
Cq+wv6tGJ5mTyQX5cV26/URZVjeMPVQoWFvETQ3/FbXRlV2Pais97hU44zOK1/0p
VFqHnIisM2SeJxWYxp1AY0cckJjAn6KZ1Gf3XeqZiiDUt96ee5R0y3VAC+3+MmsO
e17FApwG02MdZ6/srwRvfKKX+PkCcE4KL/lfGPL9RxKsRWQwHng=
=EmOy
-----END PGP SIGNATURE-----
1234567Check pom.xml file: <version>0.8.2</version>
1Use JDBC API: String iotdbVersion = tsfileDatabaseMetadata.getDatabaseProductVersion();
1# Where can I find IoTDB logs? Suppose your root directory is: $ pwd
/workspace/incubator-iotdb
$ ls -l
server/
client/
pom.xml
Readme.md
...
1In the result, there will be a statement shows Total timeseries number, this number is the timeseries number in IoTDB. If you are using Linux, you can use the following shell command: > grep "0,root" $IOTDB_HOME/data/system/schema/mlog.txt | wc -l
> 6
12# Can I use Hadoop and Spark to read TsFile in IoTDB? Yes. IoTDB has intense integration with Open Source Ecosystem. IoTDB supports Hadoop (opens new window), Spark (opens new window) and Grafana (opens new window) visualization tool. # How does IoTDB handle duplicate points? A data point is uniquely identified by a full time series path (e.g. root.vehicle.d0.s0) and timestamp. If you submit a new point with the same path and timestamp as an existing point, # How can I tell what type of the specific timeseries? Use SHOW TIMESERIES <timeseries path> SQL in IoTDB's Command Line Interface: For example, if you want to know the type of all timeseries, the <timeseries path> should be root. The statement will be: IoTDB> show timeseries root
1If you want to query specific sensor, you can replace the <timeseries path> with the sensor name. For example: IoTDB> show timeseries root.fit.d1.s1
1Otherwise, you can also use wildcard in timeseries path: IoTDB> show timeseries root.fit.d1.*
1# How can I change IoTDB's CLI time display format? The default IoTDB's CLI time display format is human readable (e.g. 1970-01-01T08:00:00.001), if you want to display time in timestamp type or other readable format, add parameter -disableIS08601 in start command: > $IOTDB_CLI_HOME/sbin/start-client.sh -h 127.0.0.1 -p 6667 -u root -pw root -disableIS08601
1
←
QuickStart
Research Papers
→
Copyright © 2021 The Apache Software Foundation.
Code
Issues
99
Pull requests
55
Actions
Security
Insights
More
Code
Issues
Pull requests
Actions
Security
Insights
Pinned issues
加入社区（Join the community）
#1995
opened Nov 10, 2020 by
qiaojialin
Open
Note: This statement can be used in IoTDB Client and JDBC.
123Count Timeseries Statement COUNT TIMESERIES <Path>
Eg: IoTDB > COUNT TIMESERIES root
Eg: IoTDB > COUNT TIMESERIES root.ln
Eg: IoTDB > COUNT TIMESERIES root.ln.*.*.status
Eg: IoTDB > COUNT TIMESERIES root.ln.wf01.wt01.status
Note: The path can be prefix path, star path or timeseries path.
Note: This statement can be used in IoTDB Client and JDBC.
1234567COUNT TIMESERIES <Path> GROUP BY LEVEL=<INTEGER>
Eg: IoTDB > COUNT TIMESERIES root GROUP BY LEVEL=1
Eg: IoTDB > COUNT TIMESERIES root.ln GROUP BY LEVEL=2
Eg: IoTDB > COUNT TIMESERIES root.ln.wf01 GROUP BY LEVEL=3
Note: The path can be prefix path or timeseries path.
Note: This statement can be used in IoTDB Client and JDBC.
123456Count Nodes Statement COUNT NODES <Path> LEVEL=<INTEGER>
Eg: IoTDB > COUNT NODES root LEVEL=2
Eg: IoTDB > COUNT NODES root.ln LEVEL=2
Eg: IoTDB > COUNT NODES root.ln.wf01 LEVEL=3
Note: The path can be prefix path or timeseries path.
Note: This statement can be used in IoTDB Client and JDBC.
123456Show All Devices Statement SHOW Devices
Eg: IoTDB > SHOW Devices
Note: This statement can be used in IoTDB Client and JDBC.
chap4
Copy link
Ring-k
commented
Feb 19, 2020
An example of merging filters with same path.
Copy link
Ring-k
commented
Feb 19, 2020
An example of optimizing logical filters in IoTDB.
Copy link
zhanglingzhe0820
commented
Feb 26, 2020
merge
8 hidden items
Load more…
Copy link
JackieTien97
commented
Apr 19, 2020
Copy link
Shell
0.5%
Other
1.6%
© 2021 GitHub, Inc.
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
* IOTDB-993 Fix tlog bug
* IOTDB-994 Fix can not get last_value while doing the aggregation query along with first_value
* IOTDB-1000 Fix read redundant data while select with value filter with unseq data
* IOTDB-1007 Fix session pool concurrency and leakage issue when pool.close is called
* IOTDB-1016 overlapped data should be consumed first
* IOTDB-1021 Fix NullPointerException when showing child paths of non-existent path
* IOTDB-1028 add MAX\_POINT\_NUMBER format check
* IOTDB-1034 Fix Show timeseries error in Chinese on Windows
* IOTDB-1035 Fix bug in getDeviceTimeseriesMetadata when querying non-exist device
* IOTDB-1038 Fix flink set storage group bug
* ISSUE-2179 fix insert partial tablet with binary NullPointer bug
* add reject status code
* Update compaction level list delete
* Fix query result is not correct
* Fix import errors in Session.py and SessionExample.py
* Fix modules can not be found when using pypi to pack client-py
* Fix Count timeseries group by level bug
* Fix desc batchdata count bug
# Apache IoTDB 0.11.0
## New Features
* IOTDB-627 Support range deletion for timeseries
* IOTDB-670 Add raw data query interface in Session
* IOTDB-716 add lz4 compression
* IOTDB-736 Add query performance tracing
* IOTDB-776 New memory control strategy
This example means that for data in root.group1, only that of the latest 1 hour will remain, the
older one is removed or made invisible.
Note: TTLTime should be millisecond timestamp. When TTL is set, insertions that fall
out of TTL will be rejected.
123456Unset TTL UNSET TTL TO StorageGroupName
Eg. UNSET TTL TO root.group1
This example means that data of all time will be accepted in this group.
123Show TTL SHOW ALL TTL
SHOW TTL ON StorageGroupNames
Eg.1 SHOW ALL TTL
This example will show TTLs of all storage groups.
Eg.2 SHOW TTL ON root.group1,root.group2,root.group3
This example will show TTLs of the specified 3 groups.
Notice: storage groups without TTL will show a "null"
1234567Notice: When you set TTL to some storage groups, data out of the TTL will be made invisible
immediately, but because the data files may contain both out-dated and living data or the data files may
be being used by queries, the physical removal of data is stale. If you increase or unset TTL
just after setting it previously, some previously invisible data may be seen again, but the
physically removed one is lost forever. In other words, different from delete statement, the
atomicity of data deletion is not guaranteed for efficiency concerns. So we recommend that you do
not change the TTL once it is set or at least do not reset it frequently, unless you are determined
to suffer the unpredictability. Delete Partition (experimental) DELETE PARTITION StorageGroupName INT(COMMA INT)*
## Incompatible changes
* [IOTDB-1081] New TsFile Format
* [ISSUE-2730] Add the number of unseq merge times in TsFile name.
## Miscellaneous changes
* [IOTDB-868] Change mlog from txt to bin
* [IOTDB-1069] Restrict the flushing memtable number to avoid OOM when mem_control is disabled
* [IOTDB-1104] Refactor the error handling process of query exceptions
* [IOTDB-1108] Add error log to print file name while error happened
* [IOTDB-1152] Optimize regular data size in traversing
* [IOTDB-1180] Reset the system log file names and maximal disk-space size
* [ISSUE-2515] Set fetchsize through JDBC and Session
* [ISSUE-2598] Throw explicit exception when time series is unknown in where clause
* [PR-2944] Throw exception when device to be queried is not in TsFileMetaData
* [PR-2967] Log memory usage information in SystemInfo for better diagnosis
## Bug Fixes
* [IOTDB-1049] Fix NullpointerException and a delete bug in Last query
* [IOTDB-1050] Fix Count timeserise column name is wrong
* [IOTDB-1068] Fix Time series metadata cache bug
* [IOTDB-1084] Fix temporary memory of flushing may cause OOM
* [IOTDB-1106] Fix delete timeseries bug
* [IOTDB-1126] Fix the unseq tsfile delete due to merge
* [IOTDB-1135] Fix the count timeseries prefix path bug
* [IOTDB-1137] Fix MNode.getLeafCount error when existing sub-device
* [ISSUE-2484] Fix creating timeseries error by using "create" or "insert" statement
Skip to Main Content
Toggle navigation
News
About
Overview
Process
Governance
The Apache Way
Membership
Community
Diversity & Inclusion
Code of Conduct
Glossary
About Our Name
FAQ
Support Apache
Media/Analysts
Contact
Make a Donation
Donate Now
Via Credit Card
Via ACH
Via PayPal
Buy Swag
Shop smile.amazon.com
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
1
(欢迎使用/测试IoTDB的公司在此登记) Welcome to leave your company's info if...
#748
opened Jan 15, 2020 by
jixuan1989
Open
23
写入性能的相关参数调整方法 (The adjustment of the parameters which are rel...
#3078
opened Apr 27, 2021 by
HTHou
Open
2
Labels
54
Milestones
0
Labels
54
Milestones
0
New issue
Have a question about this project? Sign up for a free GitHub account to open an issue and contact its maintainers and the community.
Pick a username
Email Address
Password
123Show Specific Devices Statement SHOW DEVICES <PrefixPath>
Eg: IoTDB > SHOW DEVICES root
Eg: IoTDB > SHOW DEVICES root.ln
Eg: IoTDB > SHOW DEVICES root.*.wf01
Note: The path can be prefix path or star path.
Note: This statement can be used in IoTDB Client and JDBC.
123456Show Child Paths of Root Statement SHOW CHILD PATHS
Eg: IoTDB > SHOW CHILD PATHS
Note: This statement can be used in IoTDB Client and JDBC.
123Show Child Paths Statement SHOW CHILD PATHS <Path>
Eg: IoTDB > SHOW CHILD PATHS root
Eg: IoTDB > SHOW CHILD PATHS root.ln
Eg: IoTDB > SHOW CHILD PATHS root.ln.wf01
Note: The path can only be prefix path.
Note: This statement can be used in IoTDB Client and JDBC.
123456# Data Management Statement Insert Record Statement INSERT INTO <PrefixPath> LPAREN TIMESTAMP COMMA <Sensor> [COMMA <Sensor>]* RPAREN VALUES LPAREN <TimeValue>, <PointValue> [COMMA <PointValue>]* RPAREN
Sensor : Identifier
Eg: IoTDB > INSERT INTO root.ln.wf01.wt01(timestamp,status) values(1509465600000,true)
Eg: IoTDB > INSERT INTO root.ln.wf01.wt01(timestamp,status) VALUES(NOW(), false)
Eg: IoTDB > INSERT INTO root.ln.wf01.wt01(timestamp,temperature) VALUES(2017-11-01T00:17:00.000+08:00,24.22028)
Eg: IoTDB > INSERT INTO root.ln.wf01.wt01(timestamp, status, temperature) VALUES (1509466680000, false, 20.060787);
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Note: The order of Sensor and PointValue need one-to-one correspondence
12345678Update Record Statement UPDATE <UpdateClause> SET <SetClause> WHERE <WhereClause>
UpdateClause: <prefixPath>
SetClause: <SetExpression>
SetExpression: <Path> EQUAL <PointValue>
WhereClause : <Condition> [(AND | OR) <Condition>]*
Member
Author
jixuan1989
commented
Apr 28, 2020
Copy link
Member
Author
jixuan1989
commented
Apr 28, 2020
•
edited
IoTDB v0.8
Copy link
samperson1997
commented
May 9, 2020
•
edited
JMX
Copy link
samperson1997
commented
May 9, 2020
•
edited
* IOTDB-813 Show storage group under given path prefix
* IOTDB-848 Support order by time asc/desc
* IOTDB-863 add a switch to drop ouf-of-order data
* IOTDB-873 Add count devices DDL
* IOTDB-876 Add count storage group DDL
* IOTDB-926 Support reconnection of Session
* IOTDB-941 Support 'delete storage group '
* IOTDB-968 Support time predicate in select last, e.g., select last * from root where time >= T
* Support alias if it is used in query (e.g., select s1 as temp from root.a.b)
* Add level compaction strategy
* Enable partial insert (some failed inserted columns do not impact others)
## Incompatible changes
* IOTDB-778 Support double/single quotation in Path
* IOTDB-870 change tags and attributes output to two columns with json values
## Miscellaneous changes
* IOTDB-784 Update rpc protocol to V3
Eg DELETE PARTITION root.sg1 0,1,2
This example will delete the first 3 time partitions of storage group root.sg1.
TRACING OFF // Close performance tracing
12# Kill query Show the list of queries in progress SHOW QUERY PROCESSLIST
1Kill query KILL QUERY INT?
E.g. KILL QUERY
E.g. KILL QUERY 2
123# Identifiers QUOTE := '\'';
DOT := '.';
COLON : ':' ;
COMMA := ',' ;
SEMICOLON := ';' ;
LPAREN := '(' ;
RPAREN := ')' ;
LBRACKET := '[';
RBRACKET := ']';
EQUAL := '=' | '==';
NOTEQUAL := '<>' | '!=';
-----BEGIN PGP SIGNATURE-----
iQIzBAABCgAdFiEEukXNu4fosUaoH1u+Igbvj2TDWIkFAmBr3dYACgkQIgbvj2TD
WIngkA//WigIOJW0N/o4HBc3Yq9wa/Y/M2qETOc2pEHiGhfgS8XkUQmvQsBgwGaY
tkGTwKrts2pGowsVqGrkDM/o2GlUk3AdLzKeiOkoIbLAyikMCXhHUxfXUtBnEeOC
GM5KJ0YGmTx6YHKLH3ZGPbUJVoGpIA/dge3AfWIgn4oqyzHGeSLwM1uhmJC0ozUD
IuqEBl3g5WAsRG8kHJUgFQVJX4f5LVsXJUZwEQEfOGbZuZ3zkTaRKN8t01lfE6M6
IgSL1xO0278H1CQv2rBwUTEV5+/H56axt310ChBYuD1jGz1VfCSkrzQJ01GVKvmQ
OLRAM0+Yda6S6DMt1IH3rIl26R1JKE+bn6aHICy4WliZNcJJsBgI1gIOLwfOgXLD
dXtr+N/hV/CogUXJ5d2Asb5c8HHA/p4UZTXYjv+KTFJhgdPBAR/K8ocKzbKGcyAQ
z8rmOTE8SP6dq7Il7mmEr7YzTwY2p7PWl4bkfSbqPhZLSebX4jcBb+h4JMAQ1uC8
vbAH6JqL0OiKmV1IRhGa9F/S3KUj7CVKRRyB0SVKm4YvlJkFQIMAa3KAZIF67edr
Twe99zXPIxVTJ9+uipyUtJThOQcnJZgpyXgwYwTNtWo2PI+dphs7m2FDyL4ALF1p
f7BmMDOlZGVSJ5YJINx3E6GtFtGk511pFjM4FDiErCap/ycpZBs=
=oG54
-----END PGP SIGNATURE-----
73e22d4c8e5b62cfb9c247fa83ef1b5849324936084561636c871a1aef68f1ec0f0e7124d1b66ef2741905d3a749229635fc277c8bc22f357ef047c4e75bb13e
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
* [ISSUE-2545, 2549] Fix unseq merge end time bug
* [ISSUE-2611] An unsequence file that covers too many sequence file causes OOM query
* [ISSUE-2688] LRULinkedHashMap does not work as an LRU Cache
* [ISSUE-2709, 1178] Fix cache not cleared after unseq compaction bug, Fix windows 70,10 ci bug in unseq compaction ci
* [ISSUE-2741] getObject method in JDBC should return an Object
* [ISSUE-2746] Fix data overlapped bug after unseq compaction
* [ISSUE-2758] NullPointerException in QueryTimeManager.checkQueryAlive()
* [ISSUE-2905] Fix Files.deleteIfExists() doesn't work for HDFS file
* [ISSUE-2919] Fix C++ client memory leak bug
* [PR-2613] Fix importCSVTool import directory bug & encode bug
* [PR-2409] Fix import csv which can't import time format str
* [PR-2582] Fix sync bug for tsfiles's directory changed by vitural storage group
* [ISSUE-2911] Fix The write stream is not closed when executing the command 'tracing off'
# Apache IoTDB 0.11.3
## Bug Fixes
* ISSUE-2505 ignore PathNotExistException in recover and change recover error to warn
* IOTDB-1119 Fix C++ SessionDataSet bug when reading value buffer
* Fix SessionPool does not recycle session and can not offer new Session due to RunTimeException
* ISSUE-2588 Fix dead lock between deleting data and querying in parallel
* ISSUE-2546 Fix first chunkmetadata should be consumed first
ASF Sponsorship
Targeted Sponsorship
Corporate Giving
The Apache Way
The Apache Way
Sustainable Open Source
How it Works
Merit
Success at Apache
Join Us
Getting Started
Help Wanted
ApacheCon
Community Events
Travel Assistance
Summer of Code
Code of Conduct
Etiquette
Sign up for GitHub
By clicking “Sign up for GitHub”, you agree to our terms of service and
privacy statement. We’ll occasionally send you account related emails.
Already on GitHub?
Sign in
to your account
99 Open
206 Closed
99 Open
206 Closed
Author
Filter by author
author:
Filter by this user
Label
Filter by label
Use alt + click/return to exclude labels.
Projects
Filter by project
Milestones
Condition : <Expression> [(AND | OR) <Expression>]*
Expression : [NOT | !]? TIME PrecedenceEqualOperator <TimeValue>
Eg: IoTDB > UPDATE root.ln.wf01.wt01 SET temperature = 23 WHERE time < NOW() and time > 2017-11-1T00:15:00+08:00
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
123456789Delete Record Statement DELETE FROM <PrefixPath> [COMMA <PrefixPath>]* WHERE TIME LESSTHAN <TimeValue>
Eg: DELETE FROM root.ln.wf01.wt01.temperature WHERE time < 2017-11-1T00:05:00+08:00
Eg: DELETE FROM root.ln.wf01.wt01.status, root.ln.wf01.wt01.temperature WHERE time < NOW()
Eg: DELETE FROM root.ln.wf01.wt01.* WHERE time < 1509466140000
1234Select Record Statement SELECT <SelectClause> FROM <FromClause> [WHERE <WhereClause>]?
SelectClause : <SelectPath> (COMMA <SelectPath>)*
SelectPath : <FUNCTION> LPAREN <Path> RPAREN | <Path>
FUNCTION : ‘COUNT’ , ‘MIN_TIME’, ‘MAX_TIME’, ‘MIN_VALUE’, ‘MAX_VALUE’
FromClause : <PrefixPath> (COMMA <PrefixPath>)?
WhereClause : <Condition> [(AND | OR) <Condition>]*
Condition : <Expression> [(AND | OR) <Expression>]*
Expression : [NOT | !]? <TimeExpr> | [NOT | !]? <SensorExpr>
TimeExpr : TIME PrecedenceEqualOperator (<TimeValue> | <RelativeTime>)
RelativeTimeDurationUnit = Integer ('Y'|'MO'|'W'|'D'|'H'|'M'|'S'|'MS'|'US'|'NS')
TsFile MetadataIndex
Copy link
samperson1997
commented
May 10, 2020
•
edited
Copy link
samperson1997
commented
May 12, 2020
•
edited
Copy link
HTHou
commented
May 13, 2020
Copy link
* IOTDB-790 change base_dir to system_dir
* IOTDB-829 Accelerate delete multiple timeseries
* IOTDB-839 Make Tablet api more friendly
* IOTDB-902 Optimize max_time aggregation
* IOTDB-916 Add a config entry to make Last cache configurable
* IOTDB-928 Make ENCODING optional in create time series sentence
* IOTDB-938 Re-implement Gorilla encoding algorithm
* IOTDB-942 Optimization of query with long time unsequence page
* IOTDB-943 Fix cpu usage too high
* Add query load log
* Add merge rate limiting
## Bug Fixes
* IOTDB-749 Avoid select * from root OOM
* IOTDB-774 Fix "show timeseries" OOM problem
* IOTDB-832 Fix sessionPool logic when reconnection failed
* IOTDB-833 Fix JMX cannot connect IoTDB in docker
* IOTDB-835 Delete timeseries and change data type then write failed
* IOTDB-836 Statistics classes mismatched when endFile （delete timeseries then recreate）
* IOTDB-837 ArrayIndexOutOfBoundsException if the measurementId size is not consistent with the value size
* IOTDB-847 Fix bug that 'List user privileges' cannot apply to 'root'
* IOTDB-850 a user could list others privilege bug
* IOTDB-851 Enhance failure tolerance when recover WAL (enable partial insertion)
* IOTDB-855 Can not release Session in SessionPool if RuntimeException occurs
LESSTHANOREQUALTO := '<=';
LESSTHAN := '<';
GREATERTHANOREQUALTO := '>=';
GREATERTHAN := '>';
DIVIDE := '/';
PLUS := '+';
MINUS := '-';
STAR := '*';
Letter := 'a'..'z' | 'A'..'Z';
HexDigit := 'a'..'f' | 'A'..'F';
Digit := '0'..'9';
Boolean := TRUE | FALSE | 0 | 1 (case insensitive)
123456789101112131415161718192021222324StringLiteral := ( '\'' ( ~('\'') )* '\'' | '\"' ( ~('\"') )* '\"');
eg. 'abc'
eg. 'abc'
123Integer := ('-' | '+')? Digit+;
eg. 123
eg. -222
123Float := ('-' | '+')? Digit+ DOT Digit+ (('e' | 'E') ('-' | '+')? Digit+)?;
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
* IOTDB-1126 Fix unseq tsfile is deleted due to compaction
* IOTDB-1137 MNode.getLeafCount error when existing sub-device
* ISSUE-2624 ISSUE-2625 Avoid OOM if user don't close Statement and Session manually
* ISSUE-2639 Fix possible NPE during end query process
* Alter IT for An error is reported and the system is suspended occasionally
* IOTDB-1149 print error for -e param when set maxPRC<=0
* IOTDB-1247 Fix the insert blocked caused the bugs in mem control module
* ISSUE-2648 Last query not right when having multiple devices
* Delete mods files after compaction
* ISSUE-2687 fix insert NaN bug
* ISSUE-2598 Throw explicit exception when time series is unknown in where clause
* Fix timeseriesMetadata cache is not cleared after the TsFile is deleted by a compaction
* ISSUE-2611 An unsequence file that covers too many sequence file causes OOM query
* IOTDB-1135 Fix count timeseries bug when the paths are nested
* ISSUE-2709 IOTDB-1178 Fix cache is not cleared after compaction
* ISSUE-2746 Fix data overlapped bug after the elimination unseq compaction process
* Fix getObject method in JDBC should return an Object
* IOTDB-1188 Fix IoTDB 0.11 unable to delete data bug
* Fix when covering a tsfile resource with HistoricalVersion = null, it’ll throw a NPE
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Projects
Project List
How they work
Independence
Date Founded
Names
Categories
Languages
Statistics
Apache Incubator
Help Wanted
Brand Management
People
Roles
Members
Committers
Board of Directors
Officers & Project VPs
Location Map
Code of Conduct
Committer Directory
Community
Community Development
Filter by milestone
Assignee
Filter by who’s assigned
Sort
Sort by
Newest
Oldest
Most commented
Least commented
Recently updated
Least recently updated
Most reactions
👍
👎
😄
🎉
😕
❤️
🚀
👀
In some network environment, 6667 port is recognized as IRC port. 6667端口特定网络环境下cli无法连接
#3386
RelativeTime : (now() | <TimeValue>) [(+|-) RelativeTimeDurationUnit]+
SensorExpr : (<Timeseries> | <Path>) PrecedenceEqualOperator <PointValue>
Eg: IoTDB > SELECT status, temperature FROM root.ln.wf01.wt01 WHERE temperature < 24 and time > 2017-11-1 0:13:00
Eg. IoTDB > SELECT * FROM root
Eg. IoTDB > SELECT * FROM root where time > now() - 5m
Eg. IoTDB > SELECT COUNT(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 25
Eg. IoTDB > SELECT MIN_TIME(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 25
Eg. IoTDB > SELECT MAX_TIME(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature > 24
Eg. IoTDB > SELECT MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature > 23
Eg. IoTDB > SELECT MAX_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 25
Note: the statement needs to satisfy this constraint: <Path>(SelectClause) + <PrefixPath>(FromClause) = <Timeseries>
Note: If the <SensorExpr>(WhereClause) is started with <Path> and not with ROOT, the statement needs to satisfy this constraint: <PrefixPath>(FromClause) + <Path>(SensorExpr) = <Timeseries>
Note: In Version 0.7.0, if <WhereClause> includes `OR`, time filter can not be used.
Note: There must be a space on both sides of the plus and minus operator appearing in the time expression
123456789101112131415161718192021222324Group By Statement SELECT <SelectClause> FROM <FromClause> WHERE <WhereClause> GROUP BY <GroupByClause>
SelectClause : <Function> [COMMA < Function >]*
Function : <AggregationFunction> LPAREN <Path> RPAREN
FromClause : <PrefixPath>
WhereClause : <Condition> [(AND | OR) <Condition>]*
Condition : <Expression> [(AND | OR) <Expression>]*
Expression : [NOT | !]? <TimeExpr> | [NOT | !]? <SensorExpr>
TimeExpr : TIME PrecedenceEqualOperator (<TimeValue> | <RelativeTime>)
RelativeTimeDurationUnit = Integer ('Y'|'MO'|'W'|'D'|'H'|'M'|'S'|'MS'|'US'|'NS')
RelativeTime : (now() | <TimeValue>) [(+|-) RelativeTimeDurationUnit]+
SensorExpr : (<Timeseries> | <Path>) PrecedenceEqualOperator <PointValue>
wshao08
commented
Jul 13, 2020
Copy link
wshao08
commented
Jul 13, 2020
•
edited
Copy link
wshao08
commented
Jul 23, 2020
Copy link
yanhongwangg
commented
Sep 9, 2020
show storage group XXX
Copy link
Alima777
commented
Sep 11, 2020
Monitor and Log tool
Copy link
zhanglingzhe0820
commented
Sep 15, 2020
* IOTDB-868 Can not redo mlogs with special characters like comma
* IOTDB-872 Enable setting timezone at client
* IOTDB-877 fix prefix bug on show storage group and show devices
* IOTDB-904 fix update last cache NullPointerException
* IOTDB-920 Disable insert row that only contains time/timestamp column
* IOTDB-921 When execute two query simultaneously in one statement, got error
* IOTDB-922 Int and Long can convert to each other in ResultSet
* IOTDB-947 Fix error when counting node with wildcard
* IOTDB-949 Align by device doesn't support 'T*' in path.
* IOTDB-956 Filter will be missed in group by time align by device
* IOTDB-963 Redo deleteStorageGroupPlan failed when recovering
* IOTDB-967 Fix xxx does not have the child node xxx Bug in count timeseries
* IOTDB-970 Restrict log file number and size
* IOTDB-971 More precise error messages of slimit and soffset
* IOTDB-975 when series does not exist in TsFile, reading wrong ChunkMetadataList
# Apache IoTDB (incubating) 0.10.1
* [IOTDB-797] InsertTablet deserialization from WAL error
* [IOTDB-788] Can not upgrade all storage groups
* [IOTDB-792] deadlock when insert while show latest timeseries
* [IOTDB-794] Rename file or delete file Error in start check in Windows
* [IOTDB-795] BufferUnderflowException in Hive-connector
Apache Download Mirrors
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Apache Download Mirrors
eg. 3.1415
eg. 1.2E10
eg. -1.33
1234Identifier := (Letter | '_') (Letter | Digit | '_' | MINUS)*;
eg. a123
eg. _abc123
1234# Literals PointValue : Integer | Float | StringLiteral | Boolean
1TimeValue : Integer | DateTime | ISO8601 | NOW()
Note: Integer means timestamp type.
DateTime :
eg. 2016-11-16T16:22:33+08:00
eg. 2016-11-16 16:22:33+08:00
eg. 2016-11-16T16:22:33.000+08:00
eg. 2016-11-16 16:22:33.000+08:00
Note: DateTime Type can support several types, see Chapter 3 Datetime section for details.
123456789PrecedenceEqualOperator : EQUAL | NOTEQUAL | LESSTHANOREQUALTO | LESSTHAN | GREATERTHANOREQUALTO | GREATERTHAN
1Timeseries : ROOT [DOT <LayerName>]* DOT <SensorName>
LayerName : Identifier
SensorName : Identifier
gitHub
(opens new window) System design Architecture TsFile QueryEngine SchemaManager StorageEngine DataQuery Tools Connector Hive-TsFileSpark-TsFileSpark-IOTDBClient # Spark IOTDB connector # aim of design Use Spark SQL to read IOTDB data and return it to the client in the form of a Spark DataFrame # main idea Because IOTDB has the ability to parse and execute SQL, this part can directly forward SQL to the IOTDB process for execution, and then convert the data to RDD. # Implementation process # 1.Entrance src/main/scala/org/apache/iotdb/spark/db/DefaultSource.scala # 2. Building Relation Relation mainly saves RDD meta-information, such as column names, partitioning strategies, and so on. Calling Relation's buildScan method can create RDDs src/main/scala/org/apache/iotdb/spark/db/IoTDBRelation.scala # 3. Building RDD RDD executes SQL request to IOTDB and saves cursor The compute method in src / main / scala / org / apache / iotdb / spark / db / IoTDBRDD.scala # 4.Iterative RDD Due to Spark's lazy loading mechanism, the RDD iteration is called specifically when the user traverses the RDD, which is the fetch result of IOTDB getNext method in src / main / scala / org / apache / iotdb / spark / db / IoTDBRDD.scala # Wide and narrow table structure conversion Wide table structure: IOTDB native path format time root.ln.wf02.wt02.temperature root.ln.wf02.wt02.status root.ln.wf02.wt02.hardware root.ln.wf01.wt01.temperature root.ln.wf01.wt01.status root.ln.wf01.wt01.hardware 1 null true null 2.2 true null 2 null false aaa 2.2 null null 3 null null null 2.1 true null 4 null true bbb null null null 5 null null null null false null 6 null null ccc null null null Narrow table structure: Relational database schema, IOTDB align by device format time device_name status hardware temperature 1 root.ln.wf02.wt01 true null 2.2 1 root.ln.wf02.wt02 true null null 2 root.ln.wf02.wt01 null null 2.2 2 root.ln.wf02.wt02 false aaa null 3 root.ln.wf02.wt01 true null 2.1 4 root.ln.wf02.wt02 true bbb null 5 root.ln.wf02.wt01 false null null 6 root.ln.wf02.wt02 null ccc null Because the data queried by IOTDB defaults to a wide table structure, a wide-narrow table conversion is required. There are two implementation methods as follows # 1. Use the IOTDB group by device statement This way you can get the narrow table structure directly, and the calculation is done by IOTDB # 2. Use Transformer You can use Transformer to convert between wide and narrow tables. The calculation is done by Spark. src/main/scala/org/apache/iotdb/spark/db/Transformer.scala Wide table to narrow table uses traversing the device list to generate the corresponding narrow table. The parallelization strategy is better (no shuffle). The narrow table to wide table uses a timestamp-based join operation. There is potential for shuffle. Performance issues
←
Spark-TsFile
RPC
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
* fix the elimination unseq compaction may loss data bug after a delete operation is executed
* Fix a bug of checking time partition in DeviceTimeIndex
* Throw exeception when device to be queried is not in tsFileMetaData
* Fix unseq compaction file selector conflicts with time partition bug
* Fix high CPU usage during the compaction process
## Improvements
* IOTDB-1140 optimize regular data encoding
* Add more log for better tracing
* Add max direct memory size parameter to env.sh
* Change last cache log to debug level
## New Features
* Add explain sql support
# Apache IoTDB 0.11.2
## Bug Fixes
* IOTDB-1049 Fix Nullpointer exception and a delete bug in Last query
* IOTDB-1060 Support full deletion for delete statement without where clause
* IOTDB-1068 Fix Time series metadata cache bug
* IOTDB-1069 restrict the flushing memtable number to avoid OOM when mem_control is disabled
* IOTDB-1077 add insertOneDeviceRecords API in java session
* IOTDB-1087 fix compaction block flush: flush do not return until compaction finished
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
Code of Conduct
Get Involved
Mentoring
Help Wanted
Community Events
FAQ
Mailing Lists
License
Apache License 2.0
Licensing FAQ
Contributor License Agreements
Software Grants
Trademarks
Exports
Sponsors
Sponsor the ASF
Sponsor Thanks
Corporate Giving
Individual Donations
Buy Stuff
opened Jun 10, 2021 by
ghost1025
1
Add the content sidebar of a singe markdown file to the website
#3383
opened Jun 10, 2021 by
LeiRui
Implement regex matching operator
#3362
opened Jun 6, 2021 by
liujiajun
5
clearCacheTest() is temporary disabled
#3359
opened Jun 5, 2021 by
jixuan1989
Compile c++ client on "Tools: Thrift" FAILE
#3315
opened Jun 2, 2021 by
GroupByClause : LPAREN <TimeUnit> (COMMA TimeValue)? COMMA <TimeInterval> (COMMA <TimeInterval>)* RPAREN
TimeUnit : Integer <DurationUnit>
DurationUnit : "ms" | "s" | "m" | "h" | "d" | "w"
TimeInterval: LBRACKET <TimeValue> COMMA <TimeValue> RBRACKET
Eg: SELECT COUNT(status), COUNT(temperature) FROM root.ln.wf01.wt01 where temperature < 24 GROUP BY(5m, [1509465720000, 1509466380000])
Eg. SELECT COUNT (status), MAX_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE time < 1509466500000 GROUP BY(5m, 1509465660000, [1509465720000, 1509466380000])
Eg. SELECT MIN_TIME(status), MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE temperature < 25 and time < 1509466800000 GROUP BY (3m, 1509465600000, [1509466140000, 1509466380000], [1509466440000, 1509466620000])
Note: the statement needs to satisfy this constraint: <Path>(SelectClause) + <PrefixPath>(FromClause) = <Timeseries>
Note: If the <SensorExpr>(WhereClause) is started with <Path> and not with ROOT, the statement needs to satisfy this constraint: <PrefixPath>(FromClause) + <Path>(SensorExpr) = <Timeseries>
Note: <TimeValue>(TimeInterval) needs to be greater than 0
Note: First <TimeValue>(TimeInterval) in needs to be smaller than second <TimeValue>(TimeInterval)
12345678910111213141516171819202122Fill Statement SELECT <SelectClause> FROM <FromClause> WHERE <WhereClause> FILL <FillClause>
SelectClause : <Path> [COMMA <Path>]*
FromClause : < PrefixPath > [COMMA < PrefixPath >]*
WhereClause : <WhereExpression>
WhereExpression : TIME EQUAL <TimeValue>
FillClause : LPAREN <TypeClause> [COMMA <TypeClause>]* RPAREN
TypeClause : <Int32Clause> | <Int64Clause> | <FloatClause> | <DoubleClause> | <BoolClause> | <TextClause>
WAL test result
Copy link
zhanglingzhe0820
commented
Sep 15, 2020
INPLACE selector
INPLACE merge
SQUEEZE selector
REGULARIZATION selector
REGULARIZATION merge
qiaojialin
mentioned this issue
Nov 10, 2020
加入社区（Join the community）
apache/iotdb#1995
Open
samperson1997
mentioned this issue
Nov 19, 2020
Add example results for User Guide documents
* [IOTDB-766] Do not release unclosed file reader, a small memory leak
* [IOTDB-796] Concurrent Query throughput is low
* Query result is not correct when some unsequence data exists
* Change the default fetch size to 10000 in session
* [IOTDB-798] fix a set rowLimit and rowOffset bug
* [IOTDB-800] Add a new config type for those parameters which could not be modified any more after the first start
* [IOTDB-802] Improve "group by" query performance
* [IOTDB-799] remove log visualizer tool from v0.10
* fix license-binary
* [IOTDB-805] Fix BufferUnderflowException when querying TsFile stored in HDFS
* python session client ver-0.10.0
* [IOTDB-808] fix bug in selfCheck() truncate
* fix doc of MeasurementSchema in Tablet
* [IOTDB-811] fix upgrading mlog many times when upgrading system.properties crashed
* Improve IoTDB restart process
* remove jol-core dependency which is introduced by hive-serde 2.8.4
* remove org.json dependency because of license compatibility
* [ISSUE-1551] fix set historical version when loading additional tsfile
# Apache IoTDB (incubating) 0.10.0
## New Features
Skip to Main Content
Toggle navigation
News
About
Overview
Process
Governance
The Apache Way
Membership
Community
Diversity & Inclusion
Code of Conduct
Glossary
About Our Name
FAQ
Support Apache
Media/Analysts
Contact
Make a Donation
Donate Now
Via Credit Card
Via ACH
Via PayPal
Buy Swag
Shop smile.amazon.com
ASF Sponsorship
Targeted Sponsorship
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
void setReader(TsFileSequenceReader reader);
void setMeasurementIds(List<String> measurementIds);
void setReadDeviceId(boolean isReadDeviceId);
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) System design Architecture TsFile QueryEngine SchemaManager StorageEngine DataQuery Tools SyncConnector Client # Sync Tool The synchronization tool is a suite tool that periodically uploads the newly added persistent tsfile files on the local disk to the cloud and loads them into Apache IoTDB. # Overview This document mainly introduces the requirements definition and module design of synchronization tools. # Scenes The requirements of synchronization tools are mainly the following: In a production environment, Apache IoTDB collects data generated by data sources (industrial equipment, mobile terminals, etc.) and stores them locally. Since the data sources may be distributed in different places, there may be multiple Apache IoTDBs responsible for collecting data at the same time. For each IoTDB, it needs to synchronize its local data into the data center. The data center is responsible for collecting and managing data from multiple Apache IoTDBs. With the widespread application of the Apache IoTDB system, users need to load and apply the tsfile files generated by some Apache IoTDB instances to the data directory of another Apache IoTDB instance to achieve data synchronization according to the target business needs. The synchronization module exists in the form of an independent process on the sending end, and is located in the same process as the Apache IoTDB on the receiving end. Supports one sender to synchronize data with multiple receivers and one receiver can receive data from multiple senders at the same time, but you need to ensure that the data synchronized by multiple senders does not conflict (that is, there can only be one data source for one device), otherwise Need to prompt conflict. # Goals The synchronization tool can be used to transfer and load data files between two Apache IoTDB instances. When network instability or downtime occurs, ensure that files can be completely and correctly transferred to the data center. # Directory Structure For the convenience of explanation, suppose the application scenario is that the node 192.168.130.15 synchronizes data with the node192.168.130.16: 5555, and the node 192.168.130.15 receives data synchronized from the node192.168.130.14. Since the node 192.168.130.15 serves as both a sending end and a receiving end, the following describes the directory structure with the node192.168.130.15. # Directory structure design # Directory structure description The sync-sender folder contains temporary files, status logs, etc. during the data synchronization when this node is used as the sender. The sync-receiver folder contains temporary files, status logs, and so on during which the node receives data and loads it as a receiver. The schema / sync folder holds the synchronization information that needs to be persisted. # Sender data / sync-sender is the sender's folder. The folder name in this directory represents the IP and rpc port of the receiver. In this example, there is a receiver192.168.130.16: 5555. Each folder contains the following Several files: last_local_files.txt
Records a list of all local tsfile files that have been synchronized after the synchronization task ends, and is updated after each synchronization task ends. snapshot
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
Apache Download Mirrors
-----BEGIN PGP SIGNATURE-----
iQIzBAABCgAdFiEEukXNu4fosUaoH1u+Igbvj2TDWIkFAmBr3dcACgkQIgbvj2TD
WIkJ0w/+IhsXSvumtMQ2VHuP66dtlHybM72wu0C6EJp8wXX4wbEYeCxIB6R5bjKh
HGpyXrTE+flhQtU4HvmT9kMFmqIeoqXRv8dZ6NoexDRLplPUu5XWcpQTYXNEW+ld
Bil8b0wehGG6JHtJKk6ZLJ1RzMvtSDQW4wuKxOJbrQIvT0xbbSuFa014R11TsmTp
x0Zq3xjkzwXy7Ivxb+XfGlJT0U8FhFSGVfI2UrS6zbhKQulvoY3jSGIYYAk+ERIE
6aF7pfuPXjH262UY4ZxbUBHJ2YMwBmmV89R7OaRd0oeM82HhDMETVNykOnVVFmTQ
HE5r9kRTwKK22+vBQDsMxcBo3es/Zx+TSzhyk7A4aHf4GD/9P8OSrlIzPuZ12P3+
EwQX8FkW376gSi96bzoxFJFLkX07EBISxpEboaiFh6qjsjrrn+n2fDfda/PxjpUk
1TTxPwiwNBbHS1qE0EFqahhdYoeQyfQp5vMwHL+ZCYPdG1PHTOGzOKhRqleiMM+K
Z94Nzr0K49qkm491XlaoR/fYSbYCqYCk2iK2DrAn0pXDeQK6f/NZPpvIvm5iSywJ
yOmAkea4wRcEUQ05UxWI+5dTP6X11PWxS4QdpdNy5K3foAt0Xt/YK1WenubPrRXC
vO+iTnC84wd8CYljclt7sbiLWgj6f9OIRYD708K8IW7OaSAiZuw=
=CreJ
-----END PGP SIGNATURE-----
-----BEGIN PGP SIGNATURE-----
iQIzBAABCgAdFiEEukXNu4fosUaoH1u+Igbvj2TDWIkFAmBr3dgACgkQIgbvj2TD
WImmnQ//c4YZC8jGRaccku8pfZ8FcuSCxVfc4DwcyoFydu8hKmo2UAUDm1hge9mw
B55SU1yEdRI+3uZ8vru8Z/QTDJBet6oI98NfGCNK30m/WaaoKhvokXSPeAjXPXZT
fZ9gJOaYIkPkNExeTVVLwSIsKV/W04XfEbVf0hJ96nVUtZj5cbEs2Syw9KtZDIRI
OihU7ZcEKpYfuTkCSEp5bW29FZwKadBmMqIL5cvz0D7yjfJabdtfm7JVygp/Kb6r
/8J4oOSwaPzlRH49hLq1M4lDIADKWUm9kGbH5WTGyzWujTwmgPmFsAkSqhOBAjm1
n8mOT09hTmIXVRmzYadOhV6S4zJIU/6Gy6laVZdiz2MCyT8LCFDQdn8tfwsTgcgj
kkeqtWHrrUUyfEvJEphTaZVPMdDYwIjIsaVHOCOfn4kZw13RExPSJ4KvRkjWhWRQ
qaMysDCHSA9NPdyzC7n4VjWejJ1beHaICwRImGqTpCtQ86onNKs1Mv2c48fuGneX
hlGaVQ9r30NStLE5kNowPo21qfbQmR4PisL2ME0uODuP+zymKYwLrjmk46+u1EgR
8gpiimj+TL86/gDYbaowC/pmjUlXPj/uTEY3Iafqqfag6a11Pu1VJi7PHVXN8g9t
Y7PsIxIRLeQX7MJxIuJ9T4Yf/jYQBQBRn3+GF19Pe4HRAK+3s+A=
=bZGB
-----END PGP SIGNATURE-----
114cf0d8e1c032373e3d3131370e608e502d86d3bb3ebb6e301f96b5e5b22b9509a38a11033d197d04eda06d3d5240c1474918fb882b38a52d7dc66b2922e926
Apache Download Mirrors
Apache Download Mirrors
73ae76f9eadfe3f571857055c4fdc8c280448cdfe69ef90bdf0fade5eea0915ecfabf4265c3b339fff9d9cdcf85527e747104968be914b9926362b43404ee6ed
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Skip to Main Content
Toggle navigation
News
About
Overview
Process
Governance
The Apache Way
Membership
Community
Diversity & Inclusion
Code of Conduct
Glossary
About Our Name
FAQ
Support Apache
Media/Analysts
Contact
Make a Donation
Donate Now
Via Credit Card
Via ACH
Via PayPal
Buy Swag
Shop smile.amazon.com
ASF Sponsorship
Targeted Sponsorship
Corporate Giving
eg. root.ln.wf01.wt01.status
eg. root.sgcc.wf03.wt01.temperature
Note: Timeseries must be start with `root`(case insensitive) and end with sensor name.
123456PrefixPath : ROOT (DOT <LayerName>)*
LayerName : Identifier | STAR
eg. root.sgcc
eg. root.*
1234Path: (ROOT | <LayerName>) (DOT <LayerName>)*
LayerName: Identifier | STAR
eg. root.ln.wf01.wt01.status
eg. root.*.wf01.wt01.status
eg. root.ln.wf01.wt01.*
eg. *.wt01.*
eg. *
1234567
←
Config Manual
Status Codes
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
* IOTDB-1106 Delete timeseries statement will incorrectly delete other timeseries
* Github issue-2137 fix grafana value-time position bug
* Github issue-2169 GetObject returns String for all data types
* Github issue-2240 fix Sync failed: Socket is closed by peer
* Github issue-2387 The deleteData method exists in Session but not in SessionPool.
* add thrift_max_frame_size in iotdb-engine.properties
* Fix incorrect last result after deleting all data
* Fix compaction recover block restart: IoTDB cannot restart until last compaction recover task finished
* Fix compaction ignore modification file: delete does not work after compaction
* print more insert error message in client
* expose enablePartition parameter into iotdb-engines.properpties
# Apache IoTDB 0.11.1
## Bug Fixes
* IOTDB-990 cli parameter maxPRC shouldn't to be set zero
* IOTDB-993 Fix tlog bug
* IOTDB-994 Fix can not get last_value while doing the aggregation query along with first_value
* IOTDB-1000 Fix read redundant data while select with value filter with unseq data
* IOTDB-1007 Fix session pool concurrency and leakage issue when pool.close is called
* IOTDB-1016 overlapped data should be consumed first
* IOTDB-1021 Fix NullPointerException when showing child paths of non-existent path
* IOTDB-1028 add MAX\_POINT\_NUMBER format check
* IOTDB-1034 Fix Show timeseries error in Chinese on Windows
* IOTDB-1035 Fix bug in getDeviceTimeseriesMetadata when querying non-exist device
(opens new window) System design Architecture TsFile QueryEngine SchemaManager StorageEngine DataQuery Tools Connector Hive-TsFileSpark-TsFileSpark-IOTDBClient # Spark Tsfile connector # aim of design Use Spark SQL to read the data of the specified Tsfile and return it to the client in the form of a Spark DataFrame Generate Tsfile with data from Spark Dataframe # Supported formats Wide table structure: Tsfile native format, IOTDB native path format time root.ln.wf02.wt02.temperature root.ln.wf02.wt02.status root.ln.wf02.wt02.hardware root.ln.wf01.wt01.temperature root.ln.wf01.wt01.status root.ln.wf01.wt01.hardware 1 null true null 2.2 true null 2 null false aaa 2.2 null null 3 null null null 2.1 true null 4 null true bbb null null null 5 null null null null false null 6 null null ccc null null null Narrow table structure: Relational database schema, IOTDB align by device format time device_name status hardware temperature 1 root.ln.wf02.wt01 true null 2.2 1 root.ln.wf02.wt02 true null null 2 root.ln.wf02.wt01 null null 2.2 2 root.ln.wf02.wt02 false aaa null 3 root.ln.wf02.wt01 true null 2.1 4 root.ln.wf02.wt02 true bbb null 5 root.ln.wf02.wt01 false null null 6 root.ln.wf02.wt02 null ccc null # Query process steps # 1. Table structure inference and generation This step is to make the table structure of the DataFrame match the table structure of the Tsfile to be queried.
if (field.name != QueryConstant.RESERVED_TIME
&& field.name != NarrowConverter.DEVICE_NAME) {
measurementNames += field.name
}
})
123456After the SQL is converted to an expression, the narrow table structure is different from the Tsfile native query structure. The expression is converted into a disjunction expression related to the device before it can be converted into a query of Tsfile. The conversion code is in src / main / java / org / apache / iotdb / spark / tsfile / qp example： select time, device_name, s1 from tsfile_table where time > 1588953600000 and time < 1589040000000 and device_name = 'root.group1.d1'
←
Hive-TsFile
Spark-IOTDB
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Downloads
Distribution
Releases
Mirrors
Infrastructure Status
Infrastructure Statistics
Search
Community-led development "The Apache Way"
Projects
Project List
How they work
Independence
Date Founded
Names
Categories
Languages
Statistics
Apache Incubator
Help Wanted
Brand Management
Glossary of Terms
People
haozewu
3
将大的用户文档（比如DDL，DML）拆分成若干个小的文档
#3285
opened May 28, 2021 by
SteveYurongSu
1
6
Allow Bridging from existing MQTT Brokers to internal service
Module - MQTT
#3280
opened May 27, 2021 by
smaktacular
1
Can the query support fuzzy matching?
#3248
opened May 21, 2021 by
DongJigong
Int32Clause: INT32 LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
Int64Clause: INT64 LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
FloatClause: FLOAT LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
DoubleClause: DOUBLE LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
BoolClause: BOOLEAN LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
TextClause: TEXT LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
PreviousClause : PREVIOUS [COMMA <ValidPreviousTime>]?
LinearClause : LINEAR [COMMA <ValidPreviousTime> COMMA <ValidBehindTime>]?
ValidPreviousTime, ValidBehindTime: <TimeUnit>
TimeUnit : Integer <DurationUnit>
DurationUnit : "ms" | "s" | "m" | "h" | "d" | "w"
Eg: SELECT temperature FROM root.ln.wf01.wt01 WHERE time = 2017-11-01T16:37:50.000 FILL(float[previous, 1m])
Eg: SELECT temperature,status FROM root.ln.wf01.wt01 WHERE time = 2017-11-01T16:37:50.000 FILL (float[linear, 1m, 1m], boolean[previous, 1m])
Eg: SELECT temperature,status,hardware FROM root.ln.wf01.wt01 WHERE time = 2017-11-01T16:37:50.000 FILL (float[linear, 1m, 1m], boolean[previous, 1m], text[previous])
Eg: SELECT temperature,status,hardware FROM root.ln.wf01.wt01 WHERE time = 2017-11-01T16:37:50.000 FILL (float[linear], boolean[previous, 1m], text[previous])
Note: the statement needs to satisfy this constraint: <PrefixPath>(FromClause) + <Path>(SelectClause) = <Timeseries>
Note: Integer in <TimeUnit> needs to be greater than 0
123456789101112131415161718192021222324Limit Statement SELECT <SelectClause> FROM <FromClause> [WHERE <WhereClause>] [LIMIT <LIMITClause>] [SLIMIT <SLIMITClause>]
apache/iotdb#2079
Closed
Copy link
SteveYurongSu
commented
Nov 20, 2020
Copy link
Genius-pig
commented
Dec 3, 2020
HTHou
mentioned this issue
Dec 21, 2020
Fix dependency bug and add documents
apache/iotdb#2299
Merged
Copy link
Contributor
kr11
commented
* IOTDB-217 A new GROUPBY syntax, e.g., select avg(s1) from root.sg.d1.s1 GROUP BY ([1, 50), 5ms)
* IOTDB-275 allow using user defined JAVA_HOME and allow blank space in the JAVA_HOME
* IOTDB-287 Allow domain in JDBC URL
* IOTDB-292 Add load external tsfile feature
* IOTDB-297 Support "show flush task info"
* IOTDB-298 Support new Last point query. e.g, select last * from root
* IOTDB-309 add Dockerfiles for 0.8.1, 0.9.0, and 0.9.1
* IOTDB-313 Add RandomOnDiskUsableSpaceStrategy
* IOTDB-323 Support insertRecords in session
* IOTDB-337 Add timestamp precision properties for grafana
* IOTDB-343 Add test method in session
* IOTDB-396 Support new query clause: disable align, e.g., select * from root disable align
* IOTDB-447 Support querying non-existing measurement and constant measurement
* IOTDB-448 Add IN operation, e.g., where time in (1,2,3)
* IOTDB-456 Support GroupByFill Query, e.g., select last_value(s1) from root.sg.d1 GROUP BY ([1, 10), 2ms) FILL(int32[previousUntilLast])
* IOTDB-467 The CLI displays query results in a batch manner
* IOTDB-497 Support Apache Flink Connector with IoTDB
* IOTDB-558 add text support for grafana
abdcc98150f4f22d96b2afa3478c6c36c5176baf7527c3eaa5db9deabc70313b55d5740336eb1d40f85bce4080df572a4a73c2f579aa097bd11173f699b8020a
Apache Download Mirrors
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Corporate Giving
The Apache Way
The Apache Way
Sustainable Open Source
How it Works
Merit
Success at Apache
Join Us
Getting Started
Help Wanted
ApacheCon
Community Events
Travel Assistance
Summer of Code
Code of Conduct
Etiquette
Projects
Project List
How they work
Independence
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
void setReadTime(boolean isReadTime);
}
12345678910Let's first introduce some important fields of this class private List<QueryDataSet> dataSetList = new ArrayList<>(); All QueryDataSets generated by this shard private List<String> deviceIdList = new ArrayList<>(); Device name list, this order is consistent with the order of dataSetList, that is, deviceIdList [i] is the device name of dataSetList [i]. private int currentIndex = 0; The index of the QueryDataSet currently being processed This class calls the initialize (TSFInputSplit, Configuration, IReaderSet, List <QueryDataSet>, List <String>) method of TSFRecordReader in the constructor to initialize some of the class fields mentioned above. It overrides the next () method of RecordReader to return the data read from TsFile. # next(NullWritable, MapWritable) We noticed that after reading the data from TsFile, it was returned in the form of MapWritable. HereMapWritable is actually a `Map ', except that its key and value are serialized and deserialized. Special adaptation, its reading process is as follows First determine if there is a value for QueryDataSet at the current position ofdataSetList. If there is no value, then increase currentIndex by 1 until the firstQueryDataSet with a value is found Then call next () method of QueryDataSet to getRowRecord Finally, the getCurrentValue () method of TSFRecordReader is called, and the value in RowRecord is placed in MapWritable. # org.apache.iotdb.hive.TsFileSerDe This class inherits AbstractSerDe and is also necessary for us to implement Hive to read data from custom input formats. It overrides the Initialize () method of AbstractSerDe. In this method, the corresponding device name, sensor name, and corresponding type of the sensor are parsed from the user-created table sql. An ObjectInspector object is also constructed. This object is mainly responsible for the conversion of data types. Since TsFile only supports primitive data types, when other data types occur, an exception needs to be thrown. The specific construction process can be seen in the createObjectInspectorWorker () method. . The main responsibility of this class is to serialize and deserialize data in different file formats. As our Hive connector only supports read operations for the time being, it does not support insert operations, so only the deserialization process, so only overwrite The deserialize (Writable) method is called, which calls the deserialize () method of TsFileDeserializer. # org.apache.iotdb.hive.TsFileDeserializer This class deserializes the data into Hive's output format. There is only one deserialize () method. # public Object deserialize(List<String>, List<TypeInfo>, Writable, String) The Writable parameter of this method is theMapWritable generated by next () of TSFHiveRecordReader. First determine if the Writable parameter is of typeMapWritable, if not, throw an exception. Then take out the value of the sensor of the device from MapWritable in turn, throw an exception if a type mismatch is encountered, and finally return the generated result set.
←
Sync
Spark-TsFile
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
During data synchronization, this folder contains hard links to all tsfile files to be synchronized. sync.log
Record the task progress log of the synchronization module for system downtime recovery. The structure of this file will be explained in detail later. # Receiving end sync-receiver is the folder of the receiving end. The folder name in this directory represents the IP and UUID of the sending end, and it indicates the data files and file loading logs received from the sending end. In this example, there is a sending end. 192.168.130.14, and its UUID isa45b6e63eb434aad891264b5c08d448e. Each folder contains the following files: load.log
This file records the task progress log loaded by the tsfile file, and is used when the system is recovered from downtime. data
This folder contains the tsfile file that has been received from the sender. # Others The schema / sync folder contains the following information: As a sender, the file lock sync.lock of the sender instance is intended to ensure that the same sender can only start one sender instance to the same receiver, that is, there is only one process that synchronizes data to the receiver. The directory 192.168.130.16_5555 / sync_lock in the figure indicates the instance lock synchronized to the receiving end 192.168.130.16_5555. Each time it is started, it will first check whether the file is locked. If the lock indicates that there is already a sender that synchronizes data to the receiver, then stop this instance. When acting as the sender, the unique identifier of the sender UUID uuid.txt
Each sender has a unique identifier for the receiver to distinguish between different senders As the sender, the synchronization progress of each receiver's schema sync_schema_pos Because the schema log mlog.txt data is appended, which records the change process of all meta-information, the current position is recorded after each synchronization of the schema, and direct incremental synchronization can reduce the repeated schema transmission after the next synchronization. As the receiver, all information device_owner.log of each device in the receiver
4.1. Transfer file name to receiver (example 1581324718762-101-1.tsfile)
4.2. Successful transfer, record 1581324718762-101-1.tsfile insync.log Start to synchronize the list of newly added tsfile files. Record the sync deleted file names end and sync tsfile start in sync.log. Notify receiver to start syncing files For each tsfile in the new list:
7.1. Transfer the file to the receiver in blocks (example 1581324718762-101-1.tsfile)
7.2. If the file transfer fails, try multiple times. If it tries more than a certain number of times (configurable by the user, the default is 5), abandon the file transfer; if the transfer is successful, record 1581324718762-101-1 'in sync.log. tsfile Notify the receiving end of the synchronization task, and record sync tsfile end andsync end in sync.log Invoke file management module to clean up files End synchronization task # Recovery module # package org.apache.iotdb.db.sync.sender.recover # Process Each time the sending end of the synchronization tool starts a synchronization task, first check whether there is a corresponding receiving end folder under the sending end folder. If not, it means that no synchronization task has been performed with the receiving end and skip the recovery module; otherwise, The files in the folder perform the recovery algorithm: If current_local_files.txt exists, skip to step 2; if not, skip to step 3 If last_local_files.txt exists, delete thecurrent_local_files.txt file and skip to step 3; if not, skip to step 7 If sync.log exists, go to step 4; if not, go to step 8 Load the list of file names in the last_local_files.txt file into memory to form a set, and parse the line by line sync.log to delete and add the set Write the list of file names in memory to the current_local_files.txt file Delete last_local_files.txt file Renamed current_local_files.txt tolast_local_files.txt Delete the sequence folder and the sync.log file Algorithm ends # Sync tool receiver # Statement of needs Because the receiver needs to receive files from multiple senders at the same time, it is necessary to distinguish files from different senders and manage these files in a unified manner. The receiving end receives the file from the transmitting end and verifies the file name, the file data, and the MD5 value of the file. After the file is received, the file is stored locally at the receiving end, and the received tsfile file is checked for the MD5 value and the end of the file is checked. If the check is passed correctly, the file is retransmitted. For the data file sent by the sender (which may include operations such as updating the old data and inserting new data), this part of data needs to be merged into the local file of the receiver. # Module design # File transfer module # package org.apache.iotdb.db.sync.receiver.transfer # Process The file transfer module is responsible for receiving the file name and file transmitted from the sender. The process is as follows: Received the synchronization start instruction from the sender, and checked whether there is a sync.log file. If it exists, it means that the data of the last synchronization has not been loaded, and the synchronization task is rejected; otherwise, sync.start is recorded in the sync.log. Received the sender's instruction to start synchronous deletion of the file name list, and recorded sync deleted file names start in sync.log Receive the delete file name transmitted by the sender in turn
3.1. Received the file name transmitted by the sender (example 1581324718762-101-1.tsfile)
3.2. Successfully received, record 1581324718762-101-1.tsfile insync.log and submit it to the data load module for processing Received the instruction to start the synchronous transmission of the file, and recorded sync deleted file names end andsync tsfile start in sync.log Receive the tsfile files transmitted by the sender in turn
5.1. Receive the file transmitted by the sender in blocks (example 1581324718762-101-2.tsfile)
5.2. Verify the file. If the verification fails, delete the file and notify the sender of the failure; otherwise, record 158513214787662-101-2.tsfile in sync.log and submit it to the data load module for processing Received the sync task end command from the sender, and recorded sync tsfile end andsync end in sync.log Create empty file sync.end # File loading module # package org.apache.iotdb.db.sync.receiver.load # File deletion For files that need to be deleted (example 1581324718762-101-1.tsfile), search forsequence tsfile list in memory to see if the file exists, and if so, delete the file from the list maintained in memory and Files on disk are deleted. After successful execution, record delete 1581324718762-101-1.tsfile inload.log. # Load new file For the file that needs to be loaded (example 15813214718762-101-1.tsfile), first use device_owner.log to check whether the file meets the application scenario, that is, whether the same device data is transmitted with other senders causing conflicts. , Then reject the loading and send an error message to the sender; otherwise, update the device_owner.log information. After meeting the requirements of the application scenario, insert the file into the appropriate position in the sequence tsfile list and move the file to the data / sequence directory. After successful execution, record load 1581324718762-101-1.tsfile inload.log. After each file is loaded, check whether the sync.end file is included in the synchronized directory. If the file is included and the sequence folder is empty, delete the sync.log file, and then delete the load.log and sync.end files. # Recovery module # package org.apache.iotdb.db.sync.receiver.recover # Process When the ApacheIoTDB system is started, each sub-folder under the sync folder is checked in turn, and each sub-file represents the synchronization task of the sender represented by the folder name. Perform a recovery algorithm based on the files in each subfolder: If the sync.log file does not exist, go to step 4; if it does, go to step 2 Scan the sync.log log line by line, and perform the corresponding delete file operation and load file operation. If the operation has been recorded in the load.log file, it indicates that the operation has been completed and the operation is skipped. Go to step 3 Delete file sync.log Delete file load.log Delete file sync.end Algorithm ends At the beginning of each synchronization task, the receiving end checks and restores the corresponding subfolders.
←
←
Recover
QueryFundamentals
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Skip to Main Content
Toggle navigation
News
About
Overview
Process
Governance
The Apache Way
Membership
Community
Diversity & Inclusion
Code of Conduct
Glossary
About Our Name
FAQ
Support Apache
Media/Analysts
Contact
Make a Donation
Donate Now
Via Credit Card
Via ACH
Via PayPal
Buy Swag
Skip to Main Content
Toggle navigation
News
About
Overview
Process
Governance
The Apache Way
Membership
Community
Diversity & Inclusion
Code of Conduct
Glossary
About Our Name
FAQ
Support Apache
Media/Analysts
Contact
Make a Donation
Donate Now
Via Credit Card
Via ACH
Via PayPal
Buy Swag
Skip to Main Content
Toggle navigation
News
About
Overview
Process
Governance
The Apache Way
Membership
Community
Diversity & Inclusion
Code of Conduct
Glossary
About Our Name
FAQ
Support Apache
Media/Analysts
Contact
Make a Donation
Donate Now
Via Credit Card
Via ACH
Via PayPal
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
The Apache Way
The Apache Way
Sustainable Open Source
How it Works
Merit
Success at Apache
Join Us
Getting Started
Help Wanted
ApacheCon
Community Events
Travel Assistance
Summer of Code
Code of Conduct
Etiquette
Projects
Project List
How they work
Independence
Date Founded
Names
Categories
Languages
Statistics
Apache Incubator
Help Wanted
* IOTDB-1038 Fix flink set storage group bug
* ISSUE-2179 fix insert partial tablet with binary NullPointer bug
* add reject status code
* Update compaction level list delete
* Fix query result is not correct
* Fix import errors in Session.py and SessionExample.py
* Fix modules can not be found when using pypi to pack client-py
* Fix Count timeseries group by level bug
* Fix desc batchdata count bug
# Apache IoTDB 0.11.0
## New Features
* IOTDB-627 Support range deletion for timeseries
* IOTDB-670 Add raw data query interface in Session
* IOTDB-716 add lz4 compression
* IOTDB-736 Add query performance tracing
* IOTDB-776 New memory control strategy
* IOTDB-813 Show storage group under given path prefix
* IOTDB-848 Support order by time asc/desc
* IOTDB-863 add a switch to drop ouf-of-order data
* IOTDB-873 Add count devices DDL
* IOTDB-876 Add count storage group DDL
Roles
Members
Committers
Board of Directors
Officers & Project VPs
Diversity & Inclusion
Code of Conduct
Committer Directory
Heat Map
Community
Community Development
Code of Conduct
Get Involved
Mentoring
Help Wanted
Community Events
FAQ
Mailing Lists
License
Apache License 2.0
Licensing FAQ
Contributor License Agreements
Software Grants
Trademarks
Exports
Sponsors
Sponsor the ASF
Sponsor Thanks
Corporate Giving
Individual Donations
Buy Stuff
1
deleted group and recreate the same name group , the cli says some children of have already been set to storage group
Module - Schema Manager
#3214
opened May 18, 2021 by
xhero05
4
0.12.0版本last 读不存在的测点报权限异常导致没法执行closeResultSet(wrapper)
#3192
opened May 14, 2021 by
juice411
Python 执行聚合查询结果转dataframebug
Module - Python Client
#3169
opened May 12, 2021 by
qc903113684
sessionPool.insertRecord type BOOLEAN metadata tree type TEXT
#3157
opened May 11, 2021 by
qmdx
2
UDTF not work in cluster mode.
Module - UDF
SelectClause : [<Path> | Function]+
Function : <AggregationFunction> LPAREN <Path> RPAREN
FromClause : <Path>
WhereClause : <Condition> [(AND | OR) <Condition>]*
Condition : <Expression> [(AND | OR) <Expression>]*
Expression: [NOT|!]?<TimeExpr> | [NOT|!]?<SensorExpr>
TimeExpr : TIME PrecedenceEqualOperator (<TimeValue> | <RelativeTime>)
RelativeTimeDurationUnit = Integer ('Y'|'MO'|'W'|'D'|'H'|'M'|'S'|'MS'|'US'|'NS')
RelativeTime : (now() | <TimeValue>) [(+|-) RelativeTimeDurationUnit]+
SensorExpr : (<Timeseries>|<Path>) PrecedenceEqualOperator <PointValue>
LIMITClause : <N> [OFFSETClause]?
N : PositiveInteger
OFFSETClause : OFFSET <OFFSETValue>
OFFSETValue : NonNegativeInteger
SLIMITClause : <SN> [SOFFSETClause]?
SN : PositiveInteger
SOFFSETClause : SOFFSET <SOFFSETValue>
SOFFSETValue : NonNegativeInteger
NonNegativeInteger:= ('+')? Digit+
Eg: IoTDB > SELECT status, temperature FROM root.ln.wf01.wt01 WHERE temperature < 24 and time > 2017-11-1 0:13:00 LIMIT 3 OFFSET 2
Eg. IoTDB > SELECT COUNT (status), MAX_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE time < 1509466500000 GROUP BY(5m, 1509465660000, [1509465720000, 1509466380000]) LIMIT 3
Note: The order of <LIMITClause> and <SLIMITClause> does not affect the grammatical correctness.
Dec 21, 2020
Copy link
Alima777
commented
Jan 14, 2021
Copy link
zhanglingzhe0820
commented
Jan 29, 2021
Copy link
zhanglingzhe0820
commented
Jan 29, 2021
Copy link
Contributor
kr11
commented
Mar 1, 2021
Copy link
THUMarkLau
commented
* IOTDB-560 Support Apache Flink connecter with TsFile
* IOTDB-565 MQTT Protocol Support, disabled by default, open in iotdb-engine.properties
* IOTDB-574 Specify configuration when start iotdb
* IOTDB-588 Add tags and attributes management
* IOTDB-607 add batch create timeseries in native interface
* IOTDB-612 add limit&offset to show timeseries
* IOTDB-615 Use TsDataType + Binary to replace String in insert plan
* IOTDB-617 Support alter one time series's tag/attribute
* IOTDB-630 Add a jdbc-like way to fetch data in session
* IOTDB-640 Enable system admin sql (flush/merge) in JDBC or Other API
* IOTDB-671 Add clear cache command
* Support open and close time range in group by, e.g, [), (]
* Online upgrade from 0.9.x
* Support special characters in path: -/+&%$#@
* IOTDB-446 Support path start with a digit, e.g., root.sg.12a
* enable rpc compression in session pool
* Make JDBC OSGi usable and added a feature file
* add printing one resource file tool
* Allow count timeseries group by level=x using default path
* IOTDB-700 Add OpenID Connect based JWT Access as alternative to Username / Password
* IOTDB-701 Set heap size by percentage of system total memory when starts
* IOTDB-708 add config for inferring data type from string value
Skip to Main Content
Toggle navigation
News
About
Overview
Process
Governance
The Apache Way
Membership
Community
Diversity & Inclusion
Code of Conduct
Glossary
About Our Name
FAQ
Support Apache
Media/Analysts
Contact
Make a Donation
Donate Now
Via Credit Card
Via ACH
Via PayPal
Buy Swag
Shop smile.amazon.com
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) System design Architecture TsFile QueryEngine SchemaManager SchemaManagerStorageEngine DataQuery Tools Connector Client # Metadata Management Metadata of IoTDB is managed by MManger, including: MTree Log management of metadata Tag/Attribute management # MManager Maintain an inverted index for tag: Map<String, Map<String, Set<LeafMNode>>> tagIndex tag key -> tag value -> timeseries LeafMNode In the process of initializing, MManager will replay the mlog to load the metadata into memory. There are seven types of operation log: At the beginning of each operation, it will try to obatin the write lock of MManager, and release it after operation. Create Timeseries check if the storage group exists, if not and the auto create is enable, create it. create a leafMNode in the MTree with alias If dynamic parameters are turned on, check the memory is satisfied or not if not restart
persist tags/attributes into tlog, and return the offset set the offset of the leafMNode persist the log into mlog if restart
read tlog using offset in mlog, rebuilding the tag inverted index Delete Timeseries obtain fullPath list of timeseries satisfying the prefix path iterate the fullPath list, and delete them in MTree
before deleting, we need to obtain the parent node's write lock if succeed
Date Founded
Names
Categories
Languages
Statistics
Apache Incubator
Help Wanted
Brand Management
People
Roles
Members
Committers
Board of Directors
Officers & Project VPs
Location Map
Code of Conduct
Committer Directory
Community
Community Development
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
1+---------------+
| version|
+---------------+
|0.11.1-SNAPSHOT|
+---------------+
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.11.x) Get Started Overview Concept Server DownloadSingle Node SetupCluster SetupConfig ManualDocker ImageClient Operation Manual System Tools Ecosystem Integration Architecture Comparison with TSDBs # Download IoTDB provides you three installation methods, you can refer to the following suggestions, choose one of them: Installation from source code. If you need to modify the code yourself, you can use this method. Installation from binary files. Download the binary files from the official website. This is the recommended method, in which you will get a binary released package which is out-of-the-box. Using Docker：The path to the dockerfile is https://github.com/apache/iotdb/blob/master/docker/Dockerfile # Prerequisites To use IoTDB, you need to have: Java >= 1.8 (Please make sure the environment path has been set) Maven >= 3.1 (Optional) Set the max open files num as 65535 to avoid "too many open files" problem. Note: If you don't have maven installed, you should replace 'mvn' in the following commands with 'mvnw.sh' or 'mvnw.cmd'. # Installation from binary files You can download the binary file from:
Here # Installation from source code You can get the released source code from https://iotdb.apache.org/Download/, or from the git repository https://github.com/apache/iotdb/tree/master
You can download the source code from: git clone https://github.com/apache/iotdb.git
1Under the root path of iotdb: > mvn clean package -DskipTests
←
Compression
Single Node Setup
→
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.11.x) Get Started Overview What is IoTDBArchitectureScenarioFeaturesConcept Server Client Operation Manual System Tools Ecosystem Integration Architecture Comparison with TSDBs # What is IoTDB IoTDB(Internet of Things Database) is an integrated data management engine designed for timeseries data, which can provide users specific services for data collection, storage and analysis. Due to its light weight structure, high performance and usable features together with its intense integration with Hadoop and Spark ecology, IoTDB meets the requirements of massive dataset storage, high-speed data input and complex data analysis in the IoT industrial field.
←
Research Papers
Architecture
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
GroupByFillQuery
Hive-TsFile
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Shop smile.amazon.com
ASF Sponsorship
Targeted Sponsorship
Corporate Giving
The Apache Way
The Apache Way
Sustainable Open Source
How it Works
Merit
Success at Apache
Join Us
Getting Started
Help Wanted
ApacheCon
Community Events
Travel Assistance
Summer of Code
Code of Conduct
Etiquette
Projects
Project List
How they work
Independence
Date Founded
Names
Categories
Languages
Shop smile.amazon.com
ASF Sponsorship
Buy Swag
Shop smile.amazon.com
ASF Sponsorship
Targeted Sponsorship
Corporate Giving
The Apache Way
The Apache Way
Sustainable Open Source
How it Works
Merit
Success at Apache
Join Us
Getting Started
Help Wanted
ApacheCon
Community Events
Travel Assistance
Summer of Code
Code of Conduct
Etiquette
(opens new window) System design Architecture TsFile QueryEngine SchemaManager StorageEngine StorageEngineWALFlushManagerMergeManagerDataPartitionDataManipulationRecoverDataQuery Tools Connector Client # Storage engine # Design ideas The storage engine is based on the LSM design. The data is first written to the memory buffer memtable and then flushed to disk. For each device, the maximum timestamp being flushed (including those that have been flushed and are being flushed) is maintained in memory. The data is divided into sequential data and out-of-order data according to this timestamp. Different types of data are separated into different memtables and flushed into different TsFiles. Each data file TsFile corresponds to a file index information TsFileResource in memory for query use. In addition, the storage engine includes asynchronous persistence and file merge mechanisms. # Writing process # Related code org.apache.iotdb.db.engine.StorageEngine Responsible for writing and accessing an IoTDB instance and managing all StorageGroupProsessor. org.apache.iotdb.db.engine.storagegroup.StorageGroupProcessor Responsible for writing and accessing data within a time partition of a storage group. Manages all partitions‘ TsFileProcessor . org.apache.iotdb.db.engine.storagegroup.TsFileProcessor Responsible for data writing and accessing a TsFile file. # Data writing See details: Data writing # Data access Main entrance（StorageEngine）: public QueryDataSource query(SingleSeriesExpression seriesExpression, QueryContext context, QueryFileManager filePathsManager)
​
Find all ordered and out-of-order TsFileResources containing this time series and return them for use by the query engine # Related documents Write Ahead Log (WAL) memtable Endurance File merge mechanism
←
SchemaManager
WAL
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Brand Management
People
Roles
Members
Committers
Board of Directors
Officers & Project VPs
Location Map
Code of Conduct
Committer Directory
Community
Community Development
Code of Conduct
Get Involved
Mentoring
Help Wanted
Community Events
FAQ
Mailing Lists
License
Apache License 2.0
Licensing FAQ
Contributor License Agreements
* IOTDB-926 Support reconnection of Session
* IOTDB-941 Support 'delete storage group '
* IOTDB-968 Support time predicate in select last, e.g., select last * from root where time >= T
* Show alias if it is used in query
* Add level compaction strategy
* Add partialInsert
## Incompatible changes
* IOTDB-778 Support double/single quotation in Path
* IOTDB-870 change tags and attributes output to two columns with json values
## Miscellaneous changes
* IOTDB-784 Update rpc protocol to V3
* IOTDB-790 change base_dir to system_dir
* IOTDB-829 Accelerate delete multiple timeseries
* IOTDB-839 Make Tablet api more friendly
* IOTDB-902 Optimize max_time aggregation
* IOTDB-916 Add a config entry to make Last cache configurable
* IOTDB-928 Make ENCODING optional in create time series sentence
* IOTDB-938 Re-implement Gorilla encoding algorithm
* IOTDB-942 Optimization of query with long time unsequence page
* IOTDB-943 Fix cpu usage too high
* Add query load log
* Add merge rate limiting
## Bug Fixes
We suggest the following mirror
site for your download:
https://mirrors.gigenet.com/apache/iotdb/0.11.3/apache-iotdb-0.11.3-source-release.zip
Other mirror sites are suggested below.
It is essential that you verify the integrity of the downloaded file using
the PGP signature (.asc file) or a hash (.md5 or .sha* file).
Please only use the backup mirrors to download KEYS, PGP signatures and hashes (SHA* etc)
-- or if no other mirrors are working.
HTTP¶
https://apache.claz.org/iotdb/0.11.3/apache-iotdb-0.11.3-source-release.zip https://apache.osuosl.org/iotdb/0.11.3/apache-iotdb-0.11.3-source-release.zip https://ftp.wayne.edu/apache/iotdb/0.11.3/apache-iotdb-0.11.3-source-release.zip https://mirror.cogentco.com/pub/apache/iotdb/0.11.3/apache-iotdb-0.11.3-source-release.zip https://mirror.nodesdirect.com/apache/iotdb/0.11.3/apache-iotdb-0.11.3-source-release.zip https://mirror.olnevhost.net/pub/apache/iotdb/0.11.3/apache-iotdb-0.11.3-source-release.zip https://mirrors.advancedhosters.com/apache/iotdb/0.11.3/apache-iotdb-0.11.3-source-release.zip https://mirrors.gigenet.com/apache/iotdb/0.11.3/apache-iotdb-0.11.3-source-release.zip https://mirrors.ocf.berkeley.edu/apache/iotdb/0.11.3/apache-iotdb-0.11.3-source-release.zip https://mirrors.sonic.net/apache/iotdb/0.11.3/apache-iotdb-0.11.3-source-release.zip
Backup Sites¶
Please only use the backup mirrors to download KEYS, PGP signatures and hashes (SHA* etc)
-- or if no other mirrors are working.
https://downloads.apache.org/iotdb/0.11.3/apache-iotdb-0.11.3-source-release.zip
The full listing of mirror sites is also
available.
Becoming a mirror¶
The procedure for setting up new mirrors is described in How to become a
mirror.
Verify the integrity of the files¶
It is essential that you verify the integrity of the downloaded file using
the PGP signature (.asc file) or a hash (.md5 or .sha* file). Please read Verifying Apache Software
Foundation Releases for more information on why
you should verify our releases.
#3147
opened May 8, 2021 by
irvine0109
1
python客户端偶尔报错TTransportException
Module - Python Client
#3146
opened May 8, 2021 by
QueeGuo
1
IotDB图形化管理监控界面研发计划
#3130
opened May 6, 2021 by
loveher147
7
session mode writing special character in the timeseries path within double quote needed
#3117
opened Apr 30, 2021 by
Guoyuechuan
1
Note: <FillClause> can not use <LIMITClause> but not <SLIMITClause>.
123456789101112131415161718192021222324Group By Device Statement GroupbyDeviceClause : GROUP BY DEVICE
Rules:
1. Both uppercase and lowercase are ok.
Correct example: select * from root.sg1 group by device
Correct example: select * from root.sg1 GROUP BY DEVICE
2. GroupbyDeviceClause can only be used at the end of a query statement.
Correct example: select * from root.sg1 where time > 10 group by device
Wrong example: select * from root.sg1 group by device where time > 10
3. The paths of the SELECT clause can only be single level. In other words, the paths of the SELECT clause can only be measurements or STAR, without DOT.
Correct example: select s0,s1 from root.sg1.* group by device
Correct example: select s0,s1 from root.sg1.d0, root.sg1.d1 group by device
Correct example: select * from root.sg1.* group by device
Correct example: select * from root group by device
Correct example: select s0,s1,* from root.*.* group by device
Wrong example: select d0.s1, d0.s2, d1.s0 from root.sg1 group by device
Wrong example: select *.s0, *.s1 from root.* group by device
Wrong example: select *.*.* from root group by device
4. The data types of the same measurement column should be the same across devices.
Mar 4, 2021
Copy link
THUMarkLau
commented
Mar 5, 2021
Copy link
samperson1997
commented
Mar 25, 2021
•
edited
Copy link
samperson1997
commented
Apr 9, 2021
•
edited
Copy link
zhanglingzhe0820
* IOTDB-715 Support previous time range in previousuntillast
* IOTDB-719 add avg_series_point_number_threshold in config
* IOTDB-731 Continue write inside InsertPlan
* IOTDB-734 Add Support for NaN in Double / Floats in SQL Syntax.
* IOTDB-744 Support upsert alias
## Incompatible changes
* IOTDB-138 Move All metadata query to usual query
* IOTDB-322 upgrade to thrift 0.12.0-0.13.0
* IOTDB-325 Refactor Statistics in TsFile
* IOTDB-419 Refactor the 'last' and 'first' aggregators to 'last_value' and 'first_value'
* IOTDB-506 upgrade the rpc protocol to v2 to reject clients or servers that version < 0.10
* IOTDB-587 TsFile is upgraded to version 2
* IOTDB-593 add metaOffset in TsFileMetadata
* IOTDB-597 Rename methods in Session: insertBatch to insertTablet, insertInBatch to insertRecords, insert to insertRecord
* RPC is incompatible, you can not use client-v0.9 to connect with server-v0.10
* TsFile format is incompatible, will be upgraded when starting 0.10
* Refine exception code in native api
## Miscellaneous changes
* IOTDB-190 upgrade from antlr3 to antlr4
* IOTDB-418 new query engine
* IOTDB-429 return empty dataset instead of throw exception, e.g., show child paths root.*
* IOTDB-445 Unify the keyword of "timestamp" and "time"
* IOTDB-450 Add design documents
* IOTDB-498 Support date format "2020-02-10"
* IOTDB-503 Add checkTimeseriesExists in java native api
* IOTDB-605 Add more levels of index in TsFileMetadata for handling too many series in one device
文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
ASF Sponsorship
Targeted Sponsorship
Corporate Giving
The Apache Way
The Apache Way
Sustainable Open Source
How it Works
Merit
Success at Apache
Join Us
Getting Started
Help Wanted
ApacheCon
Community Events
Travel Assistance
Summer of Code
Code of Conduct
Etiquette
Projects
Project List
How they work
Independence
Date Founded
Names
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
delete the LeafMNode read tlog using offset in the LeafMNode, update tag inverted index if the storage group becomes empty after deleting, record its name if failed
return the full path of failed timeseries if not restart
delete the recorded empty storage group persist log into mlog currently, we won't delete the tag/attribute info of that timeseries in tlog Set Storage Group add StorageGroupMNode in MTree If dynamic parameters are turned on, check the memory is satisfied or not if not restart, persist log into mlog Delete Storage Group delete the StorageGroupMNode in MTree, and return all the LeafMNode in that storage group
While deleting StorageGroupMNode, we need to obtain the write lock of that StorageGroupMNode if succeed
delete that StorageGroupMNode if failed
return the failed storage group name iterate the returned LeafMNode list, reading the tlog using the offset in LeafMNode, and then update tag inverted index if not restart, persist log into mlog Set TTL obtain the corresponding StorageGroupMNode, modify the TTL property in it. if not restart, persist log into mlog Change the offset of Timeseries modify the offset of the timeseries's LeafMNode Change the alias of Timeseries modify the alias of the timeseries's LeafMNode and update the aliasMap in its parent node. In addition to these seven operation that are needed to be logged, there are another six alter operation to tag/attribute info of timeseries. Same as above, at the beginning of each operation, it will try to obatin the write lock of MManager, and release it after operation. Rename Tag/Attribute obtain the LeafMNode of that timeseries read tag and attribute information through the offset in LeafMNode if the new name has existed, then throw exception otherwise:
we need to update the offset in plan each time we call the method in MManger to fetch result, we should add it with fetch size. if hasLimit is false, then reset index to zero. if not
if index < result.size()，return true if index > result.size()，return false
←
ResultSetConstruction
StorageEngine
→
Code of Conduct
Get Involved
Mentoring
Help Wanted
Community Events
FAQ
Mailing Lists
License
Apache License 2.0
Licensing FAQ
Contributor License Agreements
Software Grants
Trademarks
Exports
Sponsors
Sponsor the ASF
Sponsor Thanks
Corporate Giving
Individual Donations
Buy Stuff
Downloads
Distribution
(opens new window) System design Architecture TsFile QueryEngine QueryEnginePlannerPlanExecutorResultSetConstructionSchemaManager StorageEngine DataQuery Tools Connector Client # QueryEngine # Design ideas The query engine is responsible for parsing all user commands, generating plans, delivering them to the corresponding executors, and returning result sets. # Related classes org.apache.iotdb.db.service.TSServiceImpl IoTDB server-side RPC implementation, which directly interacts with the client. org.apache.iotdb.db.qp.Planner Parse SQL, generate logical plans, optimize logical plans, and generate physical plans. org.apache.iotdb.db.qp.executor.PlanExecutor Distribute the physical plan to the corresponding actuators, including the following four specific actuators. MManager: Metadata operations StorageEngine: Data write QueryRouter: Data query LocalFileAuthorizer: Permission operation org.apache.iotdb.db.query.dataset.* The batch result set is returned to the client and contains part of the query logic. # Query process SQL parsing Generate logical plans Generate physical plans Constructing a result set generator Returning result sets in batches # Related documents Query Plan Generator PlanExecutor
←
Read
Planner
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
(opens new window) System design Architecture TsFile TsFileFormatWriteReadQueryEngine SchemaManager StorageEngine DataQuery Tools Connector Client # TsFile TsFile is the data file of IoTDB. # Related File Format Write Process Read Process
←
Architecture
Format
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Total line number = 1
It costs 0.417s
1234567# Schema Statement Set Storage Group SET STORAGE GROUP TO <FullPath>
Eg: IoTDB > SET STORAGE GROUP TO root.ln.wf01.wt01
Note: FullPath can not include `*`
123Delete Storage Group DELETE STORAGE GROUP <FullPath> [COMMA <FullPath>]*
Eg: IoTDB > DELETE STORAGE GROUP root.ln.wf01.wt01
Eg: IoTDB > DELETE STORAGE GROUP root.ln.wf01.wt01, root.ln.wf01.wt02
Eg: IoTDB > DELETE STORAGE GROUP root.ln.wf01.*
Eg: IoTDB > DELETE STORAGE GROUP root.*
12345Create Timeseries Statement CREATE TIMESERIES <FullPath> WITH <AttributeClauses>
alias
: LR_BRACKET ID RR_BRACKET
;
attributeClauses
: DATATYPE OPERATOR_EQ dataType COMMA ENCODING OPERATOR_EQ encoding
(COMMA (COMPRESSOR | COMPRESSION) OPERATOR_EQ compressor=propertyValue)?
(COMMA property)*
tagClause
attributeClause
;
attributeClause
: (ATTRIBUTES LR_BRACKET property (COMMA property)* RR_BRACKET)?
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Statistics
Apache Incubator
Help Wanted
Brand Management
People
Roles
Members
Committers
Board of Directors
Officers & Project VPs
Location Map
Code of Conduct
Committer Directory
Community
Community Development
Code of Conduct
Get Involved
Targeted Sponsorship
Corporate Giving
The Apache Way
The Apache Way
Sustainable Open Source
How it Works
Merit
Success at Apache
Join Us
Getting Started
Help Wanted
ApacheCon
Community Events
Travel Assistance
Summer of Code
Code of Conduct
Etiquette
Projects
Project List
How they work
Independence
Date Founded
Names
Projects
Project List
How they work
Independence
Date Founded
Names
Categories
Languages
Statistics
Apache Incubator
Help Wanted
Brand Management
People
Roles
Members
Committers
Board of Directors
Officers & Project VPs
Location Map
Code of Conduct
Committer Directory
Community
Community Development
Code of Conduct
Software Grants
Trademarks
Exports
Sponsors
Sponsor the ASF
Sponsor Thanks
Corporate Giving
Individual Donations
Buy Stuff
Downloads
Distribution
Releases
Mirrors
Infrastructure Status
Infrastructure Statistics
Search
Community-led development "The Apache Way"
Projects
Project List
How they work
Independence
Date Founded
Names
* IOTDB-749 Avoid select * from root OOM
* IOTDB-774 Fix "show timeseries" OOM problem
* IOTDB-832 Fix sessionPool logic when reconnection failed
* IOTDB-833 Fix JMX cannot connect IoTDB in docker
* IOTDB-835 Delete timeseries and change data type then write failed
* IOTDB-836 Statistics classes mismatched when endFile （delete timeseries then recreate）
* IOTDB-837 ArrayIndexOutOfBoundsException if the measurementId size is not consistent with the value size
* IOTDB-847 Fix bug that 'List user privileges' cannot apply to 'root'
* IOTDB-850 a user could list others privilege bug
* IOTDB-851 Enhance failure tolerance when recover WAL (enable partial insertion)
* IOTDB-855 Can not release Session in SessionPool if RuntimeException occurs
* IOTDB-868 Can not redo mlogs with special characters like comma
* IOTDB-872 Enable setting timezone at client
* IOTDB-877 fix prefix bug on show storage group and show devices
* IOTDB-904 fix update last cache NullPointerException
* IOTDB-920 Disable insert row that only contains time/timestamp column
* IOTDB-921 When execute two query simultaneously in one statement, got error
* IOTDB-922 Int and Long can convert to each other in ResultSet
* IOTDB-947 Fix error when counting node with wildcard
* IOTDB-949 Align by device doesn't support 'T*' in path.
* IOTDB-956 Filter will be missed in group by time align by device
* IOTDB-963 Redo deleteStorageGroupPlan failed when recovering
* IOTDB-967 Fix xxx does not have the child node xxx Bug in count timeseries
* IOTDB-970 Restrict log file number and size
* IOTDB-971 More precise error messages of slimit and soffset
The PGP signature can be verified using PGP or GPG. First download the
KEYS as well as the asc signature file for the relevant distribution.
Make sure you get these files from the main distribution site, rather than
from a mirror. Then verify the signatures using
% gpg --import KEYS
% gpg --verify downloaded_file.asc downloaded_file
or
% pgpk -a KEYS
% pgpv downloaded_file.asc
or
% pgp -ka KEYS
% pgp downloaded_file.asc
Alternatively, you can verify the hash on the file.
Hashes can be calculated using GPG:
% gpg --print-md SHA256 downloaded_file
The output should be compared with the contents of the SHA256 file.
Similarly for other hashes (SHA512, SHA1, MD5 etc) which may be provided.
Windows 7 and later systems should all now have certUtil:
% certUtil -hashfile pathToFileToCheck
HashAlgorithm choices: MD2 MD4 MD5 SHA1 SHA256 SHA384 SHA512
Unix-like systems (and macOS) will have a utility called
md5, md5sum or shasum
Community
Overview
Conferences
Summer of Code
Getting Started
如何知道某个节点下面的子路径，是节点，还是时间序列？
#3113
opened Apr 30, 2021 by
herowzz
2
并发插入record发生错误
#3090
opened Apr 28, 2021 by
lausannel
4
插入数据出现数据错乱现象
#3084
opened Apr 28, 2021 by
herowzz
14
写入性能的相关参数调整方法 (The adjustment of the parameters which are related to writing performance)
Solution
#3078
opened Apr 27, 2021 by
Note that when it comes to aggregated paths, the data type of the measurement column will reflect
Correct example: select s0 from root.sg1.d0,root.sg1.d1 group by device
root.sg1.d0.s0 and root.sg1.d1.s0 are both INT32.
Correct example: select count(s0) from root.sg1.d0,root.sg1.d1 group by device
count(root.sg1.d0.s0) and count(root.sg1.d1.s0) are both INT64.
Wrong example: select s0 from root.sg1.d0, root.sg2.d3 group by device
root.sg1.d0.s0 is INT32 while root.sg2.d3.s0 is FLOAT.
5. The display principle of the result table is that only when the column (or row) has existing data will the column (or row) be shown, with nonexistent cells being null.
For example, "select s0,s1,s2 from root.sg.d0, root.sg.d1, root.sg.d2 group by device". Suppose that the actual existing timeseries are as follows:
- root.sg.d0.s0
- root.sg.d0.s1
- root.sg.d1.s0
Then the header of the result table will be: [Time, Device, s0, s1].
And you could expect a table like:
| Time | Device | s0 | s1 |
| --- | --- | ---| ---|
| 1 |root.sg.d0| 20 | 2.5|
| 2 |root.sg.d0| 23 | 3.1|
| ... | ... | ...| ...|
| 1 |root.sg.d1| 12 |null|
commented
May 19, 2021
Sign up for free
to join this conversation on GitHub.
Already have an account?
Sign in to comment
Assignees
No one assigned
Labels
None yet
Projects
None yet
Milestone
No milestone
Linked pull requests
Successfully merging a pull request may close this issue.
None yet
18 participants
© 2021 GitHub, Inc.
* IOTDB-625 Change default level number: root is level 0
* IOTDB-628 rename client to cli
* IOTDB-621 Add Check isNull in Field for querying using session
* IOTDB-632 Performance improve for PreviousFill/LinearFill
* IOTDB-695 Accelerate the count timeseries query
* IOTDB-707 Optimize TsFileResource memory usage
* IOTDB-730 continue write in MQTT when some events are failed
* IOTDB-729 shutdown uncessary threadpool
* IOTDB-733 Enable setting for mqtt max length
* IOTDB-732 Upgrade fastjson version to 1.2.70
* Allow "count timeseries" without a prefix path
* Add max backup log file number
* add rpc compression api in client and session module
* Continue writing the last unclosed file
* Move the vulnera-checks section into the apache-release profile to accelerate compile
* Add metaquery in python example
* Set inferType of MQTT InsertPlan to true
## Bug Fixes
* IOTDB-125 Potential Concurrency bug while deleting and inserting happen together
* IOTDB-185 fix start-client failed on WinOS if there is blank space in the file path; let start-server.bat suport jdk12,13 etc
* IOTDB-304 Fix bug of incomplete HDFS URI
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) 文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) 文档 In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.x系统设计下载社区
Wiki
开发人员 技术支持 活动与报告 交流与反馈开发 如何投票 如何提交代码 成为Committer 项目开发指南 TsFile的更改列表 RPC变更清单ASF
基金会
许可证
安全
赞助
致谢
活动
语言 English 简体中文
gitHub
(opens new window) # 工作流程 # 主要链接 IoTDB 官网：https://iotdb.apache.org/ 代码库：https://github.com/apache/iotdb/tree/master 快速上手：http://iotdb.apache.org/UserGuide/master/Get%20Started/QuickStart.html Jira 任务管理：https://issues.apache.org/jira/projects/IOTDB/issues Wiki 文档管理：https://cwiki.apache.org/confluence/display/IOTDB/Home # 订阅邮件列表 邮件列表是 Apache 项目进行技术讨论和用户沟通的地方，订阅邮件列表就可以收到邮件了。 邮件列表地址：dev@iotdb.apache.org 订阅方法：用想接收邮件的邮箱向 dev-subscribe@iotdb.apache.org 发一封邮件，主题内容不限，收到回复后，再次向确认地址发一封确认邮件（确认地址比较长，推荐qq邮箱）。 其他邮件列表: notifications@iotdb.apache.org (用于接收JIRA通知.)
如果你只想接收个别感兴趣的JIRA通知，你不需要订阅这个列表。你只需要在JIRA issue页面上点击"开始关注这个issue" 或者在这个issue上做评论就行了。 commits@iotdb.apache.org (任何代码改动都会通知到此处。该邮件列表邮件数量十分多，请注意。) reviews@iotdb.apache.org (任何代码审阅意见都会通知到此处。该邮件列表邮件数量十分多，请注意。) # 新功能、Bug反馈、改进等 所有希望 IoTDB 做的功能或修的 bug，都可以在 Jira 上提 issue 可以选择 issue 类型：bug、improvement、new feature等。新建的 issue 会自动向邮件列表中同步邮件，之后的讨论可在 jira 上留言，也可以在邮件列表进行。当问题解决后请关闭 issue。 # 邮件讨论内容（英文） 第一次参与邮件列表可以简单介绍一下自己。（Hi, I'm xxx ...) 开发功能前可以发邮件声明一下自己想做的任务。（Hi，I'm working on issue IOTDB-XXX，My plan is ...） # 贡献文档 IoTDB 所有官网上的内容都在项目根目录的 docs 中： docs/SystemDesign: 系统设计文档-英文版 docs/zh/SystemDesign: 系统设计文档-中文版 docs/UserGuide: 用户手册-英文版 docs/zh/UserGuide: 用户手册-中文版 docs/Community: 社区-英文版 docs/zh/Community: 社区-中文版 docs/Development: 开发指南-英文版 docs/zh/Development: 开发指南-中文版 官网上的版本和分支的对应关系： In progress -> master major_version.x -> rel/major_version （如 0.9.x -> rel/0.9） 注意事项： Markdown 中的图片可上传至 https://github.com/apache/iotdb-bin-resources 获得 url # 代码格式化 我们使用 Spotless
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.10.x) Get Started Overview Concept Server DownloadSingle Node SetupCluster SetupConfig ManualDocker ImageClient Operation Manual System Tools Ecosystem Integration Architecture # Download IoTDB provides you three installation methods, you can refer to the following suggestions, choose one of them: Installation from source code. If you need to modify the code yourself, you can use this method. Installation from binary files. Download the binary files from the official website. This is the recommended method, in which you will get a binary released package which is out-of-the-box.(Comming Soon...) Using Docker：The path to the dockerfile is https://github.com/apache/incubator-iotdb/blob/master/docker/Dockerfile # Prerequisites To use IoTDB, you need to have: Java >= 1.8 (Please make sure the environment path has been set) Maven >= 3.1 (Optional) Set the max open files num as 65535 to avoid "too many open files" problem. Note: If you don't have maven installed, you should replace 'mvn' in the following commands with 'mvnw.sh' or 'mvnw.cmd'. # Installation from binary files You can download the binary file from:
Here # Installation from source code You can get the released source code from https://iotdb.apache.org/Download/, or from the git repository https://github.com/apache/incubator-iotdb/tree/master
You can download the source code from: git clone https://github.com/apache/incubator-iotdb.git
Categories
Languages
Statistics
Apache Incubator
Help Wanted
Brand Management
People
Roles
Members
Committers
Board of Directors
Officers & Project VPs
Location Map
Code of Conduct
Committer Directory
Community
Community Development
Code of Conduct
Get Involved
Mentoring
Help Wanted
Community Events
FAQ
Mailing Lists
License
Apache License 2.0
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.10.x) Get Started Overview What is IoTDBArchitectureScenarioFeaturesConcept Server Client Operation Manual System Tools Ecosystem Integration Architecture # What is IoTDB IoTDB(Internet of Things Database) is an integrated data management engine designed for timeseries data, which can provide users specific services for data collection, storage and analysis. Due to its light weight structure, high performance and usable features together with its intense integration with Hadoop and Spark ecology, IoTDB meets the requirements of massive dataset storage, high-speed data input and complex data analysis in the IoT industrial field.
←
Research Papers
Architecture
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.10.x) Get Started QuickStartFrequently asked questionsResearch PapersOverview Concept Server Client Operation Manual System Tools Ecosystem Integration Architecture # Research Papers Apache IoTDB started at Tsinghua University, School of Software. IoTDB is a database for managing large amount of time series data with columnar storage, data encoding, pre-computation, and index techniques. It has SQL-like interface to write millions of data points per second per node and is optimized to get query results in few seconds over trillions of data points. It can also be easily integrated with Apache Hadoop MapReduce and Apache Spark for analytics. The research papers related are in the following: PISA: An Index for Aggregating Big Time Series Data (opens new window), Xiangdong Huang and Jianmin Wang and Raymond K. Wong and Jinrui Zhang and Chen Wang. CIKM 2016. Matching Consecutive Subpatterns over Streaming Time Series (opens new window), Rong Kang and Chen Wang and Peng Wang and Yuting Ding and Jianmin Wang. APWeb/WAIM 2018. KV-match: A Subsequence Matching Approach Supporting Normalization and Time Warping (opens new window), Jiaye Wu and Peng Wang and Chen Wang and Wei Wang and Jianmin Wang. ICDE 2019. The Design of Apache IoTDB distributed framework (opens new window), Tianan Li, Jianmin Wang, Xiangdong Huang, Yi Xu, Dongfang Mao, Jun Yuan. NDBC 2019 Dual-PISA: An index for aggregation operations on time series data (opens new window), Jialin Qiao, Xiangdong Huang, Jianmin Wang, Raymond K Wong. IS 2020 # Benchmark tools We also developed Benchmark tools for time series databases https://github.com/thulab/iotdb-benchmark
←
Frequently asked questions
What is IoTDB
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Releases
Mirrors
Infrastructure Status
Infrastructure Statistics
Search
Community-led development "The Apache Way"
Projects
Project List
How they work
Independence
Date Founded
Names
Categories
Languages
Statistics
Apache Incubator
Help Wanted
Brand Management
Glossary of Terms
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
;
tagClause
: (TAGS LR_BRACKET property (COMMA property)* RR_BRACKET)?
;
DataTypeValue: BOOLEAN | DOUBLE | FLOAT | INT32 | INT64 | TEXT
EncodingValue: GORILLA | PLAIN | RLE | TS_2DIFF | REGULAR
CompressorValue: UNCOMPRESSED | SNAPPY
Eg: CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN
Eg: CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE
Eg: CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE, COMPRESSOR=SNAPPY, MAX_POINT_NUMBER=3
Eg: create timeseries root.turbine.d0.s0(temperature) with datatype=FLOAT, encoding=RLE, compression=SNAPPY tags(unit=f, description='turbine this is a test1') attributes(H_Alarm=100, M_Alarm=50)
Note: Datatype and encoding type must be corresponding. Please check Chapter 3 Encoding Section for details.
12345678910111213141516171819202122232425Delete Timeseries Statement DELETE TIMESERIES <PrefixPath> [COMMA <PrefixPath>]*
Eg: IoTDB > DELETE TIMESERIES root.ln.wf01.wt01.status
Eg: IoTDB > DELETE TIMESERIES root.ln.wf01.wt01.status, root.ln.wf01.wt01.temperature
Eg: IoTDB > DELETE TIMESERIES root.ln.wf01.wt01.*
1234Alter Timeseries Statement ALTER TIMESERIES fullPath alterClause
alterClause
: RENAME beforeName=ID TO currentName=ID
| SET property (COMMA property)*
| DROP ID (COMMA ID)*
(opens new window) IoTDB User Guide (V0.11.x) Get Started QuickStartFrequently asked questionsResearch PapersOverview Concept Server Client Operation Manual System Tools Ecosystem Integration Architecture Comparison with TSDBs # Research Papers Apache IoTDB starts at Tsinghua University, School of Software. IoTDB is a database for managing large amount of time series data with columnar storage, data encoding, pre-computation, and index techniques. It has SQL-like interface to write millions of data points per second per node and is optimized to get query results in few seconds over trillions of data points. It can also be easily integrated with Apache Hadoop MapReduce and Apache Spark for analytics. The research papers related are as follows: Apache IoTDB: time-series database for internet of things (opens new window), Chen Wang, Xiangdong Huang, Jialin Qiao,
Tian Jiang, Lei Rui, Jinrui Zhang, Rong Kang, Julian Feinauer, Kevin A. McGrail, Peng Wang, Jun Yuan, Jianmin Wang, Jiaguang Sun. VLDB 2020 PISA: An Index for Aggregating Big Time Series Data (opens new window), Xiangdong Huang and Jianmin Wang and Raymond K. Wong and Jinrui Zhang and Chen Wang. CIKM 2016. Matching Consecutive Subpatterns over Streaming Time Series (opens new window), Rong Kang and Chen Wang and Peng Wang and Yuting Ding and Jianmin Wang. APWeb/WAIM 2018. KV-match: A Subsequence Matching Approach Supporting Normalization and Time Warping (opens new window), Jiaye Wu and Peng Wang and Chen Wang and Wei Wang and Jianmin Wang. ICDE 2019. The Design of Apache IoTDB distributed framework (opens new window), Tianan Li, Jianmin Wang, Xiangdong Huang, Yi Xu, Dongfang Mao, Jun Yuan. NDBC 2019 Dual-PISA: An index for aggregation operations on time series data (opens new window), Jialin Qiao, Xiangdong Huang, Jianmin Wang, Raymond K Wong. IS 2020 # Benchmark tools We also developed Benchmark tools for time series databases https://github.com/thulab/iotdb-benchmark
←
Frequently asked questions
What is IoTDB
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.11.x) Get Started QuickStartFrequently asked questionsResearch PapersOverview Concept Server Client Operation Manual System Tools Ecosystem Integration Architecture Comparison with TSDBs # Frequently Asked Questions # Outline Frequently Asked Questions
How can I identify my version of IoTDB? Where can I find IoTDB logs? Where can I find IoTDB data files? How do I know how many time series are stored in IoTDB? Can I use Hadoop and Spark to read TsFile in IoTDB? How does IoTDB handle duplicate points? How can I tell what type of the specific timeseries? How can I change IoTDB's Cli time display format? # How can I identify my version of IoTDB? There are several ways to identify the version of IoTDB that you are using: Launch IoTDB's Command Line Interface: > ./start-cli.sh -p 6667 -pw root -u root -h localhost
_____ _________ ______ ______
|_ _| | _ _ ||_ _ `.|_ _ \
| | .--.|_/ | | \_| | | `. \ | |_) |
| | / .'`\ \ | | | | | | | __'.
_| |_| \__. | _| |_ _| |_.' /_| |__) |
|_____|'.__.' |_____| |______.'|_______/ version x.x.x
1234567Check pom.xml file: <version>x.x.x</version>
1Use JDBC API: String iotdbVersion = tsfileDatabaseMetadata.getDatabaseProductVersion();
1Use Command Line Interface: IoTDB> show version
show version
+---------------+
|version |
+---------------+
|x.x.x |
+---------------+
Total line number = 1
It costs 0.241s
123456789# Where can I find IoTDB logs? Suppose your root directory is: $ pwd
/workspace/iotdb
Mentoring
Help Wanted
Community Events
FAQ
Mailing Lists
License
Apache License 2.0
Licensing FAQ
Contributor License Agreements
Software Grants
Trademarks
Exports
Sponsors
Sponsor the ASF
Sponsor Thanks
Corporate Giving
Individual Donations
Buy Stuff
Downloads
Distribution
Releases
Mirrors
Infrastructure Status
Infrastructure Statistics
Categories
Languages
Statistics
Apache Incubator
Help Wanted
Brand Management
People
Roles
Members
Committers
Board of Directors
Officers & Project VPs
Location Map
Code of Conduct
Committer Directory
Community
Community Development
Code of Conduct
Get Involved
Mentoring
Help Wanted
Community Events
FAQ
Mailing Lists
Get Involved
Mentoring
Help Wanted
Community Events
FAQ
Mailing Lists
License
Apache License 2.0
Licensing FAQ
Contributor License Agreements
Software Grants
Trademarks
Exports
Sponsors
Sponsor the ASF
Sponsor Thanks
Corporate Giving
Individual Donations
Buy Stuff
Downloads
Distribution
Releases
Mirrors
Categories
Languages
Statistics
Apache Incubator
Help Wanted
Brand Management
Glossary of Terms
People
Roles
Members
Committers
Board of Directors
Officers & Project VPs
Diversity & Inclusion
Code of Conduct
Committer Directory
Heat Map
Community
Community Development
Code of Conduct
Get Involved
Mentoring
Help Wanted
* IOTDB-975 when series does not exist in TsFile, reading wrong ChunkMetadataList
# Apache IoTDB (incubating) 0.10.1
* [IOTDB-797] InsertTablet deserialization from WAL error
* [IOTDB-788] Can not upgrade all storage groups
* [IOTDB-792] deadlock when insert while show latest timeseries
* [IOTDB-794] Rename file or delete file Error in start check in Windows
* [IOTDB-795] BufferUnderflowException in Hive-connector
* [IOTDB-766] Do not release unclosed file reader, a small memory leak
* [IOTDB-796] Concurrent Query throughput is low
* Query result is not correct when some unsequence data exists
* Change the default fetch size to 10000 in session
* [IOTDB-798] fix a set rowLimit and rowOffset bug
* [IOTDB-800] Add a new config type for those parameters which could not be modified any more after the first start
* [IOTDB-802] Improve "group by" query performance
* [IOTDB-799] remove log visualizer tool from v0.10
* fix license-binary
* [IOTDB-805] Fix BufferUnderflowException when querying TsFile stored in HDFS
* python session client ver-0.10.0
* [IOTDB-808] fix bug in selfCheck() truncate
* fix doc of MeasurementSchema in Tablet
* [IOTDB-811] fix upgrading mlog many times when upgrading system.properties crashed
* Improve IoTDB restart process
The Apache Way
Travel Assistance
Get Involved
Code of Conduct
Community FAQ
Memorials
Innovation
Incubator
Labs
Licensing
Licensing FAQ
Trademark Policy
Contacts
Tech Operations
Developer Information
Infrastructure
Security
Status
Contacts
Press
HTHou
2
There is a vulnerability in flink 1.11.1 ,upgrade recommended
#3066
opened Apr 26, 2021 by
QiAnXinCodeSafe
There is a vulnerability in spring-boot 1.5.15.RELEASE ,upgrade recommended
#3064
opened Apr 26, 2021 by
QiAnXinCodeSafe
#3058
opened Apr 24, 2021 by
mzp0514
8
批量查询测点元数据
#3053
| 2 |root.sg.d1| 19 |null|
| ... | ... | ...| ...|
Note that the cells of measurement 's0' and device 'root.sg.d1' are all null.
Also note that the column of 's2' and the rows of 'root.sg.d2' are not existent.
6. The duplicated devices in the prefix paths are neglected.
For example, "select s0,s1 from root.sg.d0,root.sg.d0,root.sg.d1 group by device" is equal to "select s0,s1 from root.sg.d0,root.sg.d1 group by device".
For example. "select s0,s1 from root.sg.*,root.sg.d0 group by device" is equal to "select s0,s1 from root.sg.* group by device".
7. The duplicated measurements in the suffix paths are not neglected.
For example, "select s0,s0,s1 from root.sg.* group by device" is not equal to "select s0,s1 from root.sg.* group by device".
8. More correct examples:
- select * from root.vehicle group by device
- select s0,s0,s1 from root.vehicle.* group by device
- select s0,s1 from root.vehicle.* limit 10 offset 1 group by device
- select * from root.vehicle slimit 10 soffset 2 group by device
- select * from root.vehicle where time > 10 group by device
- select * from root.vehicle where root.vehicle.d0.s0>0 group by device
- select count(*) from root.vehicle group by device
- select sum(*) from root.vehicle GROUP BY (20ms,0,[2,50]) group by device
- select * from root.vehicle where time = 3 Fill(int32[previous, 5ms]) group by device
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
* IOTDB-341 Fix data type bug in grafana
* IOTDB-370 fix a concurrent problem in parsing sql
* IOTDB-376 fix metric to show executeQuery
* IOTDB-392 fix export CSV
* IOTDB-393 Fix unclear error message for no privilege users
* IOTDB-401 Correct the calculation of a chunk if there is no data in the chunk, do not flush empty chunk
* IOTDB-412 Paths are not correctly deduplicated
* IOTDB-420 Avoid encoding task dying silently
* IOTDB-425 fix can't change the root password.
* IOTDB-459 Fix calmem tool bug
* IOTDB-470fix IllegalArgumentException when there exists 0 byte TsFile
* IOTDB-529 Relative times and NOW() operator cannot be used in Group By
* IOTDB-531 fix issue when grafana visualize boolean data
* IOTDB-546 Fix show child paths statement doesn't show quotation marks
* IOTDB-643 Concurrent queries cause BufferUnderflowException when storage in HDFS
* IOTDB-663 Fix query cache OOM while executing query
* IOTDB-664 Win -e option
* IOTDB-669 fix getting two columns bug while ”show devices“ in session
* IOTDB-692 merge behaves incorrectly
* IOTDB-712 Meet BufferUnderflowException and can not recover
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
plugin (opens new window) 和 google-java-format (opens new window) 格式化Java代码. 你可以通过以下步骤将IDE配置为在保存时自动应用格式以IDEA为例)： 下载 google-java-format-plugin v1.7.0.5 (opens new window), 安装到IDEA(Preferences -> plugins -> search google-java-format),更详细的操作手册 (opens new window) 从磁盘安装 (Plugins -> little gear icon -> "Install plugin from disk" -> Navigate to downloaded zip file) 开启插件，并保持默认的GOOGLE格式 (2-space indents) 在Spotless没有升级到18+之前,不要升级google-java-format插件 安装 Save Actions 插件 (opens new window) , 并开启插件, 打开 "Optimize imports" and "Reformat file" 选项. 在“Save Actions”设置页面中，将 "File Path Inclusion" 设置为.*.java”, 避免在编辑的其他文件时候发生意外的重新格式化 # 贡献代码 可以到 jira 上领取现有 issue 或者自己创建 issue 再领取，评论说我要做这个 issue 就可以。 克隆仓库到自己的本地的仓库，clone到本地，关联apache仓库为上游 upstream 仓库。 从 master 切出新的分支，分支名根据这个分支的功能决定，一般叫 f_new_feature(如f_storage_engine) 或者 fix_bug(如fix_query_cache_bug) 在 idea 中添加code style为 根目录的 java-google-style.xml 修改代码，增加测试用例（单元测试、集成测试）
集成测试参考: server/src/test/java/org/apache/iotdb/db/integration/IoTDBTimeZoneIT 用 mvn spotless:check 检查代码样式，并用mvn spotless:apply修复样式 提交 PR, 以 [IOTDB-jira号] 开头 发邮件到 dev 邮件列表：(I've submitted a PR for issue IOTDB-xxx [link]) 根据其他人的审阅意见进行修改，继续更新，直到合并 关闭 jira issue # IoTDB调试方式 # 导入代码 # Intellij idea 推荐使用 Intellij idea。mvn clean package -DskipTests 之后把 antlr/target/generated-sources/antlr4 和 thrift/target/generated-sources/thrift 标记为 Source Root。 # Eclipse 如果是 eclipse 2019 之前的版本，需要现在 IoTDB 根目录执行 mvn eclipse:eclipse -DskipTests。 import -> General -> Existing Projects into Workspace -> 选择 IoTDB 根目录 如果 eclipse 2019 之后的版本 import -> Maven -> Existing Maven Projects # 调试代码 服务器主函数：server/src/main/java/org/apache/iotdb/db/service/IoTDB，可以debug模式启动 命令行界面：cli/src/main/java/org/apache/iotdb/cli/，linux 用 Cli，windows 用 WinCli，可以直接启动。启动时需要参数"-h 127.0.0.1 -p 6667 -u root -pw root" 服务器的 rpc 实现（主要用来客户端和服务器通信，一般在这里开始打断点）：server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl jdbc所有语句：executeStatement(TSExecuteStatementReq req) jdbc查询语句：executeQueryStatement(TSExecuteStatementReq req) native写入接口：insertRecord(TSInsertRecordReq req) 存储引擎 org.apache.iotdb.db.engine.StorageEngine 查询引擎 org.apache.iotdb.db.qp.Planner # 常见编译错误 无法下载 thrift-* 等文件, 例如 Could not get content org.apache.maven.wagon.TransferFailedException: Transfer failed for https://github.com/apache/iotdb-bin-resources/blob/main/compile-tools/thrift-0.14-ubuntu
这一般是网络问题，这时候需要手动下载上述文件： 根据以下网址手动下载上述文件; https://github.com/apache/iotdb-bin-resources/blob/main/compile-tools/thrift-0.14-MacOS https://github.com/apache/iotdb-bin-resources/blob/main/compile-tools/thrift-0.14-ubuntu 将该文件拷贝到thrift/target/tools/目录下 重新执行maven的编译命令 Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
CONFIGURATION, DESCRIBE, SLIMIT, LIMIT, UNLINK, OFFSET, SOFFSET, FILL, LINEAR, PREVIOUS, PREVIOUSUNTILLAST,
METADATA, TIMESERIES, TIMESTAMP, PROPERTY, WITH, ROOT, DATATYPE, COMPRESSOR, STORAGE, GROUP, LABEL,INT32,
INT64, FLOAT, DOUBLE, BOOLEAN, TEXT, ENCODING, PLAIN, PLAIN_DICTIONARY, RLE, DIFF, TS_2DIFF, GORILLA, REGULAR,
BITMAP, ADD, UPSERT, VALUES, NOW, LINK, INDEX, USING, ON, DROP, MERGE, LIST, USER, PRIVILEGES, ROLE, ALL, OF,
ALTER, PASSWORD, REVOKE, LOAD, WATERMARK_EMBEDDING, UNSET, TTL, FLUSH, TASK, INFO, DYNAMIC, PARAMETER, VERSION,
REMOVE, MOVE, CHILD, PATHS, DEVICES, COUNT, NODES, LEVEL, MIN_TIME, MAX_TIME, MIN_VALUE, MAX_VALUE, AVG, FIRST_VALUE,
SUM, LAST_VALUE, LAST, DISABLE, ALIGN, COMPRESSION, TIME, ATTRIBUTES, TAGS,RENAME, FULL, CLEAR, CACHE
12345678# Show Version show version
1+---------------+
| version|
+---------------+
|0.10.1-SNAPSHOT|
+---------------+
1Under the root path of incubator-iotdb: > mvn clean package -DskipTests
←
Compression
Single Node Setup
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Licensing FAQ
Contributor License Agreements
Software Grants
Trademarks
Exports
Sponsors
Sponsor the ASF
Sponsor Thanks
Corporate Giving
Individual Donations
Buy Stuff
Downloads
Distribution
Releases
Mirrors
Infrastructure Status
Infrastructure Statistics
Search
Community-led development "The Apache Way"
People
Roles
Members
Committers
Board of Directors
Officers & Project VPs
Diversity & Inclusion
Code of Conduct
Committer Directory
Heat Map
Community
Community Development
Code of Conduct
Get Involved
Mentoring
Help Wanted
Community Events
FAQ
Mailing Lists
License
Apache License 2.0
Licensing FAQ
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
| ADD TAGS property (COMMA property)*
| ADD ATTRIBUTES property (COMMA property)*
| UPSERT tagClause attributeClause
;
attributeClause
: (ATTRIBUTES LR_BRACKET property (COMMA property)* RR_BRACKET)?
;
tagClause
: (TAGS LR_BRACKET property (COMMA property)* RR_BRACKET)?
;
Eg: ALTER timeseries root.turbine.d1.s1 RENAME tag1 TO newTag1
Eg: ALTER timeseries root.turbine.d1.s1 SET tag1=newV1, attr1=newV1
Eg: ALTER timeseries root.turbine.d1.s1 DROP tag1, tag2
Eg: ALTER timeseries root.turbine.d1.s1 ADD TAGS tag3=v3, tag4=v4
Eg: ALTER timeseries root.turbine.d1.s1 ADD ATTRIBUTES attr3=v3, attr4=v4
EG: ALTER timeseries root.turbine.d1.s1 UPSERT TAGS(tag2=newV2, tag3=v3) ATTRIBUTES(attr3=v3, attr4=v4)
123456789101112131415161718192021Show All Timeseries Statement SHOW TIMESERIES
Eg: IoTDB > SHOW TIMESERIES
$ ls -l
server/
cli/
pom.xml
Readme.md
...
1In the result, there is a statement shows Total timeseries number, this number is the timeseries number in IoTDB. In the current version, IoTDB supports querying the number of time series. Use IoTDB's Command Line Interface: IoTDB> count timeseries root
1If you are using Linux, you can use the following shell command: > grep "0,root" $IOTDB_HOME/data/system/schema/mlog.txt | wc -l
> 6
12# Can I use Hadoop and Spark to read TsFile in IoTDB? Yes. IoTDB has intense integration with Open Source Ecosystem. IoTDB supports Hadoop (opens new window), Spark (opens new window) and Grafana (opens new window) visualization tool. # How does IoTDB handle duplicate points? A data point is uniquely identified by a full time series path (e.g. root.vehicle.d0.s0) and timestamp. If you submit a new point with the same path and timestamp as an existing point, IoTDB updates the value of this point instead of inserting a new point. # How can I tell what type of the specific timeseries? Use SHOW TIMESERIES <timeseries path> SQL in IoTDB's Command Line Interface: For example, if you want to know the type of all timeseries, the <timeseries path> should be root. The statement will be: IoTDB> show timeseries root
1If you want to query specific sensor, you can replace the <timeseries path> with the sensor name. For example: IoTDB> show timeseries root.fit.d1.s1
1Otherwise, you can also use wildcard in timeseries path: IoTDB> show timeseries root.fit.d1.*
1# How can I change IoTDB's Cli time display format? The default IoTDB's Cli time display format is readable (e.g. 1970-01-01T08:00:00.001), if you want to display time in timestamp type or other readable format, add parameter -disableISO8601 in start command: > $IOTDB_CLI_HOME/sbin/start-cli.sh -h 127.0.0.1 -p 6667 -u root -pw root -disableISO8601
1
←
QuickStart
Research Papers
→
Search
Community-led development "The Apache Way"
Projects
Project List
How they work
Independence
Date Founded
Names
Categories
Languages
Statistics
Apache Incubator
Help Wanted
Brand Management
Glossary of Terms
People
Roles
Members
Committers
Board of Directors
Officers & Project VPs
License
Apache License 2.0
Licensing FAQ
Contributor License Agreements
Software Grants
Trademarks
Exports
Sponsors
Sponsor the ASF
Sponsor Thanks
Corporate Giving
Individual Donations
Buy Stuff
Downloads
Distribution
Releases
Mirrors
Infrastructure Status
Infrastructure Status
Infrastructure Statistics
Search
Community-led development "The Apache Way"
Projects
Project List
How they work
Independence
Date Founded
Names
Categories
Languages
Statistics
Apache Incubator
Help Wanted
Brand Management
Glossary of Terms
People
Community Events
FAQ
Mailing Lists
License
Apache License 2.0
Licensing FAQ
Contributor License Agreements
Software Grants
Trademarks
Exports
Sponsors
Sponsor the ASF
Sponsor Thanks
Corporate Giving
Individual Donations
Buy Stuff
We suggest the following mirror
* remove jol-core dependency which is introduced by hive-serde 2.8.4
* remove org.json dependency because of license compatibility
* [ISSUE-1551] fix set historical version when loading additional tsfile
# Apache IoTDB (incubating) 0.10.0
## New Features
* IOTDB-217 A new GROUPBY syntax, e.g., select avg(s1) from root.sg.d1.s1 GROUP BY ([1, 50), 5ms)
* IOTDB-275 allow using user defined JAVA_HOME and allow blank space in the JAVA_HOME
* IOTDB-287 Allow domain in JDBC URL
* IOTDB-292 Add load external tsfile feature
* IOTDB-297 Support "show flush task info"
* IOTDB-298 Support new Last point query. e.g, select last * from root
* IOTDB-309 add Dockerfiles for 0.8.1, 0.9.0, and 0.9.1
* IOTDB-313 Add RandomOnDiskUsableSpaceStrategy
* IOTDB-323 Support insertRecords in session
* IOTDB-337 Add timestamp precision properties for grafana
* IOTDB-343 Add test method in session
Overview
ASF News
Announcements
Twitter Feed
Contacts
Legal
Legal Affairs
DMCA
Licensing
Trademark Policy
Public Records
Privacy Policy
Export Information
Licensing FAQ
Contacts
Copyright © 2019 The Apache Software Foundation, Licensed under the Apache License, Version 2.0.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation.
opened Apr 23, 2021 by
742748131
1
import csv encounter an error
#3051
opened Apr 23, 2021 by
kevin-xin
2
Previous 1 2 3 4 Next
Previous Next
ProTip!
Type g p on any issue or pull request to go back to the pull request listing page.
© 2021 GitHub, Inc.
Terms
Privacy
Security
123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172# Database Management Statement Create User CREATE USER <userName> <password>;
userName:=identifier
password:=string
Eg: IoTDB > CREATE USER thulab 'pwd';
1234Delete User DROP USER <userName>;
userName:=identifier
Eg: IoTDB > DROP USER xiaoming;
123Create Role CREATE ROLE <roleName>;
roleName:=identifie
Eg: IoTDB > CREATE ROLE admin;
123Delete Role DROP ROLE <roleName>;
roleName:=identifier
* IOTDB-718 Fix wrong time precision of NOW()
* IOTDB-735 Fix Concurrent error for MNode when creating time series automatically
* IOTDB-738 Fix measurements has blank
* fix concurrent auto create schema conflict bug
* fix meet incompatible file error in restart
* Fix bugs of set core-site.xml and hdfs-site.xml paths in HDFS storage
* fix execute flush command while inserting bug
* Fix sync schema pos bug
* Fix batch execution bug, the following sqls will all fail after one error sql
* Fix recover endTime set bug
# Apache IoTDB (incubating) 0.9.3
## Bug Fixes
- IOTDB-531 Fix that JDBC URL does not support domain issue
- IOTDB-563 Fix pentaho cannot be downloaded because of spring.io address
- IOTDB-608 Skip error Mlog
- IOTDB-634 Fix merge caused errors for TsFile storage in HDFS
- IOTDB-636 Fix Grafana connector does not use correct time unit
## Miscellaneous changes
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
For performance tuning, you may want to collect the GC info. To enable GC log, just add a parameter "printgc" when you start the server. nohup sbin/start-server.sh printgc >/dev/null 2>&1 &
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (In progress) IoTDB Introduction What is IoTDBArchitectureScenarioFeaturesPublicationQuick Start Data Concept CLI Administration Management IoTDB-SQL Language API Advanced Features Communication Service Protocol System Tools Collaboration of Edge and Cloud Ecosystem Integration Cluster Setup FAQ Appendix Comparison with TSDBs # What is IoTDB IoTDB(Internet of Things Database) is an integrated data management engine designed for timeseries data, which can provide users specific services for data collection, storage and analysis. Due to its light weight structure, high performance and usable features together with its intense integration with Hadoop and Spark ecology, IoTDB meets the requirements of massive dataset storage, high-speed data input and complex data analysis in the IoT industrial field.
Architecture
→
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (In progress) IoTDB Introduction Quick Start QuickStartStorage Path SettingGet IoTDB Binary filesData Concept CLI Administration Management IoTDB-SQL Language API Advanced Features Communication Service Protocol System Tools Collaboration of Edge and Cloud Ecosystem Integration Cluster Setup FAQ Appendix Comparison with TSDBs # Files In IoTDB, there are many kinds of data needed to be stored. This section introduces IoTDB's data storage strategy to provide you an explicit understanding of IoTDB's data management. The data in IoTDB is divided into three categories, namely data files, system files, and pre-write log files. # Data Files Data files store all the data that the user wrote to IoTDB, which contains TsFile and other files. TsFile storage directory can be configured with the data_dirs configuration item (see file layer for details). Other files can be configured through data_dirs configuration item (see Engine Layer for details). In order to support users' storage requirements such as disk space expansion better, IoTDB supports multiple file directories storage methods for TsFile storage configuration. Users can set multiple storage paths as data storage locations( see data_dirs configuration item), and you can specify or customize the directory selection strategy (see multi_dir_strategy configuration item for details). # System files System files include schema files, which store metadata information of data in IoTDB. It can be configured through the base_dir configuration item (see System Layer for details). # Pre-write Log Files Pre-write log files store WAL files. It can be configured through the wal_dir configuration item (see System Layer for details). # Example of Setting Data storage Directory For a clearer understanding of configuring the data storage directory, we will give an example in this section. The data directory path included in storage directory setting are: base_dir, data_dirs, multi_dir_strategy, and wal_dir, which refer to system files, data folders, storage strategy, and pre-write log files. An example of the configuration items are as follows: base_dir = $IOTDB_HOME/data
Total line number = 1
It costs 0.417s
1234567# Schema Statement Set Storage Group SET STORAGE GROUP TO <FullPath>
Eg: IoTDB > SET STORAGE GROUP TO root.ln.wf01.wt01
Note: FullPath can not include `*`
123Delete Storage Group DELETE STORAGE GROUP <FullPath> [COMMA <FullPath>]*
Eg: IoTDB > DELETE STORAGE GROUP root.ln.wf01.wt01
Eg: IoTDB > DELETE STORAGE GROUP root.ln.wf01.wt01, root.ln.wf01.wt02
Note: FullPath can not include `*`
1234Create Timeseries Statement CREATE TIMESERIES <FullPath> WITH <AttributeClauses>
alias
: LR_BRACKET ID RR_BRACKET
;
attributeClauses
: DATATYPE OPERATOR_EQ dataType COMMA ENCODING OPERATOR_EQ encoding
(COMMA (COMPRESSOR | COMPRESSION) OPERATOR_EQ compressor=propertyValue)?
Projects
Project List
How they work
Independence
Date Founded
Names
Categories
Languages
Statistics
Apache Incubator
Help Wanted
Brand Management
Glossary of Terms
People
Roles
Members
Committers
Board of Directors
Officers & Project VPs
Diversity & Inclusion
Code of Conduct
Committer Directory
Heat Map
Community
Contributor License Agreements
Software Grants
Trademarks
Exports
Sponsors
Sponsor the ASF
Sponsor Thanks
Corporate Giving
Individual Donations
Buy Stuff
We suggest the following mirror
site for your download:
https://mirror.cogentco.com/pub/apache/iotdb/0.11.3/apache-iotdb-0.11.3-bin.zip
Other mirror sites are suggested below.
It is essential that you verify the integrity of the downloaded file using
the PGP signature (.asc file) or a hash (.md5 or .sha* file).
Please only use the backup mirrors to download KEYS, PGP signatures and hashes (SHA* etc)
-- or if no other mirrors are working.
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (V0.10.x) Get Started QuickStartFrequently asked questionsResearch PapersOverview Concept Server Client Operation Manual System Tools Ecosystem Integration Architecture # Frequently Asked Questions # Outline Frequently Asked Questions
How can I identify my version of IoTDB? Where can I find IoTDB logs? Where can I find IoTDB data files? How do I know how many time series are stored in IoTDB? Can I use Hadoop and Spark to read TsFile in IoTDB? How does IoTDB handle duplicate points? How can I tell what type of the specific timeseries? How can I change IoTDB's Cli time display format? # How can I identify my version of IoTDB? There are several ways to identify the version of IoTDB that you are using: Launch IoTDB's Command Line Interface: > ./start-cli.sh -p 6667 -pw root -u root -h localhost
_____ _________ ______ ______
|_ _| | _ _ ||_ _ `.|_ _ \
| | .--.|_/ | | \_| | | `. \ | |_) |
| | / .'`\ \ | | | | | | | __'.
_| |_| \__. | _| |_ _| |_.' /_| |__) |
|_____|'.__.' |_____| |______.'|_______/ version x.x.x
1234567Check pom.xml file: <version>x.x.x</version>
1Use JDBC API: String iotdbVersion = tsfileDatabaseMetadata.getDatabaseProductVersion();
1Use Command Line Interface: IoTDB> show version
show version
+---------------+
|version |
+---------------+
|x.x.x |
+---------------+
Total line number = 1
It costs 0.241s
123456789# Where can I find IoTDB logs? Suppose your root directory is: $ pwd
/workspace/incubator-iotdb
Current Events
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (In progress) IoTDB Introduction What is IoTDBArchitectureScenarioFeaturesPublicationQuick Start Data Concept CLI Administration Management IoTDB-SQL Language API Advanced Features Communication Service Protocol System Tools Collaboration of Edge and Cloud Ecosystem Integration Cluster Setup FAQ Appendix Comparison with TSDBs # Research Papers Apache IoTDB starts at Tsinghua University, School of Software. IoTDB is a database for managing large amount of time series data with columnar storage, data encoding, pre-computation, and index techniques. It has SQL-like interface to write millions of data points per second per node and is optimized to get query results in few seconds over trillions of data points. It can also be easily integrated with Apache Hadoop MapReduce and Apache Spark for analytics. The research papers related are as follows: Apache IoTDB: time-series database for internet of things (opens new window), Chen Wang, Xiangdong Huang, Jialin Qiao,
Tian Jiang, Lei Rui, Jinrui Zhang, Rong Kang, Julian Feinauer, Kevin A. McGrail, Peng Wang, Jun Yuan, Jianmin Wang, Jiaguang Sun. VLDB 2020 PISA: An Index for Aggregating Big Time Series Data (opens new window), Xiangdong Huang and Jianmin Wang and Raymond K. Wong and Jinrui Zhang and Chen Wang. CIKM 2016. Matching Consecutive Subpatterns over Streaming Time Series (opens new window), Rong Kang and Chen Wang and Peng Wang and Yuting Ding and Jianmin Wang. APWeb/WAIM 2018. KV-match: A Subsequence Matching Approach Supporting Normalization and Time Warping (opens new window), Jiaye Wu and Peng Wang and Chen Wang and Wei Wang and Jianmin Wang. ICDE 2019. The Design of Apache IoTDB distributed framework (opens new window), Tianan Li, Jianmin Wang, Xiangdong Huang, Yi Xu, Dongfang Mao, Jun Yuan. NDBC 2019 Dual-PISA: An index for aggregation operations on time series data (opens new window), Jialin Qiao, Xiangdong Huang, Jianmin Wang, Raymond K Wong. IS 2020 # Benchmark tools We also developed Benchmark tools for time series databases https://github.com/thulab/iotdb-benchmark
←
Features
QuickStart
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Note: This statement can only be used in IoTDB Client. If you need to show all timeseries in JDBC, please use `DataBaseMetadata` interface.
123Show Specific Timeseries Statement SHOW TIMESERIES <Path>
Eg: IoTDB > SHOW TIMESERIES root
Eg: IoTDB > SHOW TIMESERIES root.ln
Eg: IoTDB > SHOW TIMESERIES root.ln.*.*.status
Eg: IoTDB > SHOW TIMESERIES root.ln.wf01.wt01.status
Note: The path can be prefix path, star path or timeseries path
Note: This statement can be used in IoTDB Client and JDBC.
1234567Show Specific Timeseries Statement with where clause SHOW TIMESERIES prefixPath? showWhereClause?
showWhereClause
: WHERE (property | containsExpression)
;
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Diversity & Inclusion
Code of Conduct
Committer Directory
Heat Map
Community
Community Development
Code of Conduct
Get Involved
Mentoring
Help Wanted
Community Events
FAQ
Mailing Lists
License
Apache License 2.0
Licensing FAQ
Contributor License Agreements
Software Grants
Trademarks
Exports
Sponsors
Sponsor the ASF
Sponsor Thanks
Corporate Giving
Infrastructure Statistics
Search
Community-led development "The Apache Way"
Projects
Project List
How they work
Independence
Date Founded
Names
Categories
Languages
Statistics
Apache Incubator
Help Wanted
Brand Management
Glossary of Terms
People
Roles
Members
Committers
Board of Directors
Officers & Project VPs
Diversity & Inclusion
Roles
Members
Committers
Board of Directors
Officers & Project VPs
Diversity & Inclusion
Code of Conduct
Committer Directory
Heat Map
Community
Community Development
Code of Conduct
Get Involved
Mentoring
Help Wanted
Community Events
FAQ
Mailing Lists
site for your download:
https://mirror.cogentco.com/pub/apache/iotdb/0.12.0/apache-iotdb-0.12.0-all-bin.zip
Other mirror sites are suggested below.
It is essential that you verify the integrity of the downloaded file using
the PGP signature (.asc file) or a hash (.md5 or .sha* file).
Please only use the backup mirrors to download KEYS, PGP signatures and hashes (SHA* etc)
-- or if no other mirrors are working.
HTTP¶
https://apache.claz.org/iotdb/0.12.0/apache-iotdb-0.12.0-all-bin.zip https://apache.osuosl.org/iotdb/0.12.0/apache-iotdb-0.12.0-all-bin.zip https://ftp.wayne.edu/apache/iotdb/0.12.0/apache-iotdb-0.12.0-all-bin.zip https://mirror.cogentco.com/pub/apache/iotdb/0.12.0/apache-iotdb-0.12.0-all-bin.zip https://mirror.nodesdirect.com/apache/iotdb/0.12.0/apache-iotdb-0.12.0-all-bin.zip https://mirror.olnevhost.net/pub/apache/iotdb/0.12.0/apache-iotdb-0.12.0-all-bin.zip https://mirrors.advancedhosters.com/apache/iotdb/0.12.0/apache-iotdb-0.12.0-all-bin.zip https://mirrors.gigenet.com/apache/iotdb/0.12.0/apache-iotdb-0.12.0-all-bin.zip https://mirrors.ocf.berkeley.edu/apache/iotdb/0.12.0/apache-iotdb-0.12.0-all-bin.zip https://mirrors.sonic.net/apache/iotdb/0.12.0/apache-iotdb-0.12.0-all-bin.zip
Backup Sites¶
* IOTDB-396 Support new query clause: disable align, e.g., select * from root disable align
* IOTDB-447 Support querying non-existing measurement and constant measurement
* IOTDB-448 Add IN operation, e.g., where time in (1,2,3)
* IOTDB-456 Support GroupByFill Query, e.g., select last_value(s1) from root.sg.d1 GROUP BY ([1, 10), 2ms) FILL(int32[previousUntilLast])
* IOTDB-467 The CLI displays query results in a batch manner
* IOTDB-497 Support Apache Flink Connector with IoTDB
* IOTDB-558 add text support for grafana
* IOTDB-560 Support Apache Flink connecter with TsFile
* IOTDB-565 MQTT Protocol Support, disabled by default, open in iotdb-engine.properties
* IOTDB-574 Specify configuration when start iotdb
* IOTDB-588 Add tags and attributes management
* IOTDB-607 add batch create timeseries in native interface
* IOTDB-612 add limit&offset to show timeseries
* IOTDB-615 Use TsDataType + Binary to replace String in insert plan
* IOTDB-617 Support alter one time series's tag/attribute
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
You can’t perform that action at this time.
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
Eg: IoTDB > DROP ROLE admin;
123Grant User Privileges GRANT USER <userName> PRIVILEGES <privileges> ON <nodeName>;
userName:=identifier
nodeName:=identifier (DOT identifier)*
privileges:= string (COMMA string)*
Eg: IoTDB > GRANT USER tempuser PRIVILEGES 'DELETE_TIMESERIES' on root.ln;
12345Grant Role Privileges GRANT ROLE <roleName> PRIVILEGES <privileges> ON <nodeName>;
privileges:= string (COMMA string)*
roleName:=identifier
nodeName:=identifier (DOT identifier)*
Eg: IoTDB > GRANT ROLE temprole PRIVILEGES 'DELETE_TIMESERIES' ON root.ln;
12345Grant User Role GRANT <roleName> TO <userName>;
roleName:=identifier
userName:=identifier
Eg: IoTDB > GRANT temprole TO tempuser;
1234Revoke User Privileges REVOKE USER <userName> PRIVILEGES <privileges> ON <nodeName>;
privileges:= string (COMMA string)*
- IOTDB-528 Modify grafana group by
- IOTDB-635 Add workaround when doing Aggregation over boolean Series
- Remove docs of Load External Tsfile
- Add Grafana IoTDB Bridge Artifact to distribution in tools/grafana folder
# Apache IoTDB (incubating) 0.9.2
## Bug Fixes
- IOTDB-553 Fix Return Empty ResultSet when queried series doesn't exist
- IOTDB-575 add default jmx user and password; fix issues that jmx can't be accessed remotely
- IOTDB-584 Fix InitializerError when recovering files on HDFS
- Fix batch insert once an illegal sql occurs all the sqls after that will not succeed
- Fix concurrent modification exception when iterator TsFileResourceList
- Fix some HDFS config issues
- Fix runtime exception not be catched and sync schema pos was nullpointer bug in DataTransferManager
- Fix python rpc grammar mistakes
- Fix upgrade ConcurrentModificationException
## Miscellaneous changes
- IOTDB-332 support Chinese characters in path
Current Events
Languages English 简体中文
gitHub
1+---------------+
| version|
+---------------+
|0.13.0-SNAPSHOT|
+---------------+
Total line number = 1
It costs 0.417s
1234567# Schema Statement Set Storage Group SET STORAGE GROUP TO <FullPath>
Eg: IoTDB > SET STORAGE GROUP TO root.ln.wf01.wt01
Note: FullPath can not include `*`
123Delete Storage Group DELETE STORAGE GROUP <FullPath> [COMMA <FullPath>]*
Eg: IoTDB > DELETE STORAGE GROUP root.ln.wf01.wt01
Eg: IoTDB > DELETE STORAGE GROUP root.ln.wf01.wt01, root.ln.wf01.wt02
1Or sbin\start-server.bat printgc
1GC log is stored at IOTDB_HOME/logs/gc.log.
There will be at most 10 gc.log.* files and each one can reach to 10MB.
←
Frequently asked questions
SQL Reference
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Languages English 简体中文
gitHub
(opens new window) IoTDB User Guide (In progress) IoTDB Introduction Quick Start QuickStartStorage Path SettingGet IoTDB Binary filesData Concept CLI Administration Management IoTDB-SQL Language API Advanced Features Communication Service Protocol System Tools Collaboration of Edge and Cloud Ecosystem Integration Cluster Setup FAQ Appendix Comparison with TSDBs # Way to get IoTDB binary files IoTDB provides you three installation methods, you can refer to the following suggestions, choose one of them: Installation from source code. If you need to modify the code yourself, you can use this method. Installation from binary files. Download the binary files from the official website. This is the recommended method, in which you will get a binary released package which is out-of-the-box. Using Docker：The path to the dockerfile is https://github.com/apache/iotdb/blob/master/docker/Dockerfile # Prerequisites To use IoTDB, you need to have: Java >= 1.8 (Please make sure the environment path has been set) Maven >= 3.6 (Optional) Set the max open files num as 65535 to avoid "too many open files" problem. Note: If you don't have maven installed, you should replace 'mvn' in the following commands with 'mvnw.sh' or 'mvnw.cmd'. # Installation from binary files You can download the binary file from:
Download page (opens new window) # Installation from source code You can get the released source code from https://iotdb.apache.org/Download/, or from the git repository https://github.com/apache/iotdb/tree/master
You can download the source code from: git clone https://github.com/apache/iotdb.git
1Under the root path of iotdb: > mvn clean package -DskipTests
Using docker pull apache/iotdb:latest can get the latest docker image. Users can also build a docker image themselves. Now a Dockerfile has been written at docker/src/main/Dockerfile. You can build a docker image by: $ docker build -t iotdb:base git://github.com/apache/iotdb#master:docker
1Or: $ git clone https://github.com/apache/iotdb
$ cd iotdb
$ cd docker
$ docker build -t iotdb:base .
1234Once the docker image has been built locally (the tag is iotdb:base in this example), you are almost done! create docker volume for data files and logs: $ docker volume create mydata
$ docker volume create mylogs
12run a docker container: $ docker run -p 6667:6667 -v mydata:/iotdb/data -v mylogs:/iotdb/logs -d iotdb:base /iotdb/bin/start-server.sh
1If success, you can run docker ps, and get something like the following: CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
2a68b6944cb5 iotdb:base "/iotdb/bin/start-se…" 4 minutes ago Up 5 minutes 0.0.0.0:6667->6667/tcp laughing_meitner
12You can use the above command to get the container ID: $ docker container ls
1suppose the IP is <C_IP>. If you just want to have a try by using iotdb-cli, you can: $ docker exec -it /bin/bash <C_ID>
$ (now you have enter the container): /cli/sbin/start-cli.sh -h localhost -p 6667 -u root -pw root
data_dirs = /data1/data, /data2/data, /data3/data
multi_dir_strategy=MaxDiskUsableSpaceFirstStrategy
wal_dir= $IOTDB_HOME/data/wal
1234After setting the configuration, the system will: Save all system files in $IOTDB_HOME/data Save TsFile in /data1/data, /data2/data, /data3/data. And the choosing strategy is MaxDiskUsableSpaceFirstStrategy, when data writes to the disk, the system will automatically select a directory with the largest remaining disk space to write data. Save WAL data in $IOTDB_HOME/data/wal
←
QuickStart
Get IoTDB Binary files
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
(COMMA property)*
tagClause
attributeClause
;
attributeClause
: (ATTRIBUTES LR_BRACKET property (COMMA property)* RR_BRACKET)?
;
tagClause
: (TAGS LR_BRACKET property (COMMA property)* RR_BRACKET)?
;
DataTypeValue: BOOLEAN | DOUBLE | FLOAT | INT32 | INT64 | TEXT
EncodingValue: GORILLA | PLAIN | RLE | TS_2DIFF | REGULAR
CompressorValue: UNCOMPRESSED | SNAPPY
Eg: CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN
Community Development
Code of Conduct
Get Involved
Mentoring
Help Wanted
Community Events
FAQ
Mailing Lists
License
Apache License 2.0
Licensing FAQ
Contributor License Agreements
Software Grants
Trademarks
Exports
Sponsors
Sponsor the ASF
HTTP¶
https://apache.claz.org/iotdb/0.11.3/apache-iotdb-0.11.3-bin.zip https://apache.osuosl.org/iotdb/0.11.3/apache-iotdb-0.11.3-bin.zip https://ftp.wayne.edu/apache/iotdb/0.11.3/apache-iotdb-0.11.3-bin.zip https://mirror.cogentco.com/pub/apache/iotdb/0.11.3/apache-iotdb-0.11.3-bin.zip https://mirror.nodesdirect.com/apache/iotdb/0.11.3/apache-iotdb-0.11.3-bin.zip https://mirror.olnevhost.net/pub/apache/iotdb/0.11.3/apache-iotdb-0.11.3-bin.zip https://mirrors.advancedhosters.com/apache/iotdb/0.11.3/apache-iotdb-0.11.3-bin.zip https://mirrors.gigenet.com/apache/iotdb/0.11.3/apache-iotdb-0.11.3-bin.zip https://mirrors.ocf.berkeley.edu/apache/iotdb/0.11.3/apache-iotdb-0.11.3-bin.zip https://mirrors.sonic.net/apache/iotdb/0.11.3/apache-iotdb-0.11.3-bin.zip
Backup Sites¶
Please only use the backup mirrors to download KEYS, PGP signatures and hashes (SHA* etc)
-- or if no other mirrors are working.
https://downloads.apache.org/iotdb/0.11.3/apache-iotdb-0.11.3-bin.zip
The full listing of mirror sites is also
available.
Becoming a mirror¶
The procedure for setting up new mirrors is described in How to become a
mirror.
Verify the integrity of the files¶
It is essential that you verify the integrity of the downloaded file using
the PGP signature (.asc file) or a hash (.md5 or .sha* file). Please read Verifying Apache Software
Foundation Releases for more information on why
$ ls -l
server/
cli/
pom.xml
Readme.md
...
1In the result, there will be a statement shows Total timeseries number, this number is the timeseries number in IoTDB. In the current version, IoTDB supports querying the number of time series. Use IoTDB's Command Line Interface: IoTDB> count timeseries root
1If you are using Linux, you can use the following shell command: > grep "0,root" $IOTDB_HOME/data/system/schema/mlog.txt | wc -l
> 6
12# Can I use Hadoop and Spark to read TsFile in IoTDB? Yes. IoTDB has intense integration with Open Source Ecosystem. IoTDB supports Hadoop (opens new window), Spark (opens new window) and Grafana (opens new window) visualization tool. # How does IoTDB handle duplicate points? A data point is uniquely identified by a full time series path (e.g. root.vehicle.d0.s0) and timestamp. If you submit a new point with the same path and timestamp as an existing point, IoTDB will update the value of this point instead of inserting a new point. # How can I tell what type of the specific timeseries? Use SHOW TIMESERIES <timeseries path> SQL in IoTDB's Command Line Interface: For example, if you want to know the type of all timeseries, the <timeseries path> should be root. The statement will be: IoTDB> show timeseries root
1If you want to query specific sensor, you can replace the <timeseries path> with the sensor name. For example: IoTDB> show timeseries root.fit.d1.s1
1Otherwise, you can also use wildcard in timeseries path: IoTDB> show timeseries root.fit.d1.*
1# How can I change IoTDB's Cli time display format? The default IoTDB's Cli time display format is human readable (e.g. 1970-01-01T08:00:00.001), if you want to display time in timestamp type or other readable format, add parameter -disableIS08601 in start command: > $IOTDB_CLI_HOME/sbin/start-cli.sh -h 127.0.0.1 -p 6667 -u root -pw root -disableIS08601
1
←
QuickStart
Research Papers
containsExpression
: name=ID OPERATOR_CONTAINS value=propertyValue
;
Eg: show timeseries root.ln where unit='c'
Eg: show timeseries root.ln where description contains 'test1'
12345678910Show Specific Timeseries Statement with where clause start from offset and limit the total number of result SHOW TIMESERIES prefixPath? showWhereClause? limitClause?
showWhereClause
: WHERE (property | containsExpression)
;
containsExpression
: name=ID OPERATOR_CONTAINS value=propertyValue
;
limitClause
: LIMIT INT offsetClause?
| offsetClause? LIMIT INT
;
Eg: show timeseries root.ln where unit='c'
Eg: show timeseries root.ln where description contains 'test1'
Individual Donations
Buy Stuff
We suggest the following mirror
site for your download:
https://mirror.nodesdirect.com/apache/iotdb/0.12.0/apache-iotdb-0.12.0-cluster-bin.zip
Other mirror sites are suggested below.
It is essential that you verify the integrity of the downloaded file using
the PGP signature (.asc file) or a hash (.md5 or .sha* file).
Please only use the backup mirrors to download KEYS, PGP signatures and hashes (SHA* etc)
-- or if no other mirrors are working.
HTTP¶
https://apache.claz.org/iotdb/0.12.0/apache-iotdb-0.12.0-cluster-bin.zip https://apache.osuosl.org/iotdb/0.12.0/apache-iotdb-0.12.0-cluster-bin.zip https://ftp.wayne.edu/apache/iotdb/0.12.0/apache-iotdb-0.12.0-cluster-bin.zip https://mirror.cogentco.com/pub/apache/iotdb/0.12.0/apache-iotdb-0.12.0-cluster-bin.zip https://mirror.nodesdirect.com/apache/iotdb/0.12.0/apache-iotdb-0.12.0-cluster-bin.zip https://mirror.olnevhost.net/pub/apache/iotdb/0.12.0/apache-iotdb-0.12.0-cluster-bin.zip https://mirrors.advancedhosters.com/apache/iotdb/0.12.0/apache-iotdb-0.12.0-cluster-bin.zip https://mirrors.gigenet.com/apache/iotdb/0.12.0/apache-iotdb-0.12.0-cluster-bin.zip https://mirrors.ocf.berkeley.edu/apache/iotdb/0.12.0/apache-iotdb-0.12.0-cluster-bin.zip https://mirrors.sonic.net/apache/iotdb/0.12.0/apache-iotdb-0.12.0-cluster-bin.zip
Backup Sites¶
Please only use the backup mirrors to download KEYS, PGP signatures and hashes (SHA* etc)
Code of Conduct
Committer Directory
Heat Map
Community
Community Development
Code of Conduct
Get Involved
Mentoring
Help Wanted
Community Events
FAQ
Mailing Lists
License
Apache License 2.0
Licensing FAQ
Contributor License Agreements
Software Grants
Trademarks
License
Apache License 2.0
Licensing FAQ
Contributor License Agreements
Software Grants
Trademarks
Exports
Sponsors
Sponsor the ASF
Sponsor Thanks
Corporate Giving
Individual Donations
Buy Stuff
We suggest the following mirror
site for your download:
https://mirrors.gigenet.com/apache/iotdb/0.12.0/apache-iotdb-0.12.0-grafana-bin.zip
Other mirror sites are suggested below.
It is essential that you verify the integrity of the downloaded file using
the PGP signature (.asc file) or a hash (.md5 or .sha* file).
Please only use the backup mirrors to download KEYS, PGP signatures and hashes (SHA* etc)
Please only use the backup mirrors to download KEYS, PGP signatures and hashes (SHA* etc)
-- or if no other mirrors are working.
https://downloads.apache.org/iotdb/0.12.0/apache-iotdb-0.12.0-all-bin.zip
The full listing of mirror sites is also
available.
Becoming a mirror¶
The procedure for setting up new mirrors is described in How to become a
mirror.
Verify the integrity of the files¶
It is essential that you verify the integrity of the downloaded file using
the PGP signature (.asc file) or a hash (.md5 or .sha* file). Please read Verifying Apache Software
Foundation Releases for more information on why
you should verify our releases.
The PGP signature can be verified using PGP or GPG. First download the
KEYS as well as the asc signature file for the relevant distribution.
Make sure you get these files from the main distribution site, rather than
from a mirror. Then verify the signatures using
% gpg --import KEYS
% gpg --verify downloaded_file.asc downloaded_file
or
% pgpk -a KEYS
% pgpv downloaded_file.asc
or
% pgp -ka KEYS
% pgp downloaded_file.asc
* IOTDB-630 Add a jdbc-like way to fetch data in session
* IOTDB-640 Enable system admin sql (flush/merge) in JDBC or Other API
* IOTDB-671 Add clear cache command
* Support open and close time range in group by, e.g, [), (]
* Online upgrade from 0.9.x
* Support special characters in path: -/+&%$#@
* IOTDB-446 Support path start with a digit, e.g., root.sg.12a
* enable rpc compression in session pool
* Make JDBC OSGi usable and added a feature file
* add printing one resource file tool
* Allow count timeseries group by level=x using default path
* IOTDB-700 Add OpenID Connect based JWT Access as alternative to Username / Password
* IOTDB-701 Set heap size by percentage of system total memory when starts
* IOTDB-708 add config for inferring data type from string value
* IOTDB-715 Support previous time range in previousuntillast
* IOTDB-719 add avg_series_point_number_threshold in config
* IOTDB-731 Continue write inside InsertPlan
* IOTDB-734 Add Support for NaN in Double / Floats in SQL Syntax.
* IOTDB-744 Support upsert alias
userName:=identifier
nodeName:=identifier (DOT identifier)*
Eg: IoTDB > REVOKE USER tempuser PRIVILEGES 'DELETE_TIMESERIES' on root.ln;
12345Revoke Role Privileges REVOKE ROLE <roleName> PRIVILEGES <privileges> ON <nodeName>;
privileges:= string (COMMA string)*
roleName:= identifier
nodeName:=identifier (DOT identifier)*
Eg: IoTDB > REVOKE ROLE temprole PRIVILEGES 'DELETE_TIMESERIES' ON root.ln;
12345Revoke Role From User REVOKE <roleName> FROM <userName>;
roleName:=identifier
userName:=identifier
Eg: IoTDB > REVOKE temproleFROM tempuser;
1234List Users LIST USER
Eg: IoTDB > LIST USER
12List Roles LIST ROLE
Eg: IoTDB > LIST ROLE
12List Privileges LIST PRIVILEGES USER <username> ON <path>;
username:=identifier
path=‘root’ (DOT identifier)*
Eg: IoTDB > LIST PRIVIEGES USER sgcc_wirte_user ON root.sgcc;
1234List Privileges of Roles(On Specific Path) LIST PRIVILEGES ROLE <roleName> ON <path>;
roleName:=identifier
path=‘root’ (DOT identifier)*
Eg: IoTDB > LIST PRIVIEGES ROLE wirte_role ON root.sgcc;
1234List Privileges of Users LIST USER PRIVILEGES <username> ;
username:=identifier
Eg: IoTDB > LIST USER PRIVIEGES tempuser;
- improve start-server.bat by using quotes to protect against empty entries
- Add Chinese documents for chapter 4.2
- change download-maven-plugin to 1.3.0
- add session pool
- add insertInBatch in Session
- add insertInBatch to SessionPool
- modify 0.9 docs to fit website
- remove tsfile-format.properties
- add bloom filter in iotdb-engien.properties
- update server download doc
- typos fix in Rel/0.9 docs
- support 0.12.0 and 0.13.0 thrift
# Apache IoTDB (incubating) 0.9.1
## Bug Fixes
- IOTDB-159 Fix NullPointerException in SeqTsFileRecoverTest and UnseqTsFileRecoverTest
- IOTDB-317 Fix a bug that "flush + wrong aggregation query" causes the following queries to fail
- IOTDB-324 Fix inaccurate statistics when writing in batch
- IOTDB-327 Fix a groupBy-without-value-filter query bug caused by the wrong page skipping logic
Eg: IoTDB > DELETE STORAGE GROUP root.ln.wf01.*
Eg: IoTDB > DELETE STORAGE GROUP root.*
12345Create Timeseries Statement CREATE TIMESERIES <FullPath> WITH <AttributeClauses>
alias
: LR_BRACKET ID RR_BRACKET
;
attributeClauses
: DATATYPE OPERATOR_EQ dataType COMMA ENCODING OPERATOR_EQ encoding
(COMMA (COMPRESSOR | COMPRESSION) OPERATOR_EQ compressor=propertyValue)?
(COMMA property)*
tagClause
attributeClause
;
attributeClause
: (ATTRIBUTES LR_BRACKET property (COMMA property)* RR_BRACKET)?
;
tagClause
: (TAGS LR_BRACKET property (COMMA property)* RR_BRACKET)?
12Or, run a new docker container as the client: $ docker run -it iotdb:base /cli/sbin/start-cli.sh -h <C_IP> -p 6667 -u root -pw root
1Or, if you have a iotdb-cli locally (e.g., you have compiled the source code by mvn package), and suppose your work_dir is cli/bin, then you can just run: $ start-cli.sh -h localhost -p 6667 -u root -pw root
1If you want to write codes to insert data and query data, please add the following dependence: <dependency>
<groupId>org.apache.iotdb</groupId>
<artifactId>iotdb-jdbc</artifactId>
<version>0.13.0-SNAPSHOT</version>
</dependency>
12345Some examples about how to use IoTDB with IoTDB-JDBC can be found at: https://github.com/apache/iotdb/tree/master/example/jdbc/src/main/java/org/apache/iotdb Now enjoy it!
Eg: CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE
Eg: CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE, COMPRESSOR=SNAPPY, MAX_POINT_NUMBER=3
Eg: create timeseries root.turbine.d0.s0(temperature) with datatype=FLOAT, encoding=RLE, compression=SNAPPY tags(unit=f, description='turbine this is a test1') attributes(H_Alarm=100, M_Alarm=50)
Note: Datatype and encoding type must be corresponding. Please check Chapter 3 Encoding Section for details.
12345678910111213141516171819202122232425Delete Timeseries Statement DELETE TIMESERIES <PrefixPath> [COMMA <PrefixPath>]*
Eg: IoTDB > DELETE TIMESERIES root.ln.wf01.wt01.status
Eg: IoTDB > DELETE TIMESERIES root.ln.wf01.wt01.status, root.ln.wf01.wt01.temperature
Eg: IoTDB > DELETE TIMESERIES root.ln.wf01.wt01.*
1234Alter Timeseries Statement ALTER TIMESERIES fullPath alterClause
alterClause
: RENAME beforeName=ID TO currentName=ID
Sponsor Thanks
Corporate Giving
Individual Donations
Buy Stuff
We suggest the following mirror
site for your download:
https://mirrors.sonic.net/apache/iotdb/0.12.0/apache-iotdb-0.12.0-source-release.zip
Other mirror sites are suggested below.
It is essential that you verify the integrity of the downloaded file using
the PGP signature (.asc file) or a hash (.md5 or .sha* file).
Please only use the backup mirrors to download KEYS, PGP signatures and hashes (SHA* etc)
-- or if no other mirrors are working.
HTTP¶
you should verify our releases.
The PGP signature can be verified using PGP or GPG. First download the
KEYS as well as the asc signature file for the relevant distribution.
Make sure you get these files from the main distribution site, rather than
from a mirror. Then verify the signatures using
% gpg --import KEYS
% gpg --verify downloaded_file.asc downloaded_file
or
% pgpk -a KEYS
% pgpv downloaded_file.asc
or
% pgp -ka KEYS
% pgp downloaded_file.asc
Alternatively, you can verify the hash on the file.
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Eg: show timeseries root.ln where unit='c' limit 10 offset 10
12345678910111213141516Show Storage Group Statement SHOW STORAGE GROUP
Eg: IoTDB > SHOW STORAGE GROUP
Note: This statement can be used in IoTDB Client and JDBC.
123Show Specific Storage Group Statement SHOW STORAGE GROUP <PrefixPath>
Eg: IoTDB > SHOW STORAGE GROUP root.*
Eg: IoTDB > SHOW STORAGE GROUP root.ln
Note: The path can be prefix path or star path.
Note: This statement can be used in IoTDB Client and JDBC.
12345Show Merge Status Statement SHOW MERGE
Eg: IoTDB > SHOW MERGE
Note: This statement can be used in IoTDB Client and JDBC.
123Count Timeseries Statement COUNT TIMESERIES <Path>
Eg: IoTDB > COUNT TIMESERIES root
-- or if no other mirrors are working.
https://downloads.apache.org/iotdb/0.12.0/apache-iotdb-0.12.0-cluster-bin.zip
The full listing of mirror sites is also
available.
Becoming a mirror¶
The procedure for setting up new mirrors is described in How to become a
mirror.
Verify the integrity of the files¶
It is essential that you verify the integrity of the downloaded file using
Exports
Sponsors
Sponsor the ASF
Sponsor Thanks
Corporate Giving
Individual Donations
Buy Stuff
We suggest the following mirror
-- or if no other mirrors are working.
HTTP¶
https://apache.claz.org/iotdb/0.12.0/apache-iotdb-0.12.0-grafana-bin.zip https://apache.osuosl.org/iotdb/0.12.0/apache-iotdb-0.12.0-grafana-bin.zip https://ftp.wayne.edu/apache/iotdb/0.12.0/apache-iotdb-0.12.0-grafana-bin.zip https://mirror.cogentco.com/pub/apache/iotdb/0.12.0/apache-iotdb-0.12.0-grafana-bin.zip https://mirror.nodesdirect.com/apache/iotdb/0.12.0/apache-iotdb-0.12.0-grafana-bin.zip https://mirror.olnevhost.net/pub/apache/iotdb/0.12.0/apache-iotdb-0.12.0-grafana-bin.zip https://mirrors.advancedhosters.com/apache/iotdb/0.12.0/apache-iotdb-0.12.0-grafana-bin.zip https://mirrors.gigenet.com/apache/iotdb/0.12.0/apache-iotdb-0.12.0-grafana-bin.zip https://mirrors.ocf.berkeley.edu/apache/iotdb/0.12.0/apache-iotdb-0.12.0-grafana-bin.zip https://mirrors.sonic.net/apache/iotdb/0.12.0/apache-iotdb-0.12.0-grafana-bin.zip
Alternatively, you can verify the hash on the file.
Hashes can be calculated using GPG:
% gpg --print-md SHA256 downloaded_file
The output should be compared with the contents of the SHA256 file.
Similarly for other hashes (SHA512, SHA1, MD5 etc) which may be provided.
Windows 7 and later systems should all now have certUtil:
% certUtil -hashfile pathToFileToCheck
HashAlgorithm choices: MD2 MD4 MD5 SHA1 SHA256 SHA384 SHA512
Unix-like systems (and macOS) will have a utility called
md5, md5sum or shasum
## Incompatible changes
* IOTDB-138 Move All metadata query to usual query
* IOTDB-322 upgrade to thrift 0.12.0-0.13.0
* IOTDB-325 Refactor Statistics in TsFile
* IOTDB-419 Refactor the 'last' and 'first' aggregators to 'last_value' and 'first_value'
* IOTDB-506 upgrade the rpc protocol to v2 to reject clients or servers that version < 0.10
* IOTDB-587 TsFile is upgraded to version 2
* IOTDB-593 add metaOffset in TsFileMetadata
* IOTDB-597 Rename methods in Session: insertBatch to insertTablet, insertInBatch to insertRecords, insert to insertRecord
* RPC is incompatible, you can not use client-v0.9 to connect with server-v0.10
* TsFile format is incompatible, will be upgraded when starting 0.10
* Refine exception code in native api
123List Privileges of Roles LIST ROLE PRIVILEGES <roleName>
roleName:=identifier
Eg: IoTDB > LIST ROLE PRIVIEGES actor;
123List Roles of Users LIST ALL ROLE OF USER <username> ;
username:=identifier
Eg: IoTDB > LIST ALL ROLE OF USER tempuser;
123List Users of Role LIST ALL USER OF ROLE <roleName>;
roleName:=identifier
Eg: IoTDB > LIST ALL USER OF ROLE roleuser;
123Alter Password ALTER USER <username> SET PASSWORD <password>;
roleName:=identifier
password:=identifier
Eg: IoTDB > ALTER USER tempuser SET PASSWORD 'newpwd';
Eg. SELECT COUNT(status), COUNT(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT FIRST (status), FIRST (temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
- IOTDB-331 Fix a groupBy query bug when axisOrigin-startTimeOfWindow is an integral multiple of interval
- IOTDB-357 Fix NullPointerException in ActiveTimeSeriesCounter
- IOTDB-359 Fix a wrong-data-type bug in TsFileSketchTool
- IOTDB-360 Fix bug of a deadlock in CompressionRatio
- IOTDB-363 Fix link errors in Development-Contributing.md and add Development-Document.md
- IOTDB-392 Fix a bug in CSV export tool
- Fix apache rat header format error in some files
## Miscellaneous changes
- IOTDB-321 Add definitions of time expression and LEVEL in related documents
- Support pypi distribution for Python client
# Apache IoTDB (incubating) 0.9.0
## New Features
* IOTDB-143 Compaction of data file
* IOTDB-151 Support number format in timeseries path
* IOTDB-158 Add metrics web service
* IOTDB-173 Add batch write interface in session
* IoTDB-174 Add interfaces for querying device or timeseries number
;
DataTypeValue: BOOLEAN | DOUBLE | FLOAT | INT32 | INT64 | TEXT
EncodingValue: GORILLA | PLAIN | RLE | TS_2DIFF | REGULAR
CompressorValue: UNCOMPRESSED | SNAPPY
propertyValue: SDT | COMPDEV | COMPMINTIME | COMPMAXTIME
Eg: CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN
Eg: CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE
Eg: CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE, COMPRESSOR=SNAPPY, MAX_POINT_NUMBER=3
Eg: create timeseries root.turbine.d0.s0(temperature) with datatype=FLOAT, encoding=RLE, compression=SNAPPY tags(unit=f, description='turbine this is a test1') attributes(H_Alarm=100, M_Alarm=50)
Eg: CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE, LOSS=SDT, COMPDEV=0.01
Eg: CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE, LOSS=SDT, COMPDEV=0.01, COMPMINTIME=3
Eg: CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE, LOSS=SDT, COMPDEV=0.01, COMPMINTIME=2, COMPMAXTIME=15
Note: Datatype and encoding type must be corresponding. Please check Chapter 3 Encoding Section for details.
Note: When propertyValue is SDT, it is required to set compression deviation COMPDEV, which is the maximum absolute difference between values.
Note: For SDT, values withtin COMPDEV will be discarded.
Note: For SDT, it is optional to set compression minimum COMPMINTIME, which is the minimum time difference between stored values for purpose of noise reduction.
←
Storage Path Setting
Data Model and Terminology
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
| SET property (COMMA property)*
| DROP ID (COMMA ID)*
| ADD TAGS property (COMMA property)*
| ADD ATTRIBUTES property (COMMA property)*
| UPSERT tagClause attributeClause
;
attributeClause
: (ATTRIBUTES LR_BRACKET property (COMMA property)* RR_BRACKET)?
;
tagClause
: (TAGS LR_BRACKET property (COMMA property)* RR_BRACKET)?
;
Eg: ALTER timeseries root.turbine.d1.s1 RENAME tag1 TO newTag1
Eg: ALTER timeseries root.turbine.d1.s1 SET tag1=newV1, attr1=newV1
Eg: ALTER timeseries root.turbine.d1.s1 DROP tag1, tag2
https://apache.claz.org/iotdb/0.12.0/apache-iotdb-0.12.0-source-release.zip https://apache.osuosl.org/iotdb/0.12.0/apache-iotdb-0.12.0-source-release.zip https://ftp.wayne.edu/apache/iotdb/0.12.0/apache-iotdb-0.12.0-source-release.zip https://mirror.cogentco.com/pub/apache/iotdb/0.12.0/apache-iotdb-0.12.0-source-release.zip https://mirror.nodesdirect.com/apache/iotdb/0.12.0/apache-iotdb-0.12.0-source-release.zip https://mirror.olnevhost.net/pub/apache/iotdb/0.12.0/apache-iotdb-0.12.0-source-release.zip https://mirrors.advancedhosters.com/apache/iotdb/0.12.0/apache-iotdb-0.12.0-source-release.zip https://mirrors.gigenet.com/apache/iotdb/0.12.0/apache-iotdb-0.12.0-source-release.zip https://mirrors.ocf.berkeley.edu/apache/iotdb/0.12.0/apache-iotdb-0.12.0-source-release.zip https://mirrors.sonic.net/apache/iotdb/0.12.0/apache-iotdb-0.12.0-source-release.zip
Backup Sites¶
Please only use the backup mirrors to download KEYS, PGP signatures and hashes (SHA* etc)
-- or if no other mirrors are working.
https://downloads.apache.org/iotdb/0.12.0/apache-iotdb-0.12.0-source-release.zip
The full listing of mirror sites is also
available.
Becoming a mirror¶
The procedure for setting up new mirrors is described in How to become a
mirror.
Verify the integrity of the files¶
It is essential that you verify the integrity of the downloaded file using
the PGP signature (.asc file) or a hash (.md5 or .sha* file). Please read Verifying Apache Software
Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Hashes can be calculated using GPG:
% gpg --print-md SHA256 downloaded_file
The output should be compared with the contents of the SHA256 file.
Similarly for other hashes (SHA512, SHA1, MD5 etc) which may be provided.
Windows 7 and later systems should all now have certUtil:
% certUtil -hashfile pathToFileToCheck
HashAlgorithm choices: MD2 MD4 MD5 SHA1 SHA256 SHA384 SHA512
Unix-like systems (and macOS) will have a utility called
md5, md5sum or shasum
Community
Overview
Conferences
Summer of Code
Getting Started
The Apache Way
Travel Assistance
Get Involved
Code of Conduct
Eg: IoTDB > COUNT TIMESERIES root.ln
Eg: IoTDB > COUNT TIMESERIES root.ln.*.*.status
Eg: IoTDB > COUNT TIMESERIES root.ln.wf01.wt01.status
Note: The path can be prefix path, star path or timeseries path.
Note: This statement can be used in IoTDB Client and JDBC.
1234567COUNT TIMESERIES <Path> GROUP BY LEVEL=<INTEGER>
Eg: IoTDB > COUNT TIMESERIES root GROUP BY LEVEL=1
Eg: IoTDB > COUNT TIMESERIES root.ln GROUP BY LEVEL=2
Eg: IoTDB > COUNT TIMESERIES root.ln.wf01 GROUP BY LEVEL=3
Note: The path can be prefix path or timeseries path.
Note: This statement can be used in IoTDB Client and JDBC.
123456Count Nodes Statement COUNT NODES <Path> LEVEL=<INTEGER>
Eg: IoTDB > COUNT NODES root LEVEL=2
Eg: IoTDB > COUNT NODES root.ln LEVEL=2
Eg: IoTDB > COUNT NODES root.ln.* LEVEL=3
the PGP signature (.asc file) or a hash (.md5 or .sha* file). Please read Verifying Apache Software
Foundation Releases for more information on why
you should verify our releases.
The PGP signature can be verified using PGP or GPG. First download the
KEYS as well as the asc signature file for the relevant distribution.
Make sure you get these files from the main distribution site, rather than
from a mirror. Then verify the signatures using
% gpg --import KEYS
% gpg --verify downloaded_file.asc downloaded_file
or
% pgpk -a KEYS
% pgpv downloaded_file.asc
or
% pgp -ka KEYS
% pgp downloaded_file.asc
Alternatively, you can verify the hash on the file.
site for your download:
https://mirror.nodesdirect.com/apache/iotdb/0.12.0/apache-iotdb-0.12.0-server-bin.zip
Other mirror sites are suggested below.
It is essential that you verify the integrity of the downloaded file using
the PGP signature (.asc file) or a hash (.md5 or .sha* file).
Please only use the backup mirrors to download KEYS, PGP signatures and hashes (SHA* etc)
-- or if no other mirrors are working.
HTTP¶
https://apache.claz.org/iotdb/0.12.0/apache-iotdb-0.12.0-server-bin.zip https://apache.osuosl.org/iotdb/0.12.0/apache-iotdb-0.12.0-server-bin.zip https://ftp.wayne.edu/apache/iotdb/0.12.0/apache-iotdb-0.12.0-server-bin.zip https://mirror.cogentco.com/pub/apache/iotdb/0.12.0/apache-iotdb-0.12.0-server-bin.zip https://mirror.nodesdirect.com/apache/iotdb/0.12.0/apache-iotdb-0.12.0-server-bin.zip https://mirror.olnevhost.net/pub/apache/iotdb/0.12.0/apache-iotdb-0.12.0-server-bin.zip https://mirrors.advancedhosters.com/apache/iotdb/0.12.0/apache-iotdb-0.12.0-server-bin.zip https://mirrors.gigenet.com/apache/iotdb/0.12.0/apache-iotdb-0.12.0-server-bin.zip https://mirrors.ocf.berkeley.edu/apache/iotdb/0.12.0/apache-iotdb-0.12.0-server-bin.zip https://mirrors.sonic.net/apache/iotdb/0.12.0/apache-iotdb-0.12.0-server-bin.zip
Backup Sites¶
Please only use the backup mirrors to download KEYS, PGP signatures and hashes (SHA* etc)
-- or if no other mirrors are working.
https://downloads.apache.org/iotdb/0.12.0/apache-iotdb-0.12.0-server-bin.zip
Backup Sites¶
Please only use the backup mirrors to download KEYS, PGP signatures and hashes (SHA* etc)
-- or if no other mirrors are working.
https://downloads.apache.org/iotdb/0.12.0/apache-iotdb-0.12.0-grafana-bin.zip
The full listing of mirror sites is also
available.
Becoming a mirror¶
The procedure for setting up new mirrors is described in How to become a
mirror.
Verify the integrity of the files¶
It is essential that you verify the integrity of the downloaded file using
the PGP signature (.asc file) or a hash (.md5 or .sha* file). Please read Verifying Apache Software
Foundation Releases for more information on why
you should verify our releases.
The PGP signature can be verified using PGP or GPG. First download the
KEYS as well as the asc signature file for the relevant distribution.
Make sure you get these files from the main distribution site, rather than
from a mirror. Then verify the signatures using
% gpg --import KEYS
% gpg --verify downloaded_file.asc downloaded_file
Community
Overview
Conferences
Summer of Code
Getting Started
The Apache Way
Travel Assistance
Get Involved
Code of Conduct
Community FAQ
Memorials
Innovation
Incubator
Labs
Licensing
Licensing FAQ
Trademark Policy
Contacts
Tech Operations
Developer Information
Infrastructure
## Miscellaneous changes
* IOTDB-190 upgrade from antlr3 to antlr4
* IOTDB-418 new query engine
* IOTDB-429 return empty dataset instead of throw exception, e.g., show child paths root.*
* IOTDB-445 Unify the keyword of "timestamp" and "time"
* IOTDB-450 Add design documents
* IOTDB-498 Support date format "2020-02-10"
* IOTDB-503 Add checkTimeseriesExists in java native api
* IOTDB-605 Add more levels of index in TsFileMetadata for handling too many series in one device
* IOTDB-625 Change default level number: root is level 0
* IOTDB-628 rename client to cli
* IOTDB-621 Add Check isNull in Field for querying using session
* IOTDB-632 Performance improve for PreviousFill/LinearFill
* IOTDB-695 Accelerate the count timeseries query
* IOTDB-707 Optimize TsFileResource memory usage
* IOTDB-730 continue write in MQTT when some events are failed
* IOTDB-729 shutdown uncessary threadpool
* IOTDB-733 Enable setting for mqtt max length
* IOTDB-732 Upgrade fastjson version to 1.2.70
* Allow "count timeseries" without a prefix path
* Add max backup log file number
* add rpc compression api in client and session module
Eg. SELECT MAX_TIME(status), MAX_TIME(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT MAX_VALUE(status), MAX_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT AVG (temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT MIN_TIME(status), MIN_TIME(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT MIN_VALUE(status),MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. INSERT INTO root.ln.wf01.wt01(timestamp,status) VALUES(NOW(), false)
Eg. UPDATE root.ln.wf01.wt01 SET temperature = 23 WHERE time < NOW()
Eg. DELETE FROM root.ln.wf01.wt01.status, root.ln.wf01.wt01.temperature WHERE time < NOW()
Eg. SELECT * FROM root WHERE time < NOW()
* IOTDB-187 Enable to choose storage in local file system or HDFS
* IOTDB-188 Delete storage group
* IOTDB-193 Create schema automatically when inserting
* IOTDB-198 Add sync module (Sync TsFiles between IoTDB instances)
* IOTDB-199 Add a log visualization tool
* IOTDB-205 Support storage-group-level Time To Live (TTL)
* IOTDB-208 Add Bloom filter in TsFile
* IOTDB-223 Add a TsFile sketch tool
* IoTDB-226 Hive-TsFile connector
* IOTDB-239 Add interface for showing devices
* IOTDB-241 Add query and non query interface in session
* IOTDB-249 Enable lowercase in create_timeseries sql
* IOTDB-253 Support time expression
* IOTDB-259 Level query of path
* IOTDB-282 Add "show version"
* IOTDB-294 Online upgrade from 0.8.0 to 0.9.0
* Spark-iotdb-connector
* Support quoted measurement name
* Generate cpp, go, and python thrift files under service-rpc
* Display cache hit rate through jconsole
* Support inserting data that time < 0
Note: For SDT, it is optional to set compression maximum COMPMAXTIME, which is the maximum time difference between stored values regardless of COMPDEV.
123456789101112131415161718192021222324252627282930313233Create device template CREATE device template <TemplateName> WITH <AttributeClauses>
attributeClauses
: (MEASUREMENT_NAME DATATYPE OPERATOR_EQ dataType COMMA ENCODING OPERATOR_EQ encoding
(COMMA (COMPRESSOR | COMPRESSION) OPERATOR_EQ compressor=propertyValue)?
(COMMA property)*)
attributeClause
;
Eg: create device template temp1(
(s1 INT32 with encoding=Gorilla, compression=SNAPPY),
(s2 FLOAT with encoding=RLE, compression=SNAPPY)
)
1234567891011Set device template set device template <TemplateName> to <STORAGE_GROUP_NAME>
Eg: set device template temp1 to root.beijing
12Delete Timeseries Statement DELETE TIMESERIES <PrefixPath> [COMMA <PrefixPath>]*
Eg: IoTDB > DELETE TIMESERIES root.ln.wf01.wt01.status
Eg: IoTDB > DELETE TIMESERIES root.ln.wf01.wt01.status, root.ln.wf01.wt01.temperature
Eg: IoTDB > DELETE TIMESERIES root.ln.wf01.wt01.*
1234Alter Timeseries Statement ALTER TIMESERIES fullPath alterClause
alterClause
: RENAME beforeName=ID TO currentName=ID
Eg: ALTER timeseries root.turbine.d1.s1 ADD TAGS tag3=v3, tag4=v4
Eg: ALTER timeseries root.turbine.d1.s1 ADD ATTRIBUTES attr3=v3, attr4=v4
EG: ALTER timeseries root.turbine.d1.s1 UPSERT TAGS(tag2=newV2, tag3=v3) ATTRIBUTES(attr3=v3, attr4=v4)
123456789101112131415161718192021Show All Timeseries Statement SHOW TIMESERIES
Eg: IoTDB > SHOW TIMESERIES
Note: This statement can only be used in IoTDB Client. If you need to show all timeseries in JDBC, please use `DataBaseMetadata` interface.
123Show Specific Timeseries Statement SHOW TIMESERIES <Path>
Eg: IoTDB > SHOW TIMESERIES root
Eg: IoTDB > SHOW TIMESERIES root.ln
Eg: IoTDB > SHOW TIMESERIES root.ln.*.*.status
Eg: IoTDB > SHOW TIMESERIES root.ln.wf01.wt01.status
Note: The path can be prefix path, star path or timeseries path
Note: This statement can be used in IoTDB Client and JDBC.
1234567Show Specific Timeseries Statement with where clause SHOW TIMESERIES prefixPath? showWhereClause?
showWhereClause
: WHERE (property | containsExpression)
;
containsExpression
: name=ID OPERATOR_CONTAINS value=propertyValue
Foundation Releases for more information on why
you should verify our releases.
The PGP signature can be verified using PGP or GPG. First download the
KEYS as well as the asc signature file for the relevant distribution.
Make sure you get these files from the main distribution site, rather than
from a mirror. Then verify the signatures using
% gpg --import KEYS
% gpg --verify downloaded_file.asc downloaded_file
or
% pgpk -a KEYS
% pgpv downloaded_file.asc
or
% pgp -ka KEYS
% pgp downloaded_file.asc
Alternatively, you can verify the hash on the file.
Hashes can be calculated using GPG:
% gpg --print-md SHA256 downloaded_file
The output should be compared with the contents of the SHA256 file.
Similarly for other hashes (SHA512, SHA1, MD5 etc) which may be provided.
Windows 7 and later systems should all now have certUtil:
% certUtil -hashfile pathToFileToCheck
HashAlgorithm choices: MD2 MD4 MD5 SHA1 SHA256 SHA384 SHA512
Unix-like systems (and macOS) will have a utility called
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) Document In progress V0.12.x V0.11.x V0.10.x V0.9.x V0.8.xSystem designDownloadCommunity
Wiki
People Powered By Resources FeedbackDevelopment How to vote How to Commit Become a Committer ContributeGuide Changelist of TsFile Changelist of RPCBlog Overview Some Notes on Release 0.9.3 and upcoming 0.10.0ASF
Foundation
License
Security
Sponsorship
Thanks
Current Events
Languages English 简体中文
gitHub
(opens new window) # Release version Version IoTDB Binaries IoTDB Sources release notes 0.12.0 All-in-one SHA512 ASC Sources SHA512 ASC release notes Server SHA512 ASC Cluster SHA512 ASC Grafana-connector SHA512 ASC 0.11.3 Release SHA512 ASC Sources SHA512 ASC release notes Legacy version are available here: https://archive.apache.org/dist/iotdb/ (opens new window) Attention: How to upgrade a minor version (e.g., from v0.11.0 to v0.11.3)? versions which have the same major version are compatible. Just download and unzip the new version. Then modify the configuration files to keep consistent
with what you set in the old version. stop the old vesion instance, and start the new one. How to upgrade from v.11.x or v0.10.x to v0.12.x? Upgrading from v0.11 or v0.10 to v0.12 is similar as v0.9 to v0.10. The upgrade tool will rewrite the data files automatically. Stop writing new data. Call flush command using sbin/start-cli.sh in original version to close all TsFiles. We recommend to backup the data file (also the wal files and mlog.txt) before upgrading for rolling back. Just download, unzip v0.12.x.zip, and modify conf/iotdb-engine.proeprties to let all the
Community FAQ
Memorials
Innovation
Incubator
Labs
Licensing
Licensing FAQ
Trademark Policy
Contacts
Tech Operations
Developer Information
Infrastructure
Security
Status
Contacts
Press
Overview
ASF News
Announcements
Twitter Feed
Contacts
Eg: IoTDB > COUNT NODES root.ln.wf01 LEVEL=3
Note: The path can be prefix path or timeseries path.
Note: This statement can be used in IoTDB Client and JDBC.
1234567Show All Devices Statement SHOW Devices
Eg: IoTDB > SHOW Devices
Note: This statement can be used in IoTDB Client and JDBC.
123Show Specific Devices Statement SHOW DEVICES <PrefixPath>
Eg: IoTDB > SHOW DEVICES root
Eg: IoTDB > SHOW DEVICES root.ln
Eg: IoTDB > SHOW DEVICES root.*.wf01
Note: The path can be prefix path or star path.
Note: This statement can be used in IoTDB Client and JDBC.
123456Show Child Paths of Root Statement SHOW CHILD PATHS
Eg: IoTDB > SHOW CHILD PATHS
Note: This statement can be used in IoTDB Client and JDBC.
123Show Child Paths Statement SHOW CHILD PATHS <Path>
Eg: IoTDB > SHOW CHILD PATHS root
Eg: IoTDB > SHOW CHILD PATHS root.ln
Eg: IoTDB > SHOW CHILD PATHS root.*.wf01
Eg: IoTDB > SHOW CHILD PATHS root.ln.wf*
Note: The path can be prefix path or star path, the nodes can be in a "prefix + star" format.
Note: This statement can be used in IoTDB Client and JDBC.
Hashes can be calculated using GPG:
% gpg --print-md SHA256 downloaded_file
The output should be compared with the contents of the SHA256 file.
Similarly for other hashes (SHA512, SHA1, MD5 etc) which may be provided.
Windows 7 and later systems should all now have certUtil:
% certUtil -hashfile pathToFileToCheck
HashAlgorithm choices: MD2 MD4 MD5 SHA1 SHA256 SHA384 SHA512
Unix-like systems (and macOS) will have a utility called
md5, md5sum or shasum
Community
Overview
Conferences
Summer of Code
Getting Started
The Apache Way
Travel Assistance
Get Involved
Code of Conduct
Community FAQ
Memorials
Innovation
Incubator
Labs
The full listing of mirror sites is also
available.
Becoming a mirror¶
The procedure for setting up new mirrors is described in How to become a
mirror.
Verify the integrity of the files¶
It is essential that you verify the integrity of the downloaded file using
the PGP signature (.asc file) or a hash (.md5 or .sha* file). Please read Verifying Apache Software
Foundation Releases for more information on why
you should verify our releases.
The PGP signature can be verified using PGP or GPG. First download the
KEYS as well as the asc signature file for the relevant distribution.
Make sure you get these files from the main distribution site, rather than
from a mirror. Then verify the signatures using
% gpg --import KEYS
% gpg --verify downloaded_file.asc downloaded_file
or
% pgpk -a KEYS
% pgpv downloaded_file.asc
or
% pgp -ka KEYS
% pgp downloaded_file.asc
or
% pgpk -a KEYS
% pgpv downloaded_file.asc
or
% pgp -ka KEYS
% pgp downloaded_file.asc
Alternatively, you can verify the hash on the file.
Hashes can be calculated using GPG:
% gpg --print-md SHA256 downloaded_file
The output should be compared with the contents of the SHA256 file.
Similarly for other hashes (SHA512, SHA1, MD5 etc) which may be provided.
Windows 7 and later systems should all now have certUtil:
% certUtil -hashfile pathToFileToCheck
HashAlgorithm choices: MD2 MD4 MD5 SHA1 SHA256 SHA384 SHA512
Unix-like systems (and macOS) will have a utility called
md5, md5sum or shasum
Community
Overview
Conferences
Summer of Code
Getting Started
The Apache Way
Security
Status
Contacts
Press
Overview
ASF News
Announcements
Twitter Feed
Contacts
Legal
Legal Affairs
DMCA
Licensing
Trademark Policy
Public Records
Privacy Policy
Export Information
Licensing FAQ
Contacts
Copyright © 2019 The Apache Software Foundation, Licensed under the Apache License, Version 2.0.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation.
* Continue writing the last unclosed file
* Move the vulnera-checks section into the apache-release profile to accelerate compile
* Add metaquery in python example
* Set inferType of MQTT InsertPlan to true
## Bug Fixes
* IOTDB-125 Potential Concurrency bug while deleting and inserting happen together
* IOTDB-185 fix start-client failed on WinOS if there is blank space in the file path; let start-server.bat suport jdk12,13 etc
* IOTDB-304 Fix bug of incomplete HDFS URI
* IOTDB-341 Fix data type bug in grafana
* IOTDB-370 fix a concurrent problem in parsing sql
* IOTDB-376 fix metric to show executeQuery
* IOTDB-392 fix export CSV
* IOTDB-393 Fix unclear error message for no privilege users
* IOTDB-401 Correct the calculation of a chunk if there is no data in the chunk, do not flush empty chunk
* IOTDB-412 Paths are not correctly deduplicated
* IOTDB-420 Avoid encoding task dying silently
* IOTDB-425 fix can't change the root password.
* IOTDB-459 Fix calmem tool bug
* IOTDB-470fix IllegalArgumentException when there exists 0 byte TsFile
* IOTDB-529 Relative times and NOW() operator cannot be used in Group By
* IOTDB-531 fix issue when grafana visualize boolean data
* IOTDB-546 Fix show child paths statement doesn't show quotation marks
Eg. SELECT COUNT(temperature) FROM root.ln.wf01.wt01 WHERE time < NOW()
Eg. SELECT SUM(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
123# TTL IoTDB supports storage-level TTL settings, which means it is able to delete old data
automatically and periodically. The benefit of using TTL is that hopefully you can control the
total disk space usage and prevent the machine from running out of disks. Moreover, the query
performance may downgrade as the total number of files goes up and the memory usage also increase
as there are more files. Timely removing such files helps to keep at a high query performance
level and reduce memory usage. The TTL operations in IoTDB are supported by the following three
statements: Set TTL SET TTL TO StorageGroupName TTLTime
Eg. SET TTL TO root.group1 3600000
This example means that for data in root.group1, only that of the latest 1 hour will remain, the
older one is removed or made invisible.
Note: TTLTime should be millisecond timestamp. When TTL is set, insertions that fall
out of TTL will be rejected.
123456Unset TTL UNSET TTL TO StorageGroupName
Eg. UNSET TTL TO root.group1
This example means that data of all time will be accepted in this group.
123Show TTL SHOW ALL TTL
SHOW TTL ON StorageGroupNames
* Add interface (Delete timeseries) in session
* Add a tool to print tsfileResources (each device's start and end time)
* Support watermark feature
* Add micro and nano timestamp precision
## Incompatible changes
* RPC is incompatible, you can not use client-0.8.0 to connect with server-0.9.0 or use client-0.9.0 to connect with server-0.8.0.
* Server is backward compatible, server-0.9.0 could run on data folder of 0.8.0. The data file will be upgraded background.
* Change map key in TsDigest from String to enum data type
## Miscellaneous changes
* IOTDB-144 Meta data cache for query
* IOTDB-153 Further limit fetchSize to speed up LIMIT&OFFSET query
* IOTDB-160 External sort
* IOTDB-161 Add ErrorCode of different response errors
* IOTDB-180 Get rid of JSON format in "show timeseries"
* IOTDB-192 Improvement for LRUCache
* IOTDB-210 One else if branch will never be reached in the method optimize of ExpressionOptimizer
* IOTDB-215 Update TsFile sketch tool and TsFile docs for v0.9.0
* IOTDB-221 Add a python client example
* IOTDB-233 keep metadata plan clear
* IOTDB-251 Improve TSQueryDataSet structure in RPC
* IOTDB-257 Makes the client stop fetch when dataSize equals maxPrintRowCount and change client fetchSize less than maxPrintRowCount
* IOTDB-258 Add documents for Query History Visualization Tool and Shared Storage Architecture
* IOTDB-265 Re-adjust the threshold size of memtable
* IOTDB-267 Reduce IO operations in deserializing chunk header
| SET property (COMMA property)*
| DROP ID (COMMA ID)*
| ADD TAGS property (COMMA property)*
| ADD ATTRIBUTES property (COMMA property)*
| UPSERT tagClause attributeClause
;
attributeClause
: (ATTRIBUTES LR_BRACKET property (COMMA property)* RR_BRACKET)?
;
tagClause
: (TAGS LR_BRACKET property (COMMA property)* RR_BRACKET)?
;
Eg: ALTER timeseries root.turbine.d1.s1 RENAME tag1 TO newTag1
Eg: ALTER timeseries root.turbine.d1.s1 SET tag1=newV1, attr1=newV1
Eg: ALTER timeseries root.turbine.d1.s1 DROP tag1, tag2
Eg: ALTER timeseries root.turbine.d1.s1 ADD TAGS tag3=v3, tag4=v4
Eg: ALTER timeseries root.turbine.d1.s1 ADD ATTRIBUTES attr3=v3, attr4=v4
EG: ALTER timeseries root.turbine.d1.s1 UPSERT TAGS(tag2=newV2, tag3=v3) ATTRIBUTES(attr3=v3, attr4=v4)
123456789101112131415161718192021Show All Timeseries Statement SHOW TIMESERIES
Eg: IoTDB > SHOW TIMESERIES
Note: This statement can only be used in IoTDB Client. If you need to show all timeseries in JDBC, please use `DataBaseMetadata` interface.
123Show Specific Timeseries Statement SHOW TIMESERIES <Path>
Eg: IoTDB > SHOW TIMESERIES root
Eg: IoTDB > SHOW TIMESERIES root.ln
;
Eg: show timeseries root.ln where unit='c'
Eg: show timeseries root.ln where description contains 'test1'
12345678910Show Specific Timeseries Statement with where clause start from offset and limit the total number of result SHOW TIMESERIES prefixPath? showWhereClause? limitClause?
showWhereClause
: WHERE (property | containsExpression)
;
containsExpression
: name=ID OPERATOR_CONTAINS value=propertyValue
;
limitClause
: LIMIT INT offsetClause?
| offsetClause? LIMIT INT
;
Eg: show timeseries root.ln where unit='c'
Eg: show timeseries root.ln where description contains 'test1'
Eg: show timeseries root.ln where unit='c' limit 10 offset 10
12345678910111213141516Show Storage Group Statement SHOW STORAGE GROUP
Eg: IoTDB > SHOW STORAGE GROUP
Note: This statement can be used in IoTDB Client and JDBC.
123Count Timeseries Statement COUNT TIMESERIES <Path>
Eg: IoTDB > COUNT TIMESERIES root
Eg: IoTDB > COUNT TIMESERIES root.ln
Eg: IoTDB > COUNT TIMESERIES root.ln.*.*.status
Eg: IoTDB > COUNT TIMESERIES root.ln.wf01.wt01.status
Note: The path can be prefix path, star path or timeseries path.
Note: This statement can be used in IoTDB Client and JDBC.
1234567COUNT TIMESERIES <Path> GROUP BY LEVEL=<INTEGER>
md5, md5sum or shasum
Community
Overview
Conferences
Summer of Code
Getting Started
The Apache Way
Travel Assistance
Get Involved
Code of Conduct
Community FAQ
Memorials
Innovation
Incubator
Labs
Licensing
Licensing FAQ
Trademark Policy
Contacts
Tech Operations
Developer Information
Infrastructure
Security
Status
Contacts
Press
Overview
ASF News
directories point to the folders set in previous version (or the backup folder).
You can also modify other settings if you want. Any other config changes in v0.11 should be moved to v0.12. Stop IoTDB v0.11 or v0.10 instance, and start v0.12.x, then the IoTDB will upgrade data file format automatically. It is ok to read and write data when the upgrading process works. After a log All files upgraded successfully! printed, the upgrading completes. NOTICE 1: V0.12 changes many settings in conf/iotdb-engine.properties, so do not use previous
configuration file directly. NOTICE 2: V0.12 doesn't support upgrade from v0.9 or lower version, please upgrade to v0.10 first if needed. NOTICE 3: We don't recommend to delete data before the upgrading finished. The deletion will fail if you try to delete data in the storage group with upgrading files. How to upgrade from v.10.x to v0.11.x? The data format (i.e., TsFile data) of v0.10.x and v0.11 are compatible, but the WAL file is
incompatible. So, you can follow the steps: Stop writing new data. Call flush command using sbin/start-cli.sh in v0.10.x to close all TsFiles. We recommend to backup the the wal files and mlog.txt before upgrading for rolling back. Just download, unzip v0.11.x.zip, and modify conf/iotdb-engine.proeprties to let all the
directories point to the data folder set in v0.10.x (or the backup folder). You can also modify
other settings if you want. Stop IoTDB v0.10.x instance, and start v0.11.x, then the IoTDB will upgrade data file format
automatically. NOTICE: V0.11 changes many settings in conf/iotdb-engine.properties, so do not use v0.10's
configuration file directly. How to upgrade from v.9.x to v0.10.x? Upgrading from v0.9 to v0.10 is more complex than v0.8 to v0.9. Stop writing new data. Call flush command using sbin/start-client.sh in v0.9 to close all TsFiles. We recommend to backup the data file (also the wal files and mlog.txt) before upgrading for rolling back. Just download, unzip v0.10.x.zip, and modify conf/iotdb-engine.proeprties to let all the
directories point to the folders set in v0.9.x (or the backup folder).
You can also modify other settings if you want. Stop IoTDB v0.9 instance, and start v0.10.x, then the IoTDB will upgrade data file format automatically. How to upgrade from 0.8.x to v0.9.x? We recommend to backup the data file (also the wal files and mlog.txt) before upgrading for rolling back. Just download, unzip v0.9.x.zip, and modify conf/iotdb-engine.proeprties to let all the
directories point to the folders set in v0.8.x (or the backup folder).
You can also modify other settings if you want. Stop IoTDB v0.8 instance, and start v0.9.x, then the IoTDB will upgrade data file format automatically. # All releases Find all releases in the Archive repository (opens new window). # Verifying Hashes and Signatures Along with our releases, we also provide sha512 hashes in *.sha512 files and cryptographic signatures in *.asc files. The Apache Software Foundation has an extensive tutorial to verify hashes and signatures (opens new window)which you can follow by using any of these release-signing KEYS (opens new window). Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Legal
Legal Affairs
DMCA
Licensing
Trademark Policy
Public Records
Privacy Policy
Export Information
Licensing FAQ
Contacts
Copyright © 2019 The Apache Software Foundation, Licensed under the Apache License, Version 2.0.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation.
1234567Create snapshot for schema CREATE SNAPSHOT FOR SCHEMA
1# Data Management Statement Insert Record Statement INSERT INTO <PrefixPath> LPAREN TIMESTAMP COMMA <Sensor> [COMMA <Sensor>]* RPAREN VALUES LPAREN <TimeValue>, <PointValue> [COMMA <PointValue>]* RPAREN
Sensor : Identifier
Eg: IoTDB > INSERT INTO root.ln.wf01.wt01(timestamp,status) values(1509465600000,true)
Eg: IoTDB > INSERT INTO root.ln.wf01.wt01(timestamp,status) VALUES(NOW(), false)
Eg: IoTDB > INSERT INTO root.ln.wf01.wt01(timestamp,temperature) VALUES(2017-11-01T00:17:00.000+08:00,24.22028)
Eg: IoTDB > INSERT INTO root.ln.wf01.wt01(timestamp, status, temperature) VALUES (1509466680000, false, 20.060787);
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Note: The order of Sensor and PointValue need one-to-one correspondence
12345678Delete Record Statement DELETE FROM <PrefixPath> [COMMA <PrefixPath>]* [WHERE <WhereClause>]?
WhereClause : <Condition> [(AND) <Condition>]*
Condition : <TimeExpr> [(AND) <TimeExpr>]*
TimeExpr : TIME PrecedenceEqualOperator (<TimeValue> | <RelativeTime>)
Eg: DELETE FROM root.ln.wf01.wt01.temperature WHERE time > 2016-01-05T00:15:00+08:00 and time < 2017-11-1T00:05:00+08:00
Licensing
Licensing FAQ
Trademark Policy
Contacts
Tech Operations
Developer Information
Infrastructure
Security
Status
Contacts
Press
Overview
ASF News
Announcements
Twitter Feed
Contacts
Legal
Legal Affairs
DMCA
Licensing
Trademark Policy
Public Records
Privacy Policy
Export Information
Alternatively, you can verify the hash on the file.
Hashes can be calculated using GPG:
% gpg --print-md SHA256 downloaded_file
The output should be compared with the contents of the SHA256 file.
Similarly for other hashes (SHA512, SHA1, MD5 etc) which may be provided.
Windows 7 and later systems should all now have certUtil:
% certUtil -hashfile pathToFileToCheck
HashAlgorithm choices: MD2 MD4 MD5 SHA1 SHA256 SHA384 SHA512
Unix-like systems (and macOS) will have a utility called
md5, md5sum or shasum
Community
Overview
Conferences
Summer of Code
Getting Started
The Apache Way
Travel Assistance
Get Involved
Code of Conduct
Community FAQ
Memorials
Innovation
Incubator
Travel Assistance
Get Involved
Code of Conduct
Community FAQ
Memorials
Innovation
Incubator
Labs
Licensing
Licensing FAQ
Trademark Policy
Contacts
Tech Operations
Developer Information
Infrastructure
Security
Status
Contacts
Press
Overview
ASF News
Announcements
Twitter Feed
* IOTDB-643 Concurrent queries cause BufferUnderflowException when storage in HDFS
* IOTDB-663 Fix query cache OOM while executing query
* IOTDB-664 Win -e option
* IOTDB-669 fix getting two columns bug while ”show devices“ in session
* IOTDB-692 merge behaves incorrectly
* IOTDB-712 Meet BufferUnderflowException and can not recover
* IOTDB-718 Fix wrong time precision of NOW()
* IOTDB-735 Fix Concurrent error for MNode when creating time series automatically
* IOTDB-738 Fix measurements has blank
* fix concurrent auto create schema conflict bug
* fix meet incompatible file error in restart
* Fix bugs of set core-site.xml and hdfs-site.xml paths in HDFS storage
* fix execute flush command while inserting bug
* Fix sync schema pos bug
* Fix batch execution bug, the following sqls will all fail after one error sql
* Fix recover endTime set bug
# Apache IoTDB (incubating) 0.9.3
## Bug Fixes
- IOTDB-531 Fix that JDBC URL does not support domain issue
- IOTDB-563 Fix pentaho cannot be downloaded because of spring.io address
- IOTDB-608 Skip error Mlog
- IOTDB-634 Fix merge caused errors for TsFile storage in HDFS
- IOTDB-636 Fix Grafana connector does not use correct time unit
Eg.1 SHOW ALL TTL
This example will show TTLs of all storage groups.
Eg.2 SHOW TTL ON root.group1,root.group2,root.group3
This example will show TTLs of the specified 3 groups.
Notice: storage groups without TTL will show a "null"
1234567Notice: When you set TTL to some storage groups, data out of the TTL will be made invisible
immediately, but because the data files may contain both out-dated and living data or the data files may
be being used by queries, the physical removal of data is stale. If you increase or unset TTL
just after setting it previously, some previously invisible data may be seen again, but the
physically removed one is lost forever. In other words, different from delete statement, the
atomicity of data deletion is not guaranteed for efficiency concerns. So we recommend that you do
not change the TTL once it is set or at least do not reset it frequently, unless you are determined
to suffer the unpredictability. # Reference # Keywords Keywords for IoTDB (case insensitive):
ADD, BY, COMPRESSOR, CREATE, DATATYPE, DELETE, DESCRIBE, DROP, ENCODING, EXIT, FROM, GRANT, GROUP, LABLE, LINK, INDEX, INSERT, INTO, LOAD, MAX_POINT_NUMBER, MERGE, METADATA, ON, ORDER, PASSWORD, PRIVILEGES, PROPERTY, QUIT, REVOKE, ROLE, ROOT, SELECT, SET, SHOW, STORAGE, TIME, TIMESERIES, TIMESTAMP, TO, UNLINK, UPDATE, USER, USING, VALUE, VALUES, WHERE, WITH
Keywords with special meanings (case insensitive):
* Data Types: BOOLEAN, DOUBLE, FLOAT, INT32, INT64, TEXT
* Encoding Methods: BITMAP, DFT, GORILLA, PLAIN, RLE, TS_2DIFF
* Compression Methods: UNCOMPRESSED, SNAPPY, GZIP, LZ0, ZDT, PAA, PLA
* Logical symbol: AND, &, &&, OR, | , ||, NOT, !, TRUE, FALSE
12345678# Identifiers QUOTE := '\'';
DOT := '.';
* IOTDB-273 Parallel recovery
* IOTDB-276 Fix inconsistent ways of judging whether a Field is null
* IOTDB-285 Duplicate fields in EngineDataSetWithoutValueFilter.java
* IOTDB-287 Restrict users to only use domain names and IP addresses.
* IOTDB-293 Variable naming convention
* IOTDB-295 Refactor db.exception
* Reconstruct Antlr3 grammar to improve performance
* Tooling for release
* Modified Decoder and SequenceReader to support old version of TsFile
* Remove jdk constrain of jdk8 and 11
* Avoid second execution of parseSQLToPhysicalPlan in executeStatement
## Known Issues
* IOTDB-20 Need to support UPDATE
## Bug Fixes
* IOTDB-168&169 Fix a bug in export-csv tool and fix compatibility of timestamp formats in exportCsv, client display and sql
* IOTDB-174 Fix querying timeseries interface cannot make a query by the specified path prefix
* IOTDB-195 Using String.getBytes(utf-9).length to replace string.length() in ChunkGroupMetadata for supporting Chinese
* IOTDB-211 Use "%IOTDB_HOME%\lib\*" to refers to all .jar files in the directory in start-server.bat
* IOTDB-240 Fix unknown time series in where clause
* IOTDB-244 Fix bug when querying with duplicated columns
* IOTDB-252 Add/fix shell and bat for TsFileSketchTool/TsFileResourcePrinter
* IOTDB-266 NullPoint exception when reading not existed devices using ReadOnlyTsFile
Eg: IoTDB > SHOW TIMESERIES root.ln.*.*.status
Eg: IoTDB > SHOW TIMESERIES root.ln.wf01.wt01.status
Note: The path can be prefix path, star path or timeseries path
Note: This statement can be used in IoTDB Client and JDBC.
1234567Show Specific Timeseries Statement with where clause SHOW TIMESERIES prefixPath? showWhereClause?
showWhereClause
: WHERE (property | containsExpression)
;
containsExpression
: name=ID OPERATOR_CONTAINS value=propertyValue
;
Eg: show timeseries root.ln where unit='c'
Eg: show timeseries root.ln where description contains 'test1'
12345678910Show Specific Timeseries Statement with where clause start from offset and limit the total number of result SHOW TIMESERIES prefixPath? showWhereClause? limitClause?
showWhereClause
: WHERE (property | containsExpression)
;
containsExpression
Eg: IoTDB > COUNT TIMESERIES root GROUP BY LEVEL=1
Eg: IoTDB > COUNT TIMESERIES root.ln GROUP BY LEVEL=2
Eg: IoTDB > COUNT TIMESERIES root.ln.wf01 GROUP BY LEVEL=3
Note: The path can be prefix path or timeseries path.
Note: This statement can be used in IoTDB Client and JDBC.
123456Count Nodes Statement COUNT NODES <Path> LEVEL=<INTEGER>
Eg: IoTDB > COUNT NODES root LEVEL=2
Eg: IoTDB > COUNT NODES root.ln LEVEL=2
Eg: IoTDB > COUNT NODES root.ln.wf01 LEVEL=3
Note: The path can be prefix path or timeseries path.
Note: This statement can be used in IoTDB Client and JDBC.
123456Show All Devices Statement SHOW Devices
Eg: IoTDB > SHOW Devices
Note: This statement can be used in IoTDB Client and JDBC.
123Show Specific Devices Statement SHOW DEVICES <PrefixPath>
Eg: IoTDB > SHOW DEVICES root
Eg: IoTDB > SHOW DEVICES root.ln
Eg: IoTDB > SHOW DEVICES root.*.wf01
Note: The path can be prefix path or star path.
Note: This statement can be used in IoTDB Client and JDBC.
Announcements
Twitter Feed
Contacts
Legal
Legal Affairs
DMCA
Licensing
Trademark Policy
Public Records
Privacy Policy
Export Information
Licensing FAQ
Contacts
Copyright © 2019 The Apache Software Foundation, Licensed under the Apache License, Version 2.0.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation.
Eg: DELETE FROM root.ln.wf01.wt01.status, root.ln.wf01.wt01.temperature WHERE time < NOW()
Eg: DELETE FROM root.ln.wf01.wt01.* WHERE time >= 1509466140000
1234567Select Record Statement SELECT <SelectClause> FROM <FromClause> [WHERE <WhereClause>]?
SelectClause : <SelectPath> (COMMA <SelectPath>)*
SelectPath : <FUNCTION> LPAREN <Path> RPAREN | <Path>
FUNCTION : ‘COUNT’ , ‘MIN_TIME’, ‘MAX_TIME’, ‘MIN_VALUE’, ‘MAX_VALUE’
FromClause : <PrefixPath> (COMMA <PrefixPath>)?
WhereClause : <Condition> [(AND | OR) <Condition>]*
Condition : <Expression> [(AND | OR) <Expression>]*
Expression : [NOT | !]? <TimeExpr> | [NOT | !]? <SensorExpr>
TimeExpr : TIME PrecedenceEqualOperator (<TimeValue> | <RelativeTime>)
RelativeTimeDurationUnit = Integer ('Y'|'MO'|'W'|'D'|'H'|'M'|'S'|'MS'|'US'|'NS')
RelativeTime : (now() | <TimeValue>) [(+|-) RelativeTimeDurationUnit]+
SensorExpr : (<Timeseries> | <Path>) PrecedenceEqualOperator <PointValue>
Eg: IoTDB > SELECT status, temperature FROM root.ln.wf01.wt01 WHERE temperature < 24 and time > 2017-11-1 0:13:00
Eg. IoTDB > SELECT * FROM root
Eg. IoTDB > SELECT * FROM root where time > now() - 5m
Eg. IoTDB > SELECT * FROM root.ln.*.wf*
Eg. IoTDB > SELECT COUNT(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 25
Eg. IoTDB > SELECT MIN_TIME(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 25
Eg. IoTDB > SELECT MAX_TIME(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature > 24
Eg. IoTDB > SELECT MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature > 23
Eg. IoTDB > SELECT MAX_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 25
Eg. IoTDB > SELECT COUNT(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 25 GROUP BY LEVEL=1
Licensing FAQ
Contacts
Copyright © 2019 The Apache Software Foundation, Licensed under the Apache License, Version 2.0.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation.
Labs
Licensing
Licensing FAQ
Trademark Policy
Contacts
Tech Operations
Developer Information
Infrastructure
Security
Status
Contacts
Press
Overview
ASF News
Announcements
Twitter Feed
Contacts
Legal
Legal Affairs
DMCA
Licensing
Trademark Policy
Public Records
Privacy Policy
Contacts
Legal
Legal Affairs
DMCA
Licensing
Trademark Policy
Public Records
Privacy Policy
Export Information
Licensing FAQ
Contacts
Copyright © 2019 The Apache Software Foundation, Licensed under the Apache License, Version 2.0.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation.
## Miscellaneous changes
- IOTDB-528 Modify grafana group by
- IOTDB-635 Add workaround when doing Aggregation over boolean Series
- Remove docs of Load External Tsfile
- Add Grafana IoTDB Bridge Artifact to distribution in tools/grafana folder
# Apache IoTDB (incubating) 0.9.2
## Bug Fixes
- IOTDB-553 Fix Return Empty ResultSet when queried series doesn't exist
- IOTDB-575 add default jmx user and password; fix issues that jmx can't be accessed remotely
- IOTDB-584 Fix InitializerError when recovering files on HDFS
- Fix batch insert once an illegal sql occurs all the sqls after that will not succeed
- Fix concurrent modification exception when iterator TsFileResourceList
- Fix some HDFS config issues
- Fix runtime exception not be catched and sync schema pos was nullpointer bug in DataTransferManager
- Fix python rpc grammar mistakes
- Fix upgrade ConcurrentModificationException
## Miscellaneous changes
- IOTDB-332 support Chinese characters in path
- improve start-server.bat by using quotes to protect against empty entries
- Add Chinese documents for chapter 4.2
- change download-maven-plugin to 1.3.0
- add session pool
COLON : ':' ;
COMMA := ',' ;
SEMICOLON := ';' ;
LPAREN := '(' ;
RPAREN := ')' ;
LBRACKET := '[';
RBRACKET := ']';
EQUAL := '=' | '==';
NOTEQUAL := '<>' | '!=';
LESSTHANOREQUALTO := '<=';
LESSTHAN := '<';
GREATERTHANOREQUALTO := '>=';
GREATERTHAN := '>';
DIVIDE := '/';
PLUS := '+';
MINUS := '-';
STAR := '*';
Letter := 'a'..'z' | 'A'..'Z';
HexDigit := 'a'..'f' | 'A'..'F';
Digit := '0'..'9';
Boolean := TRUE | FALSE | 0 | 1 (case insensitive)
* IOTDB-264 Restart failure due to WAL replay error
* IOTDB-290 Bug about threadlocal field in TSServiceImpl.java
* IOTDB-291 Statement close operation may cause the whole connection's resource to be released
* IOTDB-296 Fix error when skip page data in sequence reader
* IOTDB-301 Bug Fix: executing "count nodes root" in client gets "Msg:3"
* Fix Dynamic Config when Creating Existing SG or Time-series
* Fix start-walchecker scripts for letting user define the wal folder
* Fix start script to set JAVA_HOME
# Apache IoTDB (incubating) 0.8.2
This is a bug-fix version of 0.8.1
- IOTDB-264 lack checking datatype before writing WAL
- IOTDB-317 Fix "flush + wrong aggregation" causes failed query in v0.8.x
- NOTICE and LICENSE file update
# Apache IoTDB (incubating) 0.8.1
This is a bug-fix version of 0.8.0
* IOTDB-172 Bug in updating startTime and endTime in TsFileResource
* IOTDB-195 Bug about 'serializedSize' in ChunkGroupMetaData.java (for Chinese string)
* IOTDB-202 fix tsfile example data type
* IOTDB-242 fix mvn integration-test failed because the files in the target folder changes
* Abnormal publishing of sequence and unsequence data folders in DirectoryManager
: name=ID OPERATOR_CONTAINS value=propertyValue
;
limitClause
: LIMIT INT offsetClause?
| offsetClause? LIMIT INT
;
Eg: show timeseries root.ln where unit='c'
Eg: show timeseries root.ln where description contains 'test1'
Eg: show timeseries root.ln where unit='c' limit 10 offset 10
12345678910111213141516Show Storage Group Statement SHOW STORAGE GROUP
Eg: IoTDB > SHOW STORAGE GROUP
Note: This statement can be used in IoTDB Client and JDBC.
123Show Specific Storage Group Statement SHOW STORAGE GROUP <PrefixPath>
Eg: IoTDB > SHOW STORAGE GROUP root.*
Eg: IoTDB > SHOW STORAGE GROUP root.ln
Note: The path can be prefix path or star path.
Note: This statement can be used in IoTDB Client and JDBC.
12345Show Merge Status Statement SHOW MERGE
123456Show Child Paths of Root Statement SHOW CHILD PATHS
Eg: IoTDB > SHOW CHILD PATHS
Note: This statement can be used in IoTDB Client and JDBC.
123Show Child Paths Statement SHOW CHILD PATHS <Path>
Eg: IoTDB > SHOW CHILD PATHS root
Eg: IoTDB > SHOW CHILD PATHS root.ln
Eg: IoTDB > SHOW CHILD PATHS root.*.wf01
Eg: IoTDB > SHOW CHILD PATHS root.ln.wf*
Note: The path can be prefix path or star path, the nodes can be in a "prefix + star" format.
Note: This statement can be used in IoTDB Client and JDBC.
1234567# Data Management Statement Insert Record Statement INSERT INTO <PrefixPath> LPAREN TIMESTAMP COMMA <Sensor> [COMMA <Sensor>]* RPAREN VALUES LPAREN <TimeValue>, <PointValue> [COMMA <PointValue>]* RPAREN
Sensor : Identifier
Eg: IoTDB > INSERT INTO root.ln.wf01.wt01(timestamp,status) values(1509465600000,true)
Eg: IoTDB > INSERT INTO root.ln.wf01.wt01(timestamp,status) VALUES(NOW(), false)
Eg: IoTDB > INSERT INTO root.ln.wf01.wt01(timestamp,temperature) VALUES(2017-11-01T00:17:00.000+08:00,24.22028)
Eg: IoTDB > INSERT INTO root.ln.wf01.wt01(timestamp, status, temperature) VALUES (1509466680000, false, 20.060787);
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Note: The order of Sensor and PointValue need one-to-one correspondence
12345678Update Record Statement UPDATE <UpdateClause> SET <SetClause> WHERE <WhereClause>
UpdateClause: <prefixPath>
Note: the statement needs to satisfy this constraint: <Path>(SelectClause) + <PrefixPath>(FromClause) = <Timeseries>
Note: If the <SensorExpr>(WhereClause) is started with <Path> and not with ROOT, the statement needs to satisfy this constraint: <PrefixPath>(FromClause) + <Path>(SensorExpr) = <Timeseries>
Note: In Version 0.7.0, if <WhereClause> includes `OR`, time filter can not be used.
Note: There must be a space on both sides of the plus and minus operator appearing in the time expression
1234567891011121314151617181920212223242526Group By Statement SELECT <SelectClause> FROM <FromClause> WHERE <WhereClause> GROUP BY <GroupByTimeClause>
SelectClause : <Function> [COMMA < Function >]*
Function : <AggregationFunction> LPAREN <Path> RPAREN
FromClause : <PrefixPath>
WhereClause : <Condition> [(AND | OR) <Condition>]*
Condition : <Expression> [(AND | OR) <Expression>]*
Expression : [NOT | !]? <TimeExpr> | [NOT | !]? <SensorExpr>
TimeExpr : TIME PrecedenceEqualOperator (<TimeValue> | <RelativeTime>)
RelativeTimeDurationUnit = Integer ('Y'|'MO'|'W'|'D'|'H'|'M'|'S'|'MS'|'US'|'NS')
RelativeTime : (now() | <TimeValue>) [(+|-) RelativeTimeDurationUnit]+
SensorExpr : (<Timeseries> | <Path>) PrecedenceEqualOperator <PointValue>
GroupByTimeClause : LPAREN <TimeInterval> COMMA <TimeUnit> (COMMA <TimeUnit>)? RPAREN
TimeInterval: LSBRACKET <TimeValue> COMMA <TimeValue> RRBRACKET | LRBRACKET <TimeValue> COMMA <TimeValue> RSBRACKET
TimeUnit : Integer <DurationUnit>
DurationUnit : "ms" | "s" | "m" | "h" | "d" | "w"
Eg: SELECT COUNT(status), COUNT(temperature) FROM root.ln.wf01.wt01 where temperature < 24 GROUP BY([1509465720000, 1509466380000), 5m)
Eg: SELECT COUNT(status), COUNT(temperature) FROM root.ln.wf01.wt01 where temperature < 24 GROUP BY((1509465720000, 1509466380000], 5m)
Eg. SELECT COUNT (status), MAX_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE time < 1509466500000 GROUP BY([1509465720000, 1509466380000), 5m, 10m)
Eg. SELECT MIN_TIME(status), MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE temperature < 25 GROUP BY ([1509466140000, 1509466380000), 3m, 5ms)
Eg. SELECT MIN_TIME(status), MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE temperature < 25 GROUP BY ((1509466140000, 1509466380000], 3m, 5ms)
Note: the statement needs to satisfy this constraint: <Path>(SelectClause) + <PrefixPath>(FromClause) = <Timeseries>
Note: If the <SensorExpr>(WhereClause) is started with <Path> and not with ROOT, the statement needs to satisfy this constraint: <PrefixPath>(FromClause) + <Path>(SensorExpr) = <Timeseries>
Note: <TimeValue>(TimeInterval) needs to be greater than 0
Note: First <TimeValue>(TimeInterval) in needs to be smaller than second <TimeValue>(TimeInterval)
Export Information
Licensing FAQ
Contacts
Copyright © 2019 The Apache Software Foundation, Licensed under the Apache License, Version 2.0.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation.
- add insertInBatch in Session
- add insertInBatch to SessionPool
- modify 0.9 docs to fit website
- remove tsfile-format.properties
- add bloom filter in iotdb-engien.properties
- update server download doc
- typos fix in Rel/0.9 docs
- support 0.12.0 and 0.13.0 thrift
# Apache IoTDB (incubating) 0.9.1
## Bug Fixes
- IOTDB-159 Fix NullPointerException in SeqTsFileRecoverTest and UnseqTsFileRecoverTest
- IOTDB-317 Fix a bug that "flush + wrong aggregation query" causes the following queries to fail
- IOTDB-324 Fix inaccurate statistics when writing in batch
- IOTDB-327 Fix a groupBy-without-value-filter query bug caused by the wrong page skipping logic
- IOTDB-331 Fix a groupBy query bug when axisOrigin-startTimeOfWindow is an integral multiple of interval
- IOTDB-357 Fix NullPointerException in ActiveTimeSeriesCounter
- IOTDB-359 Fix a wrong-data-type bug in TsFileSketchTool
- IOTDB-360 Fix bug of a deadlock in CompressionRatio
- IOTDB-363 Fix link errors in Development-Contributing.md and add Development-Document.md
- IOTDB-392 Fix a bug in CSV export tool
- Fix apache rat header format error in some files
## Miscellaneous changes
- IOTDB-321 Add definitions of time expression and LEVEL in related documents
- Support pypi distribution for Python client
# Apache IoTDB (incubating) 0.9.0
## New Features
* IOTDB-143 Compaction of data file
* IOTDB-151 Support number format in timeseries path
* IOTDB-158 Add metrics web service
* IOTDB-173 Add batch write interface in session
123456789101112131415161718192021222324StringLiteral := ( '\'' ( ~('\'') )* '\'' | '\"' ( ~('\"') )* '\"');
eg. 'abc'
eg. 'abc'
123Integer := ('-' | '+')? Digit+;
eg. 123
eg. -222
123Float := ('-' | '+')? Digit+ DOT Digit+ (('e' | 'E') ('-' | '+')? Digit+)?;
eg. 3.1415
eg. 1.2E10
eg. -1.33
1234Identifier := (Letter | '_') (Letter | Digit | '_' | MINUS)*;
eg. a123
eg. _abc123
1234# Literals PointValue : Integer | Float | StringLiteral | Boolean
1TimeValue : Integer | DateTime | ISO8601 | NOW()
Note: Integer means timestamp type.
DateTime :
eg. 2016-11-16T16:22:33+08:00
eg. 2016-11-16 16:22:33+08:00
eg. 2016-11-16T16:22:33.000+08:00
eg. 2016-11-16 16:22:33.000+08:00
Note: DateTime Type can support several types, see Chapter 3 Datetime section for details.
123456789PrecedenceEqualOperator : EQUAL | NOTEQUAL | LESSTHANOREQUALTO | LESSTHAN | GREATERTHANOREQUALTO | GREATERTHAN
1Timeseries : ROOT [DOT <LayerName>]* DOT <SensorName>
LayerName : Identifier
SensorName : Identifier
eg. root.ln.wf01.wt01.status
eg. root.sgcc.wf03.wt01.temperature
Note: Timeseries must be start with `root`(case insensitive) and end with sensor name.
123456PrefixPath : ROOT (DOT <LayerName>)*
LayerName : Identifier | STAR
# Apache IoTDB (incubating) 0.8.0
This is the first official release of Apache IoTDB after joining the Incubator.
## New Features
* IOTDB-1 Add Aggregation query
* IOTDB-4 Asynchronously force sync WAL periodically
* IOTDB-5 Support data deletion
* IOTDB-11 Support start script for jdk 11 on Windows OS
* IOTDB-18 Improve startup script compatible for jdk11
* IOTDB-36 [TsFile] Enable recover data from a incomplete TsFile and continue to write
* IOTDB-37 Add WAL check tool script
* IOTDB-51 Update post-back module to synchronization module
Eg: IoTDB > SHOW MERGE
Note: This statement can be used in IoTDB Client and JDBC.
123Count Timeseries Statement COUNT TIMESERIES <Path>
Eg: IoTDB > COUNT TIMESERIES root
Eg: IoTDB > COUNT TIMESERIES root.ln
Eg: IoTDB > COUNT TIMESERIES root.ln.*.*.status
Eg: IoTDB > COUNT TIMESERIES root.ln.wf01.wt01.status
Note: The path can be prefix path, star path or timeseries path.
Note: This statement can be used in IoTDB Client and JDBC.
1234567COUNT TIMESERIES <Path> GROUP BY LEVEL=<INTEGER>
Eg: IoTDB > COUNT TIMESERIES root GROUP BY LEVEL=1
Eg: IoTDB > COUNT TIMESERIES root.ln GROUP BY LEVEL=2
Eg: IoTDB > COUNT TIMESERIES root.ln.wf01 GROUP BY LEVEL=3
Note: The path can be prefix path or timeseries path.
Note: This statement can be used in IoTDB Client and JDBC.
123456Count Nodes Statement COUNT NODES <Path> LEVEL=<INTEGER>
Eg: IoTDB > COUNT NODES root LEVEL=2
Eg: IoTDB > COUNT NODES root.ln LEVEL=2
Eg: IoTDB > COUNT NODES root.ln.* LEVEL=3
Eg: IoTDB > COUNT NODES root.ln.wf01 LEVEL=3
SetClause: <SetExpression>
SetExpression: <Path> EQUAL <PointValue>
WhereClause : <Condition> [(AND | OR) <Condition>]*
Condition : <Expression> [(AND | OR) <Expression>]*
Expression : [NOT | !]? TIME PrecedenceEqualOperator <TimeValue>
Eg: IoTDB > UPDATE root.ln.wf01.wt01 SET temperature = 23 WHERE time < NOW() and time > 2017-11-1T00:15:00+08:00
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
123456789Delete Record Statement DELETE FROM <PrefixPath> [COMMA <PrefixPath>]* WHERE TIME LESSTHAN <TimeValue>
Eg: DELETE FROM root.ln.wf01.wt01.temperature WHERE time < 2017-11-1T00:05:00+08:00
Eg: DELETE FROM root.ln.wf01.wt01.status, root.ln.wf01.wt01.temperature WHERE time < NOW()
Eg: DELETE FROM root.ln.wf01.wt01.* WHERE time < 1509466140000
1234Select Record Statement SELECT <SelectClause> FROM <FromClause> [WHERE <WhereClause>]?
SelectClause : <SelectPath> (COMMA <SelectPath>)*
SelectPath : <FUNCTION> LPAREN <Path> RPAREN | <Path>
FUNCTION : ‘COUNT’ , ‘MIN_TIME’, ‘MAX_TIME’, ‘MIN_VALUE’, ‘MAX_VALUE’
FromClause : <PrefixPath> (COMMA <PrefixPath>)?
WhereClause : <Condition> [(AND | OR) <Condition>]*
Condition : <Expression> [(AND | OR) <Expression>]*
Expression : [NOT | !]? <TimeExpr> | [NOT | !]? <SensorExpr>
TimeExpr : TIME PrecedenceEqualOperator (<TimeValue> | <RelativeTime>)
RelativeTimeDurationUnit = Integer ('Y'|'MO'|'W'|'D'|'H'|'M'|'S'|'MS'|'US'|'NS')
RelativeTime : (now() | <TimeValue>) [(+|-) RelativeTimeDurationUnit]+
SensorExpr : (<Timeseries> | <Path>) PrecedenceEqualOperator <PointValue>
Note: <TimeUnit> needs to be greater than 0
Note: Third <TimeUnit> if set shouldn't be smaller than second <TimeUnit>
1234567891011121314151617181920212223242526Fill Statement SELECT <SelectClause> FROM <FromClause> WHERE <WhereClause> FILL <FillClause>
SelectClause : <Path> [COMMA <Path>]*
FromClause : < PrefixPath > [COMMA < PrefixPath >]*
WhereClause : <WhereExpression>
WhereExpression : TIME EQUAL <TimeValue>
FillClause : LPAREN <TypeClause> [COMMA <TypeClause>]* RPAREN
TypeClause : <Int32Clause> | <Int64Clause> | <FloatClause> | <DoubleClause> | <BoolClause> | <TextClause>
Int32Clause: INT32 LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
Int64Clause: INT64 LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
FloatClause: FLOAT LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
DoubleClause: DOUBLE LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
BoolClause: BOOLEAN LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
TextClause: TEXT LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
PreviousClause : PREVIOUS [COMMA <ValidPreviousTime>]?
LinearClause : LINEAR [COMMA <ValidPreviousTime> COMMA <ValidBehindTime>]?
ValidPreviousTime, ValidBehindTime: <TimeUnit>
TimeUnit : Integer <DurationUnit>
DurationUnit : "ms" | "s" | "m" | "h" | "d" | "w"
Eg: SELECT temperature FROM root.ln.wf01.wt01 WHERE time = 2017-11-01T16:37:50.000 FILL(float[previous, 1m])
Eg: SELECT temperature,status FROM root.ln.wf01.wt01 WHERE time = 2017-11-01T16:37:50.000 FILL (float[linear, 1m, 1m], boolean[previous, 1m])
Eg: SELECT temperature,status,hardware FROM root.ln.wf01.wt01 WHERE time = 2017-11-01T16:37:50.000 FILL (float[linear, 1m, 1m], boolean[previous, 1m], text[previous])
* IoTDB-174 Add interfaces for querying device or timeseries number
* IOTDB-187 Enable to choose storage in local file system or HDFS
* IOTDB-188 Delete storage group
* IOTDB-193 Create schema automatically when inserting
* IOTDB-198 Add sync module (Sync TsFiles between IoTDB instances)
* IOTDB-199 Add a log visualization tool
* IOTDB-205 Support storage-group-level Time To Live (TTL)
* IOTDB-208 Add Bloom filter in TsFile
* IOTDB-223 Add a TsFile sketch tool
* IoTDB-226 Hive-TsFile connector
* IOTDB-239 Add interface for showing devices
* IOTDB-241 Add query and non query interface in session
* IOTDB-249 Enable lowercase in create_timeseries sql
* IOTDB-253 Support time expression
* IOTDB-259 Level query of path
* IOTDB-282 Add "show version"
* IOTDB-294 Online upgrade from 0.8.0 to 0.9.0
* Spark-iotdb-connector
* Support quoted measurement name
* Generate cpp, go, and python thrift files under service-rpc
* Display cache hit rate through jconsole
* Support inserting data that time < 0
* Add interface (Delete timeseries) in session
* Add a tool to print tsfileResources (each device's start and end time)
* Support watermark feature
* Add micro and nano timestamp precision
## Incompatible changes
* RPC is incompatible, you can not use client-0.8.0 to connect with server-0.9.0 or use client-0.9.0 to connect with server-0.8.0.
* Server is backward compatible, server-0.9.0 could run on data folder of 0.8.0. The data file will be upgraded background.
* Change map key in TsDigest from String to enum data type
eg. root.sgcc
eg. root.*
1234Path: (ROOT | <LayerName>) (DOT <LayerName>)*
LayerName: Identifier | STAR
eg. root.ln.wf01.wt01.status
eg. root.*.wf01.wt01.status
eg. root.ln.wf01.wt01.*
eg. *.wt01.*
eg. *
1234567
←
Account Management Statements
Sync Tool
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
* IOTDB-59 Support GroupBy query
* IOTDB-73 Add REGULAR encoding method for data with fixed frequency
* IOTDB-80 Support custom export file name
* IOTDB-81 Update travis for supporting JDK11 on Windows
* IOTDB-83 Add process bar for import script and show how many rows have been exported
* IOTDB-91 Improve tsfile-spark-connector to support spark-2.4.3
* IOTDB-93 IoTDB Calcite integration
* IOTDB-109 Support appending data at the end of a completed TsFile
* IOTDB-122 Add prepared statement in JDBC
* IOTDB-123 Add documents in Chinese
* IOTDB-130 Dynamic parameters adapter
* IOTDB-134 Add default parameter for client starting script
* Add read-only mode of IoTDB
* New storage engine with asynchronously flush and close data file
* Adding english documents
* Supporting travis + window + jdk8
* Add skipping all UTs: maven integration-test -DskipUTS=true
* Enable users define the location of their thrift compiler
Note: The path can be prefix path or timeseries path.
Note: This statement can be used in IoTDB Client and JDBC.
1234567Show All Devices Statement SHOW DEVICES (WITH STORAGE GROUP)? limitClause?
Eg: IoTDB > SHOW DEVICES
Eg: IoTDB > SHOW DEVICES WITH STORAGE GROUP
Note: This statement can be used in IoTDB Client and JDBC.
1234Show Specific Devices Statement SHOW DEVICES <PrefixPath> (WITH STORAGE GROUP)? limitClause?
Eg: IoTDB > SHOW DEVICES root
Eg: IoTDB > SHOW DEVICES root.ln
Eg: IoTDB > SHOW DEVICES root.*.wf01
Eg: IoTDB > SHOW DEVICES root.ln WITH STORAGE GROUP
Eg: IoTDB > SHOW DEVICES root.*.wf01 WITH STORAGE GROUP
Note: The path can be prefix path or star path.
Note: This statement can be used in IoTDB Client and JDBC.
12345678Show Child Paths of Root Statement SHOW CHILD PATHS
Eg: IoTDB > SHOW CHILD PATHS
Note: This statement can be used in IoTDB Client and JDBC.
123Show Child Paths Statement SHOW CHILD PATHS <Path>
Eg: IoTDB > SHOW CHILD PATHS root
Eg: IoTDB > SHOW CHILD PATHS root.ln
Eg: IoTDB > SELECT status, temperature FROM root.ln.wf01.wt01 WHERE temperature < 24 and time > 2017-11-1 0:13:00
Eg. IoTDB > SELECT * FROM root
Eg. IoTDB > SELECT * FROM root where time > now() - 5m
Eg. IoTDB > SELECT * FROM root.ln.*.wf*
Eg. IoTDB > SELECT COUNT(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 25
Eg. IoTDB > SELECT MIN_TIME(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 25
Eg. IoTDB > SELECT MAX_TIME(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature > 24
Eg. IoTDB > SELECT MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature > 23
Eg. IoTDB > SELECT MAX_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 25
Note: the statement needs to satisfy this constraint: <Path>(SelectClause) + <PrefixPath>(FromClause) = <Timeseries>
Note: If the <SensorExpr>(WhereClause) is started with <Path> and not with ROOT, the statement needs to satisfy this constraint: <PrefixPath>(FromClause) + <Path>(SensorExpr) = <Timeseries>
Note: In Version 0.7.0, if <WhereClause> includes `OR`, time filter can not be used.
Note: There must be a space on both sides of the plus and minus operator appearing in the time expression
12345678910111213141516171819202122232425Group By Statement SELECT <SelectClause> FROM <FromClause> WHERE <WhereClause> GROUP BY <GroupByClause>
SelectClause : <Function> [COMMA < Function >]*
Function : <AggregationFunction> LPAREN <Path> RPAREN
FromClause : <PrefixPath>
WhereClause : <Condition> [(AND | OR) <Condition>]*
Eg: SELECT temperature,status,hardware FROM root.ln.wf01.wt01 WHERE time = 2017-11-01T16:37:50.000 FILL (float[linear], boolean[previous, 1m], text[previous])
Note: the statement needs to satisfy this constraint: <PrefixPath>(FromClause) + <Path>(SelectClause) = <Timeseries>
Note: Integer in <TimeUnit> needs to be greater than 0
123456789101112131415161718192021222324Group By Fill Statement SELECT <SelectClause> FROM <FromClause> WHERE <WhereClause> GROUP BY <GroupByClause> (FILL <GROUPBYFillClause>)?
GroupByClause : LPAREN <TimeInterval> COMMA <TimeUnit> RPAREN
GROUPBYFillClause : LPAREN <TypeClause> RPAREN
TypeClause : <AllClause> | <Int32Clause> | <Int64Clause> | <FloatClause> | <DoubleClause> | <BoolClause> | <TextClause>
AllClause: ALL LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
Int32Clause: INT32 LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
Int64Clause: INT64 LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
FloatClause: FLOAT LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
DoubleClause: DOUBLE LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
BoolClause: BOOLEAN LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
TextClause: TEXT LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
PreviousClause : PREVIOUS
PreviousUntilLastClause : PREVIOUSUNTILLAST
Eg: SELECT last_value(temperature) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (float[PREVIOUS])
Eg: SELECT last_value(temperature) FROM root.ln.wf01.wt01 GROUP BY((15, 100], 5m) FILL (float[PREVIOUS])
## Miscellaneous changes
* IOTDB-144 Meta data cache for query
* IOTDB-153 Further limit fetchSize to speed up LIMIT&OFFSET query
* IOTDB-160 External sort
* IOTDB-161 Add ErrorCode of different response errors
* IOTDB-180 Get rid of JSON format in "show timeseries"
* IOTDB-192 Improvement for LRUCache
* IOTDB-210 One else if branch will never be reached in the method optimize of ExpressionOptimizer
* IOTDB-215 Update TsFile sketch tool and TsFile docs for v0.9.0
* IOTDB-221 Add a python client example
* IOTDB-233 keep metadata plan clear
* IOTDB-251 Improve TSQueryDataSet structure in RPC
* IOTDB-257 Makes the client stop fetch when dataSize equals maxPrintRowCount and change client fetchSize less than maxPrintRowCount
* IOTDB-258 Add documents for Query History Visualization Tool and Shared Storage Architecture
* IOTDB-265 Re-adjust the threshold size of memtable
* IOTDB-267 Reduce IO operations in deserializing chunk header
* IOTDB-273 Parallel recovery
* IOTDB-276 Fix inconsistent ways of judging whether a Field is null
* IOTDB-285 Duplicate fields in EngineDataSetWithoutValueFilter.java
* Add example module
* Add a log appender: put info, warn, error log into one file and disable log_info by default
* Recover when resource file does not exist while tsfile is complete
## Incompatible changes
If you use the previous unofficial version 0.7.0. It is incompatible with 0.8.0.
## Miscellaneous changes
* IOTDB-21 Add ChunkGroup offset information in ChunkGroupMetaData
* IOTDB-25 Add some introduction for JMX MBean Monitor in user guide
* IOTDB-29 Multiple Exceptions when reading empty measurements from TsFileSequenceReader
* IOTDB-45 Update the license in IoTDB
* IOTDB-56 Faster getSortedTimeValuePairList() of Memtable
* IOTDB-62 Change log level from error to debug in SQL parser
* IOTDB-76 Reformat MManager.getMetadataInString() in JSON format
* IOTDB-78 Make unsequence file format more similar with TsFile
* IOTDB-95 Keep stack trace when logging or throwing an exception
* IOTDB-117 Add sync documents
* Modify ASF header for each file and add related maven plugin
* Add IoTDB env script test
* Add cache directories for download jars and sonar plugin of maven in travis
* Add partition start and end offset constraints when loading ChunkGroupMetaData
* Check when creating Storage group
Eg: IoTDB > SHOW CHILD PATHS root.*.wf01
Eg: IoTDB > SHOW CHILD PATHS root.ln.wf*
Note: The path can be prefix path or star path, the nodes can be in a "prefix + star" format.
Note: This statement can be used in IoTDB Client and JDBC.
1234567Create snapshot for schema CREATE SNAPSHOT FOR SCHEMA
1# Data Management Statement Insert Record Statement INSERT INTO <PrefixPath> LPAREN TIMESTAMP COMMA <MeasurementName> [COMMA <MeasurementName>]* RPAREN VALUES LPAREN <TimeValue>, <PointValue> [COMMA <PointValue>]* RPAREN
MeasurementName : Identifier | LPAREN Identifier (COMMA Identifier)+ RPAREN
Eg: IoTDB > INSERT INTO root.ln.wf01.wt01(timestamp,status) values(1509465600000,true)
Eg: IoTDB > INSERT INTO root.ln.wf01.wt01(timestamp,status) VALUES(NOW(), false)
Eg: IoTDB > INSERT INTO root.ln.wf01.wt01(timestamp,temperature) VALUES(2017-11-01T00:17:00.000+08:00,24.22028)
Eg: IoTDB > INSERT INTO root.ln.wf01.wt01(timestamp,status,temperature) VALUES (1509466680000,false,20.060787)
Eg: IoTDB > INSERT INTO root.sg.d1(timestamp,(s1,s2),(s3,s4)) VALUES (1509466680000,(1.0,2),(NULL,4))
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Note: The order of Sensor and PointValue need one-to-one correspondence
123456789Delete Record Statement DELETE FROM <PrefixPath> [COMMA <PrefixPath>]* [WHERE <WhereClause>]?
WhereClause : <Condition> [(AND) <Condition>]*
Condition : <TimeExpr> [(AND) <TimeExpr>]*
TimeExpr : TIME PrecedenceEqualOperator (<TimeValue> | <RelativeTime>)
Eg: DELETE FROM root.ln.wf01.wt01.temperature WHERE time > 2016-01-05T00:15:00+08:00 and time < 2017-11-1T00:05:00+08:00
Eg: DELETE FROM root.ln.wf01.wt01.status, root.ln.wf01.wt01.temperature WHERE time < NOW()
Eg: DELETE FROM root.ln.wf01.wt01.* WHERE time >= 1509466140000
1234567Select Record Statement SELECT <SelectClause> FROM <FromClause> [WHERE <WhereClause>]?
SelectClause : <SelectPath> (COMMA <SelectPath>)*
SelectPath : <FUNCTION> LPAREN <Path> RPAREN | <Path>
FUNCTION : ‘COUNT’ , ‘MIN_TIME’, ‘MAX_TIME’, ‘MIN_VALUE’, ‘MAX_VALUE’
FromClause : <PrefixPath> (COMMA <PrefixPath>)?
WhereClause : <Condition> [(AND | OR) <Condition>]*
Condition : <Expression> [(AND | OR) <Expression>]*
Expression : [NOT | !]? <TimeExpr> | [NOT | !]? <SensorExpr>
Condition : <Expression> [(AND | OR) <Expression>]*
Expression : [NOT | !]? <TimeExpr> | [NOT | !]? <SensorExpr>
TimeExpr : TIME PrecedenceEqualOperator (<TimeValue> | <RelativeTime>)
RelativeTimeDurationUnit = Integer ('Y'|'MO'|'W'|'D'|'H'|'M'|'S'|'MS'|'US'|'NS')
RelativeTime : (now() | <TimeValue>) [(+|-) RelativeTimeDurationUnit]+
SensorExpr : (<Timeseries> | <Path>) PrecedenceEqualOperator <PointValue>
GroupByClause : LPAREN <TimeInterval> COMMA <TimeUnit> (COMMA <TimeUnit>)? RPAREN
TimeInterval: LSBRACKET <TimeValue> COMMA <TimeValue> RRBRACKET | LRBRACKET <TimeValue> COMMA <TimeValue> RSBRACKET
TimeUnit : Integer <DurationUnit>
DurationUnit : "ms" | "s" | "m" | "h" | "d" | "w"
Eg: SELECT COUNT(status), COUNT(temperature) FROM root.ln.wf01.wt01 where temperature < 24 GROUP BY([1509465720000, 1509466380000), 5m)
Eg: SELECT COUNT(status), COUNT(temperature) FROM root.ln.wf01.wt01 where temperature < 24 GROUP BY((1509465720000, 1509466380000], 5m)
Eg. SELECT COUNT (status), MAX_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE time < 1509466500000 GROUP BY([1509465720000, 1509466380000), 5m, 10m)
Eg. SELECT MIN_TIME(status), MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE temperature < 25 GROUP BY ([1509466140000, 1509466380000), 3m, 5ms)
Eg. SELECT MIN_TIME(status), MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE temperature < 25 GROUP BY ((1509466140000, 1509466380000], 3m, 5ms)
Note: the statement needs to satisfy this constraint: <Path>(SelectClause) + <PrefixPath>(FromClause) = <Timeseries>
Note: If the <SensorExpr>(WhereClause) is started with <Path> and not with ROOT, the statement needs to satisfy this constraint: <PrefixPath>(FromClause) + <Path>(SensorExpr) = <Timeseries>
Note: <TimeValue>(TimeInterval) needs to be greater than 0
Note: First <TimeValue>(TimeInterval) in needs to be smaller than second <TimeValue>(TimeInterval)
Note: <TimeUnit> needs to be greater than 0
Note: Third <TimeUnit> if set shouldn't be smaller than second <TimeUnit>
1234567891011121314151617181920212223242526Fill Statement SELECT <SelectClause> FROM <FromClause> WHERE <WhereClause> FILL <FillClause>
SelectClause : <Path> [COMMA <Path>]*
FromClause : < PrefixPath > [COMMA < PrefixPath >]*
WhereClause : <WhereExpression>
Eg: SELECT last_value(power) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (int32[PREVIOUSUNTILLAST])
Eg: SELECT last_value(power) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (int32[PREVIOUSUNTILLAST, 5m])
Eg: SELECT last_value(temperature), last_value(power) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (ALL[PREVIOUS])
Eg: SELECT last_value(temperature), last_value(power) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (ALL[PREVIOUS, 5m])
Note: In group by fill, sliding step is not supported in group by clause
Note: Linear fill is not supported in group by fill.
12345678910111213141516171819202122Order by time Statement SELECT <SelectClause> FROM <FromClause> WHERE <WhereClause> GROUP BY <GroupByClause> (FILL <GROUPBYFillClause>)? orderByTimeClause?
orderByTimeClause: order by time (asc | desc)?
Eg: SELECT last_value(temperature) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (float[PREVIOUS]) order by time desc
Eg: SELECT * from root order by time desc
Eg: SELECT * from root order by time desc align by device
Eg: SELECT * from root order by time desc disable align
Eg: SELECT last * from root order by time desc
12345678Limit Statement SELECT <SelectClause> FROM <FromClause> [WHERE <WhereClause>] [<LIMITClause>] [<SLIMITClause>]
SelectClause : [<Path> | Function]+
Function : <AggregationFunction> LPAREN <Path> RPAREN
FromClause : <Path>
WhereClause : <Condition> [(AND | OR) <Condition>]*
Condition : <Expression> [(AND | OR) <Expression>]*
Expression: [NOT|!]?<TimeExpr> | [NOT|!]?<SensorExpr>
TimeExpr : TIME PrecedenceEqualOperator (<TimeValue> | <RelativeTime>)
RelativeTimeDurationUnit = Integer ('Y'|'MO'|'W'|'D'|'H'|'M'|'S'|'MS'|'US'|'NS')
RelativeTime : (now() | <TimeValue>) [(+|-) RelativeTimeDurationUnit]+
SensorExpr : (<Timeseries>|<Path>) PrecedenceEqualOperator <PointValue>
LIMITClause : LIMIT <N> [OFFSETClause]?
N : Integer
OFFSETClause : OFFSET <OFFSETValue>
OFFSETValue : Integer
SLIMITClause : SLIMIT <SN> [SOFFSETClause]?
* IOTDB-287 Restrict users to only use domain names and IP addresses.
* IOTDB-293 Variable naming convention
* IOTDB-295 Refactor db.exception
* Reconstruct Antlr3 grammar to improve performance
* Tooling for release
* Modified Decoder and SequenceReader to support old version of TsFile
* Remove jdk constrain of jdk8 and 11
* Avoid second execution of parseSQLToPhysicalPlan in executeStatement
## Known Issues
* IOTDB-20 Need to support UPDATE
## Bug Fixes
* IOTDB-168&169 Fix a bug in export-csv tool and fix compatibility of timestamp formats in exportCsv, client display and sql
* IOTDB-174 Fix querying timeseries interface cannot make a query by the specified path prefix
* Try to release memory asap in ReadOnlyMemChunk
* Add more physical plan serializer
* Move all generated tsfiles for test into the target folder
* Make TsFileWriter as AutoClosable
* Print apache-rat violation result on console
* Update multi dir avoid disk is full
* Simplify Path construction
* Separate documents into different chapter folders
* Suppress mvn log in travis
* Add mvn -B in travis
## Known Issues
* IOTDB-20 Need to support UPDATE
* IOTDB-124 Lost timeseries info after restart IoTDB
* IOTDB-125 [potential] a concurrency conflict may occur when a delete command and insertion command appears concurrently
* IOTDB-126 IoTDB will not be closed immediately after run 'stop-server.sh' script
* IOTDB-127 Chinese version documents problems
## Bug Fixes
* IOTDB-2 Maven Test failed before run mvn package -Dmaven.test.skip=true
* IOTDB-7 OpenFileNumUtilTest failed
* IOTDB-15 Fail to install IoTDB on Ubuntu 14.04
* IOTDB-16 Invalid link on https://iotdb.apache.org/#/Documents/Quick Start
* IOTDB-17 Need to update chapter Start of https://iotdb.apache.org/#/Documents/Quick Start
* IOTDB-18 IoTDB startup script does not work on openjdk11
* IOTDB-19 Fail to start start-server.sh script on Ubuntu 14.04/Ubuntu 16.04
* IOTDB-22 BUG in TsFileSequenceReader when reading tsfile
* IOTDB-24 DELETION error after restart a server
* IOTDB-26 Return error when quit client
TimeExpr : TIME PrecedenceEqualOperator (<TimeValue> | <RelativeTime>)
RelativeTimeDurationUnit = Integer ('Y'|'MO'|'W'|'D'|'H'|'M'|'S'|'MS'|'US'|'NS')
RelativeTime : (now() | <TimeValue>) [(+|-) RelativeTimeDurationUnit]+
SensorExpr : (<Timeseries> | <Path>) PrecedenceEqualOperator <PointValue>
Eg: IoTDB > SELECT status, temperature FROM root.ln.wf01.wt01 WHERE temperature < 24 and time > 2017-11-1 0:13:00
Eg. IoTDB > SELECT * FROM root
Eg. IoTDB > SELECT * FROM root where time > now() - 5m
Eg. IoTDB > SELECT * FROM root.ln.*.wf*
Eg. IoTDB > SELECT COUNT(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 25
Eg. IoTDB > SELECT MIN_TIME(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 25
Eg. IoTDB > SELECT MAX_TIME(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature > 24
Eg. IoTDB > SELECT MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature > 23
Eg. IoTDB > SELECT MAX_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 25
Eg. IoTDB > SELECT COUNT(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 25 GROUP BY LEVEL=1
Note: the statement needs to satisfy this constraint: <Path>(SelectClause) + <PrefixPath>(FromClause) = <Timeseries>
Note: If the <SensorExpr>(WhereClause) is started with <Path> and not with ROOT, the statement needs to satisfy this constraint: <PrefixPath>(FromClause) + <Path>(SensorExpr) = <Timeseries>
Note: In Version 0.7.0, if <WhereClause> includes `OR`, time filter can not be used.
Note: There must be a space on both sides of the plus and minus operator appearing in the time expression
1234567891011121314151617181920212223242526Group By Statement SELECT <SelectClause> FROM <FromClause> WHERE <WhereClause> GROUP BY <GroupByTimeClause>
SelectClause : <Function> [COMMA < Function >]*
Function : <AggregationFunction> LPAREN <Path> RPAREN
FromClause : <PrefixPath>
WhereClause : <Condition> [(AND | OR) <Condition>]*
WhereExpression : TIME EQUAL <TimeValue>
FillClause : LPAREN <TypeClause> [COMMA <TypeClause>]* RPAREN
TypeClause : <Int32Clause> | <Int64Clause> | <FloatClause> | <DoubleClause> | <BoolClause> | <TextClause>
Int32Clause: INT32 LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
Int64Clause: INT64 LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
FloatClause: FLOAT LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
DoubleClause: DOUBLE LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
BoolClause: BOOLEAN LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
TextClause: TEXT LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
PreviousClause : PREVIOUS [COMMA <ValidPreviousTime>]?
LinearClause : LINEAR [COMMA <ValidPreviousTime> COMMA <ValidBehindTime>]?
ValidPreviousTime, ValidBehindTime: <TimeUnit>
TimeUnit : Integer <DurationUnit>
DurationUnit : "ms" | "s" | "m" | "h" | "d" | "w"
Eg: SELECT temperature FROM root.ln.wf01.wt01 WHERE time = 2017-11-01T16:37:50.000 FILL(float[previous, 1m])
Eg: SELECT temperature,status FROM root.ln.wf01.wt01 WHERE time = 2017-11-01T16:37:50.000 FILL (float[linear, 1m, 1m], boolean[previous, 1m])
Eg: SELECT temperature,status,hardware FROM root.ln.wf01.wt01 WHERE time = 2017-11-01T16:37:50.000 FILL (float[linear, 1m, 1m], boolean[previous, 1m], text[previous])
Eg: SELECT temperature,status,hardware FROM root.ln.wf01.wt01 WHERE time = 2017-11-01T16:37:50.000 FILL (float[linear], boolean[previous, 1m], text[previous])
Note: the statement needs to satisfy this constraint: <PrefixPath>(FromClause) + <Path>(SelectClause) = <Timeseries>
Note: Integer in <TimeUnit> needs to be greater than 0
SN : Integer
SOFFSETClause : SOFFSET <SOFFSETValue>
SOFFSETValue : Integer
Eg: IoTDB > SELECT status, temperature FROM root.ln.wf01.wt01 WHERE temperature < 24 and time > 2017-11-1 0:13:00 LIMIT 3 OFFSET 2
Eg. IoTDB > SELECT COUNT (status), MAX_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE time < 1509466500000 GROUP BY([1509465720000, 1509466380000], 5m) LIMIT 3
Note: N, OFFSETValue, SN and SOFFSETValue must be greater than 0.
Note: The order of <LIMITClause> and <SLIMITClause> does not affect the grammatical correctness.
Note: <FillClause> can not use <LIMITClause> but not <SLIMITClause>.
123456789101112131415161718192021222324Align By Device Statement AlignbyDeviceClause : ALIGN BY DEVICE
Rules:
1. Both uppercase and lowercase are ok.
Correct example: select * from root.sg1 align by device
Correct example: select * from root.sg1 ALIGN BY DEVICE
2. AlignbyDeviceClause can only be used at the end of a query statement.
Correct example: select * from root.sg1 where time > 10 align by device
Wrong example: select * from root.sg1 align by device where time > 10
3. The paths of the SELECT clause can only be single level. In other words, the paths of the SELECT clause can only be measurements or STAR, without DOT.
Correct example: select s0,s1 from root.sg1.* align by device
Correct example: select s0,s1 from root.sg1.d0, root.sg1.d1 align by device
Correct example: select * from root.sg1.* align by device
Correct example: select * from root align by device
Correct example: select s0,s1,* from root.*.* align by device
Wrong example: select d0.s1, d0.s2, d1.s0 from root.sg1 align by device
Wrong example: select *.s0, *.s1 from root.* align by device
* IOTDB-195 Using String.getBytes(utf-9).length to replace string.length() in ChunkGroupMetadata for supporting Chinese
* IOTDB-211 Use "%IOTDB_HOME%\lib\*" to refers to all .jar files in the directory in start-server.bat
* IOTDB-240 Fix unknown time series in where clause
* IOTDB-244 Fix bug when querying with duplicated columns
* IOTDB-252 Add/fix shell and bat for TsFileSketchTool/TsFileResourcePrinter
* IOTDB-266 NullPoint exception when reading not existed devices using ReadOnlyTsFile
* IOTDB-264 Restart failure due to WAL replay error
* IOTDB-290 Bug about threadlocal field in TSServiceImpl.java
* IOTDB-291 Statement close operation may cause the whole connection's resource to be released
* IOTDB-296 Fix error when skip page data in sequence reader
* IOTDB-301 Bug Fix: executing "count nodes root" in client gets "Msg:3"
* Fix Dynamic Config when Creating Existing SG or Time-series
* Fix start-walchecker scripts for letting user define the wal folder
* Fix start script to set JAVA_HOME
# Apache IoTDB (incubating) 0.8.2
This is a bug-fix version of 0.8.1
- IOTDB-264 lack checking datatype before writing WAL
- IOTDB-317 Fix "flush + wrong aggregation" causes failed query in v0.8.x
- NOTICE and LICENSE file update
# Apache IoTDB (incubating) 0.8.1
This is a bug-fix version of 0.8.0
* IOTDB-172 Bug in updating startTime and endTime in TsFileResource
* IOTDB-195 Bug about 'serializedSize' in ChunkGroupMetaData.java (for Chinese string)
* IOTDB-202 fix tsfile example data type
* IOTDB-27 Delete error message
* IOTDB-30 Flush timeseries cause select to returns "Msg:null"
* IOTDB-31 Cannot set float number precision
* IOTDB-34 Invalid message for show storage group
* IOTDB-44 Error message in server log when select timeseries
* IOTDB-49 Authorizer module outputs too many debug log info
* IOTDB-50 DataSetWithoutTimeGenerator's initHeap behaves wrongly
* IOTDB-52 Cli doesn't support aggregate
* IOTDB-54 Predicates doesn't take effect
* IOTDB-67 ValueDecoder reading new page bug
* IOTDB-70 Disconnect from server when logging in fails
* IOTDB-71 Improve readPositionInfo
* IOTDB-74 THe damaged log will be skipped if it is the only log
* IOTDB-81 Fix Windows OS environment for Travis-CI
* IOTDB-82 File not closed in PageHeaderTest and cause UT on Windows fails
* IOTDB-84 Out-of-memory bug
* IOTDB-94 IoTDB failed to start client since the required jars are not in the right folder
* IOTDB-96 The JDBC interface throws an exception when executing the SQL statement "list user"
* IOTDB-99 List privileges User on cannot be used properly
* IOTDB-100 Return error message while executing sum aggregation query
Condition : <Expression> [(AND | OR) <Expression>]*
Expression : [NOT | !]? <TimeExpr> | [NOT | !]? <SensorExpr>
TimeExpr : TIME PrecedenceEqualOperator (<TimeValue> | <RelativeTime>)
RelativeTimeDurationUnit = Integer ('Y'|'MO'|'W'|'D'|'H'|'M'|'S'|'MS'|'US'|'NS')
RelativeTime : (now() | <TimeValue>) [(+|-) RelativeTimeDurationUnit]+
SensorExpr : (<Timeseries> | <Path>) PrecedenceEqualOperator <PointValue>
GroupByTimeClause : LPAREN <TimeInterval> COMMA <TimeUnit> (COMMA <TimeUnit>)? RPAREN
TimeInterval: LSBRACKET <TimeValue> COMMA <TimeValue> RRBRACKET | LRBRACKET <TimeValue> COMMA <TimeValue> RSBRACKET
TimeUnit : Integer <DurationUnit>
DurationUnit : "ms" | "s" | "m" | "h" | "d" | "w" | "mo"
Eg: SELECT COUNT(status), COUNT(temperature) FROM root.ln.wf01.wt01 where temperature < 24 GROUP BY([1509465720000, 1509466380000), 5m)
Eg: SELECT COUNT(status), COUNT(temperature) FROM root.ln.wf01.wt01 where temperature < 24 GROUP BY((1509465720000, 1509466380000], 5m)
Eg. SELECT COUNT (status), MAX_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE time < 1509466500000 GROUP BY([1509465720000, 1509466380000), 5m, 10m)
Eg. SELECT MIN_TIME(status), MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE temperature < 25 GROUP BY ([1509466140000, 1509466380000), 3m, 5ms)
Eg. SELECT MIN_TIME(status), MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE temperature < 25 GROUP BY ((1509466140000, 1509466380000], 3m, 5ms)
Eg. SELECT MIN_TIME(status), MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE temperature < 25 GROUP BY ((1509466140000, 1509466380000], 1mo)
Eg. SELECT MIN_TIME(status), MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE temperature < 25 GROUP BY ((1509466140000, 1509466380000], 1mo, 1mo)
Eg. SELECT MIN_TIME(status), MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE temperature < 25 GROUP BY ((1509466140000, 1509466380000], 1mo, 2mo)
Note: the statement needs to satisfy this constraint: <Path>(SelectClause) + <PrefixPath>(FromClause) = <Timeseries>
123456789101112131415161718192021222324Group By Fill Statement SELECT <SelectClause> FROM <FromClause> WHERE <WhereClause> GROUP BY <GroupByClause> (FILL <GROUPBYFillClause>)?
GroupByClause : LPAREN <TimeInterval> COMMA <TimeUnit> RPAREN
GROUPBYFillClause : LPAREN <TypeClause> RPAREN
TypeClause : <AllClause> | <Int32Clause> | <Int64Clause> | <FloatClause> | <DoubleClause> | <BoolClause> | <TextClause>
AllClause: ALL LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
Int32Clause: INT32 LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
Int64Clause: INT64 LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
FloatClause: FLOAT LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
DoubleClause: DOUBLE LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
BoolClause: BOOLEAN LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
TextClause: TEXT LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
PreviousClause : PREVIOUS
PreviousUntilLastClause : PREVIOUSUNTILLAST
Eg: SELECT last_value(temperature) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (float[PREVIOUS])
Eg: SELECT last_value(temperature) FROM root.ln.wf01.wt01 GROUP BY((15, 100], 5m) FILL (float[PREVIOUS])
Eg: SELECT last_value(power) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (int32[PREVIOUSUNTILLAST])
Eg: SELECT last_value(power) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (int32[PREVIOUSUNTILLAST, 5m])
Eg: SELECT last_value(temperature), last_value(power) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (ALL[PREVIOUS])
Eg: SELECT last_value(temperature), last_value(power) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (ALL[PREVIOUS, 5m])
Wrong example: select *.*.* from root align by device
4. The data types of the same measurement column should be the same across devices.
Note that when it comes to aggregated paths, the data type of the measurement column will reflect
Correct example: select s0 from root.sg1.d0,root.sg1.d1 align by device
root.sg1.d0.s0 and root.sg1.d1.s0 are both INT32.
Correct example: select count(s0) from root.sg1.d0,root.sg1.d1 align by device
count(root.sg1.d0.s0) and count(root.sg1.d1.s0) are both INT64.
Wrong example: select s0 from root.sg1.d0, root.sg2.d3 align by device
root.sg1.d0.s0 is INT32 while root.sg2.d3.s0 is FLOAT.
5. The display principle of the result table is that all the columns (no matther whther a column has has existing data) will be shown, with nonexistent cells being null. Besides, the select clause support const column (e.g., 'a', '123' etc..).
For example, "select s0,s1,s2,'abc',s1,s2 from root.sg.d0, root.sg.d1, root.sg.d2 align by device". Suppose that the actual existing timeseries are as follows:
- root.sg.d0.s0
- root.sg.d0.s1
- root.sg.d1.s0
Then you could expect a table like:
| Time | Device | s0 | s1 | s2 | 'abc' | s1 | s2 |
| --- | --- | ---| ---| null | 'abc' | ---| null |
* IOTDB-242 fix mvn integration-test failed because the files in the target folder changes
* Abnormal publishing of sequence and unsequence data folders in DirectoryManager
# Apache IoTDB (incubating) 0.8.0
This is the first official release of Apache IoTDB after joining the Incubator.
## New Features
* IOTDB-1 Add Aggregation query
* IOTDB-4 Asynchronously force sync WAL periodically
* IOTDB-5 Support data deletion
* IOTDB-11 Support start script for jdk 11 on Windows OS
* IOTDB-18 Improve startup script compatible for jdk11
* IOTDB-36 [TsFile] Enable recover data from a incomplete TsFile and continue to write
* IOTDB-37 Add WAL check tool script
* IOTDB-51 Update post-back module to synchronization module
* IOTDB-59 Support GroupBy query
* IOTDB-73 Add REGULAR encoding method for data with fixed frequency
* IOTDB-80 Support custom export file name
* IOTDB-81 Update travis for supporting JDK11 on Windows
* IOTDB-83 Add process bar for import script and show how many rows have been exported
* IOTDB-91 Improve tsfile-spark-connector to support spark-2.4.3
* IOTDB-93 IoTDB Calcite integration
* IOTDB-109 Support appending data at the end of a completed TsFile
* IOTDB-103 Does not give a hint when encountering unsupported data types
* IOTDB-104 MManager is incorrectly recovered when system reboots
* IOTDB-108 Mistakes in documents
* IOTDB-110 Cli inserts data normally even if there is no space left on the disk
* IOTDB-118 When the disk space is full, the storage group is created successfully
* IOTDB-121 A bug of query on value columns
* IOTDB-128 Probably a bug in iotdb official website
* IOTDB-129 A bug in restoring incomplete tsfile when system restart
* IOTDB-131 IoTDB-Grafana module error when getting the timeseries list from Grafana
* IOTDB-133 Some content is mistaken for links
* System memory check failure in iotdb-env.sh
* Time zone bug in different region
* DateTimeUtilsTest UT bug
* Problem discovered by Sonar
* Openjdk11 + linux11 does not work on travis
* Start JDBC service too slowly
* JDBC cannot be closed
* Close bug in sync thread
* Bug in MManager to get all file names of a path
* Version files of different storage groups are placed into the same place
* Import/export csv script bug
* Log level and stack print in test
* Bug in TsFile-Spark-Connector
Note: If the <SensorExpr>(WhereClause) is started with <Path> and not with ROOT, the statement needs to satisfy this constraint: <PrefixPath>(FromClause) + <Path>(SensorExpr) = <Timeseries>
Note: <TimeValue>(TimeInterval) needs to be greater than 0
Note: First <TimeValue>(TimeInterval) in needs to be smaller than second <TimeValue>(TimeInterval)
Note: <TimeUnit> needs to be greater than 0
Note: Third <TimeUnit> if set shouldn't be smaller than second <TimeUnit>
Note: If the second <DurationUnit> is "mo", the third <DurationUnit> need to be in month
Note: If the third <DurationUnit> is "mo", the second <DurationUnit> can be in any unit
12345678910111213141516171819202122232425262728293031Fill Statement SELECT <SelectClause> FROM <FromClause> WHERE <WhereClause> FILL <FillClause>
SelectClause : <Path> [COMMA <Path>]*
FromClause : < PrefixPath > [COMMA < PrefixPath >]*
WhereClause : <WhereExpression>
WhereExpression : TIME EQUAL <TimeValue>
FillClause : LPAREN <TypeClause> [COMMA <TypeClause>]* RPAREN
TypeClause : <Int32Clause> | <Int64Clause> | <FloatClause> | <DoubleClause> | <BoolClause> | <TextClause>
Int32Clause: INT32 LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
Int64Clause: INT64 LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
FloatClause: FLOAT LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
DoubleClause: DOUBLE LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
BoolClause: BOOLEAN LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
TextClause: TEXT LBRACKET (<LinearClause> | <PreviousClause>) RBRACKET
PreviousClause : PREVIOUS [COMMA <ValidPreviousTime>]?
LinearClause : LINEAR [COMMA <ValidPreviousTime> COMMA <ValidBehindTime>]?
ValidPreviousTime, ValidBehindTime: <TimeUnit>
Note: In group by fill, sliding step is not supported in group by clause
Note: Linear fill is not supported in group by fill.
12345678910111213141516171819202122Limit Statement SELECT <SelectClause> FROM <FromClause> [WHERE <WhereClause>] [<LIMITClause>] [<SLIMITClause>]
SelectClause : [<Path> | Function]+
Function : <AggregationFunction> LPAREN <Path> RPAREN
FromClause : <Path>
WhereClause : <Condition> [(AND | OR) <Condition>]*
Condition : <Expression> [(AND | OR) <Expression>]*
Expression: [NOT|!]?<TimeExpr> | [NOT|!]?<SensorExpr>
TimeExpr : TIME PrecedenceEqualOperator (<TimeValue> | <RelativeTime>)
RelativeTimeDurationUnit = Integer ('Y'|'MO'|'W'|'D'|'H'|'M'|'S'|'MS'|'US'|'NS')
RelativeTime : (now() | <TimeValue>) [(+|-) RelativeTimeDurationUnit]+
SensorExpr : (<Timeseries>|<Path>) PrecedenceEqualOperator <PointValue>
LIMITClause : LIMIT <N> [OFFSETClause]?
N : Integer
OFFSETClause : OFFSET <OFFSETValue>
OFFSETValue : Integer
SLIMITClause : SLIMIT <SN> [SOFFSETClause]?
SN : Integer
SOFFSETClause : SOFFSET <SOFFSETValue>
SOFFSETValue : Integer
Eg: IoTDB > SELECT status, temperature FROM root.ln.wf01.wt01 WHERE temperature < 24 and time > 2017-11-1 0:13:00 LIMIT 3 OFFSET 2
Eg. IoTDB > SELECT COUNT (status), MAX_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE time < 1509466500000 GROUP BY([1509465720000, 1509466380000], 5m) LIMIT 3
| 1 |root.sg.d0| 20 | 2.5| null | 'abc' | 2.5| null |
| 2 |root.sg.d0| 23 | 3.1| null | 'abc' | 3.1| null |
| ... | ... | ...| ...| null | 'abc' | ...| null |
| 1 |root.sg.d1| 12 |null| null | 'abc' |null| null |
| 2 |root.sg.d1| 19 |null| null | 'abc' |null| null |
| ... | ... | ...| ...| null | 'abc' | ...| null |
Note that the cells of measurement 's0' and device 'root.sg.d1' are all null.
6. The duplicated devices in the prefix paths are neglected.
For example, "select s0,s1 from root.sg.d0,root.sg.d0,root.sg.d1 align by device" is equal to "select s0,s1 from root.sg.d0,root.sg.d1 align by device".
For example. "select s0,s1 from root.sg.*,root.sg.d0 align by device" is equal to "select s0,s1 from root.sg.* align by device".
7. The duplicated measurements in the suffix paths are not neglected.
For example, "select s0,s0,s1 from root.sg.* align by device" is not equal to "select s0,s1 from root.sg.* align by device".
8. Both time predicates and value predicates are allowed in Where Clause. The paths of the value predicates can be the leaf node or full path started with ROOT. And wildcard is not allowed here. For example:
- select * from root.sg.* where time = 1 align by device
- select * from root.sg.* where s0 < 100 align by device
- select * from root.sg.* where time < 20 AND s0 > 50 align by device
- select * from root.sg.d0 where root.sg.d0.s0 = 15 align by device
9. More correct examples:
- select * from root.vehicle align by device
- select s0,s0,s1 from root.vehicle.* align by device
- select s0,s1 from root.vehicle.* limit 10 offset 1 align by device
* IOTDB-122 Add prepared statement in JDBC
* IOTDB-123 Add documents in Chinese
* IOTDB-130 Dynamic parameters adapter
* IOTDB-134 Add default parameter for client starting script
* Add read-only mode of IoTDB
* New storage engine with asynchronously flush and close data file
* Adding english documents
* Supporting travis + window + jdk8
* Add skipping all UTs: maven integration-test -DskipUTS=true
* Enable users define the location of their thrift compiler
* Add example module
* Add a log appender: put info, warn, error log into one file and disable log_info by default
* Recover when resource file does not exist while tsfile is complete
## Incompatible changes
If you use the previous unofficial version 0.7.0. It is incompatible with 0.8.0.
## Miscellaneous changes
* IOTDB-21 Add ChunkGroup offset information in ChunkGroupMetaData
* IOTDB-25 Add some introduction for JMX MBean Monitor in user guide
* IOTDB-29 Multiple Exceptions when reading empty measurements from TsFileSequenceReader
* IOTDB-45 Update the license in IoTDB
* IOTDB-56 Faster getSortedTimeValuePairList() of Memtable
* A doc bug of QuickStart.md
TimeUnit : Integer <DurationUnit>
DurationUnit : "ms" | "s" | "m" | "h" | "d" | "w"
Eg: SELECT temperature FROM root.ln.wf01.wt01 WHERE time = 2017-11-01T16:37:50.000 FILL(float[previous, 1m])
Eg: SELECT temperature,status FROM root.ln.wf01.wt01 WHERE time = 2017-11-01T16:37:50.000 FILL (float[linear, 1m, 1m], boolean[previous, 1m])
Eg: SELECT temperature,status,hardware FROM root.ln.wf01.wt01 WHERE time = 2017-11-01T16:37:50.000 FILL (float[linear, 1m, 1m], boolean[previous, 1m], text[previous])
Eg: SELECT temperature,status,hardware FROM root.ln.wf01.wt01 WHERE time = 2017-11-01T16:37:50.000 FILL (float[linear], boolean[previous, 1m], text[previous])
Note: the statement needs to satisfy this constraint: <PrefixPath>(FromClause) + <Path>(SelectClause) = <Timeseries>
Note: Integer in <TimeUnit> needs to be greater than 0
123456789101112131415161718192021222324Group By Fill Statement SELECT <SelectClause> FROM <FromClause> WHERE <WhereClause> GROUP BY <GroupByClause> (FILL <GROUPBYFillClause>)?
GroupByClause : LPAREN <TimeInterval> COMMA <TimeUnit> RPAREN
GROUPBYFillClause : LPAREN <TypeClause> RPAREN
TypeClause : <AllClause> | <Int32Clause> | <Int64Clause> | <FloatClause> | <DoubleClause> | <BoolClause> | <TextClause>
AllClause: ALL LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
Int32Clause: INT32 LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
Int64Clause: INT64 LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
FloatClause: FLOAT LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
DoubleClause: DOUBLE LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
BoolClause: BOOLEAN LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
TextClause: TEXT LBRACKET (<PreviousUntilLastClause> | <PreviousClause>) RBRACKET
PreviousClause : PREVIOUS
PreviousUntilLastClause : PREVIOUSUNTILLAST
Eg: SELECT last_value(temperature) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (float[PREVIOUS])
Eg: SELECT last_value(temperature) FROM root.ln.wf01.wt01 GROUP BY((15, 100], 5m) FILL (float[PREVIOUS])
Eg: SELECT last_value(power) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (int32[PREVIOUSUNTILLAST])
Eg: SELECT last_value(power) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (int32[PREVIOUSUNTILLAST, 5m])
Eg: SELECT last_value(temperature), last_value(power) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (ALL[PREVIOUS])
Eg: SELECT last_value(temperature), last_value(power) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (ALL[PREVIOUS, 5m])
Note: N, OFFSETValue, SN and SOFFSETValue must be greater than 0.
Note: The order of <LIMITClause> and <SLIMITClause> does not affect the grammatical correctness.
Note: <FillClause> can not use <LIMITClause> but not <SLIMITClause>.
123456789101112131415161718192021222324Align By Device Statement AlignbyDeviceClause : ALIGN BY DEVICE
Rules:
1. Both uppercase and lowercase are ok.
Correct example: select * from root.sg1 align by device
Correct example: select * from root.sg1 ALIGN BY DEVICE
2. AlignbyDeviceClause can only be used at the end of a query statement.
Correct example: select * from root.sg1 where time > 10 align by device
Wrong example: select * from root.sg1 align by device where time > 10
3. The paths of the SELECT clause can only be single level. In other words, the paths of the SELECT clause can only be measurements or STAR, without DOT.
Correct example: select s0,s1 from root.sg1.* align by device
Correct example: select s0,s1 from root.sg1.d0, root.sg1.d1 align by device
Correct example: select * from root.sg1.* align by device
Correct example: select * from root align by device
Correct example: select s0,s1,* from root.*.* align by device
Wrong example: select d0.s1, d0.s2, d1.s0 from root.sg1 align by device
Wrong example: select *.s0, *.s1 from root.* align by device
Wrong example: select *.*.* from root align by device
4. The data types of the same measurement column should be the same across devices.
Note that when it comes to aggregated paths, the data type of the measurement column will reflect
Correct example: select s0 from root.sg1.d0,root.sg1.d1 align by device
root.sg1.d0.s0 and root.sg1.d1.s0 are both INT32.
Correct example: select count(s0) from root.sg1.d0,root.sg1.d1 align by device
count(root.sg1.d0.s0) and count(root.sg1.d1.s0) are both INT64.
Wrong example: select s0 from root.sg1.d0, root.sg2.d3 align by device
- select * from root.vehicle slimit 10 soffset 2 align by device
- select * from root.vehicle where time > 10 align by device
- select * from root.vehicle.* where time < 10 AND s0 > 25 align by device
- select * from root.vehicle where root.vehicle.d0.s0>0 align by device
- select count(*) from root.vehicle align by device
- select sum(*) from root.vehicle GROUP BY (20ms,0,[2,50]) align by device
- select * from root.vehicle where time = 3 Fill(int32[previous, 5ms]) align by device
1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677Disable Align Statement Disable Align Clause: DISABLE ALIGN
Rules:
1. Both uppercase and lowercase are ok.
Correct example: select * from root.sg1 disable align
Correct example: select * from root.sg1 DISABLE ALIGN
2. Disable Align Clause can only be used at the end of a query statement.
Correct example: select * from root.sg1 where time > 10 disable align
Wrong example: select * from root.sg1 disable align where time > 10
3. Disable Align Clause cannot be used with Aggregation, Fill Statements, Group By or Group By Device Statements, but can with Limit Statements.
Correct example: select * from root.sg1 limit 3 offset 2 disable align
Correct example: select * from root.sg1 slimit 3 soffset 2 disable align
Wrong example: select count(s0),count(s1) from root.sg1.d1 disable align
Wrong example: select * from root.vehicle where root.vehicle.d0.s0>0 disable align
Wrong example: select * from root.vehicle align by device disable align
4. The display principle of the result table is that only when the column (or row) has existing data will the column (or row) be shown, with nonexistent cells being empty.
You could expect a table like:
| Time | root.sg.d0.s1 | Time | root.sg.d0.s2 | Time | root.sg.d1.s1 |
| --- | --- | --- | --- | --- | --- |
| 1 | 100 | 20 | 300 | 400 | 600 |
| 2 | 300 | 40 | 800 | 700 | 900 |
* IOTDB-62 Change log level from error to debug in SQL parser
* IOTDB-76 Reformat MManager.getMetadataInString() in JSON format
* IOTDB-78 Make unsequence file format more similar with TsFile
* IOTDB-95 Keep stack trace when logging or throwing an exception
* IOTDB-117 Add sync documents
* Modify ASF header for each file and add related maven plugin
* Add IoTDB env script test
* Add cache directories for download jars and sonar plugin of maven in travis
* Add partition start and end offset constraints when loading ChunkGroupMetaData
* Check when creating Storage group
* Try to release memory asap in ReadOnlyMemChunk
* Add more physical plan serializer
* Move all generated tsfiles for test into the target folder
* Make TsFileWriter as AutoClosable
* Print apache-rat violation result on console
* Update multi dir avoid disk is full
* Simplify Path construction
* Separate documents into different chapter folders
* Suppress mvn log in travis
* Add mvn -B in travis
## Known Issues
* IOTDB-20 Need to support UPDATE
Note: In group by fill, sliding step is not supported in group by clause
Note: Linear fill is not supported in group by fill.
12345678910111213141516171819202122Order by time Statement SELECT <SelectClause> FROM <FromClause> WHERE <WhereClause> GROUP BY <GroupByClause> (FILL <GROUPBYFillClause>)? orderByTimeClause?
orderByTimeClause: order by time (asc | desc)?
Eg: SELECT last_value(temperature) FROM root.ln.wf01.wt01 GROUP BY([20, 100), 5m) FILL (float[PREVIOUS]) order by time desc
Eg: SELECT * from root order by time desc
Eg: SELECT * from root order by time desc align by device
Eg: SELECT * from root order by time desc disable align
Eg: SELECT last * from root order by time desc
12345678Limit Statement SELECT <SelectClause> FROM <FromClause> [WHERE <WhereClause>] [<LIMITClause>] [<SLIMITClause>]
SelectClause : [<Path> | Function]+
Function : <AggregationFunction> LPAREN <Path> RPAREN
FromClause : <Path>
WhereClause : <Condition> [(AND | OR) <Condition>]*
Condition : <Expression> [(AND | OR) <Expression>]*
Expression: [NOT|!]?<TimeExpr> | [NOT|!]?<SensorExpr>
root.sg1.d0.s0 is INT32 while root.sg2.d3.s0 is FLOAT.
5. The display principle of the result table is that all the columns (no matther whther a column has has existing data) will be shown, with nonexistent cells being null. Besides, the select clause support const column (e.g., 'a', '123' etc..).
For example, "select s0,s1,s2,'abc',s1,s2 from root.sg.d0, root.sg.d1, root.sg.d2 align by device". Suppose that the actual existing timeseries are as follows:
- root.sg.d0.s0
- root.sg.d0.s1
- root.sg.d1.s0
Then you could expect a table like:
| Time | Device | s0 | s1 | s2 | 'abc' | s1 | s2 |
| --- | --- | ---| ---| null | 'abc' | ---| null |
| 1 |root.sg.d0| 20 | 2.5| null | 'abc' | 2.5| null |
| 2 |root.sg.d0| 23 | 3.1| null | 'abc' | 3.1| null |
| ... | ... | ...| ...| null | 'abc' | ...| null |
| 1 |root.sg.d1| 12 |null| null | 'abc' |null| null |
| 2 |root.sg.d1| 19 |null| null | 'abc' |null| null |
| ... | ... | ...| ...| null | 'abc' | ...| null |
| 4 | 500 | | | 800 | 1000 |
| | | | | 900 | 8000 |
5. More correct examples:
- select * from root.vehicle disable align
- select s0,s0,s1 from root.vehicle.* disable align
- select s0,s1 from root.vehicle.* limit 10 offset 1 disable align
- select * from root.vehicle slimit 10 soffset 2 disable align
- select * from root.vehicle where time > 10 disable align
Select Clause : <Path> [COMMA <Path>]*
FromClause : < PrefixPath > [COMMA < PrefixPath >]*
WhereClause : <TimeExpr> [(AND | OR) <TimeExpr>]*
TimeExpr : TIME PrecedenceEqualOperator (<TimeValue> | <RelativeTime>)
Eg. SELECT LAST s1 FROM root.sg.d1
Eg. SELECT LAST s1, s2 FROM root.sg.d1
* IOTDB-124 Lost timeseries info after restart IoTDB
* IOTDB-125 [potential] a concurrency conflict may occur when a delete command and insertion command appears concurrently
* IOTDB-126 IoTDB will not be closed immediately after run 'stop-server.sh' script
* IOTDB-127 Chinese version documents problems
## Bug Fixes
* IOTDB-2 Maven Test failed before run mvn package -Dmaven.test.skip=true
* IOTDB-7 OpenFileNumUtilTest failed
* IOTDB-15 Fail to install IoTDB on Ubuntu 14.04
* IOTDB-16 Invalid link on https://iotdb.apache.org/#/Documents/Quick Start
* IOTDB-17 Need to update chapter Start of https://iotdb.apache.org/#/Documents/Quick Start
* IOTDB-18 IoTDB startup script does not work on openjdk11
* IOTDB-19 Fail to start start-server.sh script on Ubuntu 14.04/Ubuntu 16.04
* IOTDB-22 BUG in TsFileSequenceReader when reading tsfile
* IOTDB-24 DELETION error after restart a server
* IOTDB-26 Return error when quit client
* IOTDB-27 Delete error message
* IOTDB-30 Flush timeseries cause select to returns "Msg:null"
* IOTDB-31 Cannot set float number precision
* IOTDB-34 Invalid message for show storage group
TimeExpr : TIME PrecedenceEqualOperator (<TimeValue> | <RelativeTime>)
RelativeTimeDurationUnit = Integer ('Y'|'MO'|'W'|'D'|'H'|'M'|'S'|'MS'|'US'|'NS')
RelativeTime : (now() | <TimeValue>) [(+|-) RelativeTimeDurationUnit]+
SensorExpr : (<Timeseries>|<Path>) PrecedenceEqualOperator <PointValue>
LIMITClause : LIMIT <N> [OFFSETClause]?
N : Integer
OFFSETClause : OFFSET <OFFSETValue>
OFFSETValue : Integer
SLIMITClause : SLIMIT <SN> [SOFFSETClause]?
SN : Integer
SOFFSETClause : SOFFSET <SOFFSETValue>
SOFFSETValue : Integer
Eg: IoTDB > SELECT status, temperature FROM root.ln.wf01.wt01 WHERE temperature < 24 and time > 2017-11-1 0:13:00 LIMIT 3 OFFSET 2
Eg. IoTDB > SELECT COUNT (status), MAX_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE time < 1509466500000 GROUP BY([1509465720000, 1509466380000], 5m) LIMIT 3
Note: N, OFFSETValue, SN and SOFFSETValue must be greater than 0.
Note: The order of <LIMITClause> and <SLIMITClause> does not affect the grammatical correctness.
Note: <FillClause> can not use <LIMITClause> but not <SLIMITClause>.
123456789101112131415161718192021222324Align By Device Statement AlignbyDeviceClause : ALIGN BY DEVICE
Rules:
1. Both uppercase and lowercase are ok.
Correct example: select * from root.sg1 align by device
Correct example: select * from root.sg1 ALIGN BY DEVICE
2. AlignbyDeviceClause can only be used at the end of a query statement.
Note that the cells of measurement 's0' and device 'root.sg.d1' are all null.
6. The duplicated devices in the prefix paths are neglected.
For example, "select s0,s1 from root.sg.d0,root.sg.d0,root.sg.d1 align by device" is equal to "select s0,s1 from root.sg.d0,root.sg.d1 align by device".
For example. "select s0,s1 from root.sg.*,root.sg.d0 align by device" is equal to "select s0,s1 from root.sg.* align by device".
7. The duplicated measurements in the suffix paths are not neglected.
For example, "select s0,s0,s1 from root.sg.* align by device" is not equal to "select s0,s1 from root.sg.* align by device".
8. Both time predicates and value predicates are allowed in Where Clause. The paths of the value predicates can be the leaf node or full path started with ROOT. And wildcard is not allowed here. For example:
- select * from root.sg.* where time = 1 align by device
- select * from root.sg.* where s0 < 100 align by device
- select * from root.sg.* where time < 20 AND s0 > 50 align by device
- select * from root.sg.d0 where root.sg.d0.s0 = 15 align by device
9. More correct examples:
- select * from root.vehicle align by device
- select s0,s0,s1 from root.vehicle.* align by device
- select s0,s1 from root.vehicle.* limit 10 offset 1 align by device
- select * from root.vehicle slimit 10 soffset 2 align by device
- select * from root.vehicle where time > 10 align by device
- select * from root.vehicle.* where time < 10 AND s0 > 25 align by device
- select * from root.vehicle where root.vehicle.d0.s0>0 align by device
Eg. SELECT LAST s1 FROM root.sg.d1, root.sg.d2
Eg. SELECT LAST s1 FROM root.sg.d1 where time > 100
Eg. SELECT LAST s1, s2 FROM root.sg.d1 where time >= 500
Rules:
1. the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
2. SELECT LAST only supports time filter that contains '>' or '>=' currently.
3. The result set of last query will always be displayed in a fixed three column table format.
For example, "select last s1, s2 from root.sg.d1, root.sg.d2", the query result would be:
| Time | Path | Value |
| --- | ------------ | ----- |
| 5 | root.sg.d1.s1| 100 |
| 2 | root.sg.d1.s2| 400 |
| 4 | root.sg.d2.s1| 250 |
| 9 | root.sg.d2.s2| 600 |
4. It is not supported to use "diable align" in LAST query.
1234567891011121314151617181920212223242526272829As Statement As statement assigns an alias to time seires queried in SELECT statement You can use as statement in all queries, but some rules are restricted about wildcard.
1. Raw data query
* IOTDB-44 Error message in server log when select timeseries
* IOTDB-49 Authorizer module outputs too many debug log info
* IOTDB-50 DataSetWithoutTimeGenerator's initHeap behaves wrongly
* IOTDB-52 Cli doesn't support aggregate
* IOTDB-54 Predicates doesn't take effect
* IOTDB-67 ValueDecoder reading new page bug
* IOTDB-70 Disconnect from server when logging in fails
* IOTDB-71 Improve readPositionInfo
* IOTDB-74 THe damaged log will be skipped if it is the only log
* IOTDB-81 Fix Windows OS environment for Travis-CI
* IOTDB-82 File not closed in PageHeaderTest and cause UT on Windows fails
* IOTDB-84 Out-of-memory bug
* IOTDB-94 IoTDB failed to start client since the required jars are not in the right folder
* IOTDB-96 The JDBC interface throws an exception when executing the SQL statement "list user"
* IOTDB-99 List privileges User on cannot be used properly
* IOTDB-100 Return error message while executing sum aggregation query
* IOTDB-103 Does not give a hint when encountering unsupported data types
* IOTDB-104 MManager is incorrectly recovered when system reboots
* IOTDB-108 Mistakes in documents
Correct example: select * from root.sg1 where time > 10 align by device
Wrong example: select * from root.sg1 align by device where time > 10
3. The paths of the SELECT clause can only be single level. In other words, the paths of the SELECT clause can only be measurements or STAR, without DOT.
Correct example: select s0,s1 from root.sg1.* align by device
Correct example: select s0,s1 from root.sg1.d0, root.sg1.d1 align by device
Correct example: select * from root.sg1.* align by device
Correct example: select * from root align by device
Correct example: select s0,s1,* from root.*.* align by device
Wrong example: select d0.s1, d0.s2, d1.s0 from root.sg1 align by device
Wrong example: select *.s0, *.s1 from root.* align by device
Wrong example: select *.*.* from root align by device
4. The data types of the same measurement column should be the same across devices.
Note that when it comes to aggregated paths, the data type of the measurement column will reflect
Correct example: select s0 from root.sg1.d0,root.sg1.d1 align by device
root.sg1.d0.s0 and root.sg1.d1.s0 are both INT32.
Correct example: select count(s0) from root.sg1.d0,root.sg1.d1 align by device
count(root.sg1.d0.s0) and count(root.sg1.d1.s0) are both INT64.
Wrong example: select s0 from root.sg1.d0, root.sg2.d3 align by device
root.sg1.d0.s0 is INT32 while root.sg2.d3.s0 is FLOAT.
5. The display principle of the result table is that all the columns (no matther whther a column has has existing data) will be shown, with nonexistent cells being null. Besides, the select clause support const column (e.g., 'a', '123' etc..).
- select count(*) from root.vehicle align by device
- select sum(*) from root.vehicle GROUP BY (20ms,0,[2,50]) align by device
- select * from root.vehicle where time = 3 Fill(int32[previous, 5ms]) align by device
1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677Disable Align Statement Disable Align Clause: DISABLE ALIGN
Rules:
1. Both uppercase and lowercase are ok.
Correct example: select * from root.sg1 disable align
Correct example: select * from root.sg1 DISABLE ALIGN
2. Disable Align Clause can only be used at the end of a query statement.
Correct example: select * from root.sg1 where time > 10 disable align
Wrong example: select * from root.sg1 disable align where time > 10
3. Disable Align Clause cannot be used with Aggregation, Fill Statements, Group By or Group By Device Statements, but can with Limit Statements.
Correct example: select * from root.sg1 limit 3 offset 2 disable align
Correct example: select * from root.sg1 slimit 3 soffset 2 disable align
Wrong example: select count(s0),count(s1) from root.sg1.d1 disable align
Wrong example: select * from root.vehicle where root.vehicle.d0.s0>0 disable align
Wrong example: select * from root.vehicle align by device disable align
4. The display principle of the result table is that only when the column (or row) has existing data will the column (or row) be shown, with nonexistent cells being empty.
You could expect a table like:
| Time | root.sg.d0.s1 | Time | root.sg.d0.s2 | Time | root.sg.d1.s1 |
| --- | --- | --- | --- | --- | --- |
select s1 as speed, s2 as temperature from root.sg.d1
The result set will be like：
| Time | speed | temperature |
| ... | ... | .... |
2. Aggregation query
select count(s1) as s1_num, max_value(s2) as s2_max from root.sg.d1
3. Down-frequence query
select count(s1) as s1_num from root.sg.d1 group by ([100,500), 80ms)
4. Align by device query
select s1 as speed, s2 as temperature from root.sg.d1 align by device
select count(s1) as s1_num, count(s2), count(s3) as s3_num from root.sg.d2 align by device
5. Last Record query
select last s1 as speed, s2 from root.sg.d1
Rules：
1. In addition to Align by device query，each AS statement has to corresponding to one time series exactly.
E.g. select s1 as temperature from root.sg.*
At this time if `root.sg.*` includes more than one device，then an exception will be thrown。
2. In align by device query，the prefix path that each AS statement corresponding to can includes multiple device, but the suffix path can only be single sensor.
E.g. select s1 as temperature from root.sg.*
In this situation, it will be show correctly even if multiple devices are selected.
E.g. select * as temperature from root.sg.d1
In this situation, it will throws an exception if * corresponds to multiple sensors.
12345678910111213141516171819202122232425262728293031323334353637383940# Database Management Statement Create User CREATE USER <userName> <password>;
userName:=identifier
password:=string
* IOTDB-110 Cli inserts data normally even if there is no space left on the disk
* IOTDB-118 When the disk space is full, the storage group is created successfully
* IOTDB-121 A bug of query on value columns
* IOTDB-128 Probably a bug in iotdb official website
* IOTDB-129 A bug in restoring incomplete tsfile when system restart
* IOTDB-131 IoTDB-Grafana module error when getting the timeseries list from Grafana
* IOTDB-133 Some content is mistaken for links
* System memory check failure in iotdb-env.sh
* Time zone bug in different region
* DateTimeUtilsTest UT bug
* Problem discovered by Sonar
* Openjdk11 + linux11 does not work on travis
* Start JDBC service too slowly
* JDBC cannot be closed
* Close bug in sync thread
* Bug in MManager to get all file names of a path
* Version files of different storage groups are placed into the same place
* Import/export csv script bug
* Log level and stack print in test
* Bug in TsFile-Spark-Connector
* A doc bug of QuickStart.md
For example, "select s0,s1,s2,'abc',s1,s2 from root.sg.d0, root.sg.d1, root.sg.d2 align by device". Suppose that the actual existing timeseries are as follows:
- root.sg.d0.s0
- root.sg.d0.s1
- root.sg.d1.s0
Then you could expect a table like:
| Time | Device | s0 | s1 | s2 | 'abc' | s1 | s2 |
| --- | --- | ---| ---| null | 'abc' | ---| null |
| 1 |root.sg.d0| 20 | 2.5| null | 'abc' | 2.5| null |
| 2 |root.sg.d0| 23 | 3.1| null | 'abc' | 3.1| null |
| ... | ... | ...| ...| null | 'abc' | ...| null |
| 1 |root.sg.d1| 12 |null| null | 'abc' |null| null |
| 2 |root.sg.d1| 19 |null| null | 'abc' |null| null |
| ... | ... | ...| ...| null | 'abc' | ...| null |
Note that the cells of measurement 's0' and device 'root.sg.d1' are all null.
6. The duplicated devices in the prefix paths are neglected.
For example, "select s0,s1 from root.sg.d0,root.sg.d0,root.sg.d1 align by device" is equal to "select s0,s1 from root.sg.d0,root.sg.d1 align by device".
For example. "select s0,s1 from root.sg.*,root.sg.d0 align by device" is equal to "select s0,s1 from root.sg.* align by device".
7. The duplicated measurements in the suffix paths are not neglected.
For example, "select s0,s0,s1 from root.sg.* align by device" is not equal to "select s0,s1 from root.sg.* align by device".
8. Both time predicates and value predicates are allowed in Where Clause. The paths of the value predicates can be the leaf node or full path started with ROOT. And wildcard is not allowed here. For example:
- select * from root.sg.* where time = 1 align by device
- select * from root.sg.* where s0 < 100 align by device
| 1 | 100 | 20 | 300 | 400 | 600 |
| 2 | 300 | 40 | 800 | 700 | 900 |
| 4 | 500 | | | 800 | 1000 |
| | | | | 900 | 8000 |
5. More correct examples:
- select * from root.vehicle disable align
- select s0,s0,s1 from root.vehicle.* disable align
- select s0,s1 from root.vehicle.* limit 10 offset 1 disable align
- select * from root.vehicle slimit 10 soffset 2 disable align
- select * from root.vehicle where time > 10 disable align
Select Clause : <Path> [COMMA <Path>]*
FromClause : < PrefixPath > [COMMA < PrefixPath >]*
Eg. SELECT LAST s1 FROM root.sg.d1
Eg. SELECT LAST s1, s2 FROM root.sg.d1
Eg. SELECT LAST s1 FROM root.sg.d1, root.sg.d2
Rules:
1. the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
2. The result set of last query will always be displayed in a fixed three column table format.
For example, "select last s1, s2 from root.sg.d1, root.sg.d2", the query result would be:
| Time | Path | Value |
| --- | ------------ | ----- |
Eg: IoTDB > CREATE USER thulab 'pwd';
1234Delete User DROP USER <userName>;
userName:=identifier
Eg: IoTDB > DROP USER xiaoming;
123Create Role CREATE ROLE <roleName>;
roleName:=identifie
Eg: IoTDB > CREATE ROLE admin;
123Delete Role DROP ROLE <roleName>;
roleName:=identifier
Eg: IoTDB > DROP ROLE admin;
123Grant User Privileges GRANT USER <userName> PRIVILEGES <privileges> ON <nodeName>;
userName:=identifier
nodeName:=identifier (DOT identifier)*
privileges:= string (COMMA string)*
Eg: IoTDB > GRANT USER tempuser PRIVILEGES 'DELETE_TIMESERIES' on root.ln;
12345Grant Role Privileges GRANT ROLE <roleName> PRIVILEGES <privileges> ON <nodeName>;
privileges:= string (COMMA string)*
roleName:=identifier
nodeName:=identifier (DOT identifier)*
Eg: IoTDB > GRANT ROLE temprole PRIVILEGES 'DELETE_TIMESERIES' ON root.ln;
12345Grant User Role GRANT <roleName> TO <userName>;
- select * from root.sg.* where time < 20 AND s0 > 50 align by device
- select * from root.sg.d0 where root.sg.d0.s0 = 15 align by device
9. More correct examples:
- select * from root.vehicle align by device
- select s0,s0,s1 from root.vehicle.* align by device
- select s0,s1 from root.vehicle.* limit 10 offset 1 align by device
- select * from root.vehicle slimit 10 soffset 2 align by device
- select * from root.vehicle where time > 10 align by device
- select * from root.vehicle.* where time < 10 AND s0 > 25 align by device
- select * from root.vehicle where root.vehicle.d0.s0>0 align by device
- select count(*) from root.vehicle align by device
- select sum(*) from root.vehicle GROUP BY (20ms,0,[2,50]) align by device
- select * from root.vehicle where time = 3 Fill(int32[previous, 5ms]) align by device
1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677Disable Align Statement Disable Align Clause: DISABLE ALIGN
Rules:
1. Both uppercase and lowercase are ok.
Correct example: select * from root.sg1 disable align
Correct example: select * from root.sg1 DISABLE ALIGN
2. Disable Align Clause can only be used at the end of a query statement.
| 5 | root.sg.d1.s1| 100 |
| 2 | root.sg.d1.s2| 400 |
| 4 | root.sg.d2.s1| 250 |
| 9 | root.sg.d2.s2| 600 |
3. It is not supported to use "diable align" in LAST query.
1234567891011121314151617181920212223# Database Management Statement Create User CREATE USER <userName> <password>;
userName:=identifier
password:=string
Eg: IoTDB > CREATE USER thulab 'pwd';
1234Delete User DROP USER <userName>;
userName:=identifier
Eg: IoTDB > DROP USER xiaoming;
123Create Role CREATE ROLE <roleName>;
roleName:=identifie
Eg: IoTDB > CREATE ROLE admin;
123Delete Role DROP ROLE <roleName>;
roleName:=identifier
Eg: IoTDB > DROP ROLE admin;
123Grant User Privileges GRANT USER <userName> PRIVILEGES <privileges> ON <nodeName>;
userName:=identifier
roleName:=identifier
userName:=identifier
Eg: IoTDB > GRANT temprole TO tempuser;
1234Revoke User Privileges REVOKE USER <userName> PRIVILEGES <privileges> ON <nodeName>;
privileges:= string (COMMA string)*
userName:=identifier
nodeName:=identifier (DOT identifier)*
Eg: IoTDB > REVOKE USER tempuser PRIVILEGES 'DELETE_TIMESERIES' on root.ln;
12345Revoke Role Privileges REVOKE ROLE <roleName> PRIVILEGES <privileges> ON <nodeName>;
privileges:= string (COMMA string)*
roleName:= identifier
nodeName:=identifier (DOT identifier)*
Eg: IoTDB > REVOKE ROLE temprole PRIVILEGES 'DELETE_TIMESERIES' ON root.ln;
12345Revoke Role From User REVOKE <roleName> FROM <userName>;
roleName:=identifier
userName:=identifier
Eg: IoTDB > REVOKE temprole FROM tempuser;
1234List Users LIST USER
Eg: IoTDB > LIST USER
12List Roles LIST ROLE
Eg: IoTDB > LIST ROLE
12List Privileges LIST PRIVILEGES USER <username> ON <path>;
Correct example: select * from root.sg1 where time > 10 disable align
Wrong example: select * from root.sg1 disable align where time > 10
3. Disable Align Clause cannot be used with Aggregation, Fill Statements, Group By or Group By Device Statements, but can with Limit Statements.
Correct example: select * from root.sg1 limit 3 offset 2 disable align
Correct example: select * from root.sg1 slimit 3 soffset 2 disable align
Wrong example: select count(s0),count(s1) from root.sg1.d1 disable align
Wrong example: select * from root.vehicle where root.vehicle.d0.s0>0 disable align
Wrong example: select * from root.vehicle align by device disable align
4. The display principle of the result table is that only when the column (or row) has existing data will the column (or row) be shown, with nonexistent cells being empty.
You could expect a table like:
| Time | root.sg.d0.s1 | Time | root.sg.d0.s2 | Time | root.sg.d1.s1 |
| --- | --- | --- | --- | --- | --- |
| 1 | 100 | 20 | 300 | 400 | 600 |
| 2 | 300 | 40 | 800 | 700 | 900 |
| 4 | 500 | | | 800 | 1000 |
| | | | | 900 | 8000 |
5. More correct examples:
- select * from root.vehicle disable align
- select s0,s0,s1 from root.vehicle.* disable align
- select s0,s1 from root.vehicle.* limit 10 offset 1 disable align
- select * from root.vehicle slimit 10 soffset 2 disable align
- select * from root.vehicle where time > 10 disable align
Select Clause : <Path> [COMMA <Path>]*
FromClause : < PrefixPath > [COMMA < PrefixPath >]*
WhereClause : <TimeExpr> [(AND | OR) <TimeExpr>]*
TimeExpr : TIME PrecedenceEqualOperator (<TimeValue> | <RelativeTime>)
Eg. SELECT LAST s1 FROM root.sg.d1
Eg. SELECT LAST s1, s2 FROM root.sg.d1
Eg. SELECT LAST s1 FROM root.sg.d1, root.sg.d2
Eg. SELECT LAST s1 FROM root.sg.d1 where time > 100
nodeName:=identifier (DOT identifier)*
privileges:= string (COMMA string)*
Eg: IoTDB > GRANT USER tempuser PRIVILEGES 'DELETE_TIMESERIES' on root.ln;
12345Grant Role Privileges GRANT ROLE <roleName> PRIVILEGES <privileges> ON <nodeName>;
privileges:= string (COMMA string)*
roleName:=identifier
nodeName:=identifier (DOT identifier)*
Eg: IoTDB > GRANT ROLE temprole PRIVILEGES 'DELETE_TIMESERIES' ON root.ln;
12345Grant User Role GRANT <roleName> TO <userName>;
roleName:=identifier
userName:=identifier
Eg: IoTDB > GRANT temprole TO tempuser;
1234Revoke User Privileges REVOKE USER <userName> PRIVILEGES <privileges> ON <nodeName>;
privileges:= string (COMMA string)*
userName:=identifier
nodeName:=identifier (DOT identifier)*
Eg: IoTDB > REVOKE USER tempuser PRIVILEGES 'DELETE_TIMESERIES' on root.ln;
12345Revoke Role Privileges REVOKE ROLE <roleName> PRIVILEGES <privileges> ON <nodeName>;
privileges:= string (COMMA string)*
roleName:= identifier
nodeName:=identifier (DOT identifier)*
Eg: IoTDB > REVOKE ROLE temprole PRIVILEGES 'DELETE_TIMESERIES' ON root.ln;
12345Revoke Role From User REVOKE <roleName> FROM <userName>;
roleName:=identifier
userName:=identifier
Eg: IoTDB > REVOKE temprole FROM tempuser;
1234List Users LIST USER
Eg: IoTDB > LIST USER
username:=identifier
path=‘root’ (DOT identifier)*
Eg: IoTDB > LIST PRIVILEGES USER sgcc_wirte_user ON root.sgcc;
1234List Privileges of Roles(On Specific Path) LIST PRIVILEGES ROLE <roleName> ON <path>;
roleName:=identifier
path=‘root’ (DOT identifier)*
Eg: IoTDB > LIST PRIVILEGES ROLE wirte_role ON root.sgcc;
1234List Privileges of Users LIST USER PRIVILEGES <username> ;
username:=identifier
Eg: IoTDB > LIST USER PRIVILEGES tempuser;
123List Privileges of Roles LIST ROLE PRIVILEGES <roleName>
roleName:=identifier
Eg: IoTDB > LIST ROLE PRIVILEGES actor;
123List Roles of Users LIST ALL ROLE OF USER <username> ;
username:=identifier
Eg: IoTDB > LIST ALL ROLE OF USER tempuser;
123List Users of Role LIST ALL USER OF ROLE <roleName>;
roleName:=identifier
Eg: IoTDB > LIST ALL USER OF ROLE roleuser;
123Alter Password ALTER USER <username> SET PASSWORD <password>;
roleName:=identifier
password:=identifier
Eg: IoTDB > ALTER USER tempuser SET PASSWORD 'newpwd';
Eg. SELECT COUNT(status), COUNT(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT FIRST_VALUE (status), FIRST_VALUE (temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Eg. SELECT LAST s1, s2 FROM root.sg.d1 where time >= 500
Rules:
1. the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
12List Roles LIST ROLE
Eg: IoTDB > LIST ROLE
12List Privileges LIST PRIVILEGES USER <username> ON <path>;
username:=identifier
path=‘root’ (DOT identifier)*
Eg: IoTDB > LIST PRIVILEGES USER sgcc_wirte_user ON root.sgcc;
1234List Privileges of Roles(On Specific Path) LIST PRIVILEGES ROLE <roleName> ON <path>;
roleName:=identifier
path=‘root’ (DOT identifier)*
Eg: IoTDB > LIST PRIVILEGES ROLE wirte_role ON root.sgcc;
1234List Privileges of Users LIST USER PRIVILEGES <username> ;
username:=identifier
Eg: IoTDB > LIST USER PRIVILEGES tempuser;
123List Privileges of Roles LIST ROLE PRIVILEGES <roleName>
roleName:=identifier
Eg: IoTDB > LIST ROLE PRIVILEGES actor;
123List Roles of Users LIST ALL ROLE OF USER <username> ;
username:=identifier
Eg: IoTDB > LIST ALL ROLE OF USER tempuser;
123List Users of Role LIST ALL USER OF ROLE <roleName>;
roleName:=identifier
Eg: IoTDB > LIST ALL USER OF ROLE roleuser;
123Alter Password ALTER USER <username> SET PASSWORD <password>;
roleName:=identifier
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT LAST_VALUE (status), LAST_VALUE (temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT MAX_TIME(status), MAX_TIME(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT MAX_VALUE(status), MAX_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT AVG (temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT MIN_TIME(status), MIN_TIME(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT MIN_VALUE(status),MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. INSERT INTO root.ln.wf01.wt01(timestamp,status) VALUES(NOW(), false)
Eg. DELETE FROM root.ln.wf01.wt01.status, root.ln.wf01.wt01.temperature WHERE time < NOW()
Eg. SELECT * FROM root WHERE time < NOW()
Eg. SELECT COUNT(temperature) FROM root.ln.wf01.wt01 WHERE time < NOW()
Eg. SELECT SUM(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
2. SELECT LAST only supports time filter that contains '>' or '>=' currently.
3. The result set of last query will always be displayed in a fixed three column table format.
For example, "select last s1, s2 from root.sg.d1, root.sg.d2", the query result would be:
| Time | Path | Value |
| --- | ------------ | ----- |
| 5 | root.sg.d1.s1| 100 |
| 2 | root.sg.d1.s2| 400 |
| 4 | root.sg.d2.s1| 250 |
| 9 | root.sg.d2.s2| 600 |
4. It is not supported to use "diable align" in LAST query.
1234567891011121314151617181920212223242526272829As Statement As statement assigns an alias to time seires queried in SELECT statement You can use as statement in all queries, but some rules are restricted about wildcard.
1. Raw data query
select s1 as speed, s2 as temperature from root.sg.d1
The result set will be like：
| Time | speed | temperature |
| ... | ... | .... |
2. Aggregation query
select count(s1) as s1_num, max_value(s2) as s2_max from root.sg.d1
3. Down-frequence query
select count(s1) as s1_num from root.sg.d1 group by ([100,500), 80ms)
4. Align by device query
select s1 as speed, s2 as temperature from root.sg.d1 align by device
select count(s1) as s1_num, count(s2), count(s3) as s3_num from root.sg.d2 align by device
5. Last Record query
select last s1 as speed, s2 from root.sg.d1
Rules：
1. In addition to Align by device query，each AS statement has to corresponding to one time series exactly.
password:=identifier
Eg: IoTDB > ALTER USER tempuser SET PASSWORD 'newpwd';
Eg. SELECT COUNT(status), COUNT(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT FIRST_VALUE (status), FIRST_VALUE (temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT LAST_VALUE (status), LAST_VALUE (temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT MAX_TIME(status), MAX_TIME(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT MAX_VALUE(status), MAX_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT AVG (temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT MIN_TIME(status), MIN_TIME(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT MIN_VALUE(status),MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
123# TTL IoTDB supports storage-level TTL settings, which means it is able to delete old data
automatically and periodically. The benefit of using TTL is that hopefully you can control the
total disk space usage and prevent the machine from running out of disks. Moreover, the query
performance may downgrade as the total number of files goes up and the memory usage also increase
as there are more files. Timely removing such files helps to keep at a high query performance
level and reduce memory usage. The TTL operations in IoTDB are supported by the following three
statements: Set TTL SET TTL TO StorageGroupName TTLTime
Eg. SET TTL TO root.group1 3600000
This example means that for data in root.group1, only that of the latest 1 hour will remain, the
older one is removed or made invisible.
Note: TTLTime should be millisecond timestamp. When TTL is set, insertions that fall
out of TTL will be rejected.
123456Unset TTL UNSET TTL TO StorageGroupName
Eg. UNSET TTL TO root.group1
This example means that data of all time will be accepted in this group.
123Show TTL SHOW ALL TTL
SHOW TTL ON StorageGroupNames
Eg.1 SHOW ALL TTL
E.g. select s1 as temperature from root.sg.*
At this time if `root.sg.*` includes more than one device，then an exception will be thrown。
2. In align by device query，the prefix path that each AS statement corresponding to can includes multiple device, but the suffix path can only be single sensor.
E.g. select s1 as temperature from root.sg.*
In this situation, it will be show correctly even if multiple devices are selected.
E.g. select * as temperature from root.sg.d1
In this situation, it will throws an exception if * corresponds to multiple sensors.
12345678910111213141516171819202122232425262728293031323334353637383940# Database Management Statement Create User CREATE USER <userName> <password>;
userName:=identifier
password:=string
Eg: IoTDB > CREATE USER thulab 'pwd';
1234Delete User DROP USER <userName>;
userName:=identifier
Eg: IoTDB > DROP USER xiaoming;
123Create Role CREATE ROLE <roleName>;
roleName:=identifie
Eg: IoTDB > CREATE ROLE admin;
123Delete Role DROP ROLE <roleName>;
roleName:=identifier
Eg. INSERT INTO root.ln.wf01.wt01(timestamp,status) VALUES(NOW(), false)
Eg. UPDATE root.ln.wf01.wt01 SET temperature = 23 WHERE time < NOW()
Eg. DELETE FROM root.ln.wf01.wt01.status, root.ln.wf01.wt01.temperature WHERE time < NOW()
Eg. SELECT * FROM root WHERE time < NOW()
Eg. SELECT COUNT(temperature) FROM root.ln.wf01.wt01 WHERE time < NOW()
Eg. SELECT SUM(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
123# TTL IoTDB supports storage-level TTL settings, which means it is able to delete old data
automatically and periodically. The benefit of using TTL is that hopefully you can control the
total disk space usage and prevent the machine from running out of disks. Moreover, the query
performance may downgrade as the total number of files goes up and the memory usage also increase
as there are more files. Timely removing such files helps to keep at a high query performance
level and reduce memory usage. The TTL operations in IoTDB are supported by the following three
statements: Set TTL SET TTL TO StorageGroupName TTLTime
Eg. SET TTL TO root.group1 3600000
This example means that for data in root.group1, only that of the latest 1 hour will remain, the
older one is removed or made invisible.
Note: TTLTime should be millisecond timestamp. When TTL is set, insertions that fall
out of TTL will be rejected.
This example will show TTLs of all storage groups.
Eg.2 SHOW TTL ON root.group1,root.group2,root.group3
This example will show TTLs of the specified 3 groups.
Notice: storage groups without TTL will show a "null"
1234567Notice: When you set TTL to some storage groups, data out of the TTL will be made invisible
immediately, but because the data files may contain both out-dated and living data or the data files may
be being used by queries, the physical removal of data is stale. If you increase or unset TTL
just after setting it previously, some previously invisible data may be seen again, but the
physically removed one is lost forever. In other words, different from delete statement, the
atomicity of data deletion is not guaranteed for efficiency concerns. So we recommend that you do
not change the TTL once it is set or at least do not reset it frequently, unless you are determined
to suffer the unpredictability. Delete Partition (experimental) DELETE PARTITION StorageGroupName INT(COMMA INT)*
Eg DELETE PARTITION root.sg1 0,1,2
This example will delete the first 3 time partitions of storage group root.sg1.
TRACING OFF // Close performance tracing
12# Reference # Identifiers QUOTE := '\'';
DOT := '.';
COLON : ':' ;
Eg: IoTDB > DROP ROLE admin;
123Grant User Privileges GRANT USER <userName> PRIVILEGES <privileges> ON <nodeName>;
userName:=identifier
nodeName:=identifier (DOT identifier)*
privileges:= string (COMMA string)*
Eg: IoTDB > GRANT USER tempuser PRIVILEGES 'DELETE_TIMESERIES' on root.ln;
12345Grant Role Privileges GRANT ROLE <roleName> PRIVILEGES <privileges> ON <nodeName>;
privileges:= string (COMMA string)*
roleName:=identifier
nodeName:=identifier (DOT identifier)*
Eg: IoTDB > GRANT ROLE temprole PRIVILEGES 'DELETE_TIMESERIES' ON root.ln;
12345Grant User Role GRANT <roleName> TO <userName>;
roleName:=identifier
userName:=identifier
Eg: IoTDB > GRANT temprole TO tempuser;
1234Revoke User Privileges REVOKE USER <userName> PRIVILEGES <privileges> ON <nodeName>;
privileges:= string (COMMA string)*
userName:=identifier
nodeName:=identifier (DOT identifier)*
Eg: IoTDB > REVOKE USER tempuser PRIVILEGES 'DELETE_TIMESERIES' on root.ln;
12345Revoke Role Privileges REVOKE ROLE <roleName> PRIVILEGES <privileges> ON <nodeName>;
123456Unset TTL UNSET TTL TO StorageGroupName
Eg. UNSET TTL TO root.group1
This example means that data of all time will be accepted in this group.
123Show TTL SHOW ALL TTL
SHOW TTL ON StorageGroupNames
Eg.1 SHOW ALL TTL
This example will show TTLs of all storage groups.
Eg.2 SHOW TTL ON root.group1,root.group2,root.group3
This example will show TTLs of the specified 3 groups.
Notice: storage groups without TTL will show a "null"
1234567Notice: When you set TTL to some storage groups, data out of the TTL will be made invisible
immediately, but because the data files may contain both out-dated and living data or the data files may
be being used by queries, the physical removal of data is stale. If you increase or unset TTL
just after setting it previously, some previously invisible data may be seen again, but the
physically removed one is lost forever. In other words, different from delete statement, the
atomicity of data deletion is not guaranteed for efficiency concerns. So we recommend that you do
not change the TTL once it is set or at least do not reset it frequently, unless you are determined
to suffer the unpredictability. # Reference # Keywords Keywords for IoTDB (case insensitive):
ADD, BY, COMPRESSOR, CREATE, DATATYPE, DELETE, DESCRIBE, DROP, ENCODING, EXIT, FROM, GRANT, GROUP, LABLE, LINK, INDEX, INSERT, INTO, LOAD, MAX_POINT_NUMBER, MERGE, METADATA, ON, ORDER, PASSWORD, PRIVILEGES, PROPERTY, QUIT, REVOKE, ROLE, ROOT, SELECT, SET, SHOW, STORAGE, TIME, TIMESERIES, TIMESTAMP, TO, UNLINK, UPDATE, USER, USING, VALUE, VALUES, WHERE, WITH
Keywords with special meanings (case insensitive):
* Data Types: BOOLEAN, DOUBLE, FLOAT, INT32, INT64, TEXT
* Encoding Methods: BITMAP, DFT, GORILLA, PLAIN, RLE, TS_2DIFF
* Compression Methods: UNCOMPRESSED, SNAPPY, GZIP, LZ0, ZDT, PAA, PLA
* Logical symbol: AND, &, &&, OR, | , ||, NOT, !, TRUE, FALSE
12345678# Identifiers QUOTE := '\'';
DOT := '.';
COLON : ':' ;
COMMA := ',' ;
SEMICOLON := ';' ;
LPAREN := '(' ;
RPAREN := ')' ;
LBRACKET := '[';
RBRACKET := ']';
EQUAL := '=' | '==';
NOTEQUAL := '<>' | '!=';
LESSTHANOREQUALTO := '<=';
LESSTHAN := '<';
GREATERTHANOREQUALTO := '>=';
GREATERTHAN := '>';
DIVIDE := '/';
PLUS := '+';
MINUS := '-';
STAR := '*';
Letter := 'a'..'z' | 'A'..'Z';
HexDigit := 'a'..'f' | 'A'..'F';
Digit := '0'..'9';
Boolean := TRUE | FALSE | 0 | 1 (case insensitive)
123456789101112131415161718192021222324StringLiteral := ( '\'' ( ~('\'') )* '\'' | '\"' ( ~('\"') )* '\"');
eg. 'abc'
eg. 'abc'
123Integer := ('-' | '+')? Digit+;
eg. 123
eg. -222
123Float := ('-' | '+')? Digit+ DOT Digit+ (('e' | 'E') ('-' | '+')? Digit+)?;
eg. 3.1415
eg. 1.2E10
eg. -1.33
1234Identifier := (Letter | '_') (Letter | Digit | '_' | MINUS)*;
eg. a123
eg. _abc123
privileges:= string (COMMA string)*
roleName:= identifier
nodeName:=identifier (DOT identifier)*
Eg: IoTDB > REVOKE ROLE temprole PRIVILEGES 'DELETE_TIMESERIES' ON root.ln;
12345Revoke Role From User REVOKE <roleName> FROM <userName>;
roleName:=identifier
userName:=identifier
Eg: IoTDB > REVOKE temprole FROM tempuser;
1234List Users LIST USER
Eg: IoTDB > LIST USER
12List Roles LIST ROLE
Eg: IoTDB > LIST ROLE
12List Privileges LIST PRIVILEGES USER <username> ON <path>;
username:=identifier
path=‘root’ (DOT identifier)*
Eg: IoTDB > LIST PRIVILEGES USER sgcc_wirte_user ON root.sgcc;
1234List Privileges of Roles(On Specific Path) LIST PRIVILEGES ROLE <roleName> ON <path>;
roleName:=identifier
path=‘root’ (DOT identifier)*
Eg: IoTDB > LIST PRIVILEGES ROLE wirte_role ON root.sgcc;
1234List Privileges of Users LIST USER PRIVILEGES <username> ;
username:=identifier
Eg: IoTDB > LIST USER PRIVILEGES tempuser;
123List Privileges of Roles LIST ROLE PRIVILEGES <roleName>
roleName:=identifier
Eg: IoTDB > LIST ROLE PRIVILEGES actor;
123List Roles of Users LIST ALL ROLE OF USER <username> ;
COMMA := ',' ;
SEMICOLON := ';' ;
LPAREN := '(' ;
RPAREN := ')' ;
LBRACKET := '[';
RBRACKET := ']';
EQUAL := '=' | '==';
NOTEQUAL := '<>' | '!=';
LESSTHANOREQUALTO := '<=';
LESSTHAN := '<';
GREATERTHANOREQUALTO := '>=';
GREATERTHAN := '>';
DIVIDE := '/';
PLUS := '+';
MINUS := '-';
STAR := '*';
Letter := 'a'..'z' | 'A'..'Z';
HexDigit := 'a'..'f' | 'A'..'F';
Digit := '0'..'9';
Boolean := TRUE | FALSE | 0 | 1 (case insensitive)
123456789101112131415161718192021222324StringLiteral := ( '\'' ( ~('\'') )* '\'' | '\"' ( ~('\"') )* '\"');
eg. 'abc'
eg. 'abc'
123Integer := ('-' | '+')? Digit+;
eg. 123
eg. -222
123Float := ('-' | '+')? Digit+ DOT Digit+ (('e' | 'E') ('-' | '+')? Digit+)?;
eg. 3.1415
eg. 1.2E10
eg. -1.33
1234Identifier := (Letter | '_') (Letter | Digit | '_' | MINUS)*;
1234# Literals PointValue : Integer | Float | StringLiteral | Boolean
username:=identifier
Eg: IoTDB > LIST ALL ROLE OF USER tempuser;
123List Users of Role LIST ALL USER OF ROLE <roleName>;
roleName:=identifier
Eg: IoTDB > LIST ALL USER OF ROLE roleuser;
123Alter Password ALTER USER <username> SET PASSWORD <password>;
roleName:=identifier
password:=identifier
Eg: IoTDB > ALTER USER tempuser SET PASSWORD 'newpwd';
Eg. SELECT COUNT(status), COUNT(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT FIRST_VALUE (status), FIRST_VALUE (temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT LAST_VALUE (status), LAST_VALUE (temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT MAX_TIME(status), MAX_TIME(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
eg. a123
eg. _abc123
1234# Literals PointValue : Integer | Float | StringLiteral | Boolean
1TimeValue : Integer | DateTime | ISO8601 | NOW()
Note: Integer means timestamp type.
DateTime :
eg. 2016-11-16T16:22:33+08:00
eg. 2016-11-16 16:22:33+08:00
eg. 2016-11-16T16:22:33.000+08:00
eg. 2016-11-16 16:22:33.000+08:00
Note: DateTime Type can support several types, see Chapter 3 Datetime section for details.
123456789PrecedenceEqualOperator : EQUAL | NOTEQUAL | LESSTHANOREQUALTO | LESSTHAN | GREATERTHANOREQUALTO | GREATERTHAN
1Timeseries : ROOT [DOT <LayerName>]* DOT <SensorName>
LayerName : Identifier
SensorName : Identifier
eg. root.ln.wf01.wt01.status
eg. root.sgcc.wf03.wt01.temperature
Note: Timeseries must be start with `root`(case insensitive) and end with sensor name.
123456PrefixPath : ROOT (DOT <LayerName>)*
LayerName : Identifier | STAR
eg. root.sgcc
eg. root.*
1234Path: (ROOT | <LayerName>) (DOT <LayerName>)*
LayerName: Identifier | STAR
eg. root.ln.wf01.wt01.status
1TimeValue : Integer | DateTime | ISO8601 | NOW()
Note: Integer means timestamp type.
DateTime :
eg. 2016-11-16T16:22:33+08:00
eg. 2016-11-16 16:22:33+08:00
eg. 2016-11-16T16:22:33.000+08:00
eg. 2016-11-16 16:22:33.000+08:00
Note: DateTime Type can support several types, see Chapter 3 Datetime section for details.
123456789PrecedenceEqualOperator : EQUAL | NOTEQUAL | LESSTHANOREQUALTO | LESSTHAN | GREATERTHANOREQUALTO | GREATERTHAN
1Timeseries : ROOT [DOT <LayerName>]* DOT <SensorName>
LayerName : Identifier
SensorName : Identifier
eg. root.ln.wf01.wt01.status
eg. root.sgcc.wf03.wt01.temperature
Note: Timeseries must be start with `root`(case insensitive) and end with sensor name.
123456PrefixPath : ROOT (DOT <LayerName>)*
LayerName : Identifier | STAR
eg. root.sgcc
eg. root.*
1234Path: (ROOT | <LayerName>) (DOT <LayerName>)*
LayerName: Identifier | STAR
eg. root.ln.wf01.wt01.status
eg. root.*.wf01.wt01.status
eg. root.ln.wf01.wt01.*
eg. *.wt01.*
Eg. SELECT MAX_VALUE(status), MAX_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
extreme value: The value that has the maximum absolute value.
If the maximum absolute value of a positive value and a negative value is equal, return the positive value. SELECT EXTREME (Path) (COMMA EXT (Path))* FROM <FromClause> [WHERE <WhereClause>]?
Eg. SELECT EXTREME(status), EXTREME(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT AVG (temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT MIN_TIME(status), MIN_TIME(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. SELECT MIN_VALUE(status),MIN_VALUE(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
Eg. INSERT INTO root.ln.wf01.wt01(timestamp,status) VALUES(NOW(), false)
Eg. DELETE FROM root.ln.wf01.wt01.status, root.ln.wf01.wt01.temperature WHERE time < NOW()
Eg. SELECT * FROM root WHERE time < NOW()
Eg. SELECT COUNT(temperature) FROM root.ln.wf01.wt01 WHERE time < NOW()
eg. root.*.wf01.wt01.status
eg. root.ln.wf01.wt01.*
eg. *.wt01.*
eg. *
1234567
←
Administration
Sync Tool
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
eg. *
1234567
←
Administration
Sync Tool
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
Eg. SELECT SUM(temperature) FROM root.ln.wf01.wt01 WHERE root.ln.wf01.wt01.temperature < 24
Note: the statement needs to satisfy this constraint: <PrefixPath> + <Path> = <Timeseries>
123# TTL IoTDB supports storage-level TTL settings, which means it is able to delete old data
automatically and periodically. The benefit of using TTL is that hopefully you can control the
total disk space usage and prevent the machine from running out of disks. Moreover, the query
performance may downgrade as the total number of files goes up and the memory usage also increase
as there are more files. Timely removing such files helps to keep at a high query performance
level and reduce memory usage. The TTL operations in IoTDB are supported by the following three
statements: Set TTL SET TTL TO StorageGroupName TTLTime
Eg. SET TTL TO root.group1 3600000
This example means that for data in root.group1, only that of the latest 1 hour will remain, the
older one is removed or made invisible.
Note: TTLTime should be millisecond timestamp. When TTL is set, insertions that fall
out of TTL will be rejected.
123456Unset TTL UNSET TTL TO StorageGroupName
Eg. UNSET TTL TO root.group1
This example means that data of all time will be accepted in this group.
123Show TTL SHOW ALL TTL
SHOW TTL ON StorageGroupNames
Eg.1 SHOW ALL TTL
This example will show TTLs of all storage groups.
Eg.2 SHOW TTL ON root.group1,root.group2,root.group3
This example will show TTLs of the specified 3 groups.
Notice: storage groups without TTL will show a "null"
1234567Notice: When you set TTL to some storage groups, data out of the TTL will be made invisible
immediately, but because the data files may contain both out-dated and living data or the data files may
be being used by queries, the physical removal of data is stale. If you increase or unset TTL
just after setting it previously, some previously invisible data may be seen again, but the
physically removed one is lost forever. In other words, different from delete statement, the
atomicity of data deletion is not guaranteed for efficiency concerns. So we recommend that you do
not change the TTL once it is set or at least do not reset it frequently, unless you are determined
to suffer the unpredictability. Delete Partition (experimental) DELETE PARTITION StorageGroupName INT(COMMA INT)*
Eg DELETE PARTITION root.sg1 0,1,2
This example will delete the first 3 time partitions of storage group root.sg1.
TRACING OFF // Close performance tracing
12# Kill query Show the list of queries in progress SHOW QUERY PROCESSLIST
1Kill query KILL QUERY INT?
E.g. KILL QUERY
E.g. KILL QUERY 2
123# Identifiers QUOTE := '\'';
DOT := '.';
COLON : ':' ;
COMMA := ',' ;
SEMICOLON := ';' ;
LPAREN := '(' ;
RPAREN := ')' ;
LBRACKET := '[';
RBRACKET := ']';
EQUAL := '=' | '==';
NOTEQUAL := '<>' | '!=';
LESSTHANOREQUALTO := '<=';
LESSTHAN := '<';
GREATERTHANOREQUALTO := '>=';
GREATERTHAN := '>';
DIVIDE := '/';
PLUS := '+';
MINUS := '-';
STAR := '*';
Letter := 'a'..'z' | 'A'..'Z';
HexDigit := 'a'..'f' | 'A'..'F';
Digit := '0'..'9';
Boolean := TRUE | FALSE | 0 | 1 (case insensitive)
123456789101112131415161718192021222324StringLiteral := ( '\'' ( ~('\'') )* '\'' | '\"' ( ~('\"') )* '\"');
eg. 'abc'
eg. 'abc'
123Integer := ('-' | '+')? Digit+;
eg. 123
eg. -222
123Float := ('-' | '+')? Digit+ DOT Digit+ (('e' | 'E') ('-' | '+')? Digit+)?;
eg. 3.1415
eg. 1.2E10
eg. -1.33
1234Identifier := (Letter | '_') (Letter | Digit | '_' | MINUS)*;
eg. a123
eg. _abc123
1234# Literals PointValue : Integer | Float | StringLiteral | Boolean
1TimeValue : Integer | DateTime | ISO8601 | NOW()
Note: Integer means timestamp type.
DateTime :
eg. 2016-11-16T16:22:33+08:00
eg. 2016-11-16 16:22:33+08:00
eg. 2016-11-16T16:22:33.000+08:00
eg. 2016-11-16 16:22:33.000+08:00
Note: DateTime Type can support several types, see Chapter 3 Datetime section for details.
123456789PrecedenceEqualOperator : EQUAL | NOTEQUAL | LESSTHANOREQUALTO | LESSTHAN | GREATERTHANOREQUALTO | GREATERTHAN
1Timeseries : ROOT [DOT <LayerName>]* DOT <SensorName>
LayerName : Identifier
SensorName : Identifier
eg. root.ln.wf01.wt01.status
eg. root.sgcc.wf03.wt01.temperature
Note: Timeseries must be start with `root`(case insensitive) and end with sensor name.
123456PrefixPath : ROOT (DOT <LayerName>)*
LayerName : Identifier | STAR
eg. root.sgcc
eg. root.*
1234Path: (ROOT | <LayerName>) (DOT <LayerName>)*
LayerName: Identifier | STAR
eg. root.ln.wf01.wt01.status
eg. root.*.wf01.wt01.status
eg. root.ln.wf01.wt01.*
eg. *.wt01.*
eg. *
1234567
←
Config Manual
Status Codes
→
Copyright © 2021 The Apache Software Foundation.
Apache and the Apache feather logo are trademarks of The Apache Software Foundation
Contact us: Join QQ Group 659990460 | Add friend tietouqiao and be invited to Wechat Group
see Join the community for more
